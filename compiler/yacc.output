Terminals unused in grammar

   ID
   SELF
   expr_1


Grammar

    0 $accept: program $end

    1 program: components

    2 components: components component
    3           | component

    4 component: class_interface
    5          | class_implementation
    6          | protocol
    7          | struct
    8          | enum

    9 class_interface: class_interface_header class_interface_body

   10 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
   11                       | AT_INTERFACE IDENTIFIER
   12                       | error IDENTIFIER
   13                       | AT_INTERFACE error
   14                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN error

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END
   16                     | protocol_reference_list instance_variables AT_END
   17                     | protocol_reference_list interface_declaration_list AT_END
   18                     | instance_variables interface_declaration_list AT_END
   19                     | protocol_reference_list AT_END
   20                     | instance_variables AT_END
   21                     | interface_declaration_list AT_END
   22                     | AT_END
   23                     | protocol_reference_list error AT_END
   24                     | protocol_reference_list error interface_declaration_list AT_END
   25                     | protocol_reference_list error
   26                     | protocol_reference_list instance_variables interface_declaration_list error
   27                     | protocol_reference_list instance_variables error
   28                     | protocol_reference_list interface_declaration_list error
   29                     | instance_variables interface_declaration_list error
   30                     | instance_variables error
   31                     | interface_declaration_list error

   32 protocol_reference_list: LESS_THAN ids_list_identifier MORE_THAN
   33                        | LESS_THAN ids_list_identifier error

   34 ids_list_identifier: ids_list_identifier COMMA IDENTIFIER
   35                    | IDENTIFIER

   36 array_body: OPEN_S array_ele CLOSE_S
   37           | OPEN_S CLOSE_S

   38 array_ele: expr COMMA array_ele
   39          | expr
   40          | OPEN_S CLOSE_S
   41          | OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | OPEN_S array_ele CLOSE_S
   43          | OPEN_S CLOSE_S COMMA array_ele

   44 instance_variables: OPEN_S instance_variable_declarations CLOSE_S
   45                   | OPEN_S CLOSE_S

   46 instance_variable_declarations: instance_variable_declarations instance_variable_declaration
   47                               | instance_variable_declaration
   48                               | variable_declaration_list

   49 instance_variable_declaration: visibility_specification variable_declaration_list

   50 variable_declaration_list: variable_declaration_list variable_declarationxx
   51                          | variable_declarationxx

   52 visibility_specification: AT_PRIVATE
   53                         | AT_PROTECTED
   54                         | AT_PUBLIC

   55 struct_variable_declaration: struct_declaration_list

   56 variable_declarationxx: type ids_list SEMI_COMA
   57                       | CONST type ids_list SEMI_COMA
   58                       | type IDENTIFIER array_tag error

   59 ids_list: ids_list COMMA data_member
   60         | data_member
   61         | error

   62 data_member: IDENTIFIER array_tag
   63            | IDENTIFIER
   64            | error array_tag
   65            | IDENTIFIER error

   66 struct_declaration_list: struct_declaration_list variable_declarationxx
   67                        | variable_declarationxx
   68                        | error variable_declarationxx

   69 struct_header: STRUCT IDENTIFIER

   70 struct: struct_header OPEN_S CLOSE_S entity SEMI_COMA
   71       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | struct_header OPEN_S CLOSE_S SEMI_COMA
   73       | struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   74       | struct_header OPEN_S CLOSE_S entity error SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | struct_header OPEN_S CLOSE_S error SEMI_COMA
   77       | struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA

   78 entity: IDENTIFIER COMMA entity
   79       | IDENTIFIER
   80       | error COMMA

   81 type: simple_type
   82     | complex_type
   83     | struct_type
   84     | enum_type

   85 struct_type: STRUCT IDENTIFIER
   86            | STRUCT IDENTIFIER MULTI

   87 enum_type: ENUM IDENTIFIER
   88          | ENUM IDENTIFIER MULTI

   89 simple_type: INT
   90            | CHAR
   91            | FLOAT
   92            | NSSTRING
   93            | VOID
   94            | BOOL

   95 complex_type: IDENTIFIER MULTI

   96 array_tag: array_first_tag array_tag_list

   97 array_tag_list: array_tag_list OPEN_ARR INT_VAL CLOSE_ARR
   98               | %empty
   99               | array_tag_list OPEN_ARR error CLOSE_ARR

  100 array_first_tag: OPEN_ARR INT_VAL CLOSE_ARR
  101                | OPEN_ARR CLOSE_ARR

  102 initializer: EQUAL array_body
  103            | %empty

  104 main_initializer: EQUAL expr
  105                 | %empty

  106 interface_declaration_list: interface_declaration_list interface_declaration
  107                           | interface_declaration

  108 interface_declaration: class_method_declaration
  109                      | instance_method_declaration

  110 class_method_declaration: PLUS p_type method_selectors SEMI_COMA
  111                         | PLUS p_type method_selectors error
  112                         | PLUS method_selectors error

  113 instance_method_declaration: MINUS p_type method_selectors SEMI_COMA

  114 p_type: OPEN_P type CLOSE_P

  115 method_selectors: selectors_list
  116                 | IDENTIFIER

  117 selectors_list: selectors_list selector_decleration
  118               | selector_decleration

  119 selector_decleration: IDENTIFIER SEMI_COLUMN parameter_list

  120 parameter_list: parameter_list SEMI_COLUMN parameter
  121               | parameter

  122 parameter: p_type IDENTIFIER

  123 class_implementation: class_implementation_header class_implementation_body

  124 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  125                            | AT_IMPLEMENTATION IDENTIFIER

  126 class_implementation_body: instance_variables implementation_definition_list AT_END
  127                          | instance_variables AT_END
  128                          | implementation_definition_list AT_END
  129                          | AT_END

  130 implementation_definition_list: implementation_definition_list implementation_definition
  131                               | implementation_definition

  132 implementation_definition: class_implementation_definition
  133                          | instance_implementation_definition

  134 class_implementation_definition: class_implementation_definition_header block_body

  135 class_implementation_definition_header: PLUS p_type method_selectors

  136 instance_implementation_definition: instance_implementation_definition_header block_body

  137 instance_implementation_definition_header: MINUS p_type method_selectors

  138 block_body: block_body_header block_body_statements

  139 block_body_header: OPEN_S

  140 block_body_statements: statement_list CLOSE_S
  141                      | CLOSE_S
  142                      | error CLOSE_S

  143 statement_list: statement_list statement
  144               | statement

  145 statement: loop_statement
  146          | conditional_statement
  147          | assign_expr SEMI_COMA
  148          | variable_declaration_block
  149          | block_body
  150          | return_statement
  151          | try_catch
  152          | asm
  153          | message_call SEMI_COMA
  154          | error SEMI_COMA

  155 asm: AT_ASM STRING_VAL SEMI_COMA

  156 variable_declaration_block: type variable_list SEMI_COMA
  157                           | CONST type variable_list SEMI_COMA
  158                           | enum

  159 variable_list: variable_list COMMA variable
  160              | variable
  161              | variable_list error variable

  162 variable: IDENTIFIER array_tag initializer
  163         | IDENTIFIER main_initializer
  164         | error array_tag initializer

  165 return_statement: RETURN expr SEMI_COMA

  166 loop_statement: for_loop
  167               | while_loop
  168               | do_while

  169 do_while: do_header statement while_loop_header SEMI_COMA

  170 do_header: DO

  171 for_loop: for_loop_header statement

  172 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  173                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  175                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  176                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  177                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  178                | FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

  180 for_initializer: INT IDENTIFIER EQUAL expr
  181                | IDENTIFIER EQUAL expr
  182                | IDENTIFIER

  183 logic_expr: expr LESS_THAN expr
  184           | expr MORE_THAN expr
  185           | expr LESS_OR_EQUAL expr
  186           | expr MORE_OR_EQUAL expr
  187           | expr EQUAL_EQUAL expr
  188           | expr NOT_EQUAL expr
  189           | NOT_EQUAL expr
  190           | OPEN_P logic_expr CLOSE_P
  191           | logic_expr AND_AND logic_expr
  192           | logic_expr OR_OR logic_expr
  193           | TRUE
  194           | FALSE

  195 expr: assign_expr
  196     | simple_expr

  197 assign_expr: long_id EQUAL simple_expr

  198 long_id: long_id DOT IDENTIFIER
  199        | message_call
  200        | IDENTIFIER

  201 simple_expr: STRING_VAL
  202            | INT_VAL
  203            | FLOAT_VAL
  204            | CHAR_VAL
  205            | long_id
  206            | simple_expr PLUS simple_expr
  207            | simple_expr MINUS simple_expr
  208            | simple_expr MULTI simple_expr
  209            | simple_expr DIV simple_expr
  210            | OPEN_P simple_expr CLOSE_P
  211            | IDENTIFIER DOUBLEPLUS
  212            | IDENTIFIER DOUBLEMINUS
  213            | DOUBLEPLUS IDENTIFIER
  214            | DOUBLEMINUS IDENTIFIER
  215            | p_type simple_expr

  216 message_call2: OPEN_ARR

  217 message_call: message_call2 sender message CLOSE_ARR

  218 sender: message_call
  219       | IDENTIFIER

  220 message: IDENTIFIER
  221        | message_selectors_list

  222 message_selectors_list: message_selectors_list message_selector
  223                       | message_selector

  224 message_selector: IDENTIFIER SEMI_COLUMN argument_list

  225 argument_list: argument_list SEMI_COLUMN argument
  226              | argument

  227 argument: expr

  228 while_loop: while_loop_header statement

  229 while_loop_header: WHILE OPEN_P logic_expr CLOSE_P

  230 conditional_statement: if_header statement
  231                      | if_header statement ELSE statement
  232                      | switch_header switch_body

  233 if_header: IF OPEN_P logic_expr CLOSE_P

  234 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block

  235 switch_body_block: OPEN_S

  236 switch_body: list_of_case default_case CLOSE_S
  237            | list_of_case CLOSE_S
  238            | default_case CLOSE_S
  239            | CLOSE_S

  240 list_of_case: list_of_case case_body
  241             | case_body

  242 case_body: CASE expr SEMI_COLUMN statement BREAK SEMI_COMA
  243          | CASE expr SEMI_COLUMN statement
  244          | CASE expr SEMI_COLUMN BREAK SEMI_COMA

  245 default_case: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  246             | DEFAULT SEMI_COLUMN statement
  247             | DEFAULT SEMI_COLUMN BREAK SEMI_COMA

  248 protocol: protocol_header protocol_body

  249 protocol_header: AT_PROTOCOL IDENTIFIER

  250 protocol_body: protocol_reference_list interface_declaration_list AT_END
  251              | interface_declaration_list AT_END
  252              | protocol_reference_list AT_END
  253              | AT_END

  254 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  255     | ENUM IDENTIFIER SEMI_COMA

  256 list_expr: IDENTIFIER EQUAL expr COMMA list_expr
  257          | IDENTIFIER EQUAL expr
  258          | IDENTIFIER
  259          | IDENTIFIER COMMA list_expr

  260 try_catch: TRY statement catch_list finally_statement
  261          | TRY statement catch_list

  262 catch_list: CATCH OPEN_S type IDENTIFIER CLOSE_S statement
  263           | catch_list CATCH OPEN_S type IDENTIFIER CLOSE_S statement

  264 finally_statement: FINALLY statement


Terminals, with rules where they appear

$end (0) 0
error (256) 12 13 14 23 24 25 26 27 28 29 30 31 33 58 61 64 65 68 74
    75 76 77 80 99 111 112 142 154 161 164
AT_INTERFACE (258) 10 11 13 14
IDENTIFIER (259) 10 11 12 14 34 35 58 62 63 65 69 78 79 85 86 87 88
    95 116 119 122 124 125 162 163 180 181 182 198 200 211 212 213
    214 219 220 224 234 249 254 255 256 257 258 259 262 263
SEMI_COLUMN (260) 10 14 119 120 124 224 225 242 243 244 245 246 247
NSSTRING (261) 92
FLOAT (262) 91
CHAR (263) 90
BOOL (264) 94
INT (265) 89 180
SEMI_COMA (266) 56 57 70 71 72 73 74 75 76 77 110 113 147 153 154 155
    156 157 165 169 172 173 174 175 176 177 178 179 242 244 245 247
    254 255
ID (267)
AT_PUBLIC (268) 54
AT_PROTECTED (269) 53
AT_PRIVATE (270) 52
OPEN_S (271) 36 37 40 41 42 43 44 45 70 71 72 73 74 75 76 77 139 235
    254 262 263
CLOSE_S (272) 36 37 40 41 42 43 44 45 70 71 72 73 74 75 76 77 140 141
    142 236 237 238 239 254 262 263
COMMA (273) 34 38 41 43 59 78 80 159 256 259
LESS_THAN (274) 32 33 183
MORE_THAN (275) 32 184
AT_END (276) 15 16 17 18 19 20 21 22 23 24 126 127 128 129 250 251
    252 253
CONST (277) 57 157
VOID (278) 93
PLUS (279) 110 111 112 135 206
MINUS (280) 113 137 207
OPEN_P (281) 114 172 173 174 175 176 177 178 179 190 210 229 233 234
CLOSE_P (282) 114 172 173 174 175 176 177 178 179 190 210 229 233 234
AT_IMPLEMENTATION (283) 124 125
AND_AND (284) 191
OR_OR (285) 192
STRING_VAL (286) 155 201
FLOAT_VAL (287) 203
LESS_OR_EQUAL (288) 185
CHAR_VAL (289) 204
INT_VAL (290) 97 100 202
MORE_OR_EQUAL (291) 186
MULTI (292) 86 88 95 208
EQUAL_EQUAL (293) 187
NOT_EQUAL (294) 188 189
FOR (295) 172 173 174 175 176 177 178 179
EQUAL (296) 102 104 180 181 197 256 257
DIV (297) 209
WHILE (298) 229
IF (299) 233
DO (300) 170
SWITCH (301) 234
CASE (302) 242 243 244
DEFAULT (303) 245 246 247
BREAK (304) 242 244 245 247
ENUM (305) 87 88 254 255
OPEN_ARR (306) 97 99 100 101 216
CLOSE_ARR (307) 97 99 100 101 217
TRUE (308) 193
FALSE (309) 194
RETURN (310) 165
AT_PROTOCOL (311) 249
ELSE (312) 231
STRUCT (313) 69 85 86
DOT (314) 198
DOUBLEPLUS (315) 211 213
DOUBLEMINUS (316) 212 214
TRY (317) 260 261
CATCH (318) 262 263
FINALLY (319) 264
AT_ASM (320) 155
SELF (321)
if_h (322)
expr_1 (323)
p_type_expr_prec (324)
long_id_prec (325)
try_prec (326)


Nonterminals, with rules where they appear

$accept (72)
    on left: 0
program (73)
    on left: 1, on right: 0
components (74)
    on left: 2 3, on right: 1 2
component (75)
    on left: 4 5 6 7 8, on right: 2 3
class_interface (76)
    on left: 9, on right: 4
class_interface_header (77)
    on left: 10 11 12 13 14, on right: 9
class_interface_body (78)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31, on right:
    9
protocol_reference_list (79)
    on left: 32 33, on right: 15 16 17 19 23 24 25 26 27 28 250 252
ids_list_identifier (80)
    on left: 34 35, on right: 32 33 34
array_body (81)
    on left: 36 37, on right: 102
array_ele (82)
    on left: 38 39 40 41 42 43, on right: 36 38 41 42 43
instance_variables (83)
    on left: 44 45, on right: 15 16 18 20 26 27 29 30 126 127
instance_variable_declarations (84)
    on left: 46 47 48, on right: 44 46
instance_variable_declaration (85)
    on left: 49, on right: 46 47
variable_declaration_list (86)
    on left: 50 51, on right: 48 49 50
visibility_specification (87)
    on left: 52 53 54, on right: 49
struct_variable_declaration (88)
    on left: 55, on right: 71 73 75 77
variable_declarationxx (89)
    on left: 56 57 58, on right: 50 51 66 67 68
ids_list (90)
    on left: 59 60 61, on right: 56 57 59
data_member (91)
    on left: 62 63 64 65, on right: 59 60
struct_declaration_list (92)
    on left: 66 67 68, on right: 55 66
struct_header (93)
    on left: 69, on right: 70 71 72 73 74 75 76 77
struct (94)
    on left: 70 71 72 73 74 75 76 77, on right: 7
entity (95)
    on left: 78 79 80, on right: 70 71 74 75 78
type (96)
    on left: 81 82 83 84, on right: 56 57 58 114 156 157 262 263
struct_type (97)
    on left: 85 86, on right: 83
enum_type (98)
    on left: 87 88, on right: 84
simple_type (99)
    on left: 89 90 91 92 93 94, on right: 81
complex_type (100)
    on left: 95, on right: 82
array_tag (101)
    on left: 96, on right: 58 62 64 162 164
array_tag_list (102)
    on left: 97 98 99, on right: 96 97 99
array_first_tag (103)
    on left: 100 101, on right: 96
initializer (104)
    on left: 102 103, on right: 162 164
main_initializer (105)
    on left: 104 105, on right: 163
interface_declaration_list (106)
    on left: 106 107, on right: 15 17 18 21 24 26 28 29 31 106 250
    251
interface_declaration (107)
    on left: 108 109, on right: 106 107
class_method_declaration (108)
    on left: 110 111 112, on right: 108
instance_method_declaration (109)
    on left: 113, on right: 109
p_type (110)
    on left: 114, on right: 110 111 113 122 135 137 215
method_selectors (111)
    on left: 115 116, on right: 110 111 112 113 135 137
selectors_list (112)
    on left: 117 118, on right: 115 117
selector_decleration (113)
    on left: 119, on right: 117 118
parameter_list (114)
    on left: 120 121, on right: 119 120
parameter (115)
    on left: 122, on right: 120 121
class_implementation (116)
    on left: 123, on right: 5
class_implementation_header (117)
    on left: 124 125, on right: 123
class_implementation_body (118)
    on left: 126 127 128 129, on right: 123
implementation_definition_list (119)
    on left: 130 131, on right: 126 128 130
implementation_definition (120)
    on left: 132 133, on right: 130 131
class_implementation_definition (121)
    on left: 134, on right: 132
class_implementation_definition_header (122)
    on left: 135, on right: 134
instance_implementation_definition (123)
    on left: 136, on right: 133
instance_implementation_definition_header (124)
    on left: 137, on right: 136
block_body (125)
    on left: 138, on right: 134 136 149
block_body_header (126)
    on left: 139, on right: 138
block_body_statements (127)
    on left: 140 141 142, on right: 138
statement_list (128)
    on left: 143 144, on right: 140 143
statement (129)
    on left: 145 146 147 148 149 150 151 152 153 154, on right: 143
    144 169 171 228 230 231 242 243 245 246 260 261 262 263 264
asm (130)
    on left: 155, on right: 152
variable_declaration_block (131)
    on left: 156 157 158, on right: 148
variable_list (132)
    on left: 159 160 161, on right: 156 157 159 161
variable (133)
    on left: 162 163 164, on right: 159 160 161
return_statement (134)
    on left: 165, on right: 150
loop_statement (135)
    on left: 166 167 168, on right: 145
do_while (136)
    on left: 169, on right: 168
do_header (137)
    on left: 170, on right: 169
for_loop (138)
    on left: 171, on right: 166
for_loop_header (139)
    on left: 172 173 174 175 176 177 178 179, on right: 171
for_initializer (140)
    on left: 180 181 182, on right: 172 174 175 176
logic_expr (141)
    on left: 183 184 185 186 187 188 189 190 191 192 193 194, on right:
    172 173 175 177 190 191 192 229 233
expr (142)
    on left: 195 196, on right: 38 39 104 165 172 173 174 178 180 181
    183 184 185 186 187 188 189 227 242 243 244 256 257
assign_expr (143)
    on left: 197, on right: 147 195
long_id (144)
    on left: 198 199 200, on right: 197 198 205
simple_expr (145)
    on left: 201 202 203 204 205 206 207 208 209 210 211 212 213 214
    215, on right: 196 197 206 207 208 209 210 215
message_call2 (146)
    on left: 216, on right: 217
message_call (147)
    on left: 217, on right: 153 199 218
sender (148)
    on left: 218 219, on right: 217
message (149)
    on left: 220 221, on right: 217
message_selectors_list (150)
    on left: 222 223, on right: 221 222
message_selector (151)
    on left: 224, on right: 222 223
argument_list (152)
    on left: 225 226, on right: 224 225
argument (153)
    on left: 227, on right: 225 226
while_loop (154)
    on left: 228, on right: 167
while_loop_header (155)
    on left: 229, on right: 169 228
conditional_statement (156)
    on left: 230 231 232, on right: 146
if_header (157)
    on left: 233, on right: 230 231
switch_header (158)
    on left: 234, on right: 232
switch_body_block (159)
    on left: 235, on right: 234
switch_body (160)
    on left: 236 237 238 239, on right: 232
list_of_case (161)
    on left: 240 241, on right: 236 237 240
case_body (162)
    on left: 242 243 244, on right: 240 241
default_case (163)
    on left: 245 246 247, on right: 236 238
protocol (164)
    on left: 248, on right: 6
protocol_header (165)
    on left: 249, on right: 248
protocol_body (166)
    on left: 250 251 252 253, on right: 248
enum (167)
    on left: 254 255, on right: 8 158
list_expr (168)
    on left: 256 257 258 259, on right: 254 256 259
try_catch (169)
    on left: 260 261, on right: 151
catch_list (170)
    on left: 262 263, on right: 260 261 263
finally_statement (171)
    on left: 264, on right: 260


State 0

    0 $accept: . program $end
    1 program: . components
    2 components: . components component
    3           | . component
    4 component: . class_interface
    5          | . class_implementation
    6          | . protocol
    7          | . struct
    8          | . enum
    9 class_interface: . class_interface_header class_interface_body
   10 class_interface_header: . AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
   11                       | . AT_INTERFACE IDENTIFIER
   12                       | . error IDENTIFIER
   13                       | . AT_INTERFACE error
   14                       | . AT_INTERFACE IDENTIFIER SEMI_COLUMN error
   69 struct_header: . STRUCT IDENTIFIER
   70 struct: . struct_header OPEN_S CLOSE_S entity SEMI_COMA
   71       | . struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | . struct_header OPEN_S CLOSE_S SEMI_COMA
   73       | . struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   74       | . struct_header OPEN_S CLOSE_S entity error SEMI_COMA
   75       | . struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | . struct_header OPEN_S CLOSE_S error SEMI_COMA
   77       | . struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA
  123 class_implementation: . class_implementation_header class_implementation_body
  124 class_implementation_header: . AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  125                            | . AT_IMPLEMENTATION IDENTIFIER
  248 protocol: . protocol_header protocol_body
  249 protocol_header: . AT_PROTOCOL IDENTIFIER
  254 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  255     | . ENUM IDENTIFIER SEMI_COMA

    error              shift, and go to state 1
    AT_INTERFACE       shift, and go to state 2
    AT_IMPLEMENTATION  shift, and go to state 3
    ENUM               shift, and go to state 4
    AT_PROTOCOL        shift, and go to state 5
    STRUCT             shift, and go to state 6

    program                      go to state 7
    components                   go to state 8
    component                    go to state 9
    class_interface              go to state 10
    class_interface_header       go to state 11
    struct_header                go to state 12
    struct                       go to state 13
    class_implementation         go to state 14
    class_implementation_header  go to state 15
    protocol                     go to state 16
    protocol_header              go to state 17
    enum                         go to state 18


State 1

   12 class_interface_header: error . IDENTIFIER

    IDENTIFIER  shift, and go to state 19


State 2

   10 class_interface_header: AT_INTERFACE . IDENTIFIER SEMI_COLUMN IDENTIFIER
   11                       | AT_INTERFACE . IDENTIFIER
   13                       | AT_INTERFACE . error
   14                       | AT_INTERFACE . IDENTIFIER SEMI_COLUMN error

    error       shift, and go to state 20
    IDENTIFIER  shift, and go to state 21


State 3

  124 class_implementation_header: AT_IMPLEMENTATION . IDENTIFIER SEMI_COLUMN IDENTIFIER
  125                            | AT_IMPLEMENTATION . IDENTIFIER

    IDENTIFIER  shift, and go to state 22


State 4

  254 enum: ENUM . IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  255     | ENUM . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 23


State 5

  249 protocol_header: AT_PROTOCOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 24


State 6

   69 struct_header: STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 25


State 7

    0 $accept: program . $end

    $end  shift, and go to state 26


State 8

    1 program: components .  [$end]
    2 components: components . component
    4 component: . class_interface
    5          | . class_implementation
    6          | . protocol
    7          | . struct
    8          | . enum
    9 class_interface: . class_interface_header class_interface_body
   10 class_interface_header: . AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
   11                       | . AT_INTERFACE IDENTIFIER
   12                       | . error IDENTIFIER
   13                       | . AT_INTERFACE error
   14                       | . AT_INTERFACE IDENTIFIER SEMI_COLUMN error
   69 struct_header: . STRUCT IDENTIFIER
   70 struct: . struct_header OPEN_S CLOSE_S entity SEMI_COMA
   71       | . struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | . struct_header OPEN_S CLOSE_S SEMI_COMA
   73       | . struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   74       | . struct_header OPEN_S CLOSE_S entity error SEMI_COMA
   75       | . struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | . struct_header OPEN_S CLOSE_S error SEMI_COMA
   77       | . struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA
  123 class_implementation: . class_implementation_header class_implementation_body
  124 class_implementation_header: . AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  125                            | . AT_IMPLEMENTATION IDENTIFIER
  248 protocol: . protocol_header protocol_body
  249 protocol_header: . AT_PROTOCOL IDENTIFIER
  254 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  255     | . ENUM IDENTIFIER SEMI_COMA

    error              shift, and go to state 1
    AT_INTERFACE       shift, and go to state 2
    AT_IMPLEMENTATION  shift, and go to state 3
    ENUM               shift, and go to state 4
    AT_PROTOCOL        shift, and go to state 5
    STRUCT             shift, and go to state 6

    $end  reduce using rule 1 (program)

    component                    go to state 27
    class_interface              go to state 10
    class_interface_header       go to state 11
    struct_header                go to state 12
    struct                       go to state 13
    class_implementation         go to state 14
    class_implementation_header  go to state 15
    protocol                     go to state 16
    protocol_header              go to state 17
    enum                         go to state 18


State 9

    3 components: component .

    $default  reduce using rule 3 (components)


State 10

    4 component: class_interface .

    $default  reduce using rule 4 (component)


State 11

    9 class_interface: class_interface_header . class_interface_body
   15 class_interface_body: . protocol_reference_list instance_variables interface_declaration_list AT_END
   16                     | . protocol_reference_list instance_variables AT_END
   17                     | . protocol_reference_list interface_declaration_list AT_END
   18                     | . instance_variables interface_declaration_list AT_END
   19                     | . protocol_reference_list AT_END
   20                     | . instance_variables AT_END
   21                     | . interface_declaration_list AT_END
   22                     | . AT_END
   23                     | . protocol_reference_list error AT_END
   24                     | . protocol_reference_list error interface_declaration_list AT_END
   25                     | . protocol_reference_list error
   26                     | . protocol_reference_list instance_variables interface_declaration_list error
   27                     | . protocol_reference_list instance_variables error
   28                     | . protocol_reference_list interface_declaration_list error
   29                     | . instance_variables interface_declaration_list error
   30                     | . instance_variables error
   31                     | . interface_declaration_list error
   32 protocol_reference_list: . LESS_THAN ids_list_identifier MORE_THAN
   33                        | . LESS_THAN ids_list_identifier error
   44 instance_variables: . OPEN_S instance_variable_declarations CLOSE_S
   45                   | . OPEN_S CLOSE_S
  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    OPEN_S     shift, and go to state 28
    LESS_THAN  shift, and go to state 29
    AT_END     shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32

    class_interface_body         go to state 33
    protocol_reference_list      go to state 34
    instance_variables           go to state 35
    interface_declaration_list   go to state 36
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 12

   70 struct: struct_header . OPEN_S CLOSE_S entity SEMI_COMA
   71       | struct_header . OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | struct_header . OPEN_S CLOSE_S SEMI_COMA
   73       | struct_header . OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   74       | struct_header . OPEN_S CLOSE_S entity error SEMI_COMA
   75       | struct_header . OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | struct_header . OPEN_S CLOSE_S error SEMI_COMA
   77       | struct_header . OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA

    OPEN_S  shift, and go to state 40


State 13

    7 component: struct .

    $default  reduce using rule 7 (component)


State 14

    5 component: class_implementation .

    $default  reduce using rule 5 (component)


State 15

   44 instance_variables: . OPEN_S instance_variable_declarations CLOSE_S
   45                   | . OPEN_S CLOSE_S
  123 class_implementation: class_implementation_header . class_implementation_body
  126 class_implementation_body: . instance_variables implementation_definition_list AT_END
  127                          | . instance_variables AT_END
  128                          | . implementation_definition_list AT_END
  129                          | . AT_END
  130 implementation_definition_list: . implementation_definition_list implementation_definition
  131                               | . implementation_definition
  132 implementation_definition: . class_implementation_definition
  133                          | . instance_implementation_definition
  134 class_implementation_definition: . class_implementation_definition_header block_body
  135 class_implementation_definition_header: . PLUS p_type method_selectors
  136 instance_implementation_definition: . instance_implementation_definition_header block_body
  137 instance_implementation_definition_header: . MINUS p_type method_selectors

    OPEN_S  shift, and go to state 28
    AT_END  shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    instance_variables                         go to state 44
    class_implementation_body                  go to state 45
    implementation_definition_list             go to state 46
    implementation_definition                  go to state 47
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 16

    6 component: protocol .

    $default  reduce using rule 6 (component)


State 17

   32 protocol_reference_list: . LESS_THAN ids_list_identifier MORE_THAN
   33                        | . LESS_THAN ids_list_identifier error
  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  248 protocol: protocol_header . protocol_body
  250 protocol_body: . protocol_reference_list interface_declaration_list AT_END
  251              | . interface_declaration_list AT_END
  252              | . protocol_reference_list AT_END
  253              | . AT_END

    LESS_THAN  shift, and go to state 29
    AT_END     shift, and go to state 52
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32

    protocol_reference_list      go to state 53
    interface_declaration_list   go to state 54
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39
    protocol_body                go to state 55


State 18

    8 component: enum .

    $default  reduce using rule 8 (component)


State 19

   12 class_interface_header: error IDENTIFIER .

    $default  reduce using rule 12 (class_interface_header)


State 20

   13 class_interface_header: AT_INTERFACE error .

    $default  reduce using rule 13 (class_interface_header)


State 21

   10 class_interface_header: AT_INTERFACE IDENTIFIER . SEMI_COLUMN IDENTIFIER
   11                       | AT_INTERFACE IDENTIFIER .  [OPEN_S, LESS_THAN, AT_END, PLUS, MINUS]
   14                       | AT_INTERFACE IDENTIFIER . SEMI_COLUMN error

    SEMI_COLUMN  shift, and go to state 56

    $default  reduce using rule 11 (class_interface_header)


State 22

  124 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER . SEMI_COLUMN IDENTIFIER
  125                            | AT_IMPLEMENTATION IDENTIFIER .  [OPEN_S, AT_END, PLUS, MINUS]

    SEMI_COLUMN  shift, and go to state 57

    $default  reduce using rule 125 (class_implementation_header)


State 23

  254 enum: ENUM IDENTIFIER . OPEN_S list_expr CLOSE_S SEMI_COMA
  255     | ENUM IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 58
    OPEN_S     shift, and go to state 59


State 24

  249 protocol_header: AT_PROTOCOL IDENTIFIER .

    $default  reduce using rule 249 (protocol_header)


State 25

   69 struct_header: STRUCT IDENTIFIER .

    $default  reduce using rule 69 (struct_header)


State 26

    0 $accept: program $end .

    $default  accept


State 27

    2 components: components component .

    $default  reduce using rule 2 (components)


State 28

   44 instance_variables: OPEN_S . instance_variable_declarations CLOSE_S
   45                   | OPEN_S . CLOSE_S
   46 instance_variable_declarations: . instance_variable_declarations instance_variable_declaration
   47                               | . instance_variable_declaration
   48                               | . variable_declaration_list
   49 instance_variable_declaration: . visibility_specification variable_declaration_list
   50 variable_declaration_list: . variable_declaration_list variable_declarationxx
   51                          | . variable_declarationxx
   52 visibility_specification: . AT_PRIVATE
   53                         | . AT_PROTECTED
   54                         | . AT_PUBLIC
   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    IDENTIFIER    shift, and go to state 60
    NSSTRING      shift, and go to state 61
    FLOAT         shift, and go to state 62
    CHAR          shift, and go to state 63
    BOOL          shift, and go to state 64
    INT           shift, and go to state 65
    AT_PUBLIC     shift, and go to state 66
    AT_PROTECTED  shift, and go to state 67
    AT_PRIVATE    shift, and go to state 68
    CLOSE_S       shift, and go to state 69
    CONST         shift, and go to state 70
    VOID          shift, and go to state 71
    ENUM          shift, and go to state 72
    STRUCT        shift, and go to state 73

    instance_variable_declarations  go to state 74
    instance_variable_declaration   go to state 75
    variable_declaration_list       go to state 76
    visibility_specification        go to state 77
    variable_declarationxx          go to state 78
    type                            go to state 79
    struct_type                     go to state 80
    enum_type                       go to state 81
    simple_type                     go to state 82
    complex_type                    go to state 83


State 29

   32 protocol_reference_list: LESS_THAN . ids_list_identifier MORE_THAN
   33                        | LESS_THAN . ids_list_identifier error
   34 ids_list_identifier: . ids_list_identifier COMMA IDENTIFIER
   35                    | . IDENTIFIER

    IDENTIFIER  shift, and go to state 84

    ids_list_identifier  go to state 85


State 30

   22 class_interface_body: AT_END .

    $default  reduce using rule 22 (class_interface_body)


State 31

  110 class_method_declaration: PLUS . p_type method_selectors SEMI_COMA
  111                         | PLUS . p_type method_selectors error
  112                         | PLUS . method_selectors error
  114 p_type: . OPEN_P type CLOSE_P
  115 method_selectors: . selectors_list
  116                 | . IDENTIFIER
  117 selectors_list: . selectors_list selector_decleration
  118               | . selector_decleration
  119 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 86
    OPEN_P      shift, and go to state 87

    p_type                go to state 88
    method_selectors      go to state 89
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 32

  113 instance_method_declaration: MINUS . p_type method_selectors SEMI_COMA
  114 p_type: . OPEN_P type CLOSE_P

    OPEN_P  shift, and go to state 87

    p_type  go to state 92


State 33

    9 class_interface: class_interface_header class_interface_body .

    $default  reduce using rule 9 (class_interface)


State 34

   15 class_interface_body: protocol_reference_list . instance_variables interface_declaration_list AT_END
   16                     | protocol_reference_list . instance_variables AT_END
   17                     | protocol_reference_list . interface_declaration_list AT_END
   19                     | protocol_reference_list . AT_END
   23                     | protocol_reference_list . error AT_END
   24                     | protocol_reference_list . error interface_declaration_list AT_END
   25                     | protocol_reference_list . error
   26                     | protocol_reference_list . instance_variables interface_declaration_list error
   27                     | protocol_reference_list . instance_variables error
   28                     | protocol_reference_list . interface_declaration_list error
   44 instance_variables: . OPEN_S instance_variable_declarations CLOSE_S
   45                   | . OPEN_S CLOSE_S
  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 93
    OPEN_S  shift, and go to state 28
    AT_END  shift, and go to state 94
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    instance_variables           go to state 95
    interface_declaration_list   go to state 96
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 35

   18 class_interface_body: instance_variables . interface_declaration_list AT_END
   20                     | instance_variables . AT_END
   29                     | instance_variables . interface_declaration_list error
   30                     | instance_variables . error
  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 97
    AT_END  shift, and go to state 98
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 99
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 36

   21 class_interface_body: interface_declaration_list . AT_END
   31                     | interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 100
    AT_END  shift, and go to state 101
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 102
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 37

  107 interface_declaration_list: interface_declaration .

    $default  reduce using rule 107 (interface_declaration_list)


State 38

  108 interface_declaration: class_method_declaration .

    $default  reduce using rule 108 (interface_declaration)


State 39

  109 interface_declaration: instance_method_declaration .

    $default  reduce using rule 109 (interface_declaration)


State 40

   55 struct_variable_declaration: . struct_declaration_list
   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   66 struct_declaration_list: . struct_declaration_list variable_declarationxx
   67                        | . variable_declarationxx
   68                        | . error variable_declarationxx
   70 struct: struct_header OPEN_S . CLOSE_S entity SEMI_COMA
   71       | struct_header OPEN_S . struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | struct_header OPEN_S . CLOSE_S SEMI_COMA
   73       | struct_header OPEN_S . struct_variable_declaration CLOSE_S SEMI_COMA
   74       | struct_header OPEN_S . CLOSE_S entity error SEMI_COMA
   75       | struct_header OPEN_S . struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | struct_header OPEN_S . CLOSE_S error SEMI_COMA
   77       | struct_header OPEN_S . struct_variable_declaration CLOSE_S error SEMI_COMA
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    error       shift, and go to state 103
    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CLOSE_S     shift, and go to state 104
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    struct_variable_declaration  go to state 105
    variable_declarationxx       go to state 106
    struct_declaration_list      go to state 107
    type                         go to state 79
    struct_type                  go to state 80
    enum_type                    go to state 81
    simple_type                  go to state 82
    complex_type                 go to state 83


State 41

  129 class_implementation_body: AT_END .

    $default  reduce using rule 129 (class_implementation_body)


State 42

  114 p_type: . OPEN_P type CLOSE_P
  135 class_implementation_definition_header: PLUS . p_type method_selectors

    OPEN_P  shift, and go to state 87

    p_type  go to state 108


State 43

  114 p_type: . OPEN_P type CLOSE_P
  137 instance_implementation_definition_header: MINUS . p_type method_selectors

    OPEN_P  shift, and go to state 87

    p_type  go to state 109


State 44

  126 class_implementation_body: instance_variables . implementation_definition_list AT_END
  127                          | instance_variables . AT_END
  130 implementation_definition_list: . implementation_definition_list implementation_definition
  131                               | . implementation_definition
  132 implementation_definition: . class_implementation_definition
  133                          | . instance_implementation_definition
  134 class_implementation_definition: . class_implementation_definition_header block_body
  135 class_implementation_definition_header: . PLUS p_type method_selectors
  136 instance_implementation_definition: . instance_implementation_definition_header block_body
  137 instance_implementation_definition_header: . MINUS p_type method_selectors

    AT_END  shift, and go to state 110
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition_list             go to state 111
    implementation_definition                  go to state 47
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 45

  123 class_implementation: class_implementation_header class_implementation_body .

    $default  reduce using rule 123 (class_implementation)


State 46

  128 class_implementation_body: implementation_definition_list . AT_END
  130 implementation_definition_list: implementation_definition_list . implementation_definition
  132 implementation_definition: . class_implementation_definition
  133                          | . instance_implementation_definition
  134 class_implementation_definition: . class_implementation_definition_header block_body
  135 class_implementation_definition_header: . PLUS p_type method_selectors
  136 instance_implementation_definition: . instance_implementation_definition_header block_body
  137 instance_implementation_definition_header: . MINUS p_type method_selectors

    AT_END  shift, and go to state 112
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition                  go to state 113
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 47

  131 implementation_definition_list: implementation_definition .

    $default  reduce using rule 131 (implementation_definition_list)


State 48

  132 implementation_definition: class_implementation_definition .

    $default  reduce using rule 132 (implementation_definition)


State 49

  134 class_implementation_definition: class_implementation_definition_header . block_body
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S

    OPEN_S  shift, and go to state 114

    block_body         go to state 115
    block_body_header  go to state 116


State 50

  133 implementation_definition: instance_implementation_definition .

    $default  reduce using rule 133 (implementation_definition)


State 51

  136 instance_implementation_definition: instance_implementation_definition_header . block_body
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S

    OPEN_S  shift, and go to state 114

    block_body         go to state 117
    block_body_header  go to state 116


State 52

  253 protocol_body: AT_END .

    $default  reduce using rule 253 (protocol_body)


State 53

  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  250 protocol_body: protocol_reference_list . interface_declaration_list AT_END
  252              | protocol_reference_list . AT_END

    AT_END  shift, and go to state 118
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 119
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 54

  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  251 protocol_body: interface_declaration_list . AT_END

    AT_END  shift, and go to state 120
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 102
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 55

  248 protocol: protocol_header protocol_body .

    $default  reduce using rule 248 (protocol)


State 56

   10 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN . IDENTIFIER
   14                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN . error

    error       shift, and go to state 121
    IDENTIFIER  shift, and go to state 122


State 57

  124 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN . IDENTIFIER

    IDENTIFIER  shift, and go to state 123


State 58

  255 enum: ENUM IDENTIFIER SEMI_COMA .

    $default  reduce using rule 255 (enum)


State 59

  254 enum: ENUM IDENTIFIER OPEN_S . list_expr CLOSE_S SEMI_COMA
  256 list_expr: . IDENTIFIER EQUAL expr COMMA list_expr
  257          | . IDENTIFIER EQUAL expr
  258          | . IDENTIFIER
  259          | . IDENTIFIER COMMA list_expr

    IDENTIFIER  shift, and go to state 124

    list_expr  go to state 125


State 60

   95 complex_type: IDENTIFIER . MULTI

    MULTI  shift, and go to state 126


State 61

   92 simple_type: NSSTRING .

    $default  reduce using rule 92 (simple_type)


State 62

   91 simple_type: FLOAT .

    $default  reduce using rule 91 (simple_type)


State 63

   90 simple_type: CHAR .

    $default  reduce using rule 90 (simple_type)


State 64

   94 simple_type: BOOL .

    $default  reduce using rule 94 (simple_type)


State 65

   89 simple_type: INT .

    $default  reduce using rule 89 (simple_type)


State 66

   54 visibility_specification: AT_PUBLIC .

    $default  reduce using rule 54 (visibility_specification)


State 67

   53 visibility_specification: AT_PROTECTED .

    $default  reduce using rule 53 (visibility_specification)


State 68

   52 visibility_specification: AT_PRIVATE .

    $default  reduce using rule 52 (visibility_specification)


State 69

   45 instance_variables: OPEN_S CLOSE_S .

    $default  reduce using rule 45 (instance_variables)


State 70

   57 variable_declarationxx: CONST . type ids_list SEMI_COMA
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    type          go to state 127
    struct_type   go to state 80
    enum_type     go to state 81
    simple_type   go to state 82
    complex_type  go to state 83


State 71

   93 simple_type: VOID .

    $default  reduce using rule 93 (simple_type)


State 72

   87 enum_type: ENUM . IDENTIFIER
   88          | ENUM . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 128


State 73

   85 struct_type: STRUCT . IDENTIFIER
   86            | STRUCT . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 129


State 74

   44 instance_variables: OPEN_S instance_variable_declarations . CLOSE_S
   46 instance_variable_declarations: instance_variable_declarations . instance_variable_declaration
   49 instance_variable_declaration: . visibility_specification variable_declaration_list
   52 visibility_specification: . AT_PRIVATE
   53                         | . AT_PROTECTED
   54                         | . AT_PUBLIC

    AT_PUBLIC     shift, and go to state 66
    AT_PROTECTED  shift, and go to state 67
    AT_PRIVATE    shift, and go to state 68
    CLOSE_S       shift, and go to state 130

    instance_variable_declaration  go to state 131
    visibility_specification       go to state 77


State 75

   47 instance_variable_declarations: instance_variable_declaration .

    $default  reduce using rule 47 (instance_variable_declarations)


State 76

   48 instance_variable_declarations: variable_declaration_list .  [AT_PUBLIC, AT_PROTECTED, AT_PRIVATE, CLOSE_S]
   50 variable_declaration_list: variable_declaration_list . variable_declarationxx
   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    $default  reduce using rule 48 (instance_variable_declarations)

    variable_declarationxx  go to state 132
    type                    go to state 79
    struct_type             go to state 80
    enum_type               go to state 81
    simple_type             go to state 82
    complex_type            go to state 83


State 77

   49 instance_variable_declaration: visibility_specification . variable_declaration_list
   50 variable_declaration_list: . variable_declaration_list variable_declarationxx
   51                          | . variable_declarationxx
   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    variable_declaration_list  go to state 133
    variable_declarationxx     go to state 78
    type                       go to state 79
    struct_type                go to state 80
    enum_type                  go to state 81
    simple_type                go to state 82
    complex_type               go to state 83


State 78

   51 variable_declaration_list: variable_declarationxx .

    $default  reduce using rule 51 (variable_declaration_list)


State 79

   56 variable_declarationxx: type . ids_list SEMI_COMA
   58                       | type . IDENTIFIER array_tag error
   59 ids_list: . ids_list COMMA data_member
   60         | . data_member
   61         | . error
   62 data_member: . IDENTIFIER array_tag
   63            | . IDENTIFIER
   64            | . error array_tag
   65            | . IDENTIFIER error

    error       shift, and go to state 134
    IDENTIFIER  shift, and go to state 135

    ids_list     go to state 136
    data_member  go to state 137


State 80

   83 type: struct_type .

    $default  reduce using rule 83 (type)


State 81

   84 type: enum_type .

    $default  reduce using rule 84 (type)


State 82

   81 type: simple_type .

    $default  reduce using rule 81 (type)


State 83

   82 type: complex_type .

    $default  reduce using rule 82 (type)


State 84

   35 ids_list_identifier: IDENTIFIER .

    $default  reduce using rule 35 (ids_list_identifier)


State 85

   32 protocol_reference_list: LESS_THAN ids_list_identifier . MORE_THAN
   33                        | LESS_THAN ids_list_identifier . error
   34 ids_list_identifier: ids_list_identifier . COMMA IDENTIFIER

    error      shift, and go to state 138
    COMMA      shift, and go to state 139
    MORE_THAN  shift, and go to state 140


State 86

  116 method_selectors: IDENTIFIER .  [error, SEMI_COMA, OPEN_S]
  119 selector_decleration: IDENTIFIER . SEMI_COLUMN parameter_list

    SEMI_COLUMN  shift, and go to state 141

    $default  reduce using rule 116 (method_selectors)


State 87

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  114 p_type: OPEN_P . type CLOSE_P

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    type          go to state 142
    struct_type   go to state 80
    enum_type     go to state 81
    simple_type   go to state 82
    complex_type  go to state 83


State 88

  110 class_method_declaration: PLUS p_type . method_selectors SEMI_COMA
  111                         | PLUS p_type . method_selectors error
  115 method_selectors: . selectors_list
  116                 | . IDENTIFIER
  117 selectors_list: . selectors_list selector_decleration
  118               | . selector_decleration
  119 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 86

    method_selectors      go to state 143
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 89

  112 class_method_declaration: PLUS method_selectors . error

    error  shift, and go to state 144


State 90

  115 method_selectors: selectors_list .  [error, SEMI_COMA, OPEN_S]
  117 selectors_list: selectors_list . selector_decleration
  119 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 145

    $default  reduce using rule 115 (method_selectors)

    selector_decleration  go to state 146


State 91

  118 selectors_list: selector_decleration .

    $default  reduce using rule 118 (selectors_list)


State 92

  113 instance_method_declaration: MINUS p_type . method_selectors SEMI_COMA
  115 method_selectors: . selectors_list
  116                 | . IDENTIFIER
  117 selectors_list: . selectors_list selector_decleration
  118               | . selector_decleration
  119 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 86

    method_selectors      go to state 147
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 93

   23 class_interface_body: protocol_reference_list error . AT_END
   24                     | protocol_reference_list error . interface_declaration_list AT_END
   25                     | protocol_reference_list error .  [$end, error, AT_INTERFACE, AT_IMPLEMENTATION, ENUM, AT_PROTOCOL, STRUCT]
  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    AT_END  shift, and go to state 148
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    $default  reduce using rule 25 (class_interface_body)

    interface_declaration_list   go to state 149
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 94

   19 class_interface_body: protocol_reference_list AT_END .

    $default  reduce using rule 19 (class_interface_body)


State 95

   15 class_interface_body: protocol_reference_list instance_variables . interface_declaration_list AT_END
   16                     | protocol_reference_list instance_variables . AT_END
   26                     | protocol_reference_list instance_variables . interface_declaration_list error
   27                     | protocol_reference_list instance_variables . error
  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 150
    AT_END  shift, and go to state 151
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 152
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 96

   17 class_interface_body: protocol_reference_list interface_declaration_list . AT_END
   28                     | protocol_reference_list interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 153
    AT_END  shift, and go to state 154
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 102
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 97

   30 class_interface_body: instance_variables error .

    $default  reduce using rule 30 (class_interface_body)


State 98

   20 class_interface_body: instance_variables AT_END .

    $default  reduce using rule 20 (class_interface_body)


State 99

   18 class_interface_body: instance_variables interface_declaration_list . AT_END
   29                     | instance_variables interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 155
    AT_END  shift, and go to state 156
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 102
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 100

   31 class_interface_body: interface_declaration_list error .

    $default  reduce using rule 31 (class_interface_body)


State 101

   21 class_interface_body: interface_declaration_list AT_END .

    $default  reduce using rule 21 (class_interface_body)


State 102

  106 interface_declaration_list: interface_declaration_list interface_declaration .

    $default  reduce using rule 106 (interface_declaration_list)


State 103

   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   68 struct_declaration_list: error . variable_declarationxx
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    variable_declarationxx  go to state 157
    type                    go to state 79
    struct_type             go to state 80
    enum_type               go to state 81
    simple_type             go to state 82
    complex_type            go to state 83


State 104

   70 struct: struct_header OPEN_S CLOSE_S . entity SEMI_COMA
   72       | struct_header OPEN_S CLOSE_S . SEMI_COMA
   74       | struct_header OPEN_S CLOSE_S . entity error SEMI_COMA
   76       | struct_header OPEN_S CLOSE_S . error SEMI_COMA
   78 entity: . IDENTIFIER COMMA entity
   79       | . IDENTIFIER
   80       | . error COMMA

    error       shift, and go to state 158
    IDENTIFIER  shift, and go to state 159
    SEMI_COMA   shift, and go to state 160

    entity  go to state 161


State 105

   71 struct: struct_header OPEN_S struct_variable_declaration . CLOSE_S entity SEMI_COMA
   73       | struct_header OPEN_S struct_variable_declaration . CLOSE_S SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration . CLOSE_S entity error SEMI_COMA
   77       | struct_header OPEN_S struct_variable_declaration . CLOSE_S error SEMI_COMA

    CLOSE_S  shift, and go to state 162


State 106

   67 struct_declaration_list: variable_declarationxx .

    $default  reduce using rule 67 (struct_declaration_list)


State 107

   55 struct_variable_declaration: struct_declaration_list .  [CLOSE_S]
   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   66 struct_declaration_list: struct_declaration_list . variable_declarationxx
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    $default  reduce using rule 55 (struct_variable_declaration)

    variable_declarationxx  go to state 163
    type                    go to state 79
    struct_type             go to state 80
    enum_type               go to state 81
    simple_type             go to state 82
    complex_type            go to state 83


State 108

  115 method_selectors: . selectors_list
  116                 | . IDENTIFIER
  117 selectors_list: . selectors_list selector_decleration
  118               | . selector_decleration
  119 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list
  135 class_implementation_definition_header: PLUS p_type . method_selectors

    IDENTIFIER  shift, and go to state 86

    method_selectors      go to state 164
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 109

  115 method_selectors: . selectors_list
  116                 | . IDENTIFIER
  117 selectors_list: . selectors_list selector_decleration
  118               | . selector_decleration
  119 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list
  137 instance_implementation_definition_header: MINUS p_type . method_selectors

    IDENTIFIER  shift, and go to state 86

    method_selectors      go to state 165
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 110

  127 class_implementation_body: instance_variables AT_END .

    $default  reduce using rule 127 (class_implementation_body)


State 111

  126 class_implementation_body: instance_variables implementation_definition_list . AT_END
  130 implementation_definition_list: implementation_definition_list . implementation_definition
  132 implementation_definition: . class_implementation_definition
  133                          | . instance_implementation_definition
  134 class_implementation_definition: . class_implementation_definition_header block_body
  135 class_implementation_definition_header: . PLUS p_type method_selectors
  136 instance_implementation_definition: . instance_implementation_definition_header block_body
  137 instance_implementation_definition_header: . MINUS p_type method_selectors

    AT_END  shift, and go to state 166
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition                  go to state 113
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 112

  128 class_implementation_body: implementation_definition_list AT_END .

    $default  reduce using rule 128 (class_implementation_body)


State 113

  130 implementation_definition_list: implementation_definition_list implementation_definition .

    $default  reduce using rule 130 (implementation_definition_list)


State 114

  139 block_body_header: OPEN_S .

    $default  reduce using rule 139 (block_body_header)


State 115

  134 class_implementation_definition: class_implementation_definition_header block_body .

    $default  reduce using rule 134 (class_implementation_definition)


State 116

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  138           | block_body_header . block_body_statements
  139 block_body_header: . OPEN_S
  140 block_body_statements: . statement_list CLOSE_S
  141                      | . CLOSE_S
  142                      | . error CLOSE_S
  143 statement_list: . statement_list statement
  144               | . statement
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . message_call SEMI_COMA
  154          | . error SEMI_COMA
  155 asm: . AT_ASM STRING_VAL SEMI_COMA
  156 variable_declaration_block: . type variable_list SEMI_COMA
  157                           | . CONST type variable_list SEMI_COMA
  158                           | . enum
  165 return_statement: . RETURN expr SEMI_COMA
  166 loop_statement: . for_loop
  167               | . while_loop
  168               | . do_while
  169 do_while: . do_header statement while_loop_header SEMI_COMA
  170 do_header: . DO
  171 for_loop: . for_loop_header statement
  172 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  173                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR
  228 while_loop: . while_loop_header statement
  229 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  230 conditional_statement: . if_header statement
  231                      | . if_header statement ELSE statement
  232                      | . switch_header switch_body
  233 if_header: . IF OPEN_P logic_expr CLOSE_P
  234 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  254 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  255     | . ENUM IDENTIFIER SEMI_COMA
  260 try_catch: . TRY statement catch_list finally_statement
  261          | . TRY statement catch_list

    error       shift, and go to state 167
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 114
    CLOSE_S     shift, and go to state 169
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 116
    block_body_statements       go to state 183
    statement_list              go to state 184
    statement                   go to state 185
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 117

  136 instance_implementation_definition: instance_implementation_definition_header block_body .

    $default  reduce using rule 136 (instance_implementation_definition)


State 118

  252 protocol_body: protocol_reference_list AT_END .

    $default  reduce using rule 252 (protocol_body)


State 119

  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  250 protocol_body: protocol_reference_list interface_declaration_list . AT_END

    AT_END  shift, and go to state 205
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 102
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 120

  251 protocol_body: interface_declaration_list AT_END .

    $default  reduce using rule 251 (protocol_body)


State 121

   14 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN error .

    $default  reduce using rule 14 (class_interface_header)


State 122

   10 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 10 (class_interface_header)


State 123

  124 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 124 (class_implementation_header)


State 124

  256 list_expr: IDENTIFIER . EQUAL expr COMMA list_expr
  257          | IDENTIFIER . EQUAL expr
  258          | IDENTIFIER .  [CLOSE_S]
  259          | IDENTIFIER . COMMA list_expr

    COMMA  shift, and go to state 206
    EQUAL  shift, and go to state 207

    $default  reduce using rule 258 (list_expr)


State 125

  254 enum: ENUM IDENTIFIER OPEN_S list_expr . CLOSE_S SEMI_COMA

    CLOSE_S  shift, and go to state 208


State 126

   95 complex_type: IDENTIFIER MULTI .

    $default  reduce using rule 95 (complex_type)


State 127

   57 variable_declarationxx: CONST type . ids_list SEMI_COMA
   59 ids_list: . ids_list COMMA data_member
   60         | . data_member
   61         | . error
   62 data_member: . IDENTIFIER array_tag
   63            | . IDENTIFIER
   64            | . error array_tag
   65            | . IDENTIFIER error

    error       shift, and go to state 134
    IDENTIFIER  shift, and go to state 209

    ids_list     go to state 210
    data_member  go to state 137


State 128

   87 enum_type: ENUM IDENTIFIER .  [error, IDENTIFIER, CLOSE_P]
   88          | ENUM IDENTIFIER . MULTI

    MULTI  shift, and go to state 211

    $default  reduce using rule 87 (enum_type)


State 129

   85 struct_type: STRUCT IDENTIFIER .  [error, IDENTIFIER, CLOSE_P]
   86            | STRUCT IDENTIFIER . MULTI

    MULTI  shift, and go to state 212

    $default  reduce using rule 85 (struct_type)


State 130

   44 instance_variables: OPEN_S instance_variable_declarations CLOSE_S .

    $default  reduce using rule 44 (instance_variables)


State 131

   46 instance_variable_declarations: instance_variable_declarations instance_variable_declaration .

    $default  reduce using rule 46 (instance_variable_declarations)


State 132

   50 variable_declaration_list: variable_declaration_list variable_declarationxx .

    $default  reduce using rule 50 (variable_declaration_list)


State 133

   49 instance_variable_declaration: visibility_specification variable_declaration_list .  [AT_PUBLIC, AT_PROTECTED, AT_PRIVATE, CLOSE_S]
   50 variable_declaration_list: variable_declaration_list . variable_declarationxx
   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    $default  reduce using rule 49 (instance_variable_declaration)

    variable_declarationxx  go to state 132
    type                    go to state 79
    struct_type             go to state 80
    enum_type               go to state 81
    simple_type             go to state 82
    complex_type            go to state 83


State 134

   61 ids_list: error .  [SEMI_COMA, COMMA]
   64 data_member: error . array_tag
   96 array_tag: . array_first_tag array_tag_list
  100 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  101                | . OPEN_ARR CLOSE_ARR

    OPEN_ARR  shift, and go to state 213

    $default  reduce using rule 61 (ids_list)

    array_tag        go to state 214
    array_first_tag  go to state 215


State 135

   58 variable_declarationxx: type IDENTIFIER . array_tag error
   62 data_member: IDENTIFIER . array_tag
   63            | IDENTIFIER .  [SEMI_COMA, COMMA]
   65            | IDENTIFIER . error
   96 array_tag: . array_first_tag array_tag_list
  100 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  101                | . OPEN_ARR CLOSE_ARR

    error     shift, and go to state 216
    OPEN_ARR  shift, and go to state 213

    SEMI_COMA  reduce using rule 63 (data_member)
    COMMA      reduce using rule 63 (data_member)

    array_tag        go to state 217
    array_first_tag  go to state 215


State 136

   56 variable_declarationxx: type ids_list . SEMI_COMA
   59 ids_list: ids_list . COMMA data_member

    SEMI_COMA  shift, and go to state 218
    COMMA      shift, and go to state 219


State 137

   60 ids_list: data_member .

    $default  reduce using rule 60 (ids_list)


State 138

   33 protocol_reference_list: LESS_THAN ids_list_identifier error .

    $default  reduce using rule 33 (protocol_reference_list)


State 139

   34 ids_list_identifier: ids_list_identifier COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 220


State 140

   32 protocol_reference_list: LESS_THAN ids_list_identifier MORE_THAN .

    $default  reduce using rule 32 (protocol_reference_list)


State 141

  114 p_type: . OPEN_P type CLOSE_P
  119 selector_decleration: IDENTIFIER SEMI_COLUMN . parameter_list
  120 parameter_list: . parameter_list SEMI_COLUMN parameter
  121               | . parameter
  122 parameter: . p_type IDENTIFIER

    OPEN_P  shift, and go to state 87

    p_type          go to state 221
    parameter_list  go to state 222
    parameter       go to state 223


State 142

  114 p_type: OPEN_P type . CLOSE_P

    CLOSE_P  shift, and go to state 224


State 143

  110 class_method_declaration: PLUS p_type method_selectors . SEMI_COMA
  111                         | PLUS p_type method_selectors . error

    error      shift, and go to state 225
    SEMI_COMA  shift, and go to state 226


State 144

  112 class_method_declaration: PLUS method_selectors error .

    $default  reduce using rule 112 (class_method_declaration)


State 145

  119 selector_decleration: IDENTIFIER . SEMI_COLUMN parameter_list

    SEMI_COLUMN  shift, and go to state 141


State 146

  117 selectors_list: selectors_list selector_decleration .

    $default  reduce using rule 117 (selectors_list)


State 147

  113 instance_method_declaration: MINUS p_type method_selectors . SEMI_COMA

    SEMI_COMA  shift, and go to state 227


State 148

   23 class_interface_body: protocol_reference_list error AT_END .

    $default  reduce using rule 23 (class_interface_body)


State 149

   24 class_interface_body: protocol_reference_list error interface_declaration_list . AT_END
  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    AT_END  shift, and go to state 228
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 102
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 150

   27 class_interface_body: protocol_reference_list instance_variables error .

    $default  reduce using rule 27 (class_interface_body)


State 151

   16 class_interface_body: protocol_reference_list instance_variables AT_END .

    $default  reduce using rule 16 (class_interface_body)


State 152

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list . AT_END
   26                     | protocol_reference_list instance_variables interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 229
    AT_END  shift, and go to state 230
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 102
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 153

   28 class_interface_body: protocol_reference_list interface_declaration_list error .

    $default  reduce using rule 28 (class_interface_body)


State 154

   17 class_interface_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 17 (class_interface_body)


State 155

   29 class_interface_body: instance_variables interface_declaration_list error .

    $default  reduce using rule 29 (class_interface_body)


State 156

   18 class_interface_body: instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 18 (class_interface_body)


State 157

   68 struct_declaration_list: error variable_declarationxx .

    $default  reduce using rule 68 (struct_declaration_list)


State 158

   76 struct: struct_header OPEN_S CLOSE_S error . SEMI_COMA
   80 entity: error . COMMA

    SEMI_COMA  shift, and go to state 231
    COMMA      shift, and go to state 232


State 159

   78 entity: IDENTIFIER . COMMA entity
   79       | IDENTIFIER .  [error, SEMI_COMA]

    COMMA  shift, and go to state 233

    $default  reduce using rule 79 (entity)


State 160

   72 struct: struct_header OPEN_S CLOSE_S SEMI_COMA .

    $default  reduce using rule 72 (struct)


State 161

   70 struct: struct_header OPEN_S CLOSE_S entity . SEMI_COMA
   74       | struct_header OPEN_S CLOSE_S entity . error SEMI_COMA

    error      shift, and go to state 234
    SEMI_COMA  shift, and go to state 235


State 162

   71 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S . entity SEMI_COMA
   73       | struct_header OPEN_S struct_variable_declaration CLOSE_S . SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration CLOSE_S . entity error SEMI_COMA
   77       | struct_header OPEN_S struct_variable_declaration CLOSE_S . error SEMI_COMA
   78 entity: . IDENTIFIER COMMA entity
   79       | . IDENTIFIER
   80       | . error COMMA

    error       shift, and go to state 236
    IDENTIFIER  shift, and go to state 159
    SEMI_COMA   shift, and go to state 237

    entity  go to state 238


State 163

   66 struct_declaration_list: struct_declaration_list variable_declarationxx .

    $default  reduce using rule 66 (struct_declaration_list)


State 164

  135 class_implementation_definition_header: PLUS p_type method_selectors .

    $default  reduce using rule 135 (class_implementation_definition_header)


State 165

  137 instance_implementation_definition_header: MINUS p_type method_selectors .

    $default  reduce using rule 137 (instance_implementation_definition_header)


State 166

  126 class_implementation_body: instance_variables implementation_definition_list AT_END .

    $default  reduce using rule 126 (class_implementation_body)


State 167

  142 block_body_statements: error . CLOSE_S
  154 statement: error . SEMI_COMA

    SEMI_COMA  shift, and go to state 239
    CLOSE_S    shift, and go to state 240


State 168

   95 complex_type: IDENTIFIER . MULTI
  200 long_id: IDENTIFIER .  [EQUAL, DOT]

    MULTI  shift, and go to state 126

    $default  reduce using rule 200 (long_id)


State 169

  141 block_body_statements: CLOSE_S .

    $default  reduce using rule 141 (block_body_statements)


State 170

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  157 variable_declaration_block: CONST . type variable_list SEMI_COMA

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    type          go to state 241
    struct_type   go to state 80
    enum_type     go to state 81
    simple_type   go to state 82
    complex_type  go to state 83


State 171

  172 for_loop_header: FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  173                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  175                | FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  176                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  177                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  178                | FOR . OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | FOR . OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

    OPEN_P  shift, and go to state 242


State 172

  229 while_loop_header: WHILE . OPEN_P logic_expr CLOSE_P

    OPEN_P  shift, and go to state 243


State 173

  233 if_header: IF . OPEN_P logic_expr CLOSE_P

    OPEN_P  shift, and go to state 244


State 174

  170 do_header: DO .

    $default  reduce using rule 170 (do_header)


State 175

  234 switch_header: SWITCH . OPEN_P IDENTIFIER CLOSE_P switch_body_block

    OPEN_P  shift, and go to state 245


State 176

   87 enum_type: ENUM . IDENTIFIER
   88          | ENUM . IDENTIFIER MULTI
  254 enum: ENUM . IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  255     | ENUM . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 246


State 177

  216 message_call2: OPEN_ARR .

    $default  reduce using rule 216 (message_call2)


State 178

  114 p_type: . OPEN_P type CLOSE_P
  165 return_statement: RETURN . expr SEMI_COMA
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    expr           go to state 256
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 179

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . message_call SEMI_COMA
  154          | . error SEMI_COMA
  155 asm: . AT_ASM STRING_VAL SEMI_COMA
  156 variable_declaration_block: . type variable_list SEMI_COMA
  157                           | . CONST type variable_list SEMI_COMA
  158                           | . enum
  165 return_statement: . RETURN expr SEMI_COMA
  166 loop_statement: . for_loop
  167               | . while_loop
  168               | . do_while
  169 do_while: . do_header statement while_loop_header SEMI_COMA
  170 do_header: . DO
  171 for_loop: . for_loop_header statement
  172 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  173                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR
  228 while_loop: . while_loop_header statement
  229 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  230 conditional_statement: . if_header statement
  231                      | . if_header statement ELSE statement
  232                      | . switch_header switch_body
  233 if_header: . IF OPEN_P logic_expr CLOSE_P
  234 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  254 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  255     | . ENUM IDENTIFIER SEMI_COMA
  260 try_catch: . TRY statement catch_list finally_statement
  260          | TRY . statement catch_list finally_statement
  261          | . TRY statement catch_list
  261          | TRY . statement catch_list

    error       shift, and go to state 261
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 116
    statement                   go to state 262
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 180

  155 asm: AT_ASM . STRING_VAL SEMI_COMA

    STRING_VAL  shift, and go to state 263


State 181

  156 variable_declaration_block: type . variable_list SEMI_COMA
  159 variable_list: . variable_list COMMA variable
  160              | . variable
  161              | . variable_list error variable
  162 variable: . IDENTIFIER array_tag initializer
  163         | . IDENTIFIER main_initializer
  164         | . error array_tag initializer

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 265

    variable_list  go to state 266
    variable       go to state 267


State 182

  149 statement: block_body .

    $default  reduce using rule 149 (statement)


State 183

  138 block_body: block_body_header block_body_statements .

    $default  reduce using rule 138 (block_body)


State 184

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  140 block_body_statements: statement_list . CLOSE_S
  143 statement_list: statement_list . statement
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . message_call SEMI_COMA
  154          | . error SEMI_COMA
  155 asm: . AT_ASM STRING_VAL SEMI_COMA
  156 variable_declaration_block: . type variable_list SEMI_COMA
  157                           | . CONST type variable_list SEMI_COMA
  158                           | . enum
  165 return_statement: . RETURN expr SEMI_COMA
  166 loop_statement: . for_loop
  167               | . while_loop
  168               | . do_while
  169 do_while: . do_header statement while_loop_header SEMI_COMA
  170 do_header: . DO
  171 for_loop: . for_loop_header statement
  172 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  173                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR
  228 while_loop: . while_loop_header statement
  229 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  230 conditional_statement: . if_header statement
  231                      | . if_header statement ELSE statement
  232                      | . switch_header switch_body
  233 if_header: . IF OPEN_P logic_expr CLOSE_P
  234 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  254 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  255     | . ENUM IDENTIFIER SEMI_COMA
  260 try_catch: . TRY statement catch_list finally_statement
  261          | . TRY statement catch_list

    error       shift, and go to state 261
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 114
    CLOSE_S     shift, and go to state 268
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 116
    statement                   go to state 269
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 185

  144 statement_list: statement .

    $default  reduce using rule 144 (statement_list)


State 186

  152 statement: asm .

    $default  reduce using rule 152 (statement)


State 187

  148 statement: variable_declaration_block .

    $default  reduce using rule 148 (statement)


State 188

  150 statement: return_statement .

    $default  reduce using rule 150 (statement)


State 189

  145 statement: loop_statement .

    $default  reduce using rule 145 (statement)


State 190

  168 loop_statement: do_while .

    $default  reduce using rule 168 (loop_statement)


State 191

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . message_call SEMI_COMA
  154          | . error SEMI_COMA
  155 asm: . AT_ASM STRING_VAL SEMI_COMA
  156 variable_declaration_block: . type variable_list SEMI_COMA
  157                           | . CONST type variable_list SEMI_COMA
  158                           | . enum
  165 return_statement: . RETURN expr SEMI_COMA
  166 loop_statement: . for_loop
  167               | . while_loop
  168               | . do_while
  169 do_while: . do_header statement while_loop_header SEMI_COMA
  169         | do_header . statement while_loop_header SEMI_COMA
  170 do_header: . DO
  171 for_loop: . for_loop_header statement
  172 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  173                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR
  228 while_loop: . while_loop_header statement
  229 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  230 conditional_statement: . if_header statement
  231                      | . if_header statement ELSE statement
  232                      | . switch_header switch_body
  233 if_header: . IF OPEN_P logic_expr CLOSE_P
  234 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  254 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  255     | . ENUM IDENTIFIER SEMI_COMA
  260 try_catch: . TRY statement catch_list finally_statement
  261          | . TRY statement catch_list

    error       shift, and go to state 261
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 116
    statement                   go to state 270
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 192

  166 loop_statement: for_loop .

    $default  reduce using rule 166 (loop_statement)


State 193

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . message_call SEMI_COMA
  154          | . error SEMI_COMA
  155 asm: . AT_ASM STRING_VAL SEMI_COMA
  156 variable_declaration_block: . type variable_list SEMI_COMA
  157                           | . CONST type variable_list SEMI_COMA
  158                           | . enum
  165 return_statement: . RETURN expr SEMI_COMA
  166 loop_statement: . for_loop
  167               | . while_loop
  168               | . do_while
  169 do_while: . do_header statement while_loop_header SEMI_COMA
  170 do_header: . DO
  171 for_loop: . for_loop_header statement
  171         | for_loop_header . statement
  172 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  173                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR
  228 while_loop: . while_loop_header statement
  229 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  230 conditional_statement: . if_header statement
  231                      | . if_header statement ELSE statement
  232                      | . switch_header switch_body
  233 if_header: . IF OPEN_P logic_expr CLOSE_P
  234 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  254 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  255     | . ENUM IDENTIFIER SEMI_COMA
  260 try_catch: . TRY statement catch_list finally_statement
  261          | . TRY statement catch_list

    error       shift, and go to state 261
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 116
    statement                   go to state 271
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 194

  147 statement: assign_expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 272


State 195

  197 assign_expr: long_id . EQUAL simple_expr
  198 long_id: long_id . DOT IDENTIFIER

    EQUAL  shift, and go to state 273
    DOT    shift, and go to state 274


State 196

  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR
  217             | message_call2 . sender message CLOSE_ARR
  218 sender: . message_call
  219       | . IDENTIFIER

    IDENTIFIER  shift, and go to state 275
    OPEN_ARR    shift, and go to state 177

    message_call2  go to state 196
    message_call   go to state 276
    sender         go to state 277


State 197

  153 statement: message_call . SEMI_COMA
  199 long_id: message_call .  [EQUAL, DOT]

    SEMI_COMA  shift, and go to state 278

    $default  reduce using rule 199 (long_id)


State 198

  167 loop_statement: while_loop .

    $default  reduce using rule 167 (loop_statement)


State 199

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . message_call SEMI_COMA
  154          | . error SEMI_COMA
  155 asm: . AT_ASM STRING_VAL SEMI_COMA
  156 variable_declaration_block: . type variable_list SEMI_COMA
  157                           | . CONST type variable_list SEMI_COMA
  158                           | . enum
  165 return_statement: . RETURN expr SEMI_COMA
  166 loop_statement: . for_loop
  167               | . while_loop
  168               | . do_while
  169 do_while: . do_header statement while_loop_header SEMI_COMA
  170 do_header: . DO
  171 for_loop: . for_loop_header statement
  172 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  173                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR
  228 while_loop: . while_loop_header statement
  228           | while_loop_header . statement
  229 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  230 conditional_statement: . if_header statement
  231                      | . if_header statement ELSE statement
  232                      | . switch_header switch_body
  233 if_header: . IF OPEN_P logic_expr CLOSE_P
  234 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  254 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  255     | . ENUM IDENTIFIER SEMI_COMA
  260 try_catch: . TRY statement catch_list finally_statement
  261          | . TRY statement catch_list

    error       shift, and go to state 261
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 116
    statement                   go to state 279
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 200

  146 statement: conditional_statement .

    $default  reduce using rule 146 (statement)


State 201

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . message_call SEMI_COMA
  154          | . error SEMI_COMA
  155 asm: . AT_ASM STRING_VAL SEMI_COMA
  156 variable_declaration_block: . type variable_list SEMI_COMA
  157                           | . CONST type variable_list SEMI_COMA
  158                           | . enum
  165 return_statement: . RETURN expr SEMI_COMA
  166 loop_statement: . for_loop
  167               | . while_loop
  168               | . do_while
  169 do_while: . do_header statement while_loop_header SEMI_COMA
  170 do_header: . DO
  171 for_loop: . for_loop_header statement
  172 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  173                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR
  228 while_loop: . while_loop_header statement
  229 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  230 conditional_statement: . if_header statement
  230                      | if_header . statement
  231                      | . if_header statement ELSE statement
  231                      | if_header . statement ELSE statement
  232                      | . switch_header switch_body
  233 if_header: . IF OPEN_P logic_expr CLOSE_P
  234 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  254 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  255     | . ENUM IDENTIFIER SEMI_COMA
  260 try_catch: . TRY statement catch_list finally_statement
  261          | . TRY statement catch_list

    error       shift, and go to state 261
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 116
    statement                   go to state 280
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 202

  232 conditional_statement: switch_header . switch_body
  236 switch_body: . list_of_case default_case CLOSE_S
  237            | . list_of_case CLOSE_S
  238            | . default_case CLOSE_S
  239            | . CLOSE_S
  240 list_of_case: . list_of_case case_body
  241             | . case_body
  242 case_body: . CASE expr SEMI_COLUMN statement BREAK SEMI_COMA
  243          | . CASE expr SEMI_COLUMN statement
  244          | . CASE expr SEMI_COLUMN BREAK SEMI_COMA
  245 default_case: . DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  246             | . DEFAULT SEMI_COLUMN statement
  247             | . DEFAULT SEMI_COLUMN BREAK SEMI_COMA

    CLOSE_S  shift, and go to state 281
    CASE     shift, and go to state 282
    DEFAULT  shift, and go to state 283

    switch_body   go to state 284
    list_of_case  go to state 285
    case_body     go to state 286
    default_case  go to state 287


State 203

  158 variable_declaration_block: enum .

    $default  reduce using rule 158 (variable_declaration_block)


State 204

  151 statement: try_catch .

    $default  reduce using rule 151 (statement)


State 205

  250 protocol_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 250 (protocol_body)


State 206

  256 list_expr: . IDENTIFIER EQUAL expr COMMA list_expr
  257          | . IDENTIFIER EQUAL expr
  258          | . IDENTIFIER
  259          | . IDENTIFIER COMMA list_expr
  259          | IDENTIFIER COMMA . list_expr

    IDENTIFIER  shift, and go to state 124

    list_expr  go to state 288


State 207

  114 p_type: . OPEN_P type CLOSE_P
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR
  256 list_expr: IDENTIFIER EQUAL . expr COMMA list_expr
  257          | IDENTIFIER EQUAL . expr

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    expr           go to state 289
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 208

  254 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 290


State 209

   62 data_member: IDENTIFIER . array_tag
   63            | IDENTIFIER .  [SEMI_COMA, COMMA]
   65            | IDENTIFIER . error
   96 array_tag: . array_first_tag array_tag_list
  100 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  101                | . OPEN_ARR CLOSE_ARR

    error     shift, and go to state 216
    OPEN_ARR  shift, and go to state 213

    SEMI_COMA  reduce using rule 63 (data_member)
    COMMA      reduce using rule 63 (data_member)

    array_tag        go to state 291
    array_first_tag  go to state 215


State 210

   57 variable_declarationxx: CONST type ids_list . SEMI_COMA
   59 ids_list: ids_list . COMMA data_member

    SEMI_COMA  shift, and go to state 292
    COMMA      shift, and go to state 219


State 211

   88 enum_type: ENUM IDENTIFIER MULTI .

    $default  reduce using rule 88 (enum_type)


State 212

   86 struct_type: STRUCT IDENTIFIER MULTI .

    $default  reduce using rule 86 (struct_type)


State 213

  100 array_first_tag: OPEN_ARR . INT_VAL CLOSE_ARR
  101                | OPEN_ARR . CLOSE_ARR

    INT_VAL    shift, and go to state 293
    CLOSE_ARR  shift, and go to state 294


State 214

   64 data_member: error array_tag .

    $default  reduce using rule 64 (data_member)


State 215

   96 array_tag: array_first_tag . array_tag_list
   97 array_tag_list: . array_tag_list OPEN_ARR INT_VAL CLOSE_ARR
   98               | .
   99               | . array_tag_list OPEN_ARR error CLOSE_ARR

    $default  reduce using rule 98 (array_tag_list)

    array_tag_list  go to state 295


State 216

   65 data_member: IDENTIFIER error .

    $default  reduce using rule 65 (data_member)


State 217

   58 variable_declarationxx: type IDENTIFIER array_tag . error
   62 data_member: IDENTIFIER array_tag .  [SEMI_COMA, COMMA]

    error  shift, and go to state 296

    SEMI_COMA  reduce using rule 62 (data_member)
    COMMA      reduce using rule 62 (data_member)


State 218

   56 variable_declarationxx: type ids_list SEMI_COMA .

    $default  reduce using rule 56 (variable_declarationxx)


State 219

   59 ids_list: ids_list COMMA . data_member
   62 data_member: . IDENTIFIER array_tag
   63            | . IDENTIFIER
   64            | . error array_tag
   65            | . IDENTIFIER error

    error       shift, and go to state 297
    IDENTIFIER  shift, and go to state 209

    data_member  go to state 298


State 220

   34 ids_list_identifier: ids_list_identifier COMMA IDENTIFIER .

    $default  reduce using rule 34 (ids_list_identifier)


State 221

  122 parameter: p_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 299


State 222

  119 selector_decleration: IDENTIFIER SEMI_COLUMN parameter_list .  [error, IDENTIFIER, SEMI_COMA, OPEN_S]
  120 parameter_list: parameter_list . SEMI_COLUMN parameter

    SEMI_COLUMN  shift, and go to state 300

    $default  reduce using rule 119 (selector_decleration)


State 223

  121 parameter_list: parameter .

    $default  reduce using rule 121 (parameter_list)


State 224

  114 p_type: OPEN_P type CLOSE_P .

    $default  reduce using rule 114 (p_type)


State 225

  111 class_method_declaration: PLUS p_type method_selectors error .

    $default  reduce using rule 111 (class_method_declaration)


State 226

  110 class_method_declaration: PLUS p_type method_selectors SEMI_COMA .

    $default  reduce using rule 110 (class_method_declaration)


State 227

  113 instance_method_declaration: MINUS p_type method_selectors SEMI_COMA .

    $default  reduce using rule 113 (instance_method_declaration)


State 228

   24 class_interface_body: protocol_reference_list error interface_declaration_list AT_END .

    $default  reduce using rule 24 (class_interface_body)


State 229

   26 class_interface_body: protocol_reference_list instance_variables interface_declaration_list error .

    $default  reduce using rule 26 (class_interface_body)


State 230

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 15 (class_interface_body)


State 231

   76 struct: struct_header OPEN_S CLOSE_S error SEMI_COMA .

    $default  reduce using rule 76 (struct)


State 232

   80 entity: error COMMA .

    $default  reduce using rule 80 (entity)


State 233

   78 entity: . IDENTIFIER COMMA entity
   78       | IDENTIFIER COMMA . entity
   79       | . IDENTIFIER
   80       | . error COMMA

    error       shift, and go to state 301
    IDENTIFIER  shift, and go to state 159

    entity  go to state 302


State 234

   74 struct: struct_header OPEN_S CLOSE_S entity error . SEMI_COMA

    SEMI_COMA  shift, and go to state 303


State 235

   70 struct: struct_header OPEN_S CLOSE_S entity SEMI_COMA .

    $default  reduce using rule 70 (struct)


State 236

   77 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S error . SEMI_COMA
   80 entity: error . COMMA

    SEMI_COMA  shift, and go to state 304
    COMMA      shift, and go to state 232


State 237

   73 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA .

    $default  reduce using rule 73 (struct)


State 238

   71 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity . SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity . error SEMI_COMA

    error      shift, and go to state 305
    SEMI_COMA  shift, and go to state 306


State 239

  154 statement: error SEMI_COMA .

    $default  reduce using rule 154 (statement)


State 240

  142 block_body_statements: error CLOSE_S .

    $default  reduce using rule 142 (block_body_statements)


State 241

  157 variable_declaration_block: CONST type . variable_list SEMI_COMA
  159 variable_list: . variable_list COMMA variable
  160              | . variable
  161              | . variable_list error variable
  162 variable: . IDENTIFIER array_tag initializer
  163         | . IDENTIFIER main_initializer
  164         | . error array_tag initializer

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 265

    variable_list  go to state 307
    variable       go to state 267


State 242

  172 for_loop_header: FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  173                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  175                | FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  176                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  177                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  178                | FOR OPEN_P . SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | FOR OPEN_P . SEMI_COMA SEMI_COMA CLOSE_P
  180 for_initializer: . INT IDENTIFIER EQUAL expr
  181                | . IDENTIFIER EQUAL expr
  182                | . IDENTIFIER

    IDENTIFIER  shift, and go to state 308
    INT         shift, and go to state 309
    SEMI_COMA   shift, and go to state 310

    for_initializer  go to state 311


State 243

  114 p_type: . OPEN_P type CLOSE_P
  183 logic_expr: . expr LESS_THAN expr
  184           | . expr MORE_THAN expr
  185           | . expr LESS_OR_EQUAL expr
  186           | . expr MORE_OR_EQUAL expr
  187           | . expr EQUAL_EQUAL expr
  188           | . expr NOT_EQUAL expr
  189           | . NOT_EQUAL expr
  190           | . OPEN_P logic_expr CLOSE_P
  191           | . logic_expr AND_AND logic_expr
  192           | . logic_expr OR_OR logic_expr
  193           | . TRUE
  194           | . FALSE
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR
  229 while_loop_header: WHILE OPEN_P . logic_expr CLOSE_P

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 312
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    NOT_EQUAL    shift, and go to state 313
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 314
    FALSE        shift, and go to state 315
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    logic_expr     go to state 316
    expr           go to state 317
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 244

  114 p_type: . OPEN_P type CLOSE_P
  183 logic_expr: . expr LESS_THAN expr
  184           | . expr MORE_THAN expr
  185           | . expr LESS_OR_EQUAL expr
  186           | . expr MORE_OR_EQUAL expr
  187           | . expr EQUAL_EQUAL expr
  188           | . expr NOT_EQUAL expr
  189           | . NOT_EQUAL expr
  190           | . OPEN_P logic_expr CLOSE_P
  191           | . logic_expr AND_AND logic_expr
  192           | . logic_expr OR_OR logic_expr
  193           | . TRUE
  194           | . FALSE
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR
  233 if_header: IF OPEN_P . logic_expr CLOSE_P

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 312
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    NOT_EQUAL    shift, and go to state 313
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 314
    FALSE        shift, and go to state 315
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    logic_expr     go to state 318
    expr           go to state 317
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 245

  234 switch_header: SWITCH OPEN_P . IDENTIFIER CLOSE_P switch_body_block

    IDENTIFIER  shift, and go to state 319


State 246

   87 enum_type: ENUM IDENTIFIER .  [error, IDENTIFIER]
   88          | ENUM IDENTIFIER . MULTI
  254 enum: ENUM IDENTIFIER . OPEN_S list_expr CLOSE_S SEMI_COMA
  255     | ENUM IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 58
    OPEN_S     shift, and go to state 59
    MULTI      shift, and go to state 211

    $default  reduce using rule 87 (enum_type)


State 247

  200 long_id: IDENTIFIER .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, EQUAL, DIV, CLOSE_ARR, DOT]
  211 simple_expr: IDENTIFIER . DOUBLEPLUS
  212            | IDENTIFIER . DOUBLEMINUS

    DOUBLEPLUS   shift, and go to state 320
    DOUBLEMINUS  shift, and go to state 321

    $default  reduce using rule 200 (long_id)


State 248

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  114 p_type: . OPEN_P type CLOSE_P
  114       | OPEN_P . type CLOSE_P
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  210            | OPEN_P . simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 322
    NSSTRING     shift, and go to state 61
    FLOAT        shift, and go to state 62
    CHAR         shift, and go to state 63
    BOOL         shift, and go to state 64
    INT          shift, and go to state 65
    VOID         shift, and go to state 71
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    ENUM         shift, and go to state 72
    OPEN_ARR     shift, and go to state 177
    STRUCT       shift, and go to state 73
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    type           go to state 142
    struct_type    go to state 80
    enum_type      go to state 81
    simple_type    go to state 82
    complex_type   go to state 83
    p_type         go to state 255
    long_id        go to state 323
    simple_expr    go to state 324
    message_call2  go to state 196
    message_call   go to state 260


State 249

  201 simple_expr: STRING_VAL .

    $default  reduce using rule 201 (simple_expr)


State 250

  203 simple_expr: FLOAT_VAL .

    $default  reduce using rule 203 (simple_expr)


State 251

  204 simple_expr: CHAR_VAL .

    $default  reduce using rule 204 (simple_expr)


State 252

  202 simple_expr: INT_VAL .

    $default  reduce using rule 202 (simple_expr)


State 253

  213 simple_expr: DOUBLEPLUS . IDENTIFIER

    IDENTIFIER  shift, and go to state 325


State 254

  214 simple_expr: DOUBLEMINUS . IDENTIFIER

    IDENTIFIER  shift, and go to state 326


State 255

  114 p_type: . OPEN_P type CLOSE_P
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  215            | p_type . simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    long_id        go to state 323
    simple_expr    go to state 327
    message_call2  go to state 196
    message_call   go to state 260


State 256

  165 return_statement: RETURN expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 328


State 257

  195 expr: assign_expr .

    $default  reduce using rule 195 (expr)


State 258

  197 assign_expr: long_id . EQUAL simple_expr
  198 long_id: long_id . DOT IDENTIFIER
  205 simple_expr: long_id .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, DIV, CLOSE_ARR]

    EQUAL  shift, and go to state 273
    DOT    shift, and go to state 274

    $default  reduce using rule 205 (simple_expr)


State 259

  196 expr: simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL, CLOSE_ARR]
  206 simple_expr: simple_expr . PLUS simple_expr
  207            | simple_expr . MINUS simple_expr
  208            | simple_expr . MULTI simple_expr
  209            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 329
    MINUS  shift, and go to state 330
    MULTI  shift, and go to state 331
    DIV    shift, and go to state 332

    $default  reduce using rule 196 (expr)


State 260

  199 long_id: message_call .

    $default  reduce using rule 199 (long_id)


State 261

  154 statement: error . SEMI_COMA

    SEMI_COMA  shift, and go to state 239


State 262

  260 try_catch: TRY statement . catch_list finally_statement
  261          | TRY statement . catch_list
  262 catch_list: . CATCH OPEN_S type IDENTIFIER CLOSE_S statement
  263           | . catch_list CATCH OPEN_S type IDENTIFIER CLOSE_S statement

    CATCH  shift, and go to state 333

    catch_list  go to state 334


State 263

  155 asm: AT_ASM STRING_VAL . SEMI_COMA

    SEMI_COMA  shift, and go to state 335


State 264

   96 array_tag: . array_first_tag array_tag_list
  100 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  101                | . OPEN_ARR CLOSE_ARR
  164 variable: error . array_tag initializer

    OPEN_ARR  shift, and go to state 213

    array_tag        go to state 336
    array_first_tag  go to state 215


State 265

   96 array_tag: . array_first_tag array_tag_list
  100 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  101                | . OPEN_ARR CLOSE_ARR
  104 main_initializer: . EQUAL expr
  105                 | .  [error, SEMI_COMA, COMMA]
  162 variable: IDENTIFIER . array_tag initializer
  163         | IDENTIFIER . main_initializer

    EQUAL     shift, and go to state 337
    OPEN_ARR  shift, and go to state 213

    $default  reduce using rule 105 (main_initializer)

    array_tag         go to state 338
    array_first_tag   go to state 215
    main_initializer  go to state 339


State 266

  156 variable_declaration_block: type variable_list . SEMI_COMA
  159 variable_list: variable_list . COMMA variable
  161              | variable_list . error variable

    error      shift, and go to state 340
    SEMI_COMA  shift, and go to state 341
    COMMA      shift, and go to state 342


State 267

  160 variable_list: variable .

    $default  reduce using rule 160 (variable_list)


State 268

  140 block_body_statements: statement_list CLOSE_S .

    $default  reduce using rule 140 (block_body_statements)


State 269

  143 statement_list: statement_list statement .

    $default  reduce using rule 143 (statement_list)


State 270

  169 do_while: do_header statement . while_loop_header SEMI_COMA
  229 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P

    WHILE  shift, and go to state 172

    while_loop_header  go to state 343


State 271

  171 for_loop: for_loop_header statement .

    $default  reduce using rule 171 (for_loop)


State 272

  147 statement: assign_expr SEMI_COMA .

    $default  reduce using rule 147 (statement)


State 273

  114 p_type: . OPEN_P type CLOSE_P
  197 assign_expr: long_id EQUAL . simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    long_id        go to state 323
    simple_expr    go to state 344
    message_call2  go to state 196
    message_call   go to state 260


State 274

  198 long_id: long_id DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 345


State 275

  219 sender: IDENTIFIER .

    $default  reduce using rule 219 (sender)


State 276

  218 sender: message_call .

    $default  reduce using rule 218 (sender)


State 277

  217 message_call: message_call2 sender . message CLOSE_ARR
  220 message: . IDENTIFIER
  221        | . message_selectors_list
  222 message_selectors_list: . message_selectors_list message_selector
  223                       | . message_selector
  224 message_selector: . IDENTIFIER SEMI_COLUMN argument_list

    IDENTIFIER  shift, and go to state 346

    message                 go to state 347
    message_selectors_list  go to state 348
    message_selector        go to state 349


State 278

  153 statement: message_call SEMI_COMA .

    $default  reduce using rule 153 (statement)


State 279

  228 while_loop: while_loop_header statement .

    $default  reduce using rule 228 (while_loop)


State 280

  230 conditional_statement: if_header statement .  [error, IDENTIFIER, NSSTRING, FLOAT, CHAR, BOOL, INT, OPEN_S, CLOSE_S, CONST, VOID, FOR, WHILE, IF, DO, SWITCH, CASE, DEFAULT, BREAK, ENUM, OPEN_ARR, RETURN, STRUCT, TRY, CATCH, FINALLY, AT_ASM]
  231                      | if_header statement . ELSE statement

    ELSE  shift, and go to state 350

    $default  reduce using rule 230 (conditional_statement)

    Conflict between rule 230 and token ELSE resolved as shift (if_h < ELSE).


State 281

  239 switch_body: CLOSE_S .

    $default  reduce using rule 239 (switch_body)


State 282

  114 p_type: . OPEN_P type CLOSE_P
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR
  242 case_body: CASE . expr SEMI_COLUMN statement BREAK SEMI_COMA
  243          | CASE . expr SEMI_COLUMN statement
  244          | CASE . expr SEMI_COLUMN BREAK SEMI_COMA

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    expr           go to state 351
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 283

  245 default_case: DEFAULT . SEMI_COLUMN statement BREAK SEMI_COMA
  246             | DEFAULT . SEMI_COLUMN statement
  247             | DEFAULT . SEMI_COLUMN BREAK SEMI_COMA

    SEMI_COLUMN  shift, and go to state 352


State 284

  232 conditional_statement: switch_header switch_body .

    $default  reduce using rule 232 (conditional_statement)


State 285

  236 switch_body: list_of_case . default_case CLOSE_S
  237            | list_of_case . CLOSE_S
  240 list_of_case: list_of_case . case_body
  242 case_body: . CASE expr SEMI_COLUMN statement BREAK SEMI_COMA
  243          | . CASE expr SEMI_COLUMN statement
  244          | . CASE expr SEMI_COLUMN BREAK SEMI_COMA
  245 default_case: . DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  246             | . DEFAULT SEMI_COLUMN statement
  247             | . DEFAULT SEMI_COLUMN BREAK SEMI_COMA

    CLOSE_S  shift, and go to state 353
    CASE     shift, and go to state 282
    DEFAULT  shift, and go to state 283

    case_body     go to state 354
    default_case  go to state 355


State 286

  241 list_of_case: case_body .

    $default  reduce using rule 241 (list_of_case)


State 287

  238 switch_body: default_case . CLOSE_S

    CLOSE_S  shift, and go to state 356


State 288

  259 list_expr: IDENTIFIER COMMA list_expr .

    $default  reduce using rule 259 (list_expr)


State 289

  256 list_expr: IDENTIFIER EQUAL expr . COMMA list_expr
  257          | IDENTIFIER EQUAL expr .  [CLOSE_S]

    COMMA  shift, and go to state 357

    $default  reduce using rule 257 (list_expr)


State 290

  254 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA .

    $default  reduce using rule 254 (enum)


State 291

   62 data_member: IDENTIFIER array_tag .

    $default  reduce using rule 62 (data_member)


State 292

   57 variable_declarationxx: CONST type ids_list SEMI_COMA .

    $default  reduce using rule 57 (variable_declarationxx)


State 293

  100 array_first_tag: OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 358


State 294

  101 array_first_tag: OPEN_ARR CLOSE_ARR .

    $default  reduce using rule 101 (array_first_tag)


State 295

   96 array_tag: array_first_tag array_tag_list .  [error, SEMI_COMA, COMMA, EQUAL]
   97 array_tag_list: array_tag_list . OPEN_ARR INT_VAL CLOSE_ARR
   99               | array_tag_list . OPEN_ARR error CLOSE_ARR

    OPEN_ARR  shift, and go to state 359

    $default  reduce using rule 96 (array_tag)


State 296

   58 variable_declarationxx: type IDENTIFIER array_tag error .

    $default  reduce using rule 58 (variable_declarationxx)


State 297

   64 data_member: error . array_tag
   96 array_tag: . array_first_tag array_tag_list
  100 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  101                | . OPEN_ARR CLOSE_ARR

    OPEN_ARR  shift, and go to state 213

    array_tag        go to state 214
    array_first_tag  go to state 215


State 298

   59 ids_list: ids_list COMMA data_member .

    $default  reduce using rule 59 (ids_list)


State 299

  122 parameter: p_type IDENTIFIER .

    $default  reduce using rule 122 (parameter)


State 300

  114 p_type: . OPEN_P type CLOSE_P
  120 parameter_list: parameter_list SEMI_COLUMN . parameter
  122 parameter: . p_type IDENTIFIER

    OPEN_P  shift, and go to state 87

    p_type     go to state 221
    parameter  go to state 360


State 301

   80 entity: error . COMMA

    COMMA  shift, and go to state 232


State 302

   78 entity: IDENTIFIER COMMA entity .

    $default  reduce using rule 78 (entity)


State 303

   74 struct: struct_header OPEN_S CLOSE_S entity error SEMI_COMA .

    $default  reduce using rule 74 (struct)


State 304

   77 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA .

    $default  reduce using rule 77 (struct)


State 305

   75 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity error . SEMI_COMA

    SEMI_COMA  shift, and go to state 361


State 306

   71 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA .

    $default  reduce using rule 71 (struct)


State 307

  157 variable_declaration_block: CONST type variable_list . SEMI_COMA
  159 variable_list: variable_list . COMMA variable
  161              | variable_list . error variable

    error      shift, and go to state 340
    SEMI_COMA  shift, and go to state 362
    COMMA      shift, and go to state 342


State 308

  181 for_initializer: IDENTIFIER . EQUAL expr
  182                | IDENTIFIER .  [SEMI_COMA]

    EQUAL  shift, and go to state 363

    $default  reduce using rule 182 (for_initializer)


State 309

  180 for_initializer: INT . IDENTIFIER EQUAL expr

    IDENTIFIER  shift, and go to state 364


State 310

  114 p_type: . OPEN_P type CLOSE_P
  173 for_loop_header: FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P
  177                | FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA CLOSE_P
  178                | FOR OPEN_P SEMI_COMA . SEMI_COMA expr CLOSE_P
  179                | FOR OPEN_P SEMI_COMA . SEMI_COMA CLOSE_P
  183 logic_expr: . expr LESS_THAN expr
  184           | . expr MORE_THAN expr
  185           | . expr LESS_OR_EQUAL expr
  186           | . expr MORE_OR_EQUAL expr
  187           | . expr EQUAL_EQUAL expr
  188           | . expr NOT_EQUAL expr
  189           | . NOT_EQUAL expr
  190           | . OPEN_P logic_expr CLOSE_P
  191           | . logic_expr AND_AND logic_expr
  192           | . logic_expr OR_OR logic_expr
  193           | . TRUE
  194           | . FALSE
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    SEMI_COMA    shift, and go to state 365
    OPEN_P       shift, and go to state 312
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    NOT_EQUAL    shift, and go to state 313
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 314
    FALSE        shift, and go to state 315
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    logic_expr     go to state 366
    expr           go to state 317
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 311

  172 for_loop_header: FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA expr CLOSE_P
  175                | FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  176                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA CLOSE_P

    SEMI_COMA  shift, and go to state 367


State 312

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  114 p_type: . OPEN_P type CLOSE_P
  114       | OPEN_P . type CLOSE_P
  183 logic_expr: . expr LESS_THAN expr
  184           | . expr MORE_THAN expr
  185           | . expr LESS_OR_EQUAL expr
  186           | . expr MORE_OR_EQUAL expr
  187           | . expr EQUAL_EQUAL expr
  188           | . expr NOT_EQUAL expr
  189           | . NOT_EQUAL expr
  190           | . OPEN_P logic_expr CLOSE_P
  190           | OPEN_P . logic_expr CLOSE_P
  191           | . logic_expr AND_AND logic_expr
  192           | . logic_expr OR_OR logic_expr
  193           | . TRUE
  194           | . FALSE
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  210            | OPEN_P . simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 322
    NSSTRING     shift, and go to state 61
    FLOAT        shift, and go to state 62
    CHAR         shift, and go to state 63
    BOOL         shift, and go to state 64
    INT          shift, and go to state 65
    VOID         shift, and go to state 71
    OPEN_P       shift, and go to state 312
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    NOT_EQUAL    shift, and go to state 313
    ENUM         shift, and go to state 72
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 314
    FALSE        shift, and go to state 315
    STRUCT       shift, and go to state 73
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    type           go to state 142
    struct_type    go to state 80
    enum_type      go to state 81
    simple_type    go to state 82
    complex_type   go to state 83
    p_type         go to state 255
    logic_expr     go to state 368
    expr           go to state 317
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 369
    message_call2  go to state 196
    message_call   go to state 260


State 313

  114 p_type: . OPEN_P type CLOSE_P
  189 logic_expr: NOT_EQUAL . expr
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    expr           go to state 370
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 314

  193 logic_expr: TRUE .

    $default  reduce using rule 193 (logic_expr)


State 315

  194 logic_expr: FALSE .

    $default  reduce using rule 194 (logic_expr)


State 316

  191 logic_expr: logic_expr . AND_AND logic_expr
  192           | logic_expr . OR_OR logic_expr
  229 while_loop_header: WHILE OPEN_P logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 371
    AND_AND  shift, and go to state 372
    OR_OR    shift, and go to state 373


State 317

  183 logic_expr: expr . LESS_THAN expr
  184           | expr . MORE_THAN expr
  185           | expr . LESS_OR_EQUAL expr
  186           | expr . MORE_OR_EQUAL expr
  187           | expr . EQUAL_EQUAL expr
  188           | expr . NOT_EQUAL expr

    LESS_THAN      shift, and go to state 374
    MORE_THAN      shift, and go to state 375
    LESS_OR_EQUAL  shift, and go to state 376
    MORE_OR_EQUAL  shift, and go to state 377
    EQUAL_EQUAL    shift, and go to state 378
    NOT_EQUAL      shift, and go to state 379


State 318

  191 logic_expr: logic_expr . AND_AND logic_expr
  192           | logic_expr . OR_OR logic_expr
  233 if_header: IF OPEN_P logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 380
    AND_AND  shift, and go to state 372
    OR_OR    shift, and go to state 373


State 319

  234 switch_header: SWITCH OPEN_P IDENTIFIER . CLOSE_P switch_body_block

    CLOSE_P  shift, and go to state 381


State 320

  211 simple_expr: IDENTIFIER DOUBLEPLUS .

    $default  reduce using rule 211 (simple_expr)


State 321

  212 simple_expr: IDENTIFIER DOUBLEMINUS .

    $default  reduce using rule 212 (simple_expr)


State 322

   95 complex_type: IDENTIFIER . MULTI
  200 long_id: IDENTIFIER .  [LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, EQUAL, DIV, DOT]
  211 simple_expr: IDENTIFIER . DOUBLEPLUS
  212            | IDENTIFIER . DOUBLEMINUS

    DOUBLEPLUS   shift, and go to state 320
    DOUBLEMINUS  shift, and go to state 321

    $default  reduce using rule 200 (long_id)

    Conflict between rule 200 and token MULTI resolved as reduce (MULTI < long_id_prec).


State 323

  198 long_id: long_id . DOT IDENTIFIER
  205 simple_expr: long_id .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, DIV, CLOSE_ARR]

    DOT  shift, and go to state 274

    $default  reduce using rule 205 (simple_expr)


State 324

  206 simple_expr: simple_expr . PLUS simple_expr
  207            | simple_expr . MINUS simple_expr
  208            | simple_expr . MULTI simple_expr
  209            | simple_expr . DIV simple_expr
  210            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 329
    MINUS    shift, and go to state 330
    CLOSE_P  shift, and go to state 382
    MULTI    shift, and go to state 331
    DIV      shift, and go to state 332


State 325

  213 simple_expr: DOUBLEPLUS IDENTIFIER .

    $default  reduce using rule 213 (simple_expr)


State 326

  214 simple_expr: DOUBLEMINUS IDENTIFIER .

    $default  reduce using rule 214 (simple_expr)


State 327

  206 simple_expr: simple_expr . PLUS simple_expr
  207            | simple_expr . MINUS simple_expr
  208            | simple_expr . MULTI simple_expr
  209            | simple_expr . DIV simple_expr
  215            | p_type simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL, CLOSE_ARR]

    PLUS   shift, and go to state 329
    MINUS  shift, and go to state 330
    MULTI  shift, and go to state 331
    DIV    shift, and go to state 332

    $default  reduce using rule 215 (simple_expr)

    Conflict between rule 215 and token PLUS resolved as shift (p_type_expr_prec < PLUS).
    Conflict between rule 215 and token MINUS resolved as shift (p_type_expr_prec < MINUS).
    Conflict between rule 215 and token MULTI resolved as shift (p_type_expr_prec < MULTI).
    Conflict between rule 215 and token DIV resolved as shift (p_type_expr_prec < DIV).


State 328

  165 return_statement: RETURN expr SEMI_COMA .

    $default  reduce using rule 165 (return_statement)


State 329

  114 p_type: . OPEN_P type CLOSE_P
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  206            | simple_expr PLUS . simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    long_id        go to state 323
    simple_expr    go to state 383
    message_call2  go to state 196
    message_call   go to state 260


State 330

  114 p_type: . OPEN_P type CLOSE_P
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  207            | simple_expr MINUS . simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    long_id        go to state 323
    simple_expr    go to state 384
    message_call2  go to state 196
    message_call   go to state 260


State 331

  114 p_type: . OPEN_P type CLOSE_P
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  208            | simple_expr MULTI . simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    long_id        go to state 323
    simple_expr    go to state 385
    message_call2  go to state 196
    message_call   go to state 260


State 332

  114 p_type: . OPEN_P type CLOSE_P
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  209            | simple_expr DIV . simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    long_id        go to state 323
    simple_expr    go to state 386
    message_call2  go to state 196
    message_call   go to state 260


State 333

  262 catch_list: CATCH . OPEN_S type IDENTIFIER CLOSE_S statement

    OPEN_S  shift, and go to state 387


State 334

  260 try_catch: TRY statement catch_list . finally_statement
  261          | TRY statement catch_list .  [error, IDENTIFIER, NSSTRING, FLOAT, CHAR, BOOL, INT, OPEN_S, CLOSE_S, CONST, VOID, FOR, WHILE, IF, DO, SWITCH, CASE, DEFAULT, BREAK, ENUM, OPEN_ARR, RETURN, ELSE, STRUCT, TRY, AT_ASM]
  263 catch_list: catch_list . CATCH OPEN_S type IDENTIFIER CLOSE_S statement
  264 finally_statement: . FINALLY statement

    CATCH    shift, and go to state 388
    FINALLY  shift, and go to state 389

    $default  reduce using rule 261 (try_catch)

    finally_statement  go to state 390

    Conflict between rule 261 and token CATCH resolved as shift (try_prec < CATCH).
    Conflict between rule 261 and token FINALLY resolved as shift (try_prec < FINALLY).


State 335

  155 asm: AT_ASM STRING_VAL SEMI_COMA .

    $default  reduce using rule 155 (asm)


State 336

  102 initializer: . EQUAL array_body
  103            | .  [error, SEMI_COMA, COMMA]
  164 variable: error array_tag . initializer

    EQUAL  shift, and go to state 391

    $default  reduce using rule 103 (initializer)

    initializer  go to state 392


State 337

  104 main_initializer: EQUAL . expr
  114 p_type: . OPEN_P type CLOSE_P
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    expr           go to state 393
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 338

  102 initializer: . EQUAL array_body
  103            | .  [error, SEMI_COMA, COMMA]
  162 variable: IDENTIFIER array_tag . initializer

    EQUAL  shift, and go to state 391

    $default  reduce using rule 103 (initializer)

    initializer  go to state 394


State 339

  163 variable: IDENTIFIER main_initializer .

    $default  reduce using rule 163 (variable)


State 340

  161 variable_list: variable_list error . variable
  162 variable: . IDENTIFIER array_tag initializer
  163         | . IDENTIFIER main_initializer
  164         | . error array_tag initializer

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 265

    variable  go to state 395


State 341

  156 variable_declaration_block: type variable_list SEMI_COMA .

    $default  reduce using rule 156 (variable_declaration_block)


State 342

  159 variable_list: variable_list COMMA . variable
  162 variable: . IDENTIFIER array_tag initializer
  163         | . IDENTIFIER main_initializer
  164         | . error array_tag initializer

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 265

    variable  go to state 396


State 343

  169 do_while: do_header statement while_loop_header . SEMI_COMA

    SEMI_COMA  shift, and go to state 397


State 344

  197 assign_expr: long_id EQUAL simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL, CLOSE_ARR]
  206 simple_expr: simple_expr . PLUS simple_expr
  207            | simple_expr . MINUS simple_expr
  208            | simple_expr . MULTI simple_expr
  209            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 329
    MINUS  shift, and go to state 330
    MULTI  shift, and go to state 331
    DIV    shift, and go to state 332

    $default  reduce using rule 197 (assign_expr)


State 345

  198 long_id: long_id DOT IDENTIFIER .

    $default  reduce using rule 198 (long_id)


State 346

  220 message: IDENTIFIER .  [CLOSE_ARR]
  224 message_selector: IDENTIFIER . SEMI_COLUMN argument_list

    SEMI_COLUMN  shift, and go to state 398

    $default  reduce using rule 220 (message)


State 347

  217 message_call: message_call2 sender message . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 399


State 348

  221 message: message_selectors_list .  [CLOSE_ARR]
  222 message_selectors_list: message_selectors_list . message_selector
  224 message_selector: . IDENTIFIER SEMI_COLUMN argument_list

    IDENTIFIER  shift, and go to state 400

    $default  reduce using rule 221 (message)

    message_selector  go to state 401


State 349

  223 message_selectors_list: message_selector .

    $default  reduce using rule 223 (message_selectors_list)


State 350

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . message_call SEMI_COMA
  154          | . error SEMI_COMA
  155 asm: . AT_ASM STRING_VAL SEMI_COMA
  156 variable_declaration_block: . type variable_list SEMI_COMA
  157                           | . CONST type variable_list SEMI_COMA
  158                           | . enum
  165 return_statement: . RETURN expr SEMI_COMA
  166 loop_statement: . for_loop
  167               | . while_loop
  168               | . do_while
  169 do_while: . do_header statement while_loop_header SEMI_COMA
  170 do_header: . DO
  171 for_loop: . for_loop_header statement
  172 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  173                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR
  228 while_loop: . while_loop_header statement
  229 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  230 conditional_statement: . if_header statement
  231                      | . if_header statement ELSE statement
  231                      | if_header statement ELSE . statement
  232                      | . switch_header switch_body
  233 if_header: . IF OPEN_P logic_expr CLOSE_P
  234 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  254 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  255     | . ENUM IDENTIFIER SEMI_COMA
  260 try_catch: . TRY statement catch_list finally_statement
  261          | . TRY statement catch_list

    error       shift, and go to state 261
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 116
    statement                   go to state 402
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 351

  242 case_body: CASE expr . SEMI_COLUMN statement BREAK SEMI_COMA
  243          | CASE expr . SEMI_COLUMN statement
  244          | CASE expr . SEMI_COLUMN BREAK SEMI_COMA

    SEMI_COLUMN  shift, and go to state 403


State 352

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . message_call SEMI_COMA
  154          | . error SEMI_COMA
  155 asm: . AT_ASM STRING_VAL SEMI_COMA
  156 variable_declaration_block: . type variable_list SEMI_COMA
  157                           | . CONST type variable_list SEMI_COMA
  158                           | . enum
  165 return_statement: . RETURN expr SEMI_COMA
  166 loop_statement: . for_loop
  167               | . while_loop
  168               | . do_while
  169 do_while: . do_header statement while_loop_header SEMI_COMA
  170 do_header: . DO
  171 for_loop: . for_loop_header statement
  172 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  173                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR
  228 while_loop: . while_loop_header statement
  229 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  230 conditional_statement: . if_header statement
  231                      | . if_header statement ELSE statement
  232                      | . switch_header switch_body
  233 if_header: . IF OPEN_P logic_expr CLOSE_P
  234 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  245 default_case: DEFAULT SEMI_COLUMN . statement BREAK SEMI_COMA
  246             | DEFAULT SEMI_COLUMN . statement
  247             | DEFAULT SEMI_COLUMN . BREAK SEMI_COMA
  254 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  255     | . ENUM IDENTIFIER SEMI_COMA
  260 try_catch: . TRY statement catch_list finally_statement
  261          | . TRY statement catch_list

    error       shift, and go to state 261
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    BREAK       shift, and go to state 404
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 116
    statement                   go to state 405
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 353

  237 switch_body: list_of_case CLOSE_S .

    $default  reduce using rule 237 (switch_body)


State 354

  240 list_of_case: list_of_case case_body .

    $default  reduce using rule 240 (list_of_case)


State 355

  236 switch_body: list_of_case default_case . CLOSE_S

    CLOSE_S  shift, and go to state 406


State 356

  238 switch_body: default_case CLOSE_S .

    $default  reduce using rule 238 (switch_body)


State 357

  256 list_expr: . IDENTIFIER EQUAL expr COMMA list_expr
  256          | IDENTIFIER EQUAL expr COMMA . list_expr
  257          | . IDENTIFIER EQUAL expr
  258          | . IDENTIFIER
  259          | . IDENTIFIER COMMA list_expr

    IDENTIFIER  shift, and go to state 124

    list_expr  go to state 407


State 358

  100 array_first_tag: OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 100 (array_first_tag)


State 359

   97 array_tag_list: array_tag_list OPEN_ARR . INT_VAL CLOSE_ARR
   99               | array_tag_list OPEN_ARR . error CLOSE_ARR

    error    shift, and go to state 408
    INT_VAL  shift, and go to state 409


State 360

  120 parameter_list: parameter_list SEMI_COLUMN parameter .

    $default  reduce using rule 120 (parameter_list)


State 361

   75 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA .

    $default  reduce using rule 75 (struct)


State 362

  157 variable_declaration_block: CONST type variable_list SEMI_COMA .

    $default  reduce using rule 157 (variable_declaration_block)


State 363

  114 p_type: . OPEN_P type CLOSE_P
  181 for_initializer: IDENTIFIER EQUAL . expr
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    expr           go to state 410
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 364

  180 for_initializer: INT IDENTIFIER . EQUAL expr

    EQUAL  shift, and go to state 411


State 365

  114 p_type: . OPEN_P type CLOSE_P
  178 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA . expr CLOSE_P
  179                | FOR OPEN_P SEMI_COMA SEMI_COMA . CLOSE_P
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    CLOSE_P      shift, and go to state 412
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    expr           go to state 413
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 366

  173 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  177                | FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA CLOSE_P
  191 logic_expr: logic_expr . AND_AND logic_expr
  192           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 414
    AND_AND    shift, and go to state 372
    OR_OR      shift, and go to state 373


State 367

  114 p_type: . OPEN_P type CLOSE_P
  172 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P
  174                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA expr CLOSE_P
  175                | FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA CLOSE_P
  176                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA CLOSE_P
  183 logic_expr: . expr LESS_THAN expr
  184           | . expr MORE_THAN expr
  185           | . expr LESS_OR_EQUAL expr
  186           | . expr MORE_OR_EQUAL expr
  187           | . expr EQUAL_EQUAL expr
  188           | . expr NOT_EQUAL expr
  189           | . NOT_EQUAL expr
  190           | . OPEN_P logic_expr CLOSE_P
  191           | . logic_expr AND_AND logic_expr
  192           | . logic_expr OR_OR logic_expr
  193           | . TRUE
  194           | . FALSE
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    SEMI_COMA    shift, and go to state 415
    OPEN_P       shift, and go to state 312
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    NOT_EQUAL    shift, and go to state 313
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 314
    FALSE        shift, and go to state 315
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    logic_expr     go to state 416
    expr           go to state 317
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 368

  190 logic_expr: OPEN_P logic_expr . CLOSE_P
  191           | logic_expr . AND_AND logic_expr
  192           | logic_expr . OR_OR logic_expr

    CLOSE_P  shift, and go to state 417
    AND_AND  shift, and go to state 372
    OR_OR    shift, and go to state 373


State 369

  196 expr: simple_expr .  [LESS_THAN, MORE_THAN, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL]
  206 simple_expr: simple_expr . PLUS simple_expr
  207            | simple_expr . MINUS simple_expr
  208            | simple_expr . MULTI simple_expr
  209            | simple_expr . DIV simple_expr
  210            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 329
    MINUS    shift, and go to state 330
    CLOSE_P  shift, and go to state 382
    MULTI    shift, and go to state 331
    DIV      shift, and go to state 332

    $default  reduce using rule 196 (expr)


State 370

  189 logic_expr: NOT_EQUAL expr .

    $default  reduce using rule 189 (logic_expr)


State 371

  229 while_loop_header: WHILE OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 229 (while_loop_header)


State 372

  114 p_type: . OPEN_P type CLOSE_P
  183 logic_expr: . expr LESS_THAN expr
  184           | . expr MORE_THAN expr
  185           | . expr LESS_OR_EQUAL expr
  186           | . expr MORE_OR_EQUAL expr
  187           | . expr EQUAL_EQUAL expr
  188           | . expr NOT_EQUAL expr
  189           | . NOT_EQUAL expr
  190           | . OPEN_P logic_expr CLOSE_P
  191           | . logic_expr AND_AND logic_expr
  191           | logic_expr AND_AND . logic_expr
  192           | . logic_expr OR_OR logic_expr
  193           | . TRUE
  194           | . FALSE
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 312
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    NOT_EQUAL    shift, and go to state 313
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 314
    FALSE        shift, and go to state 315
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    logic_expr     go to state 418
    expr           go to state 317
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 373

  114 p_type: . OPEN_P type CLOSE_P
  183 logic_expr: . expr LESS_THAN expr
  184           | . expr MORE_THAN expr
  185           | . expr LESS_OR_EQUAL expr
  186           | . expr MORE_OR_EQUAL expr
  187           | . expr EQUAL_EQUAL expr
  188           | . expr NOT_EQUAL expr
  189           | . NOT_EQUAL expr
  190           | . OPEN_P logic_expr CLOSE_P
  191           | . logic_expr AND_AND logic_expr
  192           | . logic_expr OR_OR logic_expr
  192           | logic_expr OR_OR . logic_expr
  193           | . TRUE
  194           | . FALSE
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 312
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    NOT_EQUAL    shift, and go to state 313
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 314
    FALSE        shift, and go to state 315
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    logic_expr     go to state 419
    expr           go to state 317
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 374

  114 p_type: . OPEN_P type CLOSE_P
  183 logic_expr: expr LESS_THAN . expr
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    expr           go to state 420
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 375

  114 p_type: . OPEN_P type CLOSE_P
  184 logic_expr: expr MORE_THAN . expr
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    expr           go to state 421
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 376

  114 p_type: . OPEN_P type CLOSE_P
  185 logic_expr: expr LESS_OR_EQUAL . expr
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    expr           go to state 422
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 377

  114 p_type: . OPEN_P type CLOSE_P
  186 logic_expr: expr MORE_OR_EQUAL . expr
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    expr           go to state 423
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 378

  114 p_type: . OPEN_P type CLOSE_P
  187 logic_expr: expr EQUAL_EQUAL . expr
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    expr           go to state 424
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 379

  114 p_type: . OPEN_P type CLOSE_P
  188 logic_expr: expr NOT_EQUAL . expr
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    expr           go to state 425
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 380

  233 if_header: IF OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 233 (if_header)


State 381

  234 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P . switch_body_block
  235 switch_body_block: . OPEN_S

    OPEN_S  shift, and go to state 426

    switch_body_block  go to state 427


State 382

  210 simple_expr: OPEN_P simple_expr CLOSE_P .

    $default  reduce using rule 210 (simple_expr)


State 383

  206 simple_expr: simple_expr . PLUS simple_expr
  206            | simple_expr PLUS simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL, CLOSE_ARR]
  207            | simple_expr . MINUS simple_expr
  208            | simple_expr . MULTI simple_expr
  209            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 331
    DIV    shift, and go to state 332

    $default  reduce using rule 206 (simple_expr)

    Conflict between rule 206 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 206 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 206 and token MULTI resolved as shift (PLUS < MULTI).
    Conflict between rule 206 and token DIV resolved as shift (PLUS < DIV).


State 384

  206 simple_expr: simple_expr . PLUS simple_expr
  207            | simple_expr . MINUS simple_expr
  207            | simple_expr MINUS simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL, CLOSE_ARR]
  208            | simple_expr . MULTI simple_expr
  209            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 331
    DIV    shift, and go to state 332

    $default  reduce using rule 207 (simple_expr)

    Conflict between rule 207 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 207 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 207 and token MULTI resolved as shift (MINUS < MULTI).
    Conflict between rule 207 and token DIV resolved as shift (MINUS < DIV).


State 385

  206 simple_expr: simple_expr . PLUS simple_expr
  207            | simple_expr . MINUS simple_expr
  208            | simple_expr . MULTI simple_expr
  208            | simple_expr MULTI simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, DIV, CLOSE_ARR]
  209            | simple_expr . DIV simple_expr

    $default  reduce using rule 208 (simple_expr)

    Conflict between rule 208 and token PLUS resolved as reduce (PLUS < MULTI).
    Conflict between rule 208 and token MINUS resolved as reduce (MINUS < MULTI).
    Conflict between rule 208 and token MULTI resolved as reduce (%left MULTI).
    Conflict between rule 208 and token DIV resolved as reduce (%left DIV).


State 386

  206 simple_expr: simple_expr . PLUS simple_expr
  207            | simple_expr . MINUS simple_expr
  208            | simple_expr . MULTI simple_expr
  209            | simple_expr . DIV simple_expr
  209            | simple_expr DIV simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, DIV, CLOSE_ARR]

    $default  reduce using rule 209 (simple_expr)

    Conflict between rule 209 and token PLUS resolved as reduce (PLUS < DIV).
    Conflict between rule 209 and token MINUS resolved as reduce (MINUS < DIV).
    Conflict between rule 209 and token MULTI resolved as reduce (%left MULTI).
    Conflict between rule 209 and token DIV resolved as reduce (%left DIV).


State 387

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  262 catch_list: CATCH OPEN_S . type IDENTIFIER CLOSE_S statement

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    type          go to state 428
    struct_type   go to state 80
    enum_type     go to state 81
    simple_type   go to state 82
    complex_type  go to state 83


State 388

  263 catch_list: catch_list CATCH . OPEN_S type IDENTIFIER CLOSE_S statement

    OPEN_S  shift, and go to state 429


State 389

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . message_call SEMI_COMA
  154          | . error SEMI_COMA
  155 asm: . AT_ASM STRING_VAL SEMI_COMA
  156 variable_declaration_block: . type variable_list SEMI_COMA
  157                           | . CONST type variable_list SEMI_COMA
  158                           | . enum
  165 return_statement: . RETURN expr SEMI_COMA
  166 loop_statement: . for_loop
  167               | . while_loop
  168               | . do_while
  169 do_while: . do_header statement while_loop_header SEMI_COMA
  170 do_header: . DO
  171 for_loop: . for_loop_header statement
  172 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  173                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR
  228 while_loop: . while_loop_header statement
  229 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  230 conditional_statement: . if_header statement
  231                      | . if_header statement ELSE statement
  232                      | . switch_header switch_body
  233 if_header: . IF OPEN_P logic_expr CLOSE_P
  234 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  254 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  255     | . ENUM IDENTIFIER SEMI_COMA
  260 try_catch: . TRY statement catch_list finally_statement
  261          | . TRY statement catch_list
  264 finally_statement: FINALLY . statement

    error       shift, and go to state 261
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 116
    statement                   go to state 430
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 390

  260 try_catch: TRY statement catch_list finally_statement .

    $default  reduce using rule 260 (try_catch)


State 391

   36 array_body: . OPEN_S array_ele CLOSE_S
   37           | . OPEN_S CLOSE_S
  102 initializer: EQUAL . array_body

    OPEN_S  shift, and go to state 431

    array_body  go to state 432


State 392

  164 variable: error array_tag initializer .

    $default  reduce using rule 164 (variable)


State 393

  104 main_initializer: EQUAL expr .

    $default  reduce using rule 104 (main_initializer)


State 394

  162 variable: IDENTIFIER array_tag initializer .

    $default  reduce using rule 162 (variable)


State 395

  161 variable_list: variable_list error variable .

    $default  reduce using rule 161 (variable_list)


State 396

  159 variable_list: variable_list COMMA variable .

    $default  reduce using rule 159 (variable_list)


State 397

  169 do_while: do_header statement while_loop_header SEMI_COMA .

    $default  reduce using rule 169 (do_while)


State 398

  114 p_type: . OPEN_P type CLOSE_P
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR
  224 message_selector: IDENTIFIER SEMI_COLUMN . argument_list
  225 argument_list: . argument_list SEMI_COLUMN argument
  226              | . argument
  227 argument: . expr

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    expr           go to state 433
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260
    argument_list  go to state 434
    argument       go to state 435


State 399

  217 message_call: message_call2 sender message CLOSE_ARR .

    $default  reduce using rule 217 (message_call)


State 400

  224 message_selector: IDENTIFIER . SEMI_COLUMN argument_list

    SEMI_COLUMN  shift, and go to state 398


State 401

  222 message_selectors_list: message_selectors_list message_selector .

    $default  reduce using rule 222 (message_selectors_list)


State 402

  231 conditional_statement: if_header statement ELSE statement .

    $default  reduce using rule 231 (conditional_statement)


State 403

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . message_call SEMI_COMA
  154          | . error SEMI_COMA
  155 asm: . AT_ASM STRING_VAL SEMI_COMA
  156 variable_declaration_block: . type variable_list SEMI_COMA
  157                           | . CONST type variable_list SEMI_COMA
  158                           | . enum
  165 return_statement: . RETURN expr SEMI_COMA
  166 loop_statement: . for_loop
  167               | . while_loop
  168               | . do_while
  169 do_while: . do_header statement while_loop_header SEMI_COMA
  170 do_header: . DO
  171 for_loop: . for_loop_header statement
  172 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  173                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR
  228 while_loop: . while_loop_header statement
  229 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  230 conditional_statement: . if_header statement
  231                      | . if_header statement ELSE statement
  232                      | . switch_header switch_body
  233 if_header: . IF OPEN_P logic_expr CLOSE_P
  234 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  242 case_body: CASE expr SEMI_COLUMN . statement BREAK SEMI_COMA
  243          | CASE expr SEMI_COLUMN . statement
  244          | CASE expr SEMI_COLUMN . BREAK SEMI_COMA
  254 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  255     | . ENUM IDENTIFIER SEMI_COMA
  260 try_catch: . TRY statement catch_list finally_statement
  261          | . TRY statement catch_list

    error       shift, and go to state 261
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    BREAK       shift, and go to state 436
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 116
    statement                   go to state 437
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 404

  247 default_case: DEFAULT SEMI_COLUMN BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 438


State 405

  245 default_case: DEFAULT SEMI_COLUMN statement . BREAK SEMI_COMA
  246             | DEFAULT SEMI_COLUMN statement .  [CLOSE_S]

    BREAK  shift, and go to state 439

    $default  reduce using rule 246 (default_case)


State 406

  236 switch_body: list_of_case default_case CLOSE_S .

    $default  reduce using rule 236 (switch_body)


State 407

  256 list_expr: IDENTIFIER EQUAL expr COMMA list_expr .

    $default  reduce using rule 256 (list_expr)


State 408

   99 array_tag_list: array_tag_list OPEN_ARR error . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 440


State 409

   97 array_tag_list: array_tag_list OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 441


State 410

  181 for_initializer: IDENTIFIER EQUAL expr .

    $default  reduce using rule 181 (for_initializer)


State 411

  114 p_type: . OPEN_P type CLOSE_P
  180 for_initializer: INT IDENTIFIER EQUAL . expr
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    expr           go to state 442
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 412

  179 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 179 (for_loop_header)


State 413

  178 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 443


State 414

  114 p_type: . OPEN_P type CLOSE_P
  173 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P
  177                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . CLOSE_P
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    CLOSE_P      shift, and go to state 444
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    expr           go to state 445
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 415

  114 p_type: . OPEN_P type CLOSE_P
  174 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . expr CLOSE_P
  176                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . CLOSE_P
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    CLOSE_P      shift, and go to state 446
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    expr           go to state 447
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 416

  172 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  175                | FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA CLOSE_P
  191 logic_expr: logic_expr . AND_AND logic_expr
  192           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 448
    AND_AND    shift, and go to state 372
    OR_OR      shift, and go to state 373


State 417

  190 logic_expr: OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 190 (logic_expr)


State 418

  191 logic_expr: logic_expr . AND_AND logic_expr
  191           | logic_expr AND_AND logic_expr .  [SEMI_COMA, CLOSE_P]
  192           | logic_expr . OR_OR logic_expr

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 191 (logic_expr)

    Conflict between rule 191 and token AND_AND resolved as an error (%nonassoc AND_AND).
    Conflict between rule 191 and token OR_OR resolved as an error (%nonassoc OR_OR).


State 419

  191 logic_expr: logic_expr . AND_AND logic_expr
  192           | logic_expr . OR_OR logic_expr
  192           | logic_expr OR_OR logic_expr .  [SEMI_COMA, CLOSE_P]

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 192 (logic_expr)

    Conflict between rule 192 and token AND_AND resolved as an error (%nonassoc AND_AND).
    Conflict between rule 192 and token OR_OR resolved as an error (%nonassoc OR_OR).


State 420

  183 logic_expr: expr LESS_THAN expr .

    $default  reduce using rule 183 (logic_expr)


State 421

  184 logic_expr: expr MORE_THAN expr .

    $default  reduce using rule 184 (logic_expr)


State 422

  185 logic_expr: expr LESS_OR_EQUAL expr .

    $default  reduce using rule 185 (logic_expr)


State 423

  186 logic_expr: expr MORE_OR_EQUAL expr .

    $default  reduce using rule 186 (logic_expr)


State 424

  187 logic_expr: expr EQUAL_EQUAL expr .

    $default  reduce using rule 187 (logic_expr)


State 425

  188 logic_expr: expr NOT_EQUAL expr .

    $default  reduce using rule 188 (logic_expr)


State 426

  235 switch_body_block: OPEN_S .

    $default  reduce using rule 235 (switch_body_block)


State 427

  234 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block .

    $default  reduce using rule 234 (switch_header)


State 428

  262 catch_list: CATCH OPEN_S type . IDENTIFIER CLOSE_S statement

    IDENTIFIER  shift, and go to state 449


State 429

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  263 catch_list: catch_list CATCH OPEN_S . type IDENTIFIER CLOSE_S statement

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    type          go to state 450
    struct_type   go to state 80
    enum_type     go to state 81
    simple_type   go to state 82
    complex_type  go to state 83


State 430

  264 finally_statement: FINALLY statement .

    $default  reduce using rule 264 (finally_statement)


State 431

   36 array_body: OPEN_S . array_ele CLOSE_S
   37           | OPEN_S . CLOSE_S
   38 array_ele: . expr COMMA array_ele
   39          | . expr
   40          | . OPEN_S CLOSE_S
   41          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | . OPEN_S array_ele CLOSE_S
   43          | . OPEN_S CLOSE_S COMMA array_ele
  114 p_type: . OPEN_P type CLOSE_P
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_S       shift, and go to state 451
    CLOSE_S      shift, and go to state 452
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    array_ele      go to state 453
    p_type         go to state 255
    expr           go to state 454
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 432

  102 initializer: EQUAL array_body .

    $default  reduce using rule 102 (initializer)


State 433

  227 argument: expr .

    $default  reduce using rule 227 (argument)


State 434

  224 message_selector: IDENTIFIER SEMI_COLUMN argument_list .  [IDENTIFIER, CLOSE_ARR]
  225 argument_list: argument_list . SEMI_COLUMN argument

    SEMI_COLUMN  shift, and go to state 455

    $default  reduce using rule 224 (message_selector)


State 435

  226 argument_list: argument .

    $default  reduce using rule 226 (argument_list)


State 436

  244 case_body: CASE expr SEMI_COLUMN BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 456


State 437

  242 case_body: CASE expr SEMI_COLUMN statement . BREAK SEMI_COMA
  243          | CASE expr SEMI_COLUMN statement .  [CLOSE_S, CASE, DEFAULT]

    BREAK  shift, and go to state 457

    $default  reduce using rule 243 (case_body)


State 438

  247 default_case: DEFAULT SEMI_COLUMN BREAK SEMI_COMA .

    $default  reduce using rule 247 (default_case)


State 439

  245 default_case: DEFAULT SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 458


State 440

   99 array_tag_list: array_tag_list OPEN_ARR error CLOSE_ARR .

    $default  reduce using rule 99 (array_tag_list)


State 441

   97 array_tag_list: array_tag_list OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 97 (array_tag_list)


State 442

  180 for_initializer: INT IDENTIFIER EQUAL expr .

    $default  reduce using rule 180 (for_initializer)


State 443

  178 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 178 (for_loop_header)


State 444

  177 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P .

    $default  reduce using rule 177 (for_loop_header)


State 445

  173 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 459


State 446

  176 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 176 (for_loop_header)


State 447

  174 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 460


State 448

  114 p_type: . OPEN_P type CLOSE_P
  172 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P
  175                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . CLOSE_P
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    CLOSE_P      shift, and go to state 461
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    expr           go to state 462
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 449

  262 catch_list: CATCH OPEN_S type IDENTIFIER . CLOSE_S statement

    CLOSE_S  shift, and go to state 463


State 450

  263 catch_list: catch_list CATCH OPEN_S type . IDENTIFIER CLOSE_S statement

    IDENTIFIER  shift, and go to state 464


State 451

   38 array_ele: . expr COMMA array_ele
   39          | . expr
   40          | . OPEN_S CLOSE_S
   40          | OPEN_S . CLOSE_S
   41          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   41          | OPEN_S . array_ele CLOSE_S COMMA array_ele
   42          | . OPEN_S array_ele CLOSE_S
   42          | OPEN_S . array_ele CLOSE_S
   43          | . OPEN_S CLOSE_S COMMA array_ele
   43          | OPEN_S . CLOSE_S COMMA array_ele
  114 p_type: . OPEN_P type CLOSE_P
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_S       shift, and go to state 451
    CLOSE_S      shift, and go to state 465
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    array_ele      go to state 466
    p_type         go to state 255
    expr           go to state 454
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 452

   37 array_body: OPEN_S CLOSE_S .

    $default  reduce using rule 37 (array_body)


State 453

   36 array_body: OPEN_S array_ele . CLOSE_S

    CLOSE_S  shift, and go to state 467


State 454

   38 array_ele: expr . COMMA array_ele
   39          | expr .  [CLOSE_S]

    COMMA  shift, and go to state 468

    $default  reduce using rule 39 (array_ele)


State 455

  114 p_type: . OPEN_P type CLOSE_P
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR
  225 argument_list: argument_list SEMI_COLUMN . argument
  227 argument: . expr

    IDENTIFIER   shift, and go to state 247
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    p_type         go to state 255
    expr           go to state 433
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260
    argument       go to state 469


State 456

  244 case_body: CASE expr SEMI_COLUMN BREAK SEMI_COMA .

    $default  reduce using rule 244 (case_body)


State 457

  242 case_body: CASE expr SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 470


State 458

  245 default_case: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 245 (default_case)


State 459

  173 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 173 (for_loop_header)


State 460

  174 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 174 (for_loop_header)


State 461

  175 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P .

    $default  reduce using rule 175 (for_loop_header)


State 462

  172 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 471


State 463

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . message_call SEMI_COMA
  154          | . error SEMI_COMA
  155 asm: . AT_ASM STRING_VAL SEMI_COMA
  156 variable_declaration_block: . type variable_list SEMI_COMA
  157                           | . CONST type variable_list SEMI_COMA
  158                           | . enum
  165 return_statement: . RETURN expr SEMI_COMA
  166 loop_statement: . for_loop
  167               | . while_loop
  168               | . do_while
  169 do_while: . do_header statement while_loop_header SEMI_COMA
  170 do_header: . DO
  171 for_loop: . for_loop_header statement
  172 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  173                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR
  228 while_loop: . while_loop_header statement
  229 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  230 conditional_statement: . if_header statement
  231                      | . if_header statement ELSE statement
  232                      | . switch_header switch_body
  233 if_header: . IF OPEN_P logic_expr CLOSE_P
  234 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  254 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  255     | . ENUM IDENTIFIER SEMI_COMA
  260 try_catch: . TRY statement catch_list finally_statement
  261          | . TRY statement catch_list
  262 catch_list: CATCH OPEN_S type IDENTIFIER CLOSE_S . statement

    error       shift, and go to state 261
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 116
    statement                   go to state 472
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 464

  263 catch_list: catch_list CATCH OPEN_S type IDENTIFIER . CLOSE_S statement

    CLOSE_S  shift, and go to state 473


State 465

   40 array_ele: OPEN_S CLOSE_S .  [CLOSE_S]
   43          | OPEN_S CLOSE_S . COMMA array_ele

    COMMA  shift, and go to state 474

    $default  reduce using rule 40 (array_ele)


State 466

   41 array_ele: OPEN_S array_ele . CLOSE_S COMMA array_ele
   42          | OPEN_S array_ele . CLOSE_S

    CLOSE_S  shift, and go to state 475


State 467

   36 array_body: OPEN_S array_ele CLOSE_S .

    $default  reduce using rule 36 (array_body)


State 468

   38 array_ele: . expr COMMA array_ele
   38          | expr COMMA . array_ele
   39          | . expr
   40          | . OPEN_S CLOSE_S
   41          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | . OPEN_S array_ele CLOSE_S
   43          | . OPEN_S CLOSE_S COMMA array_ele
  114 p_type: . OPEN_P type CLOSE_P
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_S       shift, and go to state 451
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    array_ele      go to state 476
    p_type         go to state 255
    expr           go to state 454
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 469

  225 argument_list: argument_list SEMI_COLUMN argument .

    $default  reduce using rule 225 (argument_list)


State 470

  242 case_body: CASE expr SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 242 (case_body)


State 471

  172 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 172 (for_loop_header)


State 472

  262 catch_list: CATCH OPEN_S type IDENTIFIER CLOSE_S statement .

    $default  reduce using rule 262 (catch_list)


State 473

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . message_call SEMI_COMA
  154          | . error SEMI_COMA
  155 asm: . AT_ASM STRING_VAL SEMI_COMA
  156 variable_declaration_block: . type variable_list SEMI_COMA
  157                           | . CONST type variable_list SEMI_COMA
  158                           | . enum
  165 return_statement: . RETURN expr SEMI_COMA
  166 loop_statement: . for_loop
  167               | . while_loop
  168               | . do_while
  169 do_while: . do_header statement while_loop_header SEMI_COMA
  170 do_header: . DO
  171 for_loop: . for_loop_header statement
  172 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  173                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR
  228 while_loop: . while_loop_header statement
  229 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  230 conditional_statement: . if_header statement
  231                      | . if_header statement ELSE statement
  232                      | . switch_header switch_body
  233 if_header: . IF OPEN_P logic_expr CLOSE_P
  234 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  254 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  255     | . ENUM IDENTIFIER SEMI_COMA
  260 try_catch: . TRY statement catch_list finally_statement
  261          | . TRY statement catch_list
  263 catch_list: catch_list CATCH OPEN_S type IDENTIFIER CLOSE_S . statement

    error       shift, and go to state 261
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 116
    statement                   go to state 477
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 474

   38 array_ele: . expr COMMA array_ele
   39          | . expr
   40          | . OPEN_S CLOSE_S
   41          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | . OPEN_S array_ele CLOSE_S
   43          | . OPEN_S CLOSE_S COMMA array_ele
   43          | OPEN_S CLOSE_S COMMA . array_ele
  114 p_type: . OPEN_P type CLOSE_P
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_S       shift, and go to state 451
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    array_ele      go to state 478
    p_type         go to state 255
    expr           go to state 454
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 475

   41 array_ele: OPEN_S array_ele CLOSE_S . COMMA array_ele
   42          | OPEN_S array_ele CLOSE_S .  [CLOSE_S]

    COMMA  shift, and go to state 479

    $default  reduce using rule 42 (array_ele)


State 476

   38 array_ele: expr COMMA array_ele .

    $default  reduce using rule 38 (array_ele)


State 477

  263 catch_list: catch_list CATCH OPEN_S type IDENTIFIER CLOSE_S statement .

    $default  reduce using rule 263 (catch_list)


State 478

   43 array_ele: OPEN_S CLOSE_S COMMA array_ele .

    $default  reduce using rule 43 (array_ele)


State 479

   38 array_ele: . expr COMMA array_ele
   39          | . expr
   40          | . OPEN_S CLOSE_S
   41          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   41          | OPEN_S array_ele CLOSE_S COMMA . array_ele
   42          | . OPEN_S array_ele CLOSE_S
   43          | . OPEN_S CLOSE_S COMMA array_ele
  114 p_type: . OPEN_P type CLOSE_P
  195 expr: . assign_expr
  196     | . simple_expr
  197 assign_expr: . long_id EQUAL simple_expr
  198 long_id: . long_id DOT IDENTIFIER
  199        | . message_call
  200        | . IDENTIFIER
  201 simple_expr: . STRING_VAL
  202            | . INT_VAL
  203            | . FLOAT_VAL
  204            | . CHAR_VAL
  205            | . long_id
  206            | . simple_expr PLUS simple_expr
  207            | . simple_expr MINUS simple_expr
  208            | . simple_expr MULTI simple_expr
  209            | . simple_expr DIV simple_expr
  210            | . OPEN_P simple_expr CLOSE_P
  211            | . IDENTIFIER DOUBLEPLUS
  212            | . IDENTIFIER DOUBLEMINUS
  213            | . DOUBLEPLUS IDENTIFIER
  214            | . DOUBLEMINUS IDENTIFIER
  215            | . p_type simple_expr
  216 message_call2: . OPEN_ARR
  217 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 247
    OPEN_S       shift, and go to state 451
    OPEN_P       shift, and go to state 248
    STRING_VAL   shift, and go to state 249
    FLOAT_VAL    shift, and go to state 250
    CHAR_VAL     shift, and go to state 251
    INT_VAL      shift, and go to state 252
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 253
    DOUBLEMINUS  shift, and go to state 254

    array_ele      go to state 480
    p_type         go to state 255
    expr           go to state 454
    assign_expr    go to state 257
    long_id        go to state 258
    simple_expr    go to state 259
    message_call2  go to state 196
    message_call   go to state 260


State 480

   41 array_ele: OPEN_S array_ele CLOSE_S COMMA array_ele .

    $default  reduce using rule 41 (array_ele)
