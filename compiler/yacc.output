Terminals unused in grammar

   ID
   SELF
   expr_1


State 324 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: components

    2 components: components component
    3           | component
    4           | IMPORT STRING_VAL SEMI_COMA

    5 component: class_interface
    6          | class_implementation
    7          | protocol
    8          | struct
    9          | enum

   10 class_interface: class_interface_header class_interface_body

   11 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
   12                       | AT_INTERFACE IDENTIFIER
   13                       | AT_INTERFACE error
   14                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN error

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END
   16                     | protocol_reference_list instance_variables AT_END
   17                     | protocol_reference_list interface_declaration_list AT_END
   18                     | instance_variables interface_declaration_list AT_END
   19                     | protocol_reference_list AT_END
   20                     | instance_variables AT_END
   21                     | interface_declaration_list AT_END
   22                     | AT_END
   23                     | protocol_reference_list error AT_END
   24                     | protocol_reference_list error interface_declaration_list AT_END
   25                     | protocol_reference_list error
   26                     | protocol_reference_list instance_variables interface_declaration_list error
   27                     | protocol_reference_list instance_variables error
   28                     | protocol_reference_list interface_declaration_list error
   29                     | instance_variables interface_declaration_list error
   30                     | instance_variables error
   31                     | interface_declaration_list error

   32 protocol_reference_list: LESS_THAN ids_list_identifier MORE_THAN
   33                        | LESS_THAN ids_list_identifier error

   34 ids_list_identifier: ids_list_identifier COMMA IDENTIFIER
   35                    | IDENTIFIER

   36 array_body: OPEN_S array_ele CLOSE_S
   37           | OPEN_S CLOSE_S

   38 array_ele: expr COMMA array_ele
   39          | expr
   40          | OPEN_S CLOSE_S
   41          | OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | OPEN_S array_ele CLOSE_S
   43          | OPEN_S CLOSE_S COMMA array_ele

   44 instance_variables: OPEN_S instance_variable_declarations CLOSE_S
   45                   | OPEN_S CLOSE_S

   46 instance_variable_declarations: instance_variable_declarations instance_variable_declaration
   47                               | instance_variable_declaration
   48                               | variable_declaration_list

   49 instance_variable_declaration: visibility_specification variable_declaration_list

   50 variable_declaration_list: variable_declaration_list variable_declarationxx
   51                          | variable_declarationxx

   52 visibility_specification: AT_PRIVATE
   53                         | AT_PROTECTED
   54                         | AT_PUBLIC

   55 struct_variable_declaration: struct_declaration_list

   56 variable_declarationxx: type ids_list SEMI_COMA
   57                       | CONST type ids_list SEMI_COMA
   58                       | type IDENTIFIER array_tag error

   59 ids_list: ids_list COMMA data_member
   60         | data_member
   61         | error

   62 data_member: IDENTIFIER array_tag
   63            | IDENTIFIER
   64            | error array_tag
   65            | IDENTIFIER error

   66 struct_declaration_list: struct_declaration_list variable_declarationxx
   67                        | variable_declarationxx
   68                        | error variable_declarationxx

   69 struct_header: STRUCT IDENTIFIER

   70 struct: struct_header OPEN_S CLOSE_S entity SEMI_COMA
   71       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | struct_header OPEN_S CLOSE_S SEMI_COMA
   73       | struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   74       | struct_header OPEN_S CLOSE_S entity error SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | struct_header OPEN_S CLOSE_S error SEMI_COMA
   77       | struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA

   78 entity: IDENTIFIER COMMA entity
   79       | IDENTIFIER
   80       | error COMMA

   81 type: simple_type
   82     | complex_type
   83     | struct_type
   84     | enum_type

   85 struct_type: STRUCT IDENTIFIER
   86            | STRUCT IDENTIFIER MULTI

   87 enum_type: ENUM IDENTIFIER
   88          | ENUM IDENTIFIER MULTI

   89 simple_type: INT
   90            | CHAR
   91            | FLOAT
   92            | NSSTRING
   93            | VOID
   94            | BOOL

   95 complex_type: IDENTIFIER MULTI

   96 array_tag: array_first_tag array_tag_list

   97 array_tag_list: array_tag_list OPEN_ARR INT_VAL CLOSE_ARR
   98               | %empty
   99               | array_tag_list OPEN_ARR error CLOSE_ARR

  100 array_first_tag: OPEN_ARR INT_VAL CLOSE_ARR
  101                | OPEN_ARR CLOSE_ARR

  102 initializer: EQUAL array_body
  103            | %empty

  104 main_initializer: EQUAL expr
  105                 | %empty

  106 interface_declaration_list: interface_declaration_list interface_declaration
  107                           | interface_declaration

  108 interface_declaration: class_method_declaration
  109                      | instance_method_declaration

  110 class_method_declaration: PLUS p_type method_selectors SEMI_COMA
  111                         | PLUS p_type method_selectors error
  112                         | PLUS method_selectors error

  113 instance_method_declaration: MINUS p_type method_selectors SEMI_COMA

  114 p_type: OPEN_P type CLOSE_P

  115 method_selectors: selectors_list
  116                 | IDENTIFIER

  117 selectors_list: selectors_list selector_decleration
  118               | selector_decleration

  119 selector_decleration: IDENTIFIER SEMI_COLUMN parameter_list

  120 parameter_list: parameter_list SEMI_COLUMN parameter
  121               | parameter

  122 parameter: p_type IDENTIFIER

  123 class_implementation: class_implementation_header class_implementation_body

  124 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  125                            | AT_IMPLEMENTATION IDENTIFIER

  126 class_implementation_body: instance_variables implementation_definition_list AT_END
  127                          | instance_variables AT_END
  128                          | implementation_definition_list AT_END
  129                          | AT_END

  130 implementation_definition_list: implementation_definition_list implementation_definition
  131                               | implementation_definition

  132 implementation_definition: class_implementation_definition
  133                          | instance_implementation_definition

  134 class_implementation_definition: class_implementation_definition_header block_body

  135 class_implementation_definition_header: PLUS p_type method_selectors

  136 instance_implementation_definition: instance_implementation_definition_header block_body

  137 instance_implementation_definition_header: MINUS p_type method_selectors

  138 block_body: block_body_header block_body_statements

  139 block_body_header: OPEN_S

  140 block_body_statements: statement_list CLOSE_S
  141                      | CLOSE_S
  142                      | error CLOSE_S

  143 statement_list: statement_list statement
  144               | statement

  145 statement: loop_statement
  146          | conditional_statement
  147          | assign_expr SEMI_COMA
  148          | variable_declaration_block
  149          | block_body
  150          | return_statement
  151          | try_catch
  152          | asm
  153          | long_id SEMI_COMA
  154          | throw_statement
  155          | error SEMI_COMA

  156 throw_statement: THROW OPEN_P message_call CLOSE_P SEMI_COMA

  157 asm: AT_ASM STRING_VAL SEMI_COMA

  158 variable_declaration_block: type variable_list SEMI_COMA
  159                           | CONST type variable_list SEMI_COMA
  160                           | enum

  161 variable_list: variable_list COMMA variable
  162              | variable
  163              | variable_list error variable

  164 variable: IDENTIFIER array_tag initializer
  165         | IDENTIFIER main_initializer
  166         | error array_tag initializer

  167 return_statement: RETURN expr SEMI_COMA

  168 loop_statement: for_loop
  169               | while_loop
  170               | do_while

  171 do_while: do_header statement while_loop_header SEMI_COMA

  172 do_header: DO

  173 for_loop: for_loop_header statement

  174 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  175                | FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  178                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  179                | FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  180                | FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  181                | FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

  182 for_initializer: INT IDENTIFIER EQUAL expr
  183                | IDENTIFIER EQUAL expr
  184                | IDENTIFIER

  185 logic_expr1: logic_expr1 AND_AND logic_expr
  186            | logic_expr1 OR_OR logic_expr
  187            | logic_expr

  188 logic_expr: expr LESS_THAN expr
  189           | expr MORE_THAN expr
  190           | expr LESS_OR_EQUAL expr
  191           | expr MORE_OR_EQUAL expr
  192           | expr EQUAL_EQUAL expr
  193           | expr NOT_EQUAL expr
  194           | NOT_EQUAL expr
  195           | OPEN_P logic_expr CLOSE_P
  196           | TRUE
  197           | FALSE
  198           | long_id

  199 expr: assign_expr
  200     | simple_expr

  201 assign_expr: long_id EQUAL simple_expr

  202 long_id: long_id DOT IDENTIFIER
  203        | message_call
  204        | IDENTIFIER
  205        | array_access

  206 array_access: long_id OPEN_ARR simple_expr CLOSE_ARR

  207 simple_expr: STRING_VAL
  208            | INT_VAL
  209            | FLOAT_VAL
  210            | CHAR_VAL
  211            | long_id
  212            | simple_expr PLUS simple_expr
  213            | simple_expr MINUS simple_expr
  214            | simple_expr MULTI simple_expr
  215            | simple_expr DIV simple_expr
  216            | OPEN_P simple_expr CLOSE_P
  217            | IDENTIFIER DOUBLEPLUS
  218            | IDENTIFIER DOUBLEMINUS
  219            | DOUBLEPLUS IDENTIFIER
  220            | DOUBLEMINUS IDENTIFIER
  221            | p_type simple_expr

  222 message_call2: OPEN_ARR

  223 message_call: message_call2 sender message CLOSE_ARR

  224 sender: message_call
  225       | IDENTIFIER

  226 message: IDENTIFIER
  227        | message_selectors_list

  228 message_selectors_list: message_selectors_list message_selector
  229                       | message_selector

  230 message_selector: IDENTIFIER SEMI_COLUMN argument_list

  231 argument_list: argument_list SEMI_COLUMN argument
  232              | argument

  233 argument: expr

  234 while_loop: while_loop_header statement

  235 while_loop_header: WHILE OPEN_P logic_expr1 CLOSE_P

  236 conditional_statement: if_header statement
  237                      | if_header statement ELSE statement
  238                      | switch_header switch_body

  239 if_header: IF OPEN_P logic_expr1 CLOSE_P

  240 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block

  241 switch_body_block: OPEN_S

  242 switch_body: list_of_case default_case CLOSE_S
  243            | list_of_case CLOSE_S
  244            | default_case CLOSE_S
  245            | CLOSE_S

  246 list_of_case: list_of_case case_body
  247             | case_body

  248 case_body: CASE expr SEMI_COLUMN statement BREAK SEMI_COMA
  249          | CASE expr SEMI_COLUMN statement
  250          | CASE expr SEMI_COLUMN BREAK SEMI_COMA

  251 default_case: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  252             | DEFAULT SEMI_COLUMN statement
  253             | DEFAULT SEMI_COLUMN BREAK SEMI_COMA

  254 protocol: protocol_header protocol_body

  255 protocol_header: AT_PROTOCOL IDENTIFIER

  256 protocol_body: protocol_reference_list interface_declaration_list AT_END
  257              | interface_declaration_list AT_END
  258              | protocol_reference_list AT_END
  259              | AT_END

  260 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  261     | ENUM IDENTIFIER SEMI_COMA

  262 list_expr: IDENTIFIER EQUAL expr COMMA list_expr
  263          | IDENTIFIER EQUAL expr
  264          | IDENTIFIER
  265          | IDENTIFIER COMMA list_expr

  266 try_catch: TRY statement catch_list finally_statement
  267          | TRY statement catch_list

  268 catch_list: one_catch
  269           | catch_list one_catch

  270 one_catch: one_catch_header statement

  271 one_catch_header: CATCH OPEN_P type IDENTIFIER CLOSE_P

  272 finally_statement: FINALLY statement


Terminals, with rules where they appear

$end (0) 0
error (256) 13 14 23 24 25 26 27 28 29 30 31 33 58 61 64 65 68 74 75
    76 77 80 99 111 112 142 155 163 166
AT_INTERFACE (258) 11 12 13 14
IDENTIFIER (259) 11 12 14 34 35 58 62 63 65 69 78 79 85 86 87 88 95
    116 119 122 124 125 164 165 182 183 184 202 204 217 218 219 220
    225 226 230 240 255 260 261 262 263 264 265 271
SEMI_COLUMN (260) 11 14 119 120 124 230 231 248 249 250 251 252 253
NSSTRING (261) 92
FLOAT (262) 91
CHAR (263) 90
BOOL (264) 94
INT (265) 89 182
SEMI_COMA (266) 4 56 57 70 71 72 73 74 75 76 77 110 113 147 153 155
    156 157 158 159 167 171 174 175 176 177 178 179 180 181 248 250
    251 253 260 261
ID (267)
AT_PUBLIC (268) 54
AT_PROTECTED (269) 53
AT_PRIVATE (270) 52
OPEN_S (271) 36 37 40 41 42 43 44 45 70 71 72 73 74 75 76 77 139 241
    260
CLOSE_S (272) 36 37 40 41 42 43 44 45 70 71 72 73 74 75 76 77 140 141
    142 242 243 244 245 260
COMMA (273) 34 38 41 43 59 78 80 161 262 265
LESS_THAN (274) 32 33 188
MORE_THAN (275) 32 189
AT_END (276) 15 16 17 18 19 20 21 22 23 24 126 127 128 129 256 257
    258 259
CONST (277) 57 159
VOID (278) 93
PLUS (279) 110 111 112 135 212
MINUS (280) 113 137 213
OPEN_P (281) 114 156 174 175 176 177 178 179 180 181 195 216 235 239
    240 271
CLOSE_P (282) 114 156 174 175 176 177 178 179 180 181 195 216 235 239
    240 271
AT_IMPLEMENTATION (283) 124 125
AND_AND (284) 185
OR_OR (285) 186
STRING_VAL (286) 4 157 207
FLOAT_VAL (287) 209
LESS_OR_EQUAL (288) 190
CHAR_VAL (289) 210
INT_VAL (290) 97 100 208
MORE_OR_EQUAL (291) 191
MULTI (292) 86 88 95 214
EQUAL_EQUAL (293) 192
NOT_EQUAL (294) 193 194
FOR (295) 174 175 176 177 178 179 180 181
EQUAL (296) 102 104 182 183 201 262 263
DIV (297) 215
WHILE (298) 235
IF (299) 239
DO (300) 172
SWITCH (301) 240
CASE (302) 248 249 250
DEFAULT (303) 251 252 253
BREAK (304) 248 250 251 253
ENUM (305) 87 88 260 261
OPEN_ARR (306) 97 99 100 101 206 222
CLOSE_ARR (307) 97 99 100 101 206 223
TRUE (308) 196
FALSE (309) 197
RETURN (310) 167
AT_PROTOCOL (311) 255
ELSE (312) 237
STRUCT (313) 69 85 86
DOT (314) 202
DOUBLEPLUS (315) 217 219
DOUBLEMINUS (316) 218 220
TRY (317) 266 267
CATCH (318) 271
THROW (319) 156
FINALLY (320) 272
AT_ASM (321) 157
SELF (322)
IMPORT (323) 4
if_h (324)
expr_1 (325)
p_type_expr_prec (326)
long_id_prec (327)
try_prec (328)


Nonterminals, with rules where they appear

$accept (74)
    on left: 0
program (75)
    on left: 1, on right: 0
components (76)
    on left: 2 3 4, on right: 1 2
component (77)
    on left: 5 6 7 8 9, on right: 2 3
class_interface (78)
    on left: 10, on right: 5
class_interface_header (79)
    on left: 11 12 13 14, on right: 10
class_interface_body (80)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31, on right:
    10
protocol_reference_list (81)
    on left: 32 33, on right: 15 16 17 19 23 24 25 26 27 28 256 258
ids_list_identifier (82)
    on left: 34 35, on right: 32 33 34
array_body (83)
    on left: 36 37, on right: 102
array_ele (84)
    on left: 38 39 40 41 42 43, on right: 36 38 41 42 43
instance_variables (85)
    on left: 44 45, on right: 15 16 18 20 26 27 29 30 126 127
instance_variable_declarations (86)
    on left: 46 47 48, on right: 44 46
instance_variable_declaration (87)
    on left: 49, on right: 46 47
variable_declaration_list (88)
    on left: 50 51, on right: 48 49 50
visibility_specification (89)
    on left: 52 53 54, on right: 49
struct_variable_declaration (90)
    on left: 55, on right: 71 73 75 77
variable_declarationxx (91)
    on left: 56 57 58, on right: 50 51 66 67 68
ids_list (92)
    on left: 59 60 61, on right: 56 57 59
data_member (93)
    on left: 62 63 64 65, on right: 59 60
struct_declaration_list (94)
    on left: 66 67 68, on right: 55 66
struct_header (95)
    on left: 69, on right: 70 71 72 73 74 75 76 77
struct (96)
    on left: 70 71 72 73 74 75 76 77, on right: 8
entity (97)
    on left: 78 79 80, on right: 70 71 74 75 78
type (98)
    on left: 81 82 83 84, on right: 56 57 58 114 158 159 271
struct_type (99)
    on left: 85 86, on right: 83
enum_type (100)
    on left: 87 88, on right: 84
simple_type (101)
    on left: 89 90 91 92 93 94, on right: 81
complex_type (102)
    on left: 95, on right: 82
array_tag (103)
    on left: 96, on right: 58 62 64 164 166
array_tag_list (104)
    on left: 97 98 99, on right: 96 97 99
array_first_tag (105)
    on left: 100 101, on right: 96
initializer (106)
    on left: 102 103, on right: 164 166
main_initializer (107)
    on left: 104 105, on right: 165
interface_declaration_list (108)
    on left: 106 107, on right: 15 17 18 21 24 26 28 29 31 106 256
    257
interface_declaration (109)
    on left: 108 109, on right: 106 107
class_method_declaration (110)
    on left: 110 111 112, on right: 108
instance_method_declaration (111)
    on left: 113, on right: 109
p_type (112)
    on left: 114, on right: 110 111 113 122 135 137 221
method_selectors (113)
    on left: 115 116, on right: 110 111 112 113 135 137
selectors_list (114)
    on left: 117 118, on right: 115 117
selector_decleration (115)
    on left: 119, on right: 117 118
parameter_list (116)
    on left: 120 121, on right: 119 120
parameter (117)
    on left: 122, on right: 120 121
class_implementation (118)
    on left: 123, on right: 6
class_implementation_header (119)
    on left: 124 125, on right: 123
class_implementation_body (120)
    on left: 126 127 128 129, on right: 123
implementation_definition_list (121)
    on left: 130 131, on right: 126 128 130
implementation_definition (122)
    on left: 132 133, on right: 130 131
class_implementation_definition (123)
    on left: 134, on right: 132
class_implementation_definition_header (124)
    on left: 135, on right: 134
instance_implementation_definition (125)
    on left: 136, on right: 133
instance_implementation_definition_header (126)
    on left: 137, on right: 136
block_body (127)
    on left: 138, on right: 134 136 149
block_body_header (128)
    on left: 139, on right: 138
block_body_statements (129)
    on left: 140 141 142, on right: 138
statement_list (130)
    on left: 143 144, on right: 140 143
statement (131)
    on left: 145 146 147 148 149 150 151 152 153 154 155, on right:
    143 144 171 173 234 236 237 248 249 251 252 266 267 270 272
throw_statement (132)
    on left: 156, on right: 154
asm (133)
    on left: 157, on right: 152
variable_declaration_block (134)
    on left: 158 159 160, on right: 148
variable_list (135)
    on left: 161 162 163, on right: 158 159 161 163
variable (136)
    on left: 164 165 166, on right: 161 162 163
return_statement (137)
    on left: 167, on right: 150
loop_statement (138)
    on left: 168 169 170, on right: 145
do_while (139)
    on left: 171, on right: 170
do_header (140)
    on left: 172, on right: 171
for_loop (141)
    on left: 173, on right: 168
for_loop_header (142)
    on left: 174 175 176 177 178 179 180 181, on right: 173
for_initializer (143)
    on left: 182 183 184, on right: 174 176 177 178
logic_expr1 (144)
    on left: 185 186 187, on right: 174 175 177 179 185 186 235 239
logic_expr (145)
    on left: 188 189 190 191 192 193 194 195 196 197 198, on right:
    185 186 187 195
expr (146)
    on left: 199 200, on right: 38 39 104 167 174 175 176 180 182 183
    188 189 190 191 192 193 194 233 248 249 250 262 263
assign_expr (147)
    on left: 201, on right: 147 199
long_id (148)
    on left: 202 203 204 205, on right: 153 198 201 202 206 211
array_access (149)
    on left: 206, on right: 205
simple_expr (150)
    on left: 207 208 209 210 211 212 213 214 215 216 217 218 219 220
    221, on right: 200 201 206 212 213 214 215 216 221
message_call2 (151)
    on left: 222, on right: 223
message_call (152)
    on left: 223, on right: 156 203 224
sender (153)
    on left: 224 225, on right: 223
message (154)
    on left: 226 227, on right: 223
message_selectors_list (155)
    on left: 228 229, on right: 227 228
message_selector (156)
    on left: 230, on right: 228 229
argument_list (157)
    on left: 231 232, on right: 230 231
argument (158)
    on left: 233, on right: 231 232
while_loop (159)
    on left: 234, on right: 169
while_loop_header (160)
    on left: 235, on right: 171 234
conditional_statement (161)
    on left: 236 237 238, on right: 146
if_header (162)
    on left: 239, on right: 236 237
switch_header (163)
    on left: 240, on right: 238
switch_body_block (164)
    on left: 241, on right: 240
switch_body (165)
    on left: 242 243 244 245, on right: 238
list_of_case (166)
    on left: 246 247, on right: 242 243 246
case_body (167)
    on left: 248 249 250, on right: 246 247
default_case (168)
    on left: 251 252 253, on right: 242 244
protocol (169)
    on left: 254, on right: 7
protocol_header (170)
    on left: 255, on right: 254
protocol_body (171)
    on left: 256 257 258 259, on right: 254
enum (172)
    on left: 260 261, on right: 9 160
list_expr (173)
    on left: 262 263 264 265, on right: 260 262 265
try_catch (174)
    on left: 266 267, on right: 151
catch_list (175)
    on left: 268 269, on right: 266 267 269
one_catch (176)
    on left: 270, on right: 268 269
one_catch_header (177)
    on left: 271, on right: 270
finally_statement (178)
    on left: 272, on right: 266


State 0

    0 $accept: . program $end

    AT_INTERFACE       shift, and go to state 1
    AT_IMPLEMENTATION  shift, and go to state 2
    ENUM               shift, and go to state 3
    AT_PROTOCOL        shift, and go to state 4
    STRUCT             shift, and go to state 5
    IMPORT             shift, and go to state 6

    program                      go to state 7
    components                   go to state 8
    component                    go to state 9
    class_interface              go to state 10
    class_interface_header       go to state 11
    struct_header                go to state 12
    struct                       go to state 13
    class_implementation         go to state 14
    class_implementation_header  go to state 15
    protocol                     go to state 16
    protocol_header              go to state 17
    enum                         go to state 18


State 1

   11 class_interface_header: AT_INTERFACE . IDENTIFIER SEMI_COLUMN IDENTIFIER
   12                       | AT_INTERFACE . IDENTIFIER
   13                       | AT_INTERFACE . error
   14                       | AT_INTERFACE . IDENTIFIER SEMI_COLUMN error

    error       shift, and go to state 19
    IDENTIFIER  shift, and go to state 20


State 2

  124 class_implementation_header: AT_IMPLEMENTATION . IDENTIFIER SEMI_COLUMN IDENTIFIER
  125                            | AT_IMPLEMENTATION . IDENTIFIER

    IDENTIFIER  shift, and go to state 21


State 3

  260 enum: ENUM . IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  261     | ENUM . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 22


State 4

  255 protocol_header: AT_PROTOCOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 23


State 5

   69 struct_header: STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 24


State 6

    4 components: IMPORT . STRING_VAL SEMI_COMA

    STRING_VAL  shift, and go to state 25


State 7

    0 $accept: program . $end

    $end  shift, and go to state 26


State 8

    1 program: components .
    2 components: components . component

    AT_INTERFACE       shift, and go to state 1
    AT_IMPLEMENTATION  shift, and go to state 2
    ENUM               shift, and go to state 3
    AT_PROTOCOL        shift, and go to state 4
    STRUCT             shift, and go to state 5

    $default  reduce using rule 1 (program)

    component                    go to state 27
    class_interface              go to state 10
    class_interface_header       go to state 11
    struct_header                go to state 12
    struct                       go to state 13
    class_implementation         go to state 14
    class_implementation_header  go to state 15
    protocol                     go to state 16
    protocol_header              go to state 17
    enum                         go to state 18


State 9

    3 components: component .

    $default  reduce using rule 3 (components)


State 10

    5 component: class_interface .

    $default  reduce using rule 5 (component)


State 11

   10 class_interface: class_interface_header . class_interface_body

    OPEN_S     shift, and go to state 28
    LESS_THAN  shift, and go to state 29
    AT_END     shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32

    class_interface_body         go to state 33
    protocol_reference_list      go to state 34
    instance_variables           go to state 35
    interface_declaration_list   go to state 36
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 12

   70 struct: struct_header . OPEN_S CLOSE_S entity SEMI_COMA
   71       | struct_header . OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | struct_header . OPEN_S CLOSE_S SEMI_COMA
   73       | struct_header . OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   74       | struct_header . OPEN_S CLOSE_S entity error SEMI_COMA
   75       | struct_header . OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | struct_header . OPEN_S CLOSE_S error SEMI_COMA
   77       | struct_header . OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA

    OPEN_S  shift, and go to state 40


State 13

    8 component: struct .

    $default  reduce using rule 8 (component)


State 14

    6 component: class_implementation .

    $default  reduce using rule 6 (component)


State 15

  123 class_implementation: class_implementation_header . class_implementation_body

    OPEN_S  shift, and go to state 28
    AT_END  shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    instance_variables                         go to state 44
    class_implementation_body                  go to state 45
    implementation_definition_list             go to state 46
    implementation_definition                  go to state 47
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 16

    7 component: protocol .

    $default  reduce using rule 7 (component)


State 17

  254 protocol: protocol_header . protocol_body

    LESS_THAN  shift, and go to state 29
    AT_END     shift, and go to state 52
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32

    protocol_reference_list      go to state 53
    interface_declaration_list   go to state 54
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39
    protocol_body                go to state 55


State 18

    9 component: enum .

    $default  reduce using rule 9 (component)


State 19

   13 class_interface_header: AT_INTERFACE error .

    $default  reduce using rule 13 (class_interface_header)


State 20

   11 class_interface_header: AT_INTERFACE IDENTIFIER . SEMI_COLUMN IDENTIFIER
   12                       | AT_INTERFACE IDENTIFIER .
   14                       | AT_INTERFACE IDENTIFIER . SEMI_COLUMN error

    SEMI_COLUMN  shift, and go to state 56

    $default  reduce using rule 12 (class_interface_header)


State 21

  124 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER . SEMI_COLUMN IDENTIFIER
  125                            | AT_IMPLEMENTATION IDENTIFIER .

    SEMI_COLUMN  shift, and go to state 57

    $default  reduce using rule 125 (class_implementation_header)


State 22

  260 enum: ENUM IDENTIFIER . OPEN_S list_expr CLOSE_S SEMI_COMA
  261     | ENUM IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 58
    OPEN_S     shift, and go to state 59


State 23

  255 protocol_header: AT_PROTOCOL IDENTIFIER .

    $default  reduce using rule 255 (protocol_header)


State 24

   69 struct_header: STRUCT IDENTIFIER .

    $default  reduce using rule 69 (struct_header)


State 25

    4 components: IMPORT STRING_VAL . SEMI_COMA

    SEMI_COMA  shift, and go to state 60


State 26

    0 $accept: program $end .

    $default  accept


State 27

    2 components: components component .

    $default  reduce using rule 2 (components)


State 28

   44 instance_variables: OPEN_S . instance_variable_declarations CLOSE_S
   45                   | OPEN_S . CLOSE_S

    IDENTIFIER    shift, and go to state 61
    NSSTRING      shift, and go to state 62
    FLOAT         shift, and go to state 63
    CHAR          shift, and go to state 64
    BOOL          shift, and go to state 65
    INT           shift, and go to state 66
    AT_PUBLIC     shift, and go to state 67
    AT_PROTECTED  shift, and go to state 68
    AT_PRIVATE    shift, and go to state 69
    CLOSE_S       shift, and go to state 70
    CONST         shift, and go to state 71
    VOID          shift, and go to state 72
    ENUM          shift, and go to state 73
    STRUCT        shift, and go to state 74

    instance_variable_declarations  go to state 75
    instance_variable_declaration   go to state 76
    variable_declaration_list       go to state 77
    visibility_specification        go to state 78
    variable_declarationxx          go to state 79
    type                            go to state 80
    struct_type                     go to state 81
    enum_type                       go to state 82
    simple_type                     go to state 83
    complex_type                    go to state 84


State 29

   32 protocol_reference_list: LESS_THAN . ids_list_identifier MORE_THAN
   33                        | LESS_THAN . ids_list_identifier error

    IDENTIFIER  shift, and go to state 85

    ids_list_identifier  go to state 86


State 30

   22 class_interface_body: AT_END .

    $default  reduce using rule 22 (class_interface_body)


State 31

  110 class_method_declaration: PLUS . p_type method_selectors SEMI_COMA
  111                         | PLUS . p_type method_selectors error
  112                         | PLUS . method_selectors error

    IDENTIFIER  shift, and go to state 87
    OPEN_P      shift, and go to state 88

    p_type                go to state 89
    method_selectors      go to state 90
    selectors_list        go to state 91
    selector_decleration  go to state 92


State 32

  113 instance_method_declaration: MINUS . p_type method_selectors SEMI_COMA

    OPEN_P  shift, and go to state 88

    p_type  go to state 93


State 33

   10 class_interface: class_interface_header class_interface_body .

    $default  reduce using rule 10 (class_interface)


State 34

   15 class_interface_body: protocol_reference_list . instance_variables interface_declaration_list AT_END
   16                     | protocol_reference_list . instance_variables AT_END
   17                     | protocol_reference_list . interface_declaration_list AT_END
   19                     | protocol_reference_list . AT_END
   23                     | protocol_reference_list . error AT_END
   24                     | protocol_reference_list . error interface_declaration_list AT_END
   25                     | protocol_reference_list . error
   26                     | protocol_reference_list . instance_variables interface_declaration_list error
   27                     | protocol_reference_list . instance_variables error
   28                     | protocol_reference_list . interface_declaration_list error

    error   shift, and go to state 94
    OPEN_S  shift, and go to state 28
    AT_END  shift, and go to state 95
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    instance_variables           go to state 96
    interface_declaration_list   go to state 97
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 35

   18 class_interface_body: instance_variables . interface_declaration_list AT_END
   20                     | instance_variables . AT_END
   29                     | instance_variables . interface_declaration_list error
   30                     | instance_variables . error

    error   shift, and go to state 98
    AT_END  shift, and go to state 99
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 100
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 36

   21 class_interface_body: interface_declaration_list . AT_END
   31                     | interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration

    error   shift, and go to state 101
    AT_END  shift, and go to state 102
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 37

  107 interface_declaration_list: interface_declaration .

    $default  reduce using rule 107 (interface_declaration_list)


State 38

  108 interface_declaration: class_method_declaration .

    $default  reduce using rule 108 (interface_declaration)


State 39

  109 interface_declaration: instance_method_declaration .

    $default  reduce using rule 109 (interface_declaration)


State 40

   70 struct: struct_header OPEN_S . CLOSE_S entity SEMI_COMA
   71       | struct_header OPEN_S . struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | struct_header OPEN_S . CLOSE_S SEMI_COMA
   73       | struct_header OPEN_S . struct_variable_declaration CLOSE_S SEMI_COMA
   74       | struct_header OPEN_S . CLOSE_S entity error SEMI_COMA
   75       | struct_header OPEN_S . struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | struct_header OPEN_S . CLOSE_S error SEMI_COMA
   77       | struct_header OPEN_S . struct_variable_declaration CLOSE_S error SEMI_COMA

    error       shift, and go to state 104
    IDENTIFIER  shift, and go to state 61
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    CLOSE_S     shift, and go to state 105
    CONST       shift, and go to state 71
    VOID        shift, and go to state 72
    ENUM        shift, and go to state 73
    STRUCT      shift, and go to state 74

    struct_variable_declaration  go to state 106
    variable_declarationxx       go to state 107
    struct_declaration_list      go to state 108
    type                         go to state 80
    struct_type                  go to state 81
    enum_type                    go to state 82
    simple_type                  go to state 83
    complex_type                 go to state 84


State 41

  129 class_implementation_body: AT_END .

    $default  reduce using rule 129 (class_implementation_body)


State 42

  135 class_implementation_definition_header: PLUS . p_type method_selectors

    OPEN_P  shift, and go to state 88

    p_type  go to state 109


State 43

  137 instance_implementation_definition_header: MINUS . p_type method_selectors

    OPEN_P  shift, and go to state 88

    p_type  go to state 110


State 44

  126 class_implementation_body: instance_variables . implementation_definition_list AT_END
  127                          | instance_variables . AT_END

    AT_END  shift, and go to state 111
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition_list             go to state 112
    implementation_definition                  go to state 47
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 45

  123 class_implementation: class_implementation_header class_implementation_body .

    $default  reduce using rule 123 (class_implementation)


State 46

  128 class_implementation_body: implementation_definition_list . AT_END
  130 implementation_definition_list: implementation_definition_list . implementation_definition

    AT_END  shift, and go to state 113
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition                  go to state 114
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 47

  131 implementation_definition_list: implementation_definition .

    $default  reduce using rule 131 (implementation_definition_list)


State 48

  132 implementation_definition: class_implementation_definition .

    $default  reduce using rule 132 (implementation_definition)


State 49

  134 class_implementation_definition: class_implementation_definition_header . block_body

    OPEN_S  shift, and go to state 115

    block_body         go to state 116
    block_body_header  go to state 117


State 50

  133 implementation_definition: instance_implementation_definition .

    $default  reduce using rule 133 (implementation_definition)


State 51

  136 instance_implementation_definition: instance_implementation_definition_header . block_body

    OPEN_S  shift, and go to state 115

    block_body         go to state 118
    block_body_header  go to state 117


State 52

  259 protocol_body: AT_END .

    $default  reduce using rule 259 (protocol_body)


State 53

  256 protocol_body: protocol_reference_list . interface_declaration_list AT_END
  258              | protocol_reference_list . AT_END

    AT_END  shift, and go to state 119
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 120
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 54

  106 interface_declaration_list: interface_declaration_list . interface_declaration
  257 protocol_body: interface_declaration_list . AT_END

    AT_END  shift, and go to state 121
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 55

  254 protocol: protocol_header protocol_body .

    $default  reduce using rule 254 (protocol)


State 56

   11 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN . IDENTIFIER
   14                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN . error

    error       shift, and go to state 122
    IDENTIFIER  shift, and go to state 123


State 57

  124 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN . IDENTIFIER

    IDENTIFIER  shift, and go to state 124


State 58

  261 enum: ENUM IDENTIFIER SEMI_COMA .

    $default  reduce using rule 261 (enum)


State 59

  260 enum: ENUM IDENTIFIER OPEN_S . list_expr CLOSE_S SEMI_COMA

    IDENTIFIER  shift, and go to state 125

    list_expr  go to state 126


State 60

    4 components: IMPORT STRING_VAL SEMI_COMA .

    $default  reduce using rule 4 (components)


State 61

   95 complex_type: IDENTIFIER . MULTI

    MULTI  shift, and go to state 127


State 62

   92 simple_type: NSSTRING .

    $default  reduce using rule 92 (simple_type)


State 63

   91 simple_type: FLOAT .

    $default  reduce using rule 91 (simple_type)


State 64

   90 simple_type: CHAR .

    $default  reduce using rule 90 (simple_type)


State 65

   94 simple_type: BOOL .

    $default  reduce using rule 94 (simple_type)


State 66

   89 simple_type: INT .

    $default  reduce using rule 89 (simple_type)


State 67

   54 visibility_specification: AT_PUBLIC .

    $default  reduce using rule 54 (visibility_specification)


State 68

   53 visibility_specification: AT_PROTECTED .

    $default  reduce using rule 53 (visibility_specification)


State 69

   52 visibility_specification: AT_PRIVATE .

    $default  reduce using rule 52 (visibility_specification)


State 70

   45 instance_variables: OPEN_S CLOSE_S .

    $default  reduce using rule 45 (instance_variables)


State 71

   57 variable_declarationxx: CONST . type ids_list SEMI_COMA

    IDENTIFIER  shift, and go to state 61
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    VOID        shift, and go to state 72
    ENUM        shift, and go to state 73
    STRUCT      shift, and go to state 74

    type          go to state 128
    struct_type   go to state 81
    enum_type     go to state 82
    simple_type   go to state 83
    complex_type  go to state 84


State 72

   93 simple_type: VOID .

    $default  reduce using rule 93 (simple_type)


State 73

   87 enum_type: ENUM . IDENTIFIER
   88          | ENUM . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 129


State 74

   85 struct_type: STRUCT . IDENTIFIER
   86            | STRUCT . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 130


State 75

   44 instance_variables: OPEN_S instance_variable_declarations . CLOSE_S
   46 instance_variable_declarations: instance_variable_declarations . instance_variable_declaration

    AT_PUBLIC     shift, and go to state 67
    AT_PROTECTED  shift, and go to state 68
    AT_PRIVATE    shift, and go to state 69
    CLOSE_S       shift, and go to state 131

    instance_variable_declaration  go to state 132
    visibility_specification       go to state 78


State 76

   47 instance_variable_declarations: instance_variable_declaration .

    $default  reduce using rule 47 (instance_variable_declarations)


State 77

   48 instance_variable_declarations: variable_declaration_list .
   50 variable_declaration_list: variable_declaration_list . variable_declarationxx

    IDENTIFIER  shift, and go to state 61
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    CONST       shift, and go to state 71
    VOID        shift, and go to state 72
    ENUM        shift, and go to state 73
    STRUCT      shift, and go to state 74

    $default  reduce using rule 48 (instance_variable_declarations)

    variable_declarationxx  go to state 133
    type                    go to state 80
    struct_type             go to state 81
    enum_type               go to state 82
    simple_type             go to state 83
    complex_type            go to state 84


State 78

   49 instance_variable_declaration: visibility_specification . variable_declaration_list

    IDENTIFIER  shift, and go to state 61
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    CONST       shift, and go to state 71
    VOID        shift, and go to state 72
    ENUM        shift, and go to state 73
    STRUCT      shift, and go to state 74

    variable_declaration_list  go to state 134
    variable_declarationxx     go to state 79
    type                       go to state 80
    struct_type                go to state 81
    enum_type                  go to state 82
    simple_type                go to state 83
    complex_type               go to state 84


State 79

   51 variable_declaration_list: variable_declarationxx .

    $default  reduce using rule 51 (variable_declaration_list)


State 80

   56 variable_declarationxx: type . ids_list SEMI_COMA
   58                       | type . IDENTIFIER array_tag error

    error       shift, and go to state 135
    IDENTIFIER  shift, and go to state 136

    ids_list     go to state 137
    data_member  go to state 138


State 81

   83 type: struct_type .

    $default  reduce using rule 83 (type)


State 82

   84 type: enum_type .

    $default  reduce using rule 84 (type)


State 83

   81 type: simple_type .

    $default  reduce using rule 81 (type)


State 84

   82 type: complex_type .

    $default  reduce using rule 82 (type)


State 85

   35 ids_list_identifier: IDENTIFIER .

    $default  reduce using rule 35 (ids_list_identifier)


State 86

   32 protocol_reference_list: LESS_THAN ids_list_identifier . MORE_THAN
   33                        | LESS_THAN ids_list_identifier . error
   34 ids_list_identifier: ids_list_identifier . COMMA IDENTIFIER

    error      shift, and go to state 139
    COMMA      shift, and go to state 140
    MORE_THAN  shift, and go to state 141


State 87

  116 method_selectors: IDENTIFIER .
  119 selector_decleration: IDENTIFIER . SEMI_COLUMN parameter_list

    SEMI_COLUMN  shift, and go to state 142

    $default  reduce using rule 116 (method_selectors)


State 88

  114 p_type: OPEN_P . type CLOSE_P

    IDENTIFIER  shift, and go to state 61
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    VOID        shift, and go to state 72
    ENUM        shift, and go to state 73
    STRUCT      shift, and go to state 74

    type          go to state 143
    struct_type   go to state 81
    enum_type     go to state 82
    simple_type   go to state 83
    complex_type  go to state 84


State 89

  110 class_method_declaration: PLUS p_type . method_selectors SEMI_COMA
  111                         | PLUS p_type . method_selectors error

    IDENTIFIER  shift, and go to state 87

    method_selectors      go to state 144
    selectors_list        go to state 91
    selector_decleration  go to state 92


State 90

  112 class_method_declaration: PLUS method_selectors . error

    error  shift, and go to state 145


State 91

  115 method_selectors: selectors_list .
  117 selectors_list: selectors_list . selector_decleration

    IDENTIFIER  shift, and go to state 146

    $default  reduce using rule 115 (method_selectors)

    selector_decleration  go to state 147


State 92

  118 selectors_list: selector_decleration .

    $default  reduce using rule 118 (selectors_list)


State 93

  113 instance_method_declaration: MINUS p_type . method_selectors SEMI_COMA

    IDENTIFIER  shift, and go to state 87

    method_selectors      go to state 148
    selectors_list        go to state 91
    selector_decleration  go to state 92


State 94

   23 class_interface_body: protocol_reference_list error . AT_END
   24                     | protocol_reference_list error . interface_declaration_list AT_END
   25                     | protocol_reference_list error .

    AT_END  shift, and go to state 149
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    $default  reduce using rule 25 (class_interface_body)

    interface_declaration_list   go to state 150
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 95

   19 class_interface_body: protocol_reference_list AT_END .

    $default  reduce using rule 19 (class_interface_body)


State 96

   15 class_interface_body: protocol_reference_list instance_variables . interface_declaration_list AT_END
   16                     | protocol_reference_list instance_variables . AT_END
   26                     | protocol_reference_list instance_variables . interface_declaration_list error
   27                     | protocol_reference_list instance_variables . error

    error   shift, and go to state 151
    AT_END  shift, and go to state 152
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 153
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 97

   17 class_interface_body: protocol_reference_list interface_declaration_list . AT_END
   28                     | protocol_reference_list interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration

    error   shift, and go to state 154
    AT_END  shift, and go to state 155
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 98

   30 class_interface_body: instance_variables error .

    $default  reduce using rule 30 (class_interface_body)


State 99

   20 class_interface_body: instance_variables AT_END .

    $default  reduce using rule 20 (class_interface_body)


State 100

   18 class_interface_body: instance_variables interface_declaration_list . AT_END
   29                     | instance_variables interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration

    error   shift, and go to state 156
    AT_END  shift, and go to state 157
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 101

   31 class_interface_body: interface_declaration_list error .

    $default  reduce using rule 31 (class_interface_body)


State 102

   21 class_interface_body: interface_declaration_list AT_END .

    $default  reduce using rule 21 (class_interface_body)


State 103

  106 interface_declaration_list: interface_declaration_list interface_declaration .

    $default  reduce using rule 106 (interface_declaration_list)


State 104

   68 struct_declaration_list: error . variable_declarationxx

    IDENTIFIER  shift, and go to state 61
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    CONST       shift, and go to state 71
    VOID        shift, and go to state 72
    ENUM        shift, and go to state 73
    STRUCT      shift, and go to state 74

    variable_declarationxx  go to state 158
    type                    go to state 80
    struct_type             go to state 81
    enum_type               go to state 82
    simple_type             go to state 83
    complex_type            go to state 84


State 105

   70 struct: struct_header OPEN_S CLOSE_S . entity SEMI_COMA
   72       | struct_header OPEN_S CLOSE_S . SEMI_COMA
   74       | struct_header OPEN_S CLOSE_S . entity error SEMI_COMA
   76       | struct_header OPEN_S CLOSE_S . error SEMI_COMA

    error       shift, and go to state 159
    IDENTIFIER  shift, and go to state 160
    SEMI_COMA   shift, and go to state 161

    entity  go to state 162


State 106

   71 struct: struct_header OPEN_S struct_variable_declaration . CLOSE_S entity SEMI_COMA
   73       | struct_header OPEN_S struct_variable_declaration . CLOSE_S SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration . CLOSE_S entity error SEMI_COMA
   77       | struct_header OPEN_S struct_variable_declaration . CLOSE_S error SEMI_COMA

    CLOSE_S  shift, and go to state 163


State 107

   67 struct_declaration_list: variable_declarationxx .

    $default  reduce using rule 67 (struct_declaration_list)


State 108

   55 struct_variable_declaration: struct_declaration_list .
   66 struct_declaration_list: struct_declaration_list . variable_declarationxx

    IDENTIFIER  shift, and go to state 61
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    CONST       shift, and go to state 71
    VOID        shift, and go to state 72
    ENUM        shift, and go to state 73
    STRUCT      shift, and go to state 74

    $default  reduce using rule 55 (struct_variable_declaration)

    variable_declarationxx  go to state 164
    type                    go to state 80
    struct_type             go to state 81
    enum_type               go to state 82
    simple_type             go to state 83
    complex_type            go to state 84


State 109

  135 class_implementation_definition_header: PLUS p_type . method_selectors

    IDENTIFIER  shift, and go to state 87

    method_selectors      go to state 165
    selectors_list        go to state 91
    selector_decleration  go to state 92


State 110

  137 instance_implementation_definition_header: MINUS p_type . method_selectors

    IDENTIFIER  shift, and go to state 87

    method_selectors      go to state 166
    selectors_list        go to state 91
    selector_decleration  go to state 92


State 111

  127 class_implementation_body: instance_variables AT_END .

    $default  reduce using rule 127 (class_implementation_body)


State 112

  126 class_implementation_body: instance_variables implementation_definition_list . AT_END
  130 implementation_definition_list: implementation_definition_list . implementation_definition

    AT_END  shift, and go to state 167
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition                  go to state 114
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 113

  128 class_implementation_body: implementation_definition_list AT_END .

    $default  reduce using rule 128 (class_implementation_body)


State 114

  130 implementation_definition_list: implementation_definition_list implementation_definition .

    $default  reduce using rule 130 (implementation_definition_list)


State 115

  139 block_body_header: OPEN_S .

    $default  reduce using rule 139 (block_body_header)


State 116

  134 class_implementation_definition: class_implementation_definition_header block_body .

    $default  reduce using rule 134 (class_implementation_definition)


State 117

  138 block_body: block_body_header . block_body_statements

    error       shift, and go to state 168
    IDENTIFIER  shift, and go to state 169
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    OPEN_S      shift, and go to state 115
    CLOSE_S     shift, and go to state 170
    CONST       shift, and go to state 171
    VOID        shift, and go to state 72
    FOR         shift, and go to state 172
    WHILE       shift, and go to state 173
    IF          shift, and go to state 174
    DO          shift, and go to state 175
    SWITCH      shift, and go to state 176
    ENUM        shift, and go to state 177
    OPEN_ARR    shift, and go to state 178
    RETURN      shift, and go to state 179
    STRUCT      shift, and go to state 74
    TRY         shift, and go to state 180
    THROW       shift, and go to state 181
    AT_ASM      shift, and go to state 182

    type                        go to state 183
    struct_type                 go to state 81
    enum_type                   go to state 82
    simple_type                 go to state 83
    complex_type                go to state 84
    block_body                  go to state 184
    block_body_header           go to state 117
    block_body_statements       go to state 185
    statement_list              go to state 186
    statement                   go to state 187
    throw_statement             go to state 188
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 118

  136 instance_implementation_definition: instance_implementation_definition_header block_body .

    $default  reduce using rule 136 (instance_implementation_definition)


State 119

  258 protocol_body: protocol_reference_list AT_END .

    $default  reduce using rule 258 (protocol_body)


State 120

  106 interface_declaration_list: interface_declaration_list . interface_declaration
  256 protocol_body: protocol_reference_list interface_declaration_list . AT_END

    AT_END  shift, and go to state 209
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 121

  257 protocol_body: interface_declaration_list AT_END .

    $default  reduce using rule 257 (protocol_body)


State 122

   14 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN error .

    $default  reduce using rule 14 (class_interface_header)


State 123

   11 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 11 (class_interface_header)


State 124

  124 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 124 (class_implementation_header)


State 125

  262 list_expr: IDENTIFIER . EQUAL expr COMMA list_expr
  263          | IDENTIFIER . EQUAL expr
  264          | IDENTIFIER .
  265          | IDENTIFIER . COMMA list_expr

    COMMA  shift, and go to state 210
    EQUAL  shift, and go to state 211

    $default  reduce using rule 264 (list_expr)


State 126

  260 enum: ENUM IDENTIFIER OPEN_S list_expr . CLOSE_S SEMI_COMA

    CLOSE_S  shift, and go to state 212


State 127

   95 complex_type: IDENTIFIER MULTI .

    $default  reduce using rule 95 (complex_type)


State 128

   57 variable_declarationxx: CONST type . ids_list SEMI_COMA

    error       shift, and go to state 135
    IDENTIFIER  shift, and go to state 213

    ids_list     go to state 214
    data_member  go to state 138


State 129

   87 enum_type: ENUM IDENTIFIER .
   88          | ENUM IDENTIFIER . MULTI

    MULTI  shift, and go to state 215

    $default  reduce using rule 87 (enum_type)


State 130

   85 struct_type: STRUCT IDENTIFIER .
   86            | STRUCT IDENTIFIER . MULTI

    MULTI  shift, and go to state 216

    $default  reduce using rule 85 (struct_type)


State 131

   44 instance_variables: OPEN_S instance_variable_declarations CLOSE_S .

    $default  reduce using rule 44 (instance_variables)


State 132

   46 instance_variable_declarations: instance_variable_declarations instance_variable_declaration .

    $default  reduce using rule 46 (instance_variable_declarations)


State 133

   50 variable_declaration_list: variable_declaration_list variable_declarationxx .

    $default  reduce using rule 50 (variable_declaration_list)


State 134

   49 instance_variable_declaration: visibility_specification variable_declaration_list .
   50 variable_declaration_list: variable_declaration_list . variable_declarationxx

    IDENTIFIER  shift, and go to state 61
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    CONST       shift, and go to state 71
    VOID        shift, and go to state 72
    ENUM        shift, and go to state 73
    STRUCT      shift, and go to state 74

    $default  reduce using rule 49 (instance_variable_declaration)

    variable_declarationxx  go to state 133
    type                    go to state 80
    struct_type             go to state 81
    enum_type               go to state 82
    simple_type             go to state 83
    complex_type            go to state 84


State 135

   61 ids_list: error .
   64 data_member: error . array_tag

    OPEN_ARR  shift, and go to state 217

    $default  reduce using rule 61 (ids_list)

    array_tag        go to state 218
    array_first_tag  go to state 219


State 136

   58 variable_declarationxx: type IDENTIFIER . array_tag error
   62 data_member: IDENTIFIER . array_tag
   63            | IDENTIFIER .
   65            | IDENTIFIER . error

    error     shift, and go to state 220
    OPEN_ARR  shift, and go to state 217

    SEMI_COMA  reduce using rule 63 (data_member)
    COMMA      reduce using rule 63 (data_member)

    array_tag        go to state 221
    array_first_tag  go to state 219


State 137

   56 variable_declarationxx: type ids_list . SEMI_COMA
   59 ids_list: ids_list . COMMA data_member

    SEMI_COMA  shift, and go to state 222
    COMMA      shift, and go to state 223


State 138

   60 ids_list: data_member .

    $default  reduce using rule 60 (ids_list)


State 139

   33 protocol_reference_list: LESS_THAN ids_list_identifier error .

    $default  reduce using rule 33 (protocol_reference_list)


State 140

   34 ids_list_identifier: ids_list_identifier COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 224


State 141

   32 protocol_reference_list: LESS_THAN ids_list_identifier MORE_THAN .

    $default  reduce using rule 32 (protocol_reference_list)


State 142

  119 selector_decleration: IDENTIFIER SEMI_COLUMN . parameter_list

    OPEN_P  shift, and go to state 88

    p_type          go to state 225
    parameter_list  go to state 226
    parameter       go to state 227


State 143

  114 p_type: OPEN_P type . CLOSE_P

    CLOSE_P  shift, and go to state 228


State 144

  110 class_method_declaration: PLUS p_type method_selectors . SEMI_COMA
  111                         | PLUS p_type method_selectors . error

    error      shift, and go to state 229
    SEMI_COMA  shift, and go to state 230


State 145

  112 class_method_declaration: PLUS method_selectors error .

    $default  reduce using rule 112 (class_method_declaration)


State 146

  119 selector_decleration: IDENTIFIER . SEMI_COLUMN parameter_list

    SEMI_COLUMN  shift, and go to state 142


State 147

  117 selectors_list: selectors_list selector_decleration .

    $default  reduce using rule 117 (selectors_list)


State 148

  113 instance_method_declaration: MINUS p_type method_selectors . SEMI_COMA

    SEMI_COMA  shift, and go to state 231


State 149

   23 class_interface_body: protocol_reference_list error AT_END .

    $default  reduce using rule 23 (class_interface_body)


State 150

   24 class_interface_body: protocol_reference_list error interface_declaration_list . AT_END
  106 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 232
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 151

   27 class_interface_body: protocol_reference_list instance_variables error .

    $default  reduce using rule 27 (class_interface_body)


State 152

   16 class_interface_body: protocol_reference_list instance_variables AT_END .

    $default  reduce using rule 16 (class_interface_body)


State 153

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list . AT_END
   26                     | protocol_reference_list instance_variables interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration

    error   shift, and go to state 233
    AT_END  shift, and go to state 234
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 154

   28 class_interface_body: protocol_reference_list interface_declaration_list error .

    $default  reduce using rule 28 (class_interface_body)


State 155

   17 class_interface_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 17 (class_interface_body)


State 156

   29 class_interface_body: instance_variables interface_declaration_list error .

    $default  reduce using rule 29 (class_interface_body)


State 157

   18 class_interface_body: instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 18 (class_interface_body)


State 158

   68 struct_declaration_list: error variable_declarationxx .

    $default  reduce using rule 68 (struct_declaration_list)


State 159

   76 struct: struct_header OPEN_S CLOSE_S error . SEMI_COMA
   80 entity: error . COMMA

    SEMI_COMA  shift, and go to state 235
    COMMA      shift, and go to state 236


State 160

   78 entity: IDENTIFIER . COMMA entity
   79       | IDENTIFIER .

    COMMA  shift, and go to state 237

    $default  reduce using rule 79 (entity)


State 161

   72 struct: struct_header OPEN_S CLOSE_S SEMI_COMA .

    $default  reduce using rule 72 (struct)


State 162

   70 struct: struct_header OPEN_S CLOSE_S entity . SEMI_COMA
   74       | struct_header OPEN_S CLOSE_S entity . error SEMI_COMA

    error      shift, and go to state 238
    SEMI_COMA  shift, and go to state 239


State 163

   71 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S . entity SEMI_COMA
   73       | struct_header OPEN_S struct_variable_declaration CLOSE_S . SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration CLOSE_S . entity error SEMI_COMA
   77       | struct_header OPEN_S struct_variable_declaration CLOSE_S . error SEMI_COMA

    error       shift, and go to state 240
    IDENTIFIER  shift, and go to state 160
    SEMI_COMA   shift, and go to state 241

    entity  go to state 242


State 164

   66 struct_declaration_list: struct_declaration_list variable_declarationxx .

    $default  reduce using rule 66 (struct_declaration_list)


State 165

  135 class_implementation_definition_header: PLUS p_type method_selectors .

    $default  reduce using rule 135 (class_implementation_definition_header)


State 166

  137 instance_implementation_definition_header: MINUS p_type method_selectors .

    $default  reduce using rule 137 (instance_implementation_definition_header)


State 167

  126 class_implementation_body: instance_variables implementation_definition_list AT_END .

    $default  reduce using rule 126 (class_implementation_body)


State 168

  142 block_body_statements: error . CLOSE_S
  155 statement: error . SEMI_COMA

    SEMI_COMA  shift, and go to state 243
    CLOSE_S    shift, and go to state 244


State 169

   95 complex_type: IDENTIFIER . MULTI
  204 long_id: IDENTIFIER .

    MULTI  shift, and go to state 127

    $default  reduce using rule 204 (long_id)


State 170

  141 block_body_statements: CLOSE_S .

    $default  reduce using rule 141 (block_body_statements)


State 171

  159 variable_declaration_block: CONST . type variable_list SEMI_COMA

    IDENTIFIER  shift, and go to state 61
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    VOID        shift, and go to state 72
    ENUM        shift, and go to state 73
    STRUCT      shift, and go to state 74

    type          go to state 245
    struct_type   go to state 81
    enum_type     go to state 82
    simple_type   go to state 83
    complex_type  go to state 84


State 172

  174 for_loop_header: FOR . OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  175                | FOR . OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | FOR . OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  178                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  179                | FOR . OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  180                | FOR . OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  181                | FOR . OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

    OPEN_P  shift, and go to state 246


State 173

  235 while_loop_header: WHILE . OPEN_P logic_expr1 CLOSE_P

    OPEN_P  shift, and go to state 247


State 174

  239 if_header: IF . OPEN_P logic_expr1 CLOSE_P

    OPEN_P  shift, and go to state 248


State 175

  172 do_header: DO .

    $default  reduce using rule 172 (do_header)


State 176

  240 switch_header: SWITCH . OPEN_P IDENTIFIER CLOSE_P switch_body_block

    OPEN_P  shift, and go to state 249


State 177

   87 enum_type: ENUM . IDENTIFIER
   88          | ENUM . IDENTIFIER MULTI
  260 enum: ENUM . IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  261     | ENUM . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 250


State 178

  222 message_call2: OPEN_ARR .

    $default  reduce using rule 222 (message_call2)


State 179

  167 return_statement: RETURN . expr SEMI_COMA

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    expr           go to state 260
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 180

  266 try_catch: TRY . statement catch_list finally_statement
  267          | TRY . statement catch_list

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 169
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 171
    VOID        shift, and go to state 72
    FOR         shift, and go to state 172
    WHILE       shift, and go to state 173
    IF          shift, and go to state 174
    DO          shift, and go to state 175
    SWITCH      shift, and go to state 176
    ENUM        shift, and go to state 177
    OPEN_ARR    shift, and go to state 178
    RETURN      shift, and go to state 179
    STRUCT      shift, and go to state 74
    TRY         shift, and go to state 180
    THROW       shift, and go to state 181
    AT_ASM      shift, and go to state 182

    type                        go to state 183
    struct_type                 go to state 81
    enum_type                   go to state 82
    simple_type                 go to state 83
    complex_type                go to state 84
    block_body                  go to state 184
    block_body_header           go to state 117
    statement                   go to state 265
    throw_statement             go to state 188
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 181

  156 throw_statement: THROW . OPEN_P message_call CLOSE_P SEMI_COMA

    OPEN_P  shift, and go to state 266


State 182

  157 asm: AT_ASM . STRING_VAL SEMI_COMA

    STRING_VAL  shift, and go to state 267


State 183

  158 variable_declaration_block: type . variable_list SEMI_COMA

    error       shift, and go to state 268
    IDENTIFIER  shift, and go to state 269

    variable_list  go to state 270
    variable       go to state 271


State 184

  149 statement: block_body .

    $default  reduce using rule 149 (statement)


State 185

  138 block_body: block_body_header block_body_statements .

    $default  reduce using rule 138 (block_body)


State 186

  140 block_body_statements: statement_list . CLOSE_S
  143 statement_list: statement_list . statement

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 169
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    OPEN_S      shift, and go to state 115
    CLOSE_S     shift, and go to state 272
    CONST       shift, and go to state 171
    VOID        shift, and go to state 72
    FOR         shift, and go to state 172
    WHILE       shift, and go to state 173
    IF          shift, and go to state 174
    DO          shift, and go to state 175
    SWITCH      shift, and go to state 176
    ENUM        shift, and go to state 177
    OPEN_ARR    shift, and go to state 178
    RETURN      shift, and go to state 179
    STRUCT      shift, and go to state 74
    TRY         shift, and go to state 180
    THROW       shift, and go to state 181
    AT_ASM      shift, and go to state 182

    type                        go to state 183
    struct_type                 go to state 81
    enum_type                   go to state 82
    simple_type                 go to state 83
    complex_type                go to state 84
    block_body                  go to state 184
    block_body_header           go to state 117
    statement                   go to state 273
    throw_statement             go to state 188
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 187

  144 statement_list: statement .

    $default  reduce using rule 144 (statement_list)


State 188

  154 statement: throw_statement .

    $default  reduce using rule 154 (statement)


State 189

  152 statement: asm .

    $default  reduce using rule 152 (statement)


State 190

  148 statement: variable_declaration_block .

    $default  reduce using rule 148 (statement)


State 191

  150 statement: return_statement .

    $default  reduce using rule 150 (statement)


State 192

  145 statement: loop_statement .

    $default  reduce using rule 145 (statement)


State 193

  170 loop_statement: do_while .

    $default  reduce using rule 170 (loop_statement)


State 194

  171 do_while: do_header . statement while_loop_header SEMI_COMA

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 169
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 171
    VOID        shift, and go to state 72
    FOR         shift, and go to state 172
    WHILE       shift, and go to state 173
    IF          shift, and go to state 174
    DO          shift, and go to state 175
    SWITCH      shift, and go to state 176
    ENUM        shift, and go to state 177
    OPEN_ARR    shift, and go to state 178
    RETURN      shift, and go to state 179
    STRUCT      shift, and go to state 74
    TRY         shift, and go to state 180
    THROW       shift, and go to state 181
    AT_ASM      shift, and go to state 182

    type                        go to state 183
    struct_type                 go to state 81
    enum_type                   go to state 82
    simple_type                 go to state 83
    complex_type                go to state 84
    block_body                  go to state 184
    block_body_header           go to state 117
    statement                   go to state 274
    throw_statement             go to state 188
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 195

  168 loop_statement: for_loop .

    $default  reduce using rule 168 (loop_statement)


State 196

  173 for_loop: for_loop_header . statement

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 169
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 171
    VOID        shift, and go to state 72
    FOR         shift, and go to state 172
    WHILE       shift, and go to state 173
    IF          shift, and go to state 174
    DO          shift, and go to state 175
    SWITCH      shift, and go to state 176
    ENUM        shift, and go to state 177
    OPEN_ARR    shift, and go to state 178
    RETURN      shift, and go to state 179
    STRUCT      shift, and go to state 74
    TRY         shift, and go to state 180
    THROW       shift, and go to state 181
    AT_ASM      shift, and go to state 182

    type                        go to state 183
    struct_type                 go to state 81
    enum_type                   go to state 82
    simple_type                 go to state 83
    complex_type                go to state 84
    block_body                  go to state 184
    block_body_header           go to state 117
    statement                   go to state 275
    throw_statement             go to state 188
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 197

  147 statement: assign_expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 276


State 198

  153 statement: long_id . SEMI_COMA
  201 assign_expr: long_id . EQUAL simple_expr
  202 long_id: long_id . DOT IDENTIFIER
  206 array_access: long_id . OPEN_ARR simple_expr CLOSE_ARR

    SEMI_COMA  shift, and go to state 277
    EQUAL      shift, and go to state 278
    OPEN_ARR   shift, and go to state 279
    DOT        shift, and go to state 280


State 199

  205 long_id: array_access .

    $default  reduce using rule 205 (long_id)


State 200

  223 message_call: message_call2 . sender message CLOSE_ARR

    IDENTIFIER  shift, and go to state 281
    OPEN_ARR    shift, and go to state 178

    message_call2  go to state 200
    message_call   go to state 282
    sender         go to state 283


State 201

  203 long_id: message_call .

    $default  reduce using rule 203 (long_id)


State 202

  169 loop_statement: while_loop .

    $default  reduce using rule 169 (loop_statement)


State 203

  234 while_loop: while_loop_header . statement

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 169
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 171
    VOID        shift, and go to state 72
    FOR         shift, and go to state 172
    WHILE       shift, and go to state 173
    IF          shift, and go to state 174
    DO          shift, and go to state 175
    SWITCH      shift, and go to state 176
    ENUM        shift, and go to state 177
    OPEN_ARR    shift, and go to state 178
    RETURN      shift, and go to state 179
    STRUCT      shift, and go to state 74
    TRY         shift, and go to state 180
    THROW       shift, and go to state 181
    AT_ASM      shift, and go to state 182

    type                        go to state 183
    struct_type                 go to state 81
    enum_type                   go to state 82
    simple_type                 go to state 83
    complex_type                go to state 84
    block_body                  go to state 184
    block_body_header           go to state 117
    statement                   go to state 284
    throw_statement             go to state 188
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 204

  146 statement: conditional_statement .

    $default  reduce using rule 146 (statement)


State 205

  236 conditional_statement: if_header . statement
  237                      | if_header . statement ELSE statement

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 169
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 171
    VOID        shift, and go to state 72
    FOR         shift, and go to state 172
    WHILE       shift, and go to state 173
    IF          shift, and go to state 174
    DO          shift, and go to state 175
    SWITCH      shift, and go to state 176
    ENUM        shift, and go to state 177
    OPEN_ARR    shift, and go to state 178
    RETURN      shift, and go to state 179
    STRUCT      shift, and go to state 74
    TRY         shift, and go to state 180
    THROW       shift, and go to state 181
    AT_ASM      shift, and go to state 182

    type                        go to state 183
    struct_type                 go to state 81
    enum_type                   go to state 82
    simple_type                 go to state 83
    complex_type                go to state 84
    block_body                  go to state 184
    block_body_header           go to state 117
    statement                   go to state 285
    throw_statement             go to state 188
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 206

  238 conditional_statement: switch_header . switch_body

    CLOSE_S  shift, and go to state 286
    CASE     shift, and go to state 287
    DEFAULT  shift, and go to state 288

    switch_body   go to state 289
    list_of_case  go to state 290
    case_body     go to state 291
    default_case  go to state 292


State 207

  160 variable_declaration_block: enum .

    $default  reduce using rule 160 (variable_declaration_block)


State 208

  151 statement: try_catch .

    $default  reduce using rule 151 (statement)


State 209

  256 protocol_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 256 (protocol_body)


State 210

  265 list_expr: IDENTIFIER COMMA . list_expr

    IDENTIFIER  shift, and go to state 125

    list_expr  go to state 293


State 211

  262 list_expr: IDENTIFIER EQUAL . expr COMMA list_expr
  263          | IDENTIFIER EQUAL . expr

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    expr           go to state 294
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 212

  260 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 295


State 213

   62 data_member: IDENTIFIER . array_tag
   63            | IDENTIFIER .
   65            | IDENTIFIER . error

    error     shift, and go to state 220
    OPEN_ARR  shift, and go to state 217

    SEMI_COMA  reduce using rule 63 (data_member)
    COMMA      reduce using rule 63 (data_member)

    array_tag        go to state 296
    array_first_tag  go to state 219


State 214

   57 variable_declarationxx: CONST type ids_list . SEMI_COMA
   59 ids_list: ids_list . COMMA data_member

    SEMI_COMA  shift, and go to state 297
    COMMA      shift, and go to state 223


State 215

   88 enum_type: ENUM IDENTIFIER MULTI .

    $default  reduce using rule 88 (enum_type)


State 216

   86 struct_type: STRUCT IDENTIFIER MULTI .

    $default  reduce using rule 86 (struct_type)


State 217

  100 array_first_tag: OPEN_ARR . INT_VAL CLOSE_ARR
  101                | OPEN_ARR . CLOSE_ARR

    INT_VAL    shift, and go to state 298
    CLOSE_ARR  shift, and go to state 299


State 218

   64 data_member: error array_tag .

    $default  reduce using rule 64 (data_member)


State 219

   96 array_tag: array_first_tag . array_tag_list

    $default  reduce using rule 98 (array_tag_list)

    array_tag_list  go to state 300


State 220

   65 data_member: IDENTIFIER error .

    $default  reduce using rule 65 (data_member)


State 221

   58 variable_declarationxx: type IDENTIFIER array_tag . error
   62 data_member: IDENTIFIER array_tag .

    error  shift, and go to state 301

    SEMI_COMA  reduce using rule 62 (data_member)
    COMMA      reduce using rule 62 (data_member)


State 222

   56 variable_declarationxx: type ids_list SEMI_COMA .

    $default  reduce using rule 56 (variable_declarationxx)


State 223

   59 ids_list: ids_list COMMA . data_member

    error       shift, and go to state 302
    IDENTIFIER  shift, and go to state 213

    data_member  go to state 303


State 224

   34 ids_list_identifier: ids_list_identifier COMMA IDENTIFIER .

    $default  reduce using rule 34 (ids_list_identifier)


State 225

  122 parameter: p_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 304


State 226

  119 selector_decleration: IDENTIFIER SEMI_COLUMN parameter_list .
  120 parameter_list: parameter_list . SEMI_COLUMN parameter

    SEMI_COLUMN  shift, and go to state 305

    $default  reduce using rule 119 (selector_decleration)


State 227

  121 parameter_list: parameter .

    $default  reduce using rule 121 (parameter_list)


State 228

  114 p_type: OPEN_P type CLOSE_P .

    $default  reduce using rule 114 (p_type)


State 229

  111 class_method_declaration: PLUS p_type method_selectors error .

    $default  reduce using rule 111 (class_method_declaration)


State 230

  110 class_method_declaration: PLUS p_type method_selectors SEMI_COMA .

    $default  reduce using rule 110 (class_method_declaration)


State 231

  113 instance_method_declaration: MINUS p_type method_selectors SEMI_COMA .

    $default  reduce using rule 113 (instance_method_declaration)


State 232

   24 class_interface_body: protocol_reference_list error interface_declaration_list AT_END .

    $default  reduce using rule 24 (class_interface_body)


State 233

   26 class_interface_body: protocol_reference_list instance_variables interface_declaration_list error .

    $default  reduce using rule 26 (class_interface_body)


State 234

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 15 (class_interface_body)


State 235

   76 struct: struct_header OPEN_S CLOSE_S error SEMI_COMA .

    $default  reduce using rule 76 (struct)


State 236

   80 entity: error COMMA .

    $default  reduce using rule 80 (entity)


State 237

   78 entity: IDENTIFIER COMMA . entity

    error       shift, and go to state 306
    IDENTIFIER  shift, and go to state 160

    entity  go to state 307


State 238

   74 struct: struct_header OPEN_S CLOSE_S entity error . SEMI_COMA

    SEMI_COMA  shift, and go to state 308


State 239

   70 struct: struct_header OPEN_S CLOSE_S entity SEMI_COMA .

    $default  reduce using rule 70 (struct)


State 240

   77 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S error . SEMI_COMA
   80 entity: error . COMMA

    SEMI_COMA  shift, and go to state 309
    COMMA      shift, and go to state 236


State 241

   73 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA .

    $default  reduce using rule 73 (struct)


State 242

   71 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity . SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity . error SEMI_COMA

    error      shift, and go to state 310
    SEMI_COMA  shift, and go to state 311


State 243

  155 statement: error SEMI_COMA .

    $default  reduce using rule 155 (statement)


State 244

  142 block_body_statements: error CLOSE_S .

    $default  reduce using rule 142 (block_body_statements)


State 245

  159 variable_declaration_block: CONST type . variable_list SEMI_COMA

    error       shift, and go to state 268
    IDENTIFIER  shift, and go to state 269

    variable_list  go to state 312
    variable       go to state 271


State 246

  174 for_loop_header: FOR OPEN_P . for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  175                | FOR OPEN_P . SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | FOR OPEN_P . for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  178                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  179                | FOR OPEN_P . SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  180                | FOR OPEN_P . SEMI_COMA SEMI_COMA expr CLOSE_P
  181                | FOR OPEN_P . SEMI_COMA SEMI_COMA CLOSE_P

    IDENTIFIER  shift, and go to state 313
    INT         shift, and go to state 314
    SEMI_COMA   shift, and go to state 315

    for_initializer  go to state 316


State 247

  235 while_loop_header: WHILE OPEN_P . logic_expr1 CLOSE_P

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 317
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    NOT_EQUAL    shift, and go to state 318
    OPEN_ARR     shift, and go to state 178
    TRUE         shift, and go to state 319
    FALSE        shift, and go to state 320
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    logic_expr1    go to state 321
    logic_expr     go to state 322
    expr           go to state 323
    assign_expr    go to state 261
    long_id        go to state 324
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 248

  239 if_header: IF OPEN_P . logic_expr1 CLOSE_P

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 317
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    NOT_EQUAL    shift, and go to state 318
    OPEN_ARR     shift, and go to state 178
    TRUE         shift, and go to state 319
    FALSE        shift, and go to state 320
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    logic_expr1    go to state 325
    logic_expr     go to state 322
    expr           go to state 323
    assign_expr    go to state 261
    long_id        go to state 324
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 249

  240 switch_header: SWITCH OPEN_P . IDENTIFIER CLOSE_P switch_body_block

    IDENTIFIER  shift, and go to state 326


State 250

   87 enum_type: ENUM IDENTIFIER .
   88          | ENUM IDENTIFIER . MULTI
  260 enum: ENUM IDENTIFIER . OPEN_S list_expr CLOSE_S SEMI_COMA
  261     | ENUM IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 58
    OPEN_S     shift, and go to state 59
    MULTI      shift, and go to state 215

    $default  reduce using rule 87 (enum_type)


State 251

  204 long_id: IDENTIFIER .
  217 simple_expr: IDENTIFIER . DOUBLEPLUS
  218            | IDENTIFIER . DOUBLEMINUS

    DOUBLEPLUS   shift, and go to state 327
    DOUBLEMINUS  shift, and go to state 328

    $default  reduce using rule 204 (long_id)


State 252

  114 p_type: OPEN_P . type CLOSE_P
  216 simple_expr: OPEN_P . simple_expr CLOSE_P

    IDENTIFIER   shift, and go to state 329
    NSSTRING     shift, and go to state 62
    FLOAT        shift, and go to state 63
    CHAR         shift, and go to state 64
    BOOL         shift, and go to state 65
    INT          shift, and go to state 66
    VOID         shift, and go to state 72
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    ENUM         shift, and go to state 73
    OPEN_ARR     shift, and go to state 178
    STRUCT       shift, and go to state 74
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    type           go to state 143
    struct_type    go to state 81
    enum_type      go to state 82
    simple_type    go to state 83
    complex_type   go to state 84
    p_type         go to state 259
    long_id        go to state 330
    array_access   go to state 199
    simple_expr    go to state 331
    message_call2  go to state 200
    message_call   go to state 201


State 253

  207 simple_expr: STRING_VAL .

    $default  reduce using rule 207 (simple_expr)


State 254

  209 simple_expr: FLOAT_VAL .

    $default  reduce using rule 209 (simple_expr)


State 255

  210 simple_expr: CHAR_VAL .

    $default  reduce using rule 210 (simple_expr)


State 256

  208 simple_expr: INT_VAL .

    $default  reduce using rule 208 (simple_expr)


State 257

  219 simple_expr: DOUBLEPLUS . IDENTIFIER

    IDENTIFIER  shift, and go to state 332


State 258

  220 simple_expr: DOUBLEMINUS . IDENTIFIER

    IDENTIFIER  shift, and go to state 333


State 259

  221 simple_expr: p_type . simple_expr

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    long_id        go to state 330
    array_access   go to state 199
    simple_expr    go to state 334
    message_call2  go to state 200
    message_call   go to state 201


State 260

  167 return_statement: RETURN expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 335


State 261

  199 expr: assign_expr .

    $default  reduce using rule 199 (expr)


State 262

  201 assign_expr: long_id . EQUAL simple_expr
  202 long_id: long_id . DOT IDENTIFIER
  206 array_access: long_id . OPEN_ARR simple_expr CLOSE_ARR
  211 simple_expr: long_id .

    EQUAL     shift, and go to state 278
    OPEN_ARR  shift, and go to state 279
    DOT       shift, and go to state 280

    $default  reduce using rule 211 (simple_expr)


State 263

  200 expr: simple_expr .
  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 336
    MINUS  shift, and go to state 337
    MULTI  shift, and go to state 338
    DIV    shift, and go to state 339

    $default  reduce using rule 200 (expr)


State 264

  155 statement: error . SEMI_COMA

    SEMI_COMA  shift, and go to state 243


State 265

  266 try_catch: TRY statement . catch_list finally_statement
  267          | TRY statement . catch_list

    CATCH  shift, and go to state 340

    catch_list        go to state 341
    one_catch         go to state 342
    one_catch_header  go to state 343


State 266

  156 throw_statement: THROW OPEN_P . message_call CLOSE_P SEMI_COMA

    OPEN_ARR  shift, and go to state 178

    message_call2  go to state 200
    message_call   go to state 344


State 267

  157 asm: AT_ASM STRING_VAL . SEMI_COMA

    SEMI_COMA  shift, and go to state 345


State 268

  166 variable: error . array_tag initializer

    OPEN_ARR  shift, and go to state 217

    array_tag        go to state 346
    array_first_tag  go to state 219


State 269

  164 variable: IDENTIFIER . array_tag initializer
  165         | IDENTIFIER . main_initializer

    EQUAL     shift, and go to state 347
    OPEN_ARR  shift, and go to state 217

    $default  reduce using rule 105 (main_initializer)

    array_tag         go to state 348
    array_first_tag   go to state 219
    main_initializer  go to state 349


State 270

  158 variable_declaration_block: type variable_list . SEMI_COMA
  161 variable_list: variable_list . COMMA variable
  163              | variable_list . error variable

    error      shift, and go to state 350
    SEMI_COMA  shift, and go to state 351
    COMMA      shift, and go to state 352


State 271

  162 variable_list: variable .

    $default  reduce using rule 162 (variable_list)


State 272

  140 block_body_statements: statement_list CLOSE_S .

    $default  reduce using rule 140 (block_body_statements)


State 273

  143 statement_list: statement_list statement .

    $default  reduce using rule 143 (statement_list)


State 274

  171 do_while: do_header statement . while_loop_header SEMI_COMA

    WHILE  shift, and go to state 173

    while_loop_header  go to state 353


State 275

  173 for_loop: for_loop_header statement .

    $default  reduce using rule 173 (for_loop)


State 276

  147 statement: assign_expr SEMI_COMA .

    $default  reduce using rule 147 (statement)


State 277

  153 statement: long_id SEMI_COMA .

    $default  reduce using rule 153 (statement)


State 278

  201 assign_expr: long_id EQUAL . simple_expr

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    long_id        go to state 330
    array_access   go to state 199
    simple_expr    go to state 354
    message_call2  go to state 200
    message_call   go to state 201


State 279

  206 array_access: long_id OPEN_ARR . simple_expr CLOSE_ARR

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    long_id        go to state 330
    array_access   go to state 199
    simple_expr    go to state 355
    message_call2  go to state 200
    message_call   go to state 201


State 280

  202 long_id: long_id DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 356


State 281

  225 sender: IDENTIFIER .

    $default  reduce using rule 225 (sender)


State 282

  224 sender: message_call .

    $default  reduce using rule 224 (sender)


State 283

  223 message_call: message_call2 sender . message CLOSE_ARR

    IDENTIFIER  shift, and go to state 357

    message                 go to state 358
    message_selectors_list  go to state 359
    message_selector        go to state 360


State 284

  234 while_loop: while_loop_header statement .

    $default  reduce using rule 234 (while_loop)


State 285

  236 conditional_statement: if_header statement .
  237                      | if_header statement . ELSE statement

    ELSE  shift, and go to state 361

    $default  reduce using rule 236 (conditional_statement)


State 286

  245 switch_body: CLOSE_S .

    $default  reduce using rule 245 (switch_body)


State 287

  248 case_body: CASE . expr SEMI_COLUMN statement BREAK SEMI_COMA
  249          | CASE . expr SEMI_COLUMN statement
  250          | CASE . expr SEMI_COLUMN BREAK SEMI_COMA

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    expr           go to state 362
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 288

  251 default_case: DEFAULT . SEMI_COLUMN statement BREAK SEMI_COMA
  252             | DEFAULT . SEMI_COLUMN statement
  253             | DEFAULT . SEMI_COLUMN BREAK SEMI_COMA

    SEMI_COLUMN  shift, and go to state 363


State 289

  238 conditional_statement: switch_header switch_body .

    $default  reduce using rule 238 (conditional_statement)


State 290

  242 switch_body: list_of_case . default_case CLOSE_S
  243            | list_of_case . CLOSE_S
  246 list_of_case: list_of_case . case_body

    CLOSE_S  shift, and go to state 364
    CASE     shift, and go to state 287
    DEFAULT  shift, and go to state 288

    case_body     go to state 365
    default_case  go to state 366


State 291

  247 list_of_case: case_body .

    $default  reduce using rule 247 (list_of_case)


State 292

  244 switch_body: default_case . CLOSE_S

    CLOSE_S  shift, and go to state 367


State 293

  265 list_expr: IDENTIFIER COMMA list_expr .

    $default  reduce using rule 265 (list_expr)


State 294

  262 list_expr: IDENTIFIER EQUAL expr . COMMA list_expr
  263          | IDENTIFIER EQUAL expr .

    COMMA  shift, and go to state 368

    $default  reduce using rule 263 (list_expr)


State 295

  260 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA .

    $default  reduce using rule 260 (enum)


State 296

   62 data_member: IDENTIFIER array_tag .

    $default  reduce using rule 62 (data_member)


State 297

   57 variable_declarationxx: CONST type ids_list SEMI_COMA .

    $default  reduce using rule 57 (variable_declarationxx)


State 298

  100 array_first_tag: OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 369


State 299

  101 array_first_tag: OPEN_ARR CLOSE_ARR .

    $default  reduce using rule 101 (array_first_tag)


State 300

   96 array_tag: array_first_tag array_tag_list .
   97 array_tag_list: array_tag_list . OPEN_ARR INT_VAL CLOSE_ARR
   99               | array_tag_list . OPEN_ARR error CLOSE_ARR

    OPEN_ARR  shift, and go to state 370

    $default  reduce using rule 96 (array_tag)


State 301

   58 variable_declarationxx: type IDENTIFIER array_tag error .

    $default  reduce using rule 58 (variable_declarationxx)


State 302

   64 data_member: error . array_tag

    OPEN_ARR  shift, and go to state 217

    array_tag        go to state 218
    array_first_tag  go to state 219


State 303

   59 ids_list: ids_list COMMA data_member .

    $default  reduce using rule 59 (ids_list)


State 304

  122 parameter: p_type IDENTIFIER .

    $default  reduce using rule 122 (parameter)


State 305

  120 parameter_list: parameter_list SEMI_COLUMN . parameter

    OPEN_P  shift, and go to state 88

    p_type     go to state 225
    parameter  go to state 371


State 306

   80 entity: error . COMMA

    COMMA  shift, and go to state 236


State 307

   78 entity: IDENTIFIER COMMA entity .

    $default  reduce using rule 78 (entity)


State 308

   74 struct: struct_header OPEN_S CLOSE_S entity error SEMI_COMA .

    $default  reduce using rule 74 (struct)


State 309

   77 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA .

    $default  reduce using rule 77 (struct)


State 310

   75 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity error . SEMI_COMA

    SEMI_COMA  shift, and go to state 372


State 311

   71 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA .

    $default  reduce using rule 71 (struct)


State 312

  159 variable_declaration_block: CONST type variable_list . SEMI_COMA
  161 variable_list: variable_list . COMMA variable
  163              | variable_list . error variable

    error      shift, and go to state 350
    SEMI_COMA  shift, and go to state 373
    COMMA      shift, and go to state 352


State 313

  183 for_initializer: IDENTIFIER . EQUAL expr
  184                | IDENTIFIER .

    EQUAL  shift, and go to state 374

    $default  reduce using rule 184 (for_initializer)


State 314

  182 for_initializer: INT . IDENTIFIER EQUAL expr

    IDENTIFIER  shift, and go to state 375


State 315

  175 for_loop_header: FOR OPEN_P SEMI_COMA . logic_expr1 SEMI_COMA expr CLOSE_P
  179                | FOR OPEN_P SEMI_COMA . logic_expr1 SEMI_COMA CLOSE_P
  180                | FOR OPEN_P SEMI_COMA . SEMI_COMA expr CLOSE_P
  181                | FOR OPEN_P SEMI_COMA . SEMI_COMA CLOSE_P

    IDENTIFIER   shift, and go to state 251
    SEMI_COMA    shift, and go to state 376
    OPEN_P       shift, and go to state 317
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    NOT_EQUAL    shift, and go to state 318
    OPEN_ARR     shift, and go to state 178
    TRUE         shift, and go to state 319
    FALSE        shift, and go to state 320
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    logic_expr1    go to state 377
    logic_expr     go to state 322
    expr           go to state 323
    assign_expr    go to state 261
    long_id        go to state 324
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 316

  174 for_loop_header: FOR OPEN_P for_initializer . SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | FOR OPEN_P for_initializer . SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  178                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA CLOSE_P

    SEMI_COMA  shift, and go to state 378


State 317

  114 p_type: OPEN_P . type CLOSE_P
  195 logic_expr: OPEN_P . logic_expr CLOSE_P
  216 simple_expr: OPEN_P . simple_expr CLOSE_P

    IDENTIFIER   shift, and go to state 329
    NSSTRING     shift, and go to state 62
    FLOAT        shift, and go to state 63
    CHAR         shift, and go to state 64
    BOOL         shift, and go to state 65
    INT          shift, and go to state 66
    VOID         shift, and go to state 72
    OPEN_P       shift, and go to state 317
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    NOT_EQUAL    shift, and go to state 318
    ENUM         shift, and go to state 73
    OPEN_ARR     shift, and go to state 178
    TRUE         shift, and go to state 319
    FALSE        shift, and go to state 320
    STRUCT       shift, and go to state 74
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    type           go to state 143
    struct_type    go to state 81
    enum_type      go to state 82
    simple_type    go to state 83
    complex_type   go to state 84
    p_type         go to state 259
    logic_expr     go to state 379
    expr           go to state 323
    assign_expr    go to state 261
    long_id        go to state 324
    array_access   go to state 199
    simple_expr    go to state 380
    message_call2  go to state 200
    message_call   go to state 201


State 318

  194 logic_expr: NOT_EQUAL . expr

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    expr           go to state 381
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 319

  196 logic_expr: TRUE .

    $default  reduce using rule 196 (logic_expr)


State 320

  197 logic_expr: FALSE .

    $default  reduce using rule 197 (logic_expr)


State 321

  185 logic_expr1: logic_expr1 . AND_AND logic_expr
  186            | logic_expr1 . OR_OR logic_expr
  235 while_loop_header: WHILE OPEN_P logic_expr1 . CLOSE_P

    CLOSE_P  shift, and go to state 382
    AND_AND  shift, and go to state 383
    OR_OR    shift, and go to state 384


State 322

  187 logic_expr1: logic_expr .

    $default  reduce using rule 187 (logic_expr1)


State 323

  188 logic_expr: expr . LESS_THAN expr
  189           | expr . MORE_THAN expr
  190           | expr . LESS_OR_EQUAL expr
  191           | expr . MORE_OR_EQUAL expr
  192           | expr . EQUAL_EQUAL expr
  193           | expr . NOT_EQUAL expr

    LESS_THAN      shift, and go to state 385
    MORE_THAN      shift, and go to state 386
    LESS_OR_EQUAL  shift, and go to state 387
    MORE_OR_EQUAL  shift, and go to state 388
    EQUAL_EQUAL    shift, and go to state 389
    NOT_EQUAL      shift, and go to state 390


State 324

  198 logic_expr: long_id .
  201 assign_expr: long_id . EQUAL simple_expr
  202 long_id: long_id . DOT IDENTIFIER
  206 array_access: long_id . OPEN_ARR simple_expr CLOSE_ARR
  211 simple_expr: long_id .

    EQUAL     shift, and go to state 278
    OPEN_ARR  shift, and go to state 279
    DOT       shift, and go to state 280

    SEMI_COMA  reduce using rule 198 (logic_expr)
    CLOSE_P    reduce using rule 198 (logic_expr)
    CLOSE_P    [reduce using rule 211 (simple_expr)]
    AND_AND    reduce using rule 198 (logic_expr)
    OR_OR      reduce using rule 198 (logic_expr)
    $default   reduce using rule 211 (simple_expr)


State 325

  185 logic_expr1: logic_expr1 . AND_AND logic_expr
  186            | logic_expr1 . OR_OR logic_expr
  239 if_header: IF OPEN_P logic_expr1 . CLOSE_P

    CLOSE_P  shift, and go to state 391
    AND_AND  shift, and go to state 383
    OR_OR    shift, and go to state 384


State 326

  240 switch_header: SWITCH OPEN_P IDENTIFIER . CLOSE_P switch_body_block

    CLOSE_P  shift, and go to state 392


State 327

  217 simple_expr: IDENTIFIER DOUBLEPLUS .

    $default  reduce using rule 217 (simple_expr)


State 328

  218 simple_expr: IDENTIFIER DOUBLEMINUS .

    $default  reduce using rule 218 (simple_expr)


State 329

   95 complex_type: IDENTIFIER . MULTI
  204 long_id: IDENTIFIER .
  217 simple_expr: IDENTIFIER . DOUBLEPLUS
  218            | IDENTIFIER . DOUBLEMINUS

    DOUBLEPLUS   shift, and go to state 327
    DOUBLEMINUS  shift, and go to state 328

    $default  reduce using rule 204 (long_id)


State 330

  202 long_id: long_id . DOT IDENTIFIER
  206 array_access: long_id . OPEN_ARR simple_expr CLOSE_ARR
  211 simple_expr: long_id .

    OPEN_ARR  shift, and go to state 279
    DOT       shift, and go to state 280

    $default  reduce using rule 211 (simple_expr)


State 331

  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr
  216            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 336
    MINUS    shift, and go to state 337
    CLOSE_P  shift, and go to state 393
    MULTI    shift, and go to state 338
    DIV      shift, and go to state 339


State 332

  219 simple_expr: DOUBLEPLUS IDENTIFIER .

    $default  reduce using rule 219 (simple_expr)


State 333

  220 simple_expr: DOUBLEMINUS IDENTIFIER .

    $default  reduce using rule 220 (simple_expr)


State 334

  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr
  221            | p_type simple_expr .

    PLUS   shift, and go to state 336
    MINUS  shift, and go to state 337
    MULTI  shift, and go to state 338
    DIV    shift, and go to state 339

    $default  reduce using rule 221 (simple_expr)


State 335

  167 return_statement: RETURN expr SEMI_COMA .

    $default  reduce using rule 167 (return_statement)


State 336

  212 simple_expr: simple_expr PLUS . simple_expr

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    long_id        go to state 330
    array_access   go to state 199
    simple_expr    go to state 394
    message_call2  go to state 200
    message_call   go to state 201


State 337

  213 simple_expr: simple_expr MINUS . simple_expr

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    long_id        go to state 330
    array_access   go to state 199
    simple_expr    go to state 395
    message_call2  go to state 200
    message_call   go to state 201


State 338

  214 simple_expr: simple_expr MULTI . simple_expr

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    long_id        go to state 330
    array_access   go to state 199
    simple_expr    go to state 396
    message_call2  go to state 200
    message_call   go to state 201


State 339

  215 simple_expr: simple_expr DIV . simple_expr

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    long_id        go to state 330
    array_access   go to state 199
    simple_expr    go to state 397
    message_call2  go to state 200
    message_call   go to state 201


State 340

  271 one_catch_header: CATCH . OPEN_P type IDENTIFIER CLOSE_P

    OPEN_P  shift, and go to state 398


State 341

  266 try_catch: TRY statement catch_list . finally_statement
  267          | TRY statement catch_list .
  269 catch_list: catch_list . one_catch

    CATCH    shift, and go to state 340
    FINALLY  shift, and go to state 399

    $default  reduce using rule 267 (try_catch)

    one_catch          go to state 400
    one_catch_header   go to state 343
    finally_statement  go to state 401


State 342

  268 catch_list: one_catch .

    $default  reduce using rule 268 (catch_list)


State 343

  270 one_catch: one_catch_header . statement

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 169
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 171
    VOID        shift, and go to state 72
    FOR         shift, and go to state 172
    WHILE       shift, and go to state 173
    IF          shift, and go to state 174
    DO          shift, and go to state 175
    SWITCH      shift, and go to state 176
    ENUM        shift, and go to state 177
    OPEN_ARR    shift, and go to state 178
    RETURN      shift, and go to state 179
    STRUCT      shift, and go to state 74
    TRY         shift, and go to state 180
    THROW       shift, and go to state 181
    AT_ASM      shift, and go to state 182

    type                        go to state 183
    struct_type                 go to state 81
    enum_type                   go to state 82
    simple_type                 go to state 83
    complex_type                go to state 84
    block_body                  go to state 184
    block_body_header           go to state 117
    statement                   go to state 402
    throw_statement             go to state 188
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 344

  156 throw_statement: THROW OPEN_P message_call . CLOSE_P SEMI_COMA

    CLOSE_P  shift, and go to state 403


State 345

  157 asm: AT_ASM STRING_VAL SEMI_COMA .

    $default  reduce using rule 157 (asm)


State 346

  166 variable: error array_tag . initializer

    EQUAL  shift, and go to state 404

    $default  reduce using rule 103 (initializer)

    initializer  go to state 405


State 347

  104 main_initializer: EQUAL . expr

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    expr           go to state 406
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 348

  164 variable: IDENTIFIER array_tag . initializer

    EQUAL  shift, and go to state 404

    $default  reduce using rule 103 (initializer)

    initializer  go to state 407


State 349

  165 variable: IDENTIFIER main_initializer .

    $default  reduce using rule 165 (variable)


State 350

  163 variable_list: variable_list error . variable

    error       shift, and go to state 268
    IDENTIFIER  shift, and go to state 269

    variable  go to state 408


State 351

  158 variable_declaration_block: type variable_list SEMI_COMA .

    $default  reduce using rule 158 (variable_declaration_block)


State 352

  161 variable_list: variable_list COMMA . variable

    error       shift, and go to state 268
    IDENTIFIER  shift, and go to state 269

    variable  go to state 409


State 353

  171 do_while: do_header statement while_loop_header . SEMI_COMA

    SEMI_COMA  shift, and go to state 410


State 354

  201 assign_expr: long_id EQUAL simple_expr .
  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 336
    MINUS  shift, and go to state 337
    MULTI  shift, and go to state 338
    DIV    shift, and go to state 339

    $default  reduce using rule 201 (assign_expr)


State 355

  206 array_access: long_id OPEN_ARR simple_expr . CLOSE_ARR
  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr

    PLUS       shift, and go to state 336
    MINUS      shift, and go to state 337
    MULTI      shift, and go to state 338
    DIV        shift, and go to state 339
    CLOSE_ARR  shift, and go to state 411


State 356

  202 long_id: long_id DOT IDENTIFIER .

    $default  reduce using rule 202 (long_id)


State 357

  226 message: IDENTIFIER .
  230 message_selector: IDENTIFIER . SEMI_COLUMN argument_list

    SEMI_COLUMN  shift, and go to state 412

    $default  reduce using rule 226 (message)


State 358

  223 message_call: message_call2 sender message . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 413


State 359

  227 message: message_selectors_list .
  228 message_selectors_list: message_selectors_list . message_selector

    IDENTIFIER  shift, and go to state 414

    $default  reduce using rule 227 (message)

    message_selector  go to state 415


State 360

  229 message_selectors_list: message_selector .

    $default  reduce using rule 229 (message_selectors_list)


State 361

  237 conditional_statement: if_header statement ELSE . statement

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 169
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 171
    VOID        shift, and go to state 72
    FOR         shift, and go to state 172
    WHILE       shift, and go to state 173
    IF          shift, and go to state 174
    DO          shift, and go to state 175
    SWITCH      shift, and go to state 176
    ENUM        shift, and go to state 177
    OPEN_ARR    shift, and go to state 178
    RETURN      shift, and go to state 179
    STRUCT      shift, and go to state 74
    TRY         shift, and go to state 180
    THROW       shift, and go to state 181
    AT_ASM      shift, and go to state 182

    type                        go to state 183
    struct_type                 go to state 81
    enum_type                   go to state 82
    simple_type                 go to state 83
    complex_type                go to state 84
    block_body                  go to state 184
    block_body_header           go to state 117
    statement                   go to state 416
    throw_statement             go to state 188
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 362

  248 case_body: CASE expr . SEMI_COLUMN statement BREAK SEMI_COMA
  249          | CASE expr . SEMI_COLUMN statement
  250          | CASE expr . SEMI_COLUMN BREAK SEMI_COMA

    SEMI_COLUMN  shift, and go to state 417


State 363

  251 default_case: DEFAULT SEMI_COLUMN . statement BREAK SEMI_COMA
  252             | DEFAULT SEMI_COLUMN . statement
  253             | DEFAULT SEMI_COLUMN . BREAK SEMI_COMA

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 169
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 171
    VOID        shift, and go to state 72
    FOR         shift, and go to state 172
    WHILE       shift, and go to state 173
    IF          shift, and go to state 174
    DO          shift, and go to state 175
    SWITCH      shift, and go to state 176
    BREAK       shift, and go to state 418
    ENUM        shift, and go to state 177
    OPEN_ARR    shift, and go to state 178
    RETURN      shift, and go to state 179
    STRUCT      shift, and go to state 74
    TRY         shift, and go to state 180
    THROW       shift, and go to state 181
    AT_ASM      shift, and go to state 182

    type                        go to state 183
    struct_type                 go to state 81
    enum_type                   go to state 82
    simple_type                 go to state 83
    complex_type                go to state 84
    block_body                  go to state 184
    block_body_header           go to state 117
    statement                   go to state 419
    throw_statement             go to state 188
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 364

  243 switch_body: list_of_case CLOSE_S .

    $default  reduce using rule 243 (switch_body)


State 365

  246 list_of_case: list_of_case case_body .

    $default  reduce using rule 246 (list_of_case)


State 366

  242 switch_body: list_of_case default_case . CLOSE_S

    CLOSE_S  shift, and go to state 420


State 367

  244 switch_body: default_case CLOSE_S .

    $default  reduce using rule 244 (switch_body)


State 368

  262 list_expr: IDENTIFIER EQUAL expr COMMA . list_expr

    IDENTIFIER  shift, and go to state 125

    list_expr  go to state 421


State 369

  100 array_first_tag: OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 100 (array_first_tag)


State 370

   97 array_tag_list: array_tag_list OPEN_ARR . INT_VAL CLOSE_ARR
   99               | array_tag_list OPEN_ARR . error CLOSE_ARR

    error    shift, and go to state 422
    INT_VAL  shift, and go to state 423


State 371

  120 parameter_list: parameter_list SEMI_COLUMN parameter .

    $default  reduce using rule 120 (parameter_list)


State 372

   75 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA .

    $default  reduce using rule 75 (struct)


State 373

  159 variable_declaration_block: CONST type variable_list SEMI_COMA .

    $default  reduce using rule 159 (variable_declaration_block)


State 374

  183 for_initializer: IDENTIFIER EQUAL . expr

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    expr           go to state 424
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 375

  182 for_initializer: INT IDENTIFIER . EQUAL expr

    EQUAL  shift, and go to state 425


State 376

  180 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA . expr CLOSE_P
  181                | FOR OPEN_P SEMI_COMA SEMI_COMA . CLOSE_P

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    CLOSE_P      shift, and go to state 426
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    expr           go to state 427
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 377

  175 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr1 . SEMI_COMA expr CLOSE_P
  179                | FOR OPEN_P SEMI_COMA logic_expr1 . SEMI_COMA CLOSE_P
  185 logic_expr1: logic_expr1 . AND_AND logic_expr
  186            | logic_expr1 . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 428
    AND_AND    shift, and go to state 383
    OR_OR      shift, and go to state 384


State 378

  174 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA . logic_expr1 SEMI_COMA expr CLOSE_P
  176                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA expr CLOSE_P
  177                | FOR OPEN_P for_initializer SEMI_COMA . logic_expr1 SEMI_COMA CLOSE_P
  178                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA CLOSE_P

    IDENTIFIER   shift, and go to state 251
    SEMI_COMA    shift, and go to state 429
    OPEN_P       shift, and go to state 317
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    NOT_EQUAL    shift, and go to state 318
    OPEN_ARR     shift, and go to state 178
    TRUE         shift, and go to state 319
    FALSE        shift, and go to state 320
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    logic_expr1    go to state 430
    logic_expr     go to state 322
    expr           go to state 323
    assign_expr    go to state 261
    long_id        go to state 324
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 379

  195 logic_expr: OPEN_P logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 431


State 380

  200 expr: simple_expr .
  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr
  216            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 336
    MINUS    shift, and go to state 337
    CLOSE_P  shift, and go to state 393
    MULTI    shift, and go to state 338
    DIV      shift, and go to state 339

    $default  reduce using rule 200 (expr)


State 381

  194 logic_expr: NOT_EQUAL expr .

    $default  reduce using rule 194 (logic_expr)


State 382

  235 while_loop_header: WHILE OPEN_P logic_expr1 CLOSE_P .

    $default  reduce using rule 235 (while_loop_header)


State 383

  185 logic_expr1: logic_expr1 AND_AND . logic_expr

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 317
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    NOT_EQUAL    shift, and go to state 318
    OPEN_ARR     shift, and go to state 178
    TRUE         shift, and go to state 319
    FALSE        shift, and go to state 320
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    logic_expr     go to state 432
    expr           go to state 323
    assign_expr    go to state 261
    long_id        go to state 324
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 384

  186 logic_expr1: logic_expr1 OR_OR . logic_expr

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 317
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    NOT_EQUAL    shift, and go to state 318
    OPEN_ARR     shift, and go to state 178
    TRUE         shift, and go to state 319
    FALSE        shift, and go to state 320
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    logic_expr     go to state 433
    expr           go to state 323
    assign_expr    go to state 261
    long_id        go to state 324
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 385

  188 logic_expr: expr LESS_THAN . expr

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    expr           go to state 434
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 386

  189 logic_expr: expr MORE_THAN . expr

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    expr           go to state 435
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 387

  190 logic_expr: expr LESS_OR_EQUAL . expr

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    expr           go to state 436
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 388

  191 logic_expr: expr MORE_OR_EQUAL . expr

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    expr           go to state 437
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 389

  192 logic_expr: expr EQUAL_EQUAL . expr

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    expr           go to state 438
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 390

  193 logic_expr: expr NOT_EQUAL . expr

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    expr           go to state 439
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 391

  239 if_header: IF OPEN_P logic_expr1 CLOSE_P .

    $default  reduce using rule 239 (if_header)


State 392

  240 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P . switch_body_block

    OPEN_S  shift, and go to state 440

    switch_body_block  go to state 441


State 393

  216 simple_expr: OPEN_P simple_expr CLOSE_P .

    $default  reduce using rule 216 (simple_expr)


State 394

  212 simple_expr: simple_expr . PLUS simple_expr
  212            | simple_expr PLUS simple_expr .
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 338
    DIV    shift, and go to state 339

    $default  reduce using rule 212 (simple_expr)


State 395

  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  213            | simple_expr MINUS simple_expr .
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 338
    DIV    shift, and go to state 339

    $default  reduce using rule 213 (simple_expr)


State 396

  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  214            | simple_expr MULTI simple_expr .
  215            | simple_expr . DIV simple_expr

    $default  reduce using rule 214 (simple_expr)


State 397

  212 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr . MINUS simple_expr
  214            | simple_expr . MULTI simple_expr
  215            | simple_expr . DIV simple_expr
  215            | simple_expr DIV simple_expr .

    $default  reduce using rule 215 (simple_expr)


State 398

  271 one_catch_header: CATCH OPEN_P . type IDENTIFIER CLOSE_P

    IDENTIFIER  shift, and go to state 61
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    VOID        shift, and go to state 72
    ENUM        shift, and go to state 73
    STRUCT      shift, and go to state 74

    type          go to state 442
    struct_type   go to state 81
    enum_type     go to state 82
    simple_type   go to state 83
    complex_type  go to state 84


State 399

  272 finally_statement: FINALLY . statement

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 169
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 171
    VOID        shift, and go to state 72
    FOR         shift, and go to state 172
    WHILE       shift, and go to state 173
    IF          shift, and go to state 174
    DO          shift, and go to state 175
    SWITCH      shift, and go to state 176
    ENUM        shift, and go to state 177
    OPEN_ARR    shift, and go to state 178
    RETURN      shift, and go to state 179
    STRUCT      shift, and go to state 74
    TRY         shift, and go to state 180
    THROW       shift, and go to state 181
    AT_ASM      shift, and go to state 182

    type                        go to state 183
    struct_type                 go to state 81
    enum_type                   go to state 82
    simple_type                 go to state 83
    complex_type                go to state 84
    block_body                  go to state 184
    block_body_header           go to state 117
    statement                   go to state 443
    throw_statement             go to state 188
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 400

  269 catch_list: catch_list one_catch .

    $default  reduce using rule 269 (catch_list)


State 401

  266 try_catch: TRY statement catch_list finally_statement .

    $default  reduce using rule 266 (try_catch)


State 402

  270 one_catch: one_catch_header statement .

    $default  reduce using rule 270 (one_catch)


State 403

  156 throw_statement: THROW OPEN_P message_call CLOSE_P . SEMI_COMA

    SEMI_COMA  shift, and go to state 444


State 404

  102 initializer: EQUAL . array_body

    OPEN_S  shift, and go to state 445

    array_body  go to state 446


State 405

  166 variable: error array_tag initializer .

    $default  reduce using rule 166 (variable)


State 406

  104 main_initializer: EQUAL expr .

    $default  reduce using rule 104 (main_initializer)


State 407

  164 variable: IDENTIFIER array_tag initializer .

    $default  reduce using rule 164 (variable)


State 408

  163 variable_list: variable_list error variable .

    $default  reduce using rule 163 (variable_list)


State 409

  161 variable_list: variable_list COMMA variable .

    $default  reduce using rule 161 (variable_list)


State 410

  171 do_while: do_header statement while_loop_header SEMI_COMA .

    $default  reduce using rule 171 (do_while)


State 411

  206 array_access: long_id OPEN_ARR simple_expr CLOSE_ARR .

    $default  reduce using rule 206 (array_access)


State 412

  230 message_selector: IDENTIFIER SEMI_COLUMN . argument_list

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    expr           go to state 447
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201
    argument_list  go to state 448
    argument       go to state 449


State 413

  223 message_call: message_call2 sender message CLOSE_ARR .

    $default  reduce using rule 223 (message_call)


State 414

  230 message_selector: IDENTIFIER . SEMI_COLUMN argument_list

    SEMI_COLUMN  shift, and go to state 412


State 415

  228 message_selectors_list: message_selectors_list message_selector .

    $default  reduce using rule 228 (message_selectors_list)


State 416

  237 conditional_statement: if_header statement ELSE statement .

    $default  reduce using rule 237 (conditional_statement)


State 417

  248 case_body: CASE expr SEMI_COLUMN . statement BREAK SEMI_COMA
  249          | CASE expr SEMI_COLUMN . statement
  250          | CASE expr SEMI_COLUMN . BREAK SEMI_COMA

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 169
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 171
    VOID        shift, and go to state 72
    FOR         shift, and go to state 172
    WHILE       shift, and go to state 173
    IF          shift, and go to state 174
    DO          shift, and go to state 175
    SWITCH      shift, and go to state 176
    BREAK       shift, and go to state 450
    ENUM        shift, and go to state 177
    OPEN_ARR    shift, and go to state 178
    RETURN      shift, and go to state 179
    STRUCT      shift, and go to state 74
    TRY         shift, and go to state 180
    THROW       shift, and go to state 181
    AT_ASM      shift, and go to state 182

    type                        go to state 183
    struct_type                 go to state 81
    enum_type                   go to state 82
    simple_type                 go to state 83
    complex_type                go to state 84
    block_body                  go to state 184
    block_body_header           go to state 117
    statement                   go to state 451
    throw_statement             go to state 188
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 418

  253 default_case: DEFAULT SEMI_COLUMN BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 452


State 419

  251 default_case: DEFAULT SEMI_COLUMN statement . BREAK SEMI_COMA
  252             | DEFAULT SEMI_COLUMN statement .

    BREAK  shift, and go to state 453

    $default  reduce using rule 252 (default_case)


State 420

  242 switch_body: list_of_case default_case CLOSE_S .

    $default  reduce using rule 242 (switch_body)


State 421

  262 list_expr: IDENTIFIER EQUAL expr COMMA list_expr .

    $default  reduce using rule 262 (list_expr)


State 422

   99 array_tag_list: array_tag_list OPEN_ARR error . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 454


State 423

   97 array_tag_list: array_tag_list OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 455


State 424

  183 for_initializer: IDENTIFIER EQUAL expr .

    $default  reduce using rule 183 (for_initializer)


State 425

  182 for_initializer: INT IDENTIFIER EQUAL . expr

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    expr           go to state 456
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 426

  181 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 181 (for_loop_header)


State 427

  180 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 457


State 428

  175 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA . expr CLOSE_P
  179                | FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA . CLOSE_P

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    CLOSE_P      shift, and go to state 458
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    expr           go to state 459
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 429

  176 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . expr CLOSE_P
  178                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . CLOSE_P

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    CLOSE_P      shift, and go to state 460
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    expr           go to state 461
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 430

  174 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr1 . SEMI_COMA expr CLOSE_P
  177                | FOR OPEN_P for_initializer SEMI_COMA logic_expr1 . SEMI_COMA CLOSE_P
  185 logic_expr1: logic_expr1 . AND_AND logic_expr
  186            | logic_expr1 . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 462
    AND_AND    shift, and go to state 383
    OR_OR      shift, and go to state 384


State 431

  195 logic_expr: OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 195 (logic_expr)


State 432

  185 logic_expr1: logic_expr1 AND_AND logic_expr .

    $default  reduce using rule 185 (logic_expr1)


State 433

  186 logic_expr1: logic_expr1 OR_OR logic_expr .

    $default  reduce using rule 186 (logic_expr1)


State 434

  188 logic_expr: expr LESS_THAN expr .

    $default  reduce using rule 188 (logic_expr)


State 435

  189 logic_expr: expr MORE_THAN expr .

    $default  reduce using rule 189 (logic_expr)


State 436

  190 logic_expr: expr LESS_OR_EQUAL expr .

    $default  reduce using rule 190 (logic_expr)


State 437

  191 logic_expr: expr MORE_OR_EQUAL expr .

    $default  reduce using rule 191 (logic_expr)


State 438

  192 logic_expr: expr EQUAL_EQUAL expr .

    $default  reduce using rule 192 (logic_expr)


State 439

  193 logic_expr: expr NOT_EQUAL expr .

    $default  reduce using rule 193 (logic_expr)


State 440

  241 switch_body_block: OPEN_S .

    $default  reduce using rule 241 (switch_body_block)


State 441

  240 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block .

    $default  reduce using rule 240 (switch_header)


State 442

  271 one_catch_header: CATCH OPEN_P type . IDENTIFIER CLOSE_P

    IDENTIFIER  shift, and go to state 463


State 443

  272 finally_statement: FINALLY statement .

    $default  reduce using rule 272 (finally_statement)


State 444

  156 throw_statement: THROW OPEN_P message_call CLOSE_P SEMI_COMA .

    $default  reduce using rule 156 (throw_statement)


State 445

   36 array_body: OPEN_S . array_ele CLOSE_S
   37           | OPEN_S . CLOSE_S

    IDENTIFIER   shift, and go to state 251
    OPEN_S       shift, and go to state 464
    CLOSE_S      shift, and go to state 465
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    array_ele      go to state 466
    p_type         go to state 259
    expr           go to state 467
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 446

  102 initializer: EQUAL array_body .

    $default  reduce using rule 102 (initializer)


State 447

  233 argument: expr .

    $default  reduce using rule 233 (argument)


State 448

  230 message_selector: IDENTIFIER SEMI_COLUMN argument_list .
  231 argument_list: argument_list . SEMI_COLUMN argument

    SEMI_COLUMN  shift, and go to state 468

    $default  reduce using rule 230 (message_selector)


State 449

  232 argument_list: argument .

    $default  reduce using rule 232 (argument_list)


State 450

  250 case_body: CASE expr SEMI_COLUMN BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 469


State 451

  248 case_body: CASE expr SEMI_COLUMN statement . BREAK SEMI_COMA
  249          | CASE expr SEMI_COLUMN statement .

    BREAK  shift, and go to state 470

    $default  reduce using rule 249 (case_body)


State 452

  253 default_case: DEFAULT SEMI_COLUMN BREAK SEMI_COMA .

    $default  reduce using rule 253 (default_case)


State 453

  251 default_case: DEFAULT SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 471


State 454

   99 array_tag_list: array_tag_list OPEN_ARR error CLOSE_ARR .

    $default  reduce using rule 99 (array_tag_list)


State 455

   97 array_tag_list: array_tag_list OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 97 (array_tag_list)


State 456

  182 for_initializer: INT IDENTIFIER EQUAL expr .

    $default  reduce using rule 182 (for_initializer)


State 457

  180 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 180 (for_loop_header)


State 458

  179 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P .

    $default  reduce using rule 179 (for_loop_header)


State 459

  175 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 472


State 460

  178 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 178 (for_loop_header)


State 461

  176 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 473


State 462

  174 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA . expr CLOSE_P
  177                | FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA . CLOSE_P

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    CLOSE_P      shift, and go to state 474
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    expr           go to state 475
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 463

  271 one_catch_header: CATCH OPEN_P type IDENTIFIER . CLOSE_P

    CLOSE_P  shift, and go to state 476


State 464

   40 array_ele: OPEN_S . CLOSE_S
   41          | OPEN_S . array_ele CLOSE_S COMMA array_ele
   42          | OPEN_S . array_ele CLOSE_S
   43          | OPEN_S . CLOSE_S COMMA array_ele

    IDENTIFIER   shift, and go to state 251
    OPEN_S       shift, and go to state 464
    CLOSE_S      shift, and go to state 477
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    array_ele      go to state 478
    p_type         go to state 259
    expr           go to state 467
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 465

   37 array_body: OPEN_S CLOSE_S .

    $default  reduce using rule 37 (array_body)


State 466

   36 array_body: OPEN_S array_ele . CLOSE_S

    CLOSE_S  shift, and go to state 479


State 467

   38 array_ele: expr . COMMA array_ele
   39          | expr .

    COMMA  shift, and go to state 480

    $default  reduce using rule 39 (array_ele)


State 468

  231 argument_list: argument_list SEMI_COLUMN . argument

    IDENTIFIER   shift, and go to state 251
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    p_type         go to state 259
    expr           go to state 447
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201
    argument       go to state 481


State 469

  250 case_body: CASE expr SEMI_COLUMN BREAK SEMI_COMA .

    $default  reduce using rule 250 (case_body)


State 470

  248 case_body: CASE expr SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 482


State 471

  251 default_case: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 251 (default_case)


State 472

  175 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 175 (for_loop_header)


State 473

  176 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 176 (for_loop_header)


State 474

  177 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P .

    $default  reduce using rule 177 (for_loop_header)


State 475

  174 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 483


State 476

  271 one_catch_header: CATCH OPEN_P type IDENTIFIER CLOSE_P .

    $default  reduce using rule 271 (one_catch_header)


State 477

   40 array_ele: OPEN_S CLOSE_S .
   43          | OPEN_S CLOSE_S . COMMA array_ele

    COMMA  shift, and go to state 484

    $default  reduce using rule 40 (array_ele)


State 478

   41 array_ele: OPEN_S array_ele . CLOSE_S COMMA array_ele
   42          | OPEN_S array_ele . CLOSE_S

    CLOSE_S  shift, and go to state 485


State 479

   36 array_body: OPEN_S array_ele CLOSE_S .

    $default  reduce using rule 36 (array_body)


State 480

   38 array_ele: expr COMMA . array_ele

    IDENTIFIER   shift, and go to state 251
    OPEN_S       shift, and go to state 464
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    array_ele      go to state 486
    p_type         go to state 259
    expr           go to state 467
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 481

  231 argument_list: argument_list SEMI_COLUMN argument .

    $default  reduce using rule 231 (argument_list)


State 482

  248 case_body: CASE expr SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 248 (case_body)


State 483

  174 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 174 (for_loop_header)


State 484

   43 array_ele: OPEN_S CLOSE_S COMMA . array_ele

    IDENTIFIER   shift, and go to state 251
    OPEN_S       shift, and go to state 464
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    array_ele      go to state 487
    p_type         go to state 259
    expr           go to state 467
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 485

   41 array_ele: OPEN_S array_ele CLOSE_S . COMMA array_ele
   42          | OPEN_S array_ele CLOSE_S .

    COMMA  shift, and go to state 488

    $default  reduce using rule 42 (array_ele)


State 486

   38 array_ele: expr COMMA array_ele .

    $default  reduce using rule 38 (array_ele)


State 487

   43 array_ele: OPEN_S CLOSE_S COMMA array_ele .

    $default  reduce using rule 43 (array_ele)


State 488

   41 array_ele: OPEN_S array_ele CLOSE_S COMMA . array_ele

    IDENTIFIER   shift, and go to state 251
    OPEN_S       shift, and go to state 464
    OPEN_P       shift, and go to state 252
    STRING_VAL   shift, and go to state 253
    FLOAT_VAL    shift, and go to state 254
    CHAR_VAL     shift, and go to state 255
    INT_VAL      shift, and go to state 256
    OPEN_ARR     shift, and go to state 178
    DOUBLEPLUS   shift, and go to state 257
    DOUBLEMINUS  shift, and go to state 258

    array_ele      go to state 489
    p_type         go to state 259
    expr           go to state 467
    assign_expr    go to state 261
    long_id        go to state 262
    array_access   go to state 199
    simple_expr    go to state 263
    message_call2  go to state 200
    message_call   go to state 201


State 489

   41 array_ele: OPEN_S array_ele CLOSE_S COMMA array_ele .

    $default  reduce using rule 41 (array_ele)
