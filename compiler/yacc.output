Terminals unused in grammar

   ID
   SELF
   expr_1


Grammar

    0 $accept: program $end

    1 program: components

    2 components: components component
    3           | component
    4           | IMPORT STRING_VAL SEMI_COMA

    5 component: class_interface
    6          | class_implementation
    7          | protocol
    8          | struct
    9          | enum

   10 class_interface: class_interface_header class_interface_body

   11 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
   12                       | AT_INTERFACE IDENTIFIER
   13                       | error IDENTIFIER
   14                       | AT_INTERFACE error
   15                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN error

   16 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END
   17                     | protocol_reference_list instance_variables AT_END
   18                     | protocol_reference_list interface_declaration_list AT_END
   19                     | instance_variables interface_declaration_list AT_END
   20                     | protocol_reference_list AT_END
   21                     | instance_variables AT_END
   22                     | interface_declaration_list AT_END
   23                     | AT_END
   24                     | protocol_reference_list error AT_END
   25                     | protocol_reference_list error interface_declaration_list AT_END
   26                     | protocol_reference_list error
   27                     | protocol_reference_list instance_variables interface_declaration_list error
   28                     | protocol_reference_list instance_variables error
   29                     | protocol_reference_list interface_declaration_list error
   30                     | instance_variables interface_declaration_list error
   31                     | instance_variables error
   32                     | interface_declaration_list error

   33 protocol_reference_list: LESS_THAN ids_list_identifier MORE_THAN
   34                        | LESS_THAN ids_list_identifier error

   35 ids_list_identifier: ids_list_identifier COMMA IDENTIFIER
   36                    | IDENTIFIER

   37 array_body: OPEN_S array_ele CLOSE_S
   38           | OPEN_S CLOSE_S

   39 array_ele: expr COMMA array_ele
   40          | expr
   41          | OPEN_S CLOSE_S
   42          | OPEN_S array_ele CLOSE_S COMMA array_ele
   43          | OPEN_S array_ele CLOSE_S
   44          | OPEN_S CLOSE_S COMMA array_ele

   45 instance_variables: OPEN_S instance_variable_declarations CLOSE_S
   46                   | OPEN_S CLOSE_S

   47 instance_variable_declarations: instance_variable_declarations instance_variable_declaration
   48                               | instance_variable_declaration
   49                               | variable_declaration_list

   50 instance_variable_declaration: visibility_specification variable_declaration_list

   51 variable_declaration_list: variable_declaration_list variable_declarationxx
   52                          | variable_declarationxx

   53 visibility_specification: AT_PRIVATE
   54                         | AT_PROTECTED
   55                         | AT_PUBLIC

   56 struct_variable_declaration: struct_declaration_list

   57 variable_declarationxx: type ids_list SEMI_COMA
   58                       | CONST type ids_list SEMI_COMA
   59                       | type IDENTIFIER array_tag error

   60 ids_list: ids_list COMMA data_member
   61         | data_member
   62         | error

   63 data_member: IDENTIFIER array_tag
   64            | IDENTIFIER
   65            | error array_tag
   66            | IDENTIFIER error

   67 struct_declaration_list: struct_declaration_list variable_declarationxx
   68                        | variable_declarationxx
   69                        | error variable_declarationxx

   70 struct_header: STRUCT IDENTIFIER

   71 struct: struct_header OPEN_S CLOSE_S entity SEMI_COMA
   72       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   73       | struct_header OPEN_S CLOSE_S SEMI_COMA
   74       | struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   75       | struct_header OPEN_S CLOSE_S entity error SEMI_COMA
   76       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   77       | struct_header OPEN_S CLOSE_S error SEMI_COMA
   78       | struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA

   79 entity: IDENTIFIER COMMA entity
   80       | IDENTIFIER
   81       | error COMMA

   82 type: simple_type
   83     | complex_type
   84     | struct_type
   85     | enum_type

   86 struct_type: STRUCT IDENTIFIER
   87            | STRUCT IDENTIFIER MULTI

   88 enum_type: ENUM IDENTIFIER
   89          | ENUM IDENTIFIER MULTI

   90 simple_type: INT
   91            | CHAR
   92            | FLOAT
   93            | NSSTRING
   94            | VOID
   95            | BOOL

   96 complex_type: IDENTIFIER MULTI

   97 array_tag: array_first_tag array_tag_list

   98 array_tag_list: array_tag_list OPEN_ARR INT_VAL CLOSE_ARR
   99               | %empty
  100               | array_tag_list OPEN_ARR error CLOSE_ARR

  101 array_first_tag: OPEN_ARR INT_VAL CLOSE_ARR
  102                | OPEN_ARR CLOSE_ARR

  103 initializer: EQUAL array_body
  104            | %empty

  105 main_initializer: EQUAL expr
  106                 | %empty

  107 interface_declaration_list: interface_declaration_list interface_declaration
  108                           | interface_declaration

  109 interface_declaration: class_method_declaration
  110                      | instance_method_declaration

  111 class_method_declaration: PLUS p_type method_selectors SEMI_COMA
  112                         | PLUS p_type method_selectors error
  113                         | PLUS method_selectors error

  114 instance_method_declaration: MINUS p_type method_selectors SEMI_COMA

  115 p_type: OPEN_P type CLOSE_P

  116 method_selectors: selectors_list
  117                 | IDENTIFIER

  118 selectors_list: selectors_list selector_decleration
  119               | selector_decleration

  120 selector_decleration: IDENTIFIER SEMI_COLUMN parameter_list

  121 parameter_list: parameter_list SEMI_COLUMN parameter
  122               | parameter

  123 parameter: p_type IDENTIFIER

  124 class_implementation: class_implementation_header class_implementation_body

  125 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  126                            | AT_IMPLEMENTATION IDENTIFIER

  127 class_implementation_body: instance_variables implementation_definition_list AT_END
  128                          | instance_variables AT_END
  129                          | implementation_definition_list AT_END
  130                          | AT_END

  131 implementation_definition_list: implementation_definition_list implementation_definition
  132                               | implementation_definition

  133 implementation_definition: class_implementation_definition
  134                          | instance_implementation_definition

  135 class_implementation_definition: class_implementation_definition_header block_body

  136 class_implementation_definition_header: PLUS p_type method_selectors

  137 instance_implementation_definition: instance_implementation_definition_header block_body

  138 instance_implementation_definition_header: MINUS p_type method_selectors

  139 block_body: block_body_header block_body_statements

  140 block_body_header: OPEN_S

  141 block_body_statements: statement_list CLOSE_S
  142                      | CLOSE_S
  143                      | error CLOSE_S

  144 statement_list: statement_list statement
  145               | statement

  146 statement: loop_statement
  147          | conditional_statement
  148          | assign_expr SEMI_COMA
  149          | variable_declaration_block
  150          | block_body
  151          | return_statement
  152          | try_catch
  153          | asm
  154          | message_call SEMI_COMA
  155          | error SEMI_COMA

  156 asm: AT_ASM STRING_VAL SEMI_COMA

  157 variable_declaration_block: type variable_list SEMI_COMA
  158                           | CONST type variable_list SEMI_COMA
  159                           | enum

  160 variable_list: variable_list COMMA variable
  161              | variable
  162              | variable_list error variable

  163 variable: IDENTIFIER array_tag initializer
  164         | IDENTIFIER main_initializer
  165         | error array_tag initializer

  166 return_statement: RETURN expr SEMI_COMA

  167 loop_statement: for_loop
  168               | while_loop
  169               | do_while

  170 do_while: do_header statement while_loop_header SEMI_COMA

  171 do_header: DO

  172 for_loop: for_loop_header statement

  173 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  175                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  176                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  177                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  178                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  179                | FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  180                | FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

  181 for_initializer: INT IDENTIFIER EQUAL expr
  182                | IDENTIFIER EQUAL expr
  183                | IDENTIFIER

  184 logic_expr: expr LESS_THAN expr
  185           | expr MORE_THAN expr
  186           | expr LESS_OR_EQUAL expr
  187           | expr MORE_OR_EQUAL expr
  188           | expr EQUAL_EQUAL expr
  189           | expr NOT_EQUAL expr
  190           | NOT_EQUAL expr
  191           | OPEN_P logic_expr CLOSE_P
  192           | logic_expr AND_AND logic_expr
  193           | logic_expr OR_OR logic_expr
  194           | TRUE
  195           | FALSE

  196 expr: assign_expr
  197     | simple_expr

  198 assign_expr: long_id EQUAL simple_expr

  199 long_id: long_id DOT IDENTIFIER
  200        | message_call
  201        | IDENTIFIER

  202 simple_expr: STRING_VAL
  203            | INT_VAL
  204            | FLOAT_VAL
  205            | CHAR_VAL
  206            | long_id
  207            | simple_expr PLUS simple_expr
  208            | simple_expr MINUS simple_expr
  209            | simple_expr MULTI simple_expr
  210            | simple_expr DIV simple_expr
  211            | OPEN_P simple_expr CLOSE_P
  212            | IDENTIFIER DOUBLEPLUS
  213            | IDENTIFIER DOUBLEMINUS
  214            | DOUBLEPLUS IDENTIFIER
  215            | DOUBLEMINUS IDENTIFIER
  216            | p_type simple_expr

  217 message_call2: OPEN_ARR

  218 message_call: message_call2 sender message CLOSE_ARR

  219 sender: message_call
  220       | IDENTIFIER

  221 message: IDENTIFIER
  222        | message_selectors_list

  223 message_selectors_list: message_selectors_list message_selector
  224                       | message_selector

  225 message_selector: IDENTIFIER SEMI_COLUMN argument_list

  226 argument_list: argument_list SEMI_COLUMN argument
  227              | argument

  228 argument: expr

  229 while_loop: while_loop_header statement

  230 while_loop_header: WHILE OPEN_P logic_expr CLOSE_P

  231 conditional_statement: if_header statement
  232                      | if_header statement ELSE statement
  233                      | switch_header switch_body

  234 if_header: IF OPEN_P logic_expr CLOSE_P

  235 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block

  236 switch_body_block: OPEN_S

  237 switch_body: list_of_case default_case CLOSE_S
  238            | list_of_case CLOSE_S
  239            | default_case CLOSE_S
  240            | CLOSE_S

  241 list_of_case: list_of_case case_body
  242             | case_body

  243 case_body: CASE expr SEMI_COLUMN statement BREAK SEMI_COMA
  244          | CASE expr SEMI_COLUMN statement
  245          | CASE expr SEMI_COLUMN BREAK SEMI_COMA

  246 default_case: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  247             | DEFAULT SEMI_COLUMN statement
  248             | DEFAULT SEMI_COLUMN BREAK SEMI_COMA

  249 protocol: protocol_header protocol_body

  250 protocol_header: AT_PROTOCOL IDENTIFIER

  251 protocol_body: protocol_reference_list interface_declaration_list AT_END
  252              | interface_declaration_list AT_END
  253              | protocol_reference_list AT_END
  254              | AT_END

  255 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | ENUM IDENTIFIER SEMI_COMA

  257 list_expr: IDENTIFIER EQUAL expr COMMA list_expr
  258          | IDENTIFIER EQUAL expr
  259          | IDENTIFIER
  260          | IDENTIFIER COMMA list_expr

  261 try_catch: TRY statement catch_list finally_statement
  262          | TRY statement catch_list

  263 catch_list: CATCH OPEN_S type IDENTIFIER CLOSE_S statement
  264           | catch_list CATCH OPEN_S type IDENTIFIER CLOSE_S statement

  265 finally_statement: FINALLY statement


Terminals, with rules where they appear

$end (0) 0
error (256) 13 14 15 24 25 26 27 28 29 30 31 32 34 59 62 65 66 69 75
    76 77 78 81 100 112 113 143 155 162 165
AT_INTERFACE (258) 11 12 14 15
IDENTIFIER (259) 11 12 13 15 35 36 59 63 64 66 70 79 80 86 87 88 89
    96 117 120 123 125 126 163 164 181 182 183 199 201 212 213 214
    215 220 221 225 235 250 255 256 257 258 259 260 263 264
SEMI_COLUMN (260) 11 15 120 121 125 225 226 243 244 245 246 247 248
NSSTRING (261) 93
FLOAT (262) 92
CHAR (263) 91
BOOL (264) 95
INT (265) 90 181
SEMI_COMA (266) 4 57 58 71 72 73 74 75 76 77 78 111 114 148 154 155
    156 157 158 166 170 173 174 175 176 177 178 179 180 243 245 246
    248 255 256
ID (267)
AT_PUBLIC (268) 55
AT_PROTECTED (269) 54
AT_PRIVATE (270) 53
OPEN_S (271) 37 38 41 42 43 44 45 46 71 72 73 74 75 76 77 78 140 236
    255 263 264
CLOSE_S (272) 37 38 41 42 43 44 45 46 71 72 73 74 75 76 77 78 141 142
    143 237 238 239 240 255 263 264
COMMA (273) 35 39 42 44 60 79 81 160 257 260
LESS_THAN (274) 33 34 184
MORE_THAN (275) 33 185
AT_END (276) 16 17 18 19 20 21 22 23 24 25 127 128 129 130 251 252
    253 254
CONST (277) 58 158
VOID (278) 94
PLUS (279) 111 112 113 136 207
MINUS (280) 114 138 208
OPEN_P (281) 115 173 174 175 176 177 178 179 180 191 211 230 234 235
CLOSE_P (282) 115 173 174 175 176 177 178 179 180 191 211 230 234 235
AT_IMPLEMENTATION (283) 125 126
AND_AND (284) 192
OR_OR (285) 193
STRING_VAL (286) 4 156 202
FLOAT_VAL (287) 204
LESS_OR_EQUAL (288) 186
CHAR_VAL (289) 205
INT_VAL (290) 98 101 203
MORE_OR_EQUAL (291) 187
MULTI (292) 87 89 96 209
EQUAL_EQUAL (293) 188
NOT_EQUAL (294) 189 190
FOR (295) 173 174 175 176 177 178 179 180
EQUAL (296) 103 105 181 182 198 257 258
DIV (297) 210
WHILE (298) 230
IF (299) 234
DO (300) 171
SWITCH (301) 235
CASE (302) 243 244 245
DEFAULT (303) 246 247 248
BREAK (304) 243 245 246 248
ENUM (305) 88 89 255 256
OPEN_ARR (306) 98 100 101 102 217
CLOSE_ARR (307) 98 100 101 102 218
TRUE (308) 194
FALSE (309) 195
RETURN (310) 166
AT_PROTOCOL (311) 250
ELSE (312) 232
STRUCT (313) 70 86 87
DOT (314) 199
DOUBLEPLUS (315) 212 214
DOUBLEMINUS (316) 213 215
TRY (317) 261 262
CATCH (318) 263 264
FINALLY (319) 265
AT_ASM (320) 156
SELF (321)
IMPORT (322) 4
if_h (323)
expr_1 (324)
p_type_expr_prec (325)
long_id_prec (326)
try_prec (327)


Nonterminals, with rules where they appear

$accept (73)
    on left: 0
program (74)
    on left: 1, on right: 0
components (75)
    on left: 2 3 4, on right: 1 2
component (76)
    on left: 5 6 7 8 9, on right: 2 3
class_interface (77)
    on left: 10, on right: 5
class_interface_header (78)
    on left: 11 12 13 14 15, on right: 10
class_interface_body (79)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32, on right:
    10
protocol_reference_list (80)
    on left: 33 34, on right: 16 17 18 20 24 25 26 27 28 29 251 253
ids_list_identifier (81)
    on left: 35 36, on right: 33 34 35
array_body (82)
    on left: 37 38, on right: 103
array_ele (83)
    on left: 39 40 41 42 43 44, on right: 37 39 42 43 44
instance_variables (84)
    on left: 45 46, on right: 16 17 19 21 27 28 30 31 127 128
instance_variable_declarations (85)
    on left: 47 48 49, on right: 45 47
instance_variable_declaration (86)
    on left: 50, on right: 47 48
variable_declaration_list (87)
    on left: 51 52, on right: 49 50 51
visibility_specification (88)
    on left: 53 54 55, on right: 50
struct_variable_declaration (89)
    on left: 56, on right: 72 74 76 78
variable_declarationxx (90)
    on left: 57 58 59, on right: 51 52 67 68 69
ids_list (91)
    on left: 60 61 62, on right: 57 58 60
data_member (92)
    on left: 63 64 65 66, on right: 60 61
struct_declaration_list (93)
    on left: 67 68 69, on right: 56 67
struct_header (94)
    on left: 70, on right: 71 72 73 74 75 76 77 78
struct (95)
    on left: 71 72 73 74 75 76 77 78, on right: 8
entity (96)
    on left: 79 80 81, on right: 71 72 75 76 79
type (97)
    on left: 82 83 84 85, on right: 57 58 59 115 157 158 263 264
struct_type (98)
    on left: 86 87, on right: 84
enum_type (99)
    on left: 88 89, on right: 85
simple_type (100)
    on left: 90 91 92 93 94 95, on right: 82
complex_type (101)
    on left: 96, on right: 83
array_tag (102)
    on left: 97, on right: 59 63 65 163 165
array_tag_list (103)
    on left: 98 99 100, on right: 97 98 100
array_first_tag (104)
    on left: 101 102, on right: 97
initializer (105)
    on left: 103 104, on right: 163 165
main_initializer (106)
    on left: 105 106, on right: 164
interface_declaration_list (107)
    on left: 107 108, on right: 16 18 19 22 25 27 29 30 32 107 251
    252
interface_declaration (108)
    on left: 109 110, on right: 107 108
class_method_declaration (109)
    on left: 111 112 113, on right: 109
instance_method_declaration (110)
    on left: 114, on right: 110
p_type (111)
    on left: 115, on right: 111 112 114 123 136 138 216
method_selectors (112)
    on left: 116 117, on right: 111 112 113 114 136 138
selectors_list (113)
    on left: 118 119, on right: 116 118
selector_decleration (114)
    on left: 120, on right: 118 119
parameter_list (115)
    on left: 121 122, on right: 120 121
parameter (116)
    on left: 123, on right: 121 122
class_implementation (117)
    on left: 124, on right: 6
class_implementation_header (118)
    on left: 125 126, on right: 124
class_implementation_body (119)
    on left: 127 128 129 130, on right: 124
implementation_definition_list (120)
    on left: 131 132, on right: 127 129 131
implementation_definition (121)
    on left: 133 134, on right: 131 132
class_implementation_definition (122)
    on left: 135, on right: 133
class_implementation_definition_header (123)
    on left: 136, on right: 135
instance_implementation_definition (124)
    on left: 137, on right: 134
instance_implementation_definition_header (125)
    on left: 138, on right: 137
block_body (126)
    on left: 139, on right: 135 137 150
block_body_header (127)
    on left: 140, on right: 139
block_body_statements (128)
    on left: 141 142 143, on right: 139
statement_list (129)
    on left: 144 145, on right: 141 144
statement (130)
    on left: 146 147 148 149 150 151 152 153 154 155, on right: 144
    145 170 172 229 231 232 243 244 246 247 261 262 263 264 265
asm (131)
    on left: 156, on right: 153
variable_declaration_block (132)
    on left: 157 158 159, on right: 149
variable_list (133)
    on left: 160 161 162, on right: 157 158 160 162
variable (134)
    on left: 163 164 165, on right: 160 161 162
return_statement (135)
    on left: 166, on right: 151
loop_statement (136)
    on left: 167 168 169, on right: 146
do_while (137)
    on left: 170, on right: 169
do_header (138)
    on left: 171, on right: 170
for_loop (139)
    on left: 172, on right: 167
for_loop_header (140)
    on left: 173 174 175 176 177 178 179 180, on right: 172
for_initializer (141)
    on left: 181 182 183, on right: 173 175 176 177
logic_expr (142)
    on left: 184 185 186 187 188 189 190 191 192 193 194 195, on right:
    173 174 176 178 191 192 193 230 234
expr (143)
    on left: 196 197, on right: 39 40 105 166 173 174 175 179 181 182
    184 185 186 187 188 189 190 228 243 244 245 257 258
assign_expr (144)
    on left: 198, on right: 148 196
long_id (145)
    on left: 199 200 201, on right: 198 199 206
simple_expr (146)
    on left: 202 203 204 205 206 207 208 209 210 211 212 213 214 215
    216, on right: 197 198 207 208 209 210 211 216
message_call2 (147)
    on left: 217, on right: 218
message_call (148)
    on left: 218, on right: 154 200 219
sender (149)
    on left: 219 220, on right: 218
message (150)
    on left: 221 222, on right: 218
message_selectors_list (151)
    on left: 223 224, on right: 222 223
message_selector (152)
    on left: 225, on right: 223 224
argument_list (153)
    on left: 226 227, on right: 225 226
argument (154)
    on left: 228, on right: 226 227
while_loop (155)
    on left: 229, on right: 168
while_loop_header (156)
    on left: 230, on right: 170 229
conditional_statement (157)
    on left: 231 232 233, on right: 147
if_header (158)
    on left: 234, on right: 231 232
switch_header (159)
    on left: 235, on right: 233
switch_body_block (160)
    on left: 236, on right: 235
switch_body (161)
    on left: 237 238 239 240, on right: 233
list_of_case (162)
    on left: 241 242, on right: 237 238 241
case_body (163)
    on left: 243 244 245, on right: 241 242
default_case (164)
    on left: 246 247 248, on right: 237 239
protocol (165)
    on left: 249, on right: 7
protocol_header (166)
    on left: 250, on right: 249
protocol_body (167)
    on left: 251 252 253 254, on right: 249
enum (168)
    on left: 255 256, on right: 9 159
list_expr (169)
    on left: 257 258 259 260, on right: 255 257 260
try_catch (170)
    on left: 261 262, on right: 152
catch_list (171)
    on left: 263 264, on right: 261 262 264
finally_statement (172)
    on left: 265, on right: 261


State 0

    0 $accept: . program $end
    1 program: . components
    2 components: . components component
    3           | . component
    4           | . IMPORT STRING_VAL SEMI_COMA
    5 component: . class_interface
    6          | . class_implementation
    7          | . protocol
    8          | . struct
    9          | . enum
   10 class_interface: . class_interface_header class_interface_body
   11 class_interface_header: . AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
   12                       | . AT_INTERFACE IDENTIFIER
   13                       | . error IDENTIFIER
   14                       | . AT_INTERFACE error
   15                       | . AT_INTERFACE IDENTIFIER SEMI_COLUMN error
   70 struct_header: . STRUCT IDENTIFIER
   71 struct: . struct_header OPEN_S CLOSE_S entity SEMI_COMA
   72       | . struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   73       | . struct_header OPEN_S CLOSE_S SEMI_COMA
   74       | . struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   75       | . struct_header OPEN_S CLOSE_S entity error SEMI_COMA
   76       | . struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   77       | . struct_header OPEN_S CLOSE_S error SEMI_COMA
   78       | . struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA
  124 class_implementation: . class_implementation_header class_implementation_body
  125 class_implementation_header: . AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  126                            | . AT_IMPLEMENTATION IDENTIFIER
  249 protocol: . protocol_header protocol_body
  250 protocol_header: . AT_PROTOCOL IDENTIFIER
  255 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | . ENUM IDENTIFIER SEMI_COMA

    error              shift, and go to state 1
    AT_INTERFACE       shift, and go to state 2
    AT_IMPLEMENTATION  shift, and go to state 3
    ENUM               shift, and go to state 4
    AT_PROTOCOL        shift, and go to state 5
    STRUCT             shift, and go to state 6
    IMPORT             shift, and go to state 7

    program                      go to state 8
    components                   go to state 9
    component                    go to state 10
    class_interface              go to state 11
    class_interface_header       go to state 12
    struct_header                go to state 13
    struct                       go to state 14
    class_implementation         go to state 15
    class_implementation_header  go to state 16
    protocol                     go to state 17
    protocol_header              go to state 18
    enum                         go to state 19


State 1

   13 class_interface_header: error . IDENTIFIER

    IDENTIFIER  shift, and go to state 20


State 2

   11 class_interface_header: AT_INTERFACE . IDENTIFIER SEMI_COLUMN IDENTIFIER
   12                       | AT_INTERFACE . IDENTIFIER
   14                       | AT_INTERFACE . error
   15                       | AT_INTERFACE . IDENTIFIER SEMI_COLUMN error

    error       shift, and go to state 21
    IDENTIFIER  shift, and go to state 22


State 3

  125 class_implementation_header: AT_IMPLEMENTATION . IDENTIFIER SEMI_COLUMN IDENTIFIER
  126                            | AT_IMPLEMENTATION . IDENTIFIER

    IDENTIFIER  shift, and go to state 23


State 4

  255 enum: ENUM . IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | ENUM . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 24


State 5

  250 protocol_header: AT_PROTOCOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 25


State 6

   70 struct_header: STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 26


State 7

    4 components: IMPORT . STRING_VAL SEMI_COMA

    STRING_VAL  shift, and go to state 27


State 8

    0 $accept: program . $end

    $end  shift, and go to state 28


State 9

    1 program: components .  [$end]
    2 components: components . component
    5 component: . class_interface
    6          | . class_implementation
    7          | . protocol
    8          | . struct
    9          | . enum
   10 class_interface: . class_interface_header class_interface_body
   11 class_interface_header: . AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
   12                       | . AT_INTERFACE IDENTIFIER
   13                       | . error IDENTIFIER
   14                       | . AT_INTERFACE error
   15                       | . AT_INTERFACE IDENTIFIER SEMI_COLUMN error
   70 struct_header: . STRUCT IDENTIFIER
   71 struct: . struct_header OPEN_S CLOSE_S entity SEMI_COMA
   72       | . struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   73       | . struct_header OPEN_S CLOSE_S SEMI_COMA
   74       | . struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   75       | . struct_header OPEN_S CLOSE_S entity error SEMI_COMA
   76       | . struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   77       | . struct_header OPEN_S CLOSE_S error SEMI_COMA
   78       | . struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA
  124 class_implementation: . class_implementation_header class_implementation_body
  125 class_implementation_header: . AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  126                            | . AT_IMPLEMENTATION IDENTIFIER
  249 protocol: . protocol_header protocol_body
  250 protocol_header: . AT_PROTOCOL IDENTIFIER
  255 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | . ENUM IDENTIFIER SEMI_COMA

    error              shift, and go to state 1
    AT_INTERFACE       shift, and go to state 2
    AT_IMPLEMENTATION  shift, and go to state 3
    ENUM               shift, and go to state 4
    AT_PROTOCOL        shift, and go to state 5
    STRUCT             shift, and go to state 6

    $end  reduce using rule 1 (program)

    component                    go to state 29
    class_interface              go to state 11
    class_interface_header       go to state 12
    struct_header                go to state 13
    struct                       go to state 14
    class_implementation         go to state 15
    class_implementation_header  go to state 16
    protocol                     go to state 17
    protocol_header              go to state 18
    enum                         go to state 19


State 10

    3 components: component .

    $default  reduce using rule 3 (components)


State 11

    5 component: class_interface .

    $default  reduce using rule 5 (component)


State 12

   10 class_interface: class_interface_header . class_interface_body
   16 class_interface_body: . protocol_reference_list instance_variables interface_declaration_list AT_END
   17                     | . protocol_reference_list instance_variables AT_END
   18                     | . protocol_reference_list interface_declaration_list AT_END
   19                     | . instance_variables interface_declaration_list AT_END
   20                     | . protocol_reference_list AT_END
   21                     | . instance_variables AT_END
   22                     | . interface_declaration_list AT_END
   23                     | . AT_END
   24                     | . protocol_reference_list error AT_END
   25                     | . protocol_reference_list error interface_declaration_list AT_END
   26                     | . protocol_reference_list error
   27                     | . protocol_reference_list instance_variables interface_declaration_list error
   28                     | . protocol_reference_list instance_variables error
   29                     | . protocol_reference_list interface_declaration_list error
   30                     | . instance_variables interface_declaration_list error
   31                     | . instance_variables error
   32                     | . interface_declaration_list error
   33 protocol_reference_list: . LESS_THAN ids_list_identifier MORE_THAN
   34                        | . LESS_THAN ids_list_identifier error
   45 instance_variables: . OPEN_S instance_variable_declarations CLOSE_S
   46                   | . OPEN_S CLOSE_S
  107 interface_declaration_list: . interface_declaration_list interface_declaration
  108                           | . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    OPEN_S     shift, and go to state 30
    LESS_THAN  shift, and go to state 31
    AT_END     shift, and go to state 32
    PLUS       shift, and go to state 33
    MINUS      shift, and go to state 34

    class_interface_body         go to state 35
    protocol_reference_list      go to state 36
    instance_variables           go to state 37
    interface_declaration_list   go to state 38
    interface_declaration        go to state 39
    class_method_declaration     go to state 40
    instance_method_declaration  go to state 41


State 13

   71 struct: struct_header . OPEN_S CLOSE_S entity SEMI_COMA
   72       | struct_header . OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   73       | struct_header . OPEN_S CLOSE_S SEMI_COMA
   74       | struct_header . OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   75       | struct_header . OPEN_S CLOSE_S entity error SEMI_COMA
   76       | struct_header . OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   77       | struct_header . OPEN_S CLOSE_S error SEMI_COMA
   78       | struct_header . OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA

    OPEN_S  shift, and go to state 42


State 14

    8 component: struct .

    $default  reduce using rule 8 (component)


State 15

    6 component: class_implementation .

    $default  reduce using rule 6 (component)


State 16

   45 instance_variables: . OPEN_S instance_variable_declarations CLOSE_S
   46                   | . OPEN_S CLOSE_S
  124 class_implementation: class_implementation_header . class_implementation_body
  127 class_implementation_body: . instance_variables implementation_definition_list AT_END
  128                          | . instance_variables AT_END
  129                          | . implementation_definition_list AT_END
  130                          | . AT_END
  131 implementation_definition_list: . implementation_definition_list implementation_definition
  132                               | . implementation_definition
  133 implementation_definition: . class_implementation_definition
  134                          | . instance_implementation_definition
  135 class_implementation_definition: . class_implementation_definition_header block_body
  136 class_implementation_definition_header: . PLUS p_type method_selectors
  137 instance_implementation_definition: . instance_implementation_definition_header block_body
  138 instance_implementation_definition_header: . MINUS p_type method_selectors

    OPEN_S  shift, and go to state 30
    AT_END  shift, and go to state 43
    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45

    instance_variables                         go to state 46
    class_implementation_body                  go to state 47
    implementation_definition_list             go to state 48
    implementation_definition                  go to state 49
    class_implementation_definition            go to state 50
    class_implementation_definition_header     go to state 51
    instance_implementation_definition         go to state 52
    instance_implementation_definition_header  go to state 53


State 17

    7 component: protocol .

    $default  reduce using rule 7 (component)


State 18

   33 protocol_reference_list: . LESS_THAN ids_list_identifier MORE_THAN
   34                        | . LESS_THAN ids_list_identifier error
  107 interface_declaration_list: . interface_declaration_list interface_declaration
  108                           | . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  249 protocol: protocol_header . protocol_body
  251 protocol_body: . protocol_reference_list interface_declaration_list AT_END
  252              | . interface_declaration_list AT_END
  253              | . protocol_reference_list AT_END
  254              | . AT_END

    LESS_THAN  shift, and go to state 31
    AT_END     shift, and go to state 54
    PLUS       shift, and go to state 33
    MINUS      shift, and go to state 34

    protocol_reference_list      go to state 55
    interface_declaration_list   go to state 56
    interface_declaration        go to state 39
    class_method_declaration     go to state 40
    instance_method_declaration  go to state 41
    protocol_body                go to state 57


State 19

    9 component: enum .

    $default  reduce using rule 9 (component)


State 20

   13 class_interface_header: error IDENTIFIER .

    $default  reduce using rule 13 (class_interface_header)


State 21

   14 class_interface_header: AT_INTERFACE error .

    $default  reduce using rule 14 (class_interface_header)


State 22

   11 class_interface_header: AT_INTERFACE IDENTIFIER . SEMI_COLUMN IDENTIFIER
   12                       | AT_INTERFACE IDENTIFIER .  [OPEN_S, LESS_THAN, AT_END, PLUS, MINUS]
   15                       | AT_INTERFACE IDENTIFIER . SEMI_COLUMN error

    SEMI_COLUMN  shift, and go to state 58

    $default  reduce using rule 12 (class_interface_header)


State 23

  125 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER . SEMI_COLUMN IDENTIFIER
  126                            | AT_IMPLEMENTATION IDENTIFIER .  [OPEN_S, AT_END, PLUS, MINUS]

    SEMI_COLUMN  shift, and go to state 59

    $default  reduce using rule 126 (class_implementation_header)


State 24

  255 enum: ENUM IDENTIFIER . OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | ENUM IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 60
    OPEN_S     shift, and go to state 61


State 25

  250 protocol_header: AT_PROTOCOL IDENTIFIER .

    $default  reduce using rule 250 (protocol_header)


State 26

   70 struct_header: STRUCT IDENTIFIER .

    $default  reduce using rule 70 (struct_header)


State 27

    4 components: IMPORT STRING_VAL . SEMI_COMA

    SEMI_COMA  shift, and go to state 62


State 28

    0 $accept: program $end .

    $default  accept


State 29

    2 components: components component .

    $default  reduce using rule 2 (components)


State 30

   45 instance_variables: OPEN_S . instance_variable_declarations CLOSE_S
   46                   | OPEN_S . CLOSE_S
   47 instance_variable_declarations: . instance_variable_declarations instance_variable_declaration
   48                               | . instance_variable_declaration
   49                               | . variable_declaration_list
   50 instance_variable_declaration: . visibility_specification variable_declaration_list
   51 variable_declaration_list: . variable_declaration_list variable_declarationxx
   52                          | . variable_declarationxx
   53 visibility_specification: . AT_PRIVATE
   54                         | . AT_PROTECTED
   55                         | . AT_PUBLIC
   57 variable_declarationxx: . type ids_list SEMI_COMA
   58                       | . CONST type ids_list SEMI_COMA
   59                       | . type IDENTIFIER array_tag error
   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI

    IDENTIFIER    shift, and go to state 63
    NSSTRING      shift, and go to state 64
    FLOAT         shift, and go to state 65
    CHAR          shift, and go to state 66
    BOOL          shift, and go to state 67
    INT           shift, and go to state 68
    AT_PUBLIC     shift, and go to state 69
    AT_PROTECTED  shift, and go to state 70
    AT_PRIVATE    shift, and go to state 71
    CLOSE_S       shift, and go to state 72
    CONST         shift, and go to state 73
    VOID          shift, and go to state 74
    ENUM          shift, and go to state 75
    STRUCT        shift, and go to state 76

    instance_variable_declarations  go to state 77
    instance_variable_declaration   go to state 78
    variable_declaration_list       go to state 79
    visibility_specification        go to state 80
    variable_declarationxx          go to state 81
    type                            go to state 82
    struct_type                     go to state 83
    enum_type                       go to state 84
    simple_type                     go to state 85
    complex_type                    go to state 86


State 31

   33 protocol_reference_list: LESS_THAN . ids_list_identifier MORE_THAN
   34                        | LESS_THAN . ids_list_identifier error
   35 ids_list_identifier: . ids_list_identifier COMMA IDENTIFIER
   36                    | . IDENTIFIER

    IDENTIFIER  shift, and go to state 87

    ids_list_identifier  go to state 88


State 32

   23 class_interface_body: AT_END .

    $default  reduce using rule 23 (class_interface_body)


State 33

  111 class_method_declaration: PLUS . p_type method_selectors SEMI_COMA
  112                         | PLUS . p_type method_selectors error
  113                         | PLUS . method_selectors error
  115 p_type: . OPEN_P type CLOSE_P
  116 method_selectors: . selectors_list
  117                 | . IDENTIFIER
  118 selectors_list: . selectors_list selector_decleration
  119               | . selector_decleration
  120 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 89
    OPEN_P      shift, and go to state 90

    p_type                go to state 91
    method_selectors      go to state 92
    selectors_list        go to state 93
    selector_decleration  go to state 94


State 34

  114 instance_method_declaration: MINUS . p_type method_selectors SEMI_COMA
  115 p_type: . OPEN_P type CLOSE_P

    OPEN_P  shift, and go to state 90

    p_type  go to state 95


State 35

   10 class_interface: class_interface_header class_interface_body .

    $default  reduce using rule 10 (class_interface)


State 36

   16 class_interface_body: protocol_reference_list . instance_variables interface_declaration_list AT_END
   17                     | protocol_reference_list . instance_variables AT_END
   18                     | protocol_reference_list . interface_declaration_list AT_END
   20                     | protocol_reference_list . AT_END
   24                     | protocol_reference_list . error AT_END
   25                     | protocol_reference_list . error interface_declaration_list AT_END
   26                     | protocol_reference_list . error
   27                     | protocol_reference_list . instance_variables interface_declaration_list error
   28                     | protocol_reference_list . instance_variables error
   29                     | protocol_reference_list . interface_declaration_list error
   45 instance_variables: . OPEN_S instance_variable_declarations CLOSE_S
   46                   | . OPEN_S CLOSE_S
  107 interface_declaration_list: . interface_declaration_list interface_declaration
  108                           | . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 96
    OPEN_S  shift, and go to state 30
    AT_END  shift, and go to state 97
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34

    instance_variables           go to state 98
    interface_declaration_list   go to state 99
    interface_declaration        go to state 39
    class_method_declaration     go to state 40
    instance_method_declaration  go to state 41


State 37

   19 class_interface_body: instance_variables . interface_declaration_list AT_END
   21                     | instance_variables . AT_END
   30                     | instance_variables . interface_declaration_list error
   31                     | instance_variables . error
  107 interface_declaration_list: . interface_declaration_list interface_declaration
  108                           | . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 100
    AT_END  shift, and go to state 101
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34

    interface_declaration_list   go to state 102
    interface_declaration        go to state 39
    class_method_declaration     go to state 40
    instance_method_declaration  go to state 41


State 38

   22 class_interface_body: interface_declaration_list . AT_END
   32                     | interface_declaration_list . error
  107 interface_declaration_list: interface_declaration_list . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 103
    AT_END  shift, and go to state 104
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34

    interface_declaration        go to state 105
    class_method_declaration     go to state 40
    instance_method_declaration  go to state 41


State 39

  108 interface_declaration_list: interface_declaration .

    $default  reduce using rule 108 (interface_declaration_list)


State 40

  109 interface_declaration: class_method_declaration .

    $default  reduce using rule 109 (interface_declaration)


State 41

  110 interface_declaration: instance_method_declaration .

    $default  reduce using rule 110 (interface_declaration)


State 42

   56 struct_variable_declaration: . struct_declaration_list
   57 variable_declarationxx: . type ids_list SEMI_COMA
   58                       | . CONST type ids_list SEMI_COMA
   59                       | . type IDENTIFIER array_tag error
   67 struct_declaration_list: . struct_declaration_list variable_declarationxx
   68                        | . variable_declarationxx
   69                        | . error variable_declarationxx
   71 struct: struct_header OPEN_S . CLOSE_S entity SEMI_COMA
   72       | struct_header OPEN_S . struct_variable_declaration CLOSE_S entity SEMI_COMA
   73       | struct_header OPEN_S . CLOSE_S SEMI_COMA
   74       | struct_header OPEN_S . struct_variable_declaration CLOSE_S SEMI_COMA
   75       | struct_header OPEN_S . CLOSE_S entity error SEMI_COMA
   76       | struct_header OPEN_S . struct_variable_declaration CLOSE_S entity error SEMI_COMA
   77       | struct_header OPEN_S . CLOSE_S error SEMI_COMA
   78       | struct_header OPEN_S . struct_variable_declaration CLOSE_S error SEMI_COMA
   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI

    error       shift, and go to state 106
    IDENTIFIER  shift, and go to state 63
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    CLOSE_S     shift, and go to state 107
    CONST       shift, and go to state 73
    VOID        shift, and go to state 74
    ENUM        shift, and go to state 75
    STRUCT      shift, and go to state 76

    struct_variable_declaration  go to state 108
    variable_declarationxx       go to state 109
    struct_declaration_list      go to state 110
    type                         go to state 82
    struct_type                  go to state 83
    enum_type                    go to state 84
    simple_type                  go to state 85
    complex_type                 go to state 86


State 43

  130 class_implementation_body: AT_END .

    $default  reduce using rule 130 (class_implementation_body)


State 44

  115 p_type: . OPEN_P type CLOSE_P
  136 class_implementation_definition_header: PLUS . p_type method_selectors

    OPEN_P  shift, and go to state 90

    p_type  go to state 111


State 45

  115 p_type: . OPEN_P type CLOSE_P
  138 instance_implementation_definition_header: MINUS . p_type method_selectors

    OPEN_P  shift, and go to state 90

    p_type  go to state 112


State 46

  127 class_implementation_body: instance_variables . implementation_definition_list AT_END
  128                          | instance_variables . AT_END
  131 implementation_definition_list: . implementation_definition_list implementation_definition
  132                               | . implementation_definition
  133 implementation_definition: . class_implementation_definition
  134                          | . instance_implementation_definition
  135 class_implementation_definition: . class_implementation_definition_header block_body
  136 class_implementation_definition_header: . PLUS p_type method_selectors
  137 instance_implementation_definition: . instance_implementation_definition_header block_body
  138 instance_implementation_definition_header: . MINUS p_type method_selectors

    AT_END  shift, and go to state 113
    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45

    implementation_definition_list             go to state 114
    implementation_definition                  go to state 49
    class_implementation_definition            go to state 50
    class_implementation_definition_header     go to state 51
    instance_implementation_definition         go to state 52
    instance_implementation_definition_header  go to state 53


State 47

  124 class_implementation: class_implementation_header class_implementation_body .

    $default  reduce using rule 124 (class_implementation)


State 48

  129 class_implementation_body: implementation_definition_list . AT_END
  131 implementation_definition_list: implementation_definition_list . implementation_definition
  133 implementation_definition: . class_implementation_definition
  134                          | . instance_implementation_definition
  135 class_implementation_definition: . class_implementation_definition_header block_body
  136 class_implementation_definition_header: . PLUS p_type method_selectors
  137 instance_implementation_definition: . instance_implementation_definition_header block_body
  138 instance_implementation_definition_header: . MINUS p_type method_selectors

    AT_END  shift, and go to state 115
    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45

    implementation_definition                  go to state 116
    class_implementation_definition            go to state 50
    class_implementation_definition_header     go to state 51
    instance_implementation_definition         go to state 52
    instance_implementation_definition_header  go to state 53


State 49

  132 implementation_definition_list: implementation_definition .

    $default  reduce using rule 132 (implementation_definition_list)


State 50

  133 implementation_definition: class_implementation_definition .

    $default  reduce using rule 133 (implementation_definition)


State 51

  135 class_implementation_definition: class_implementation_definition_header . block_body
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S

    OPEN_S  shift, and go to state 117

    block_body         go to state 118
    block_body_header  go to state 119


State 52

  134 implementation_definition: instance_implementation_definition .

    $default  reduce using rule 134 (implementation_definition)


State 53

  137 instance_implementation_definition: instance_implementation_definition_header . block_body
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S

    OPEN_S  shift, and go to state 117

    block_body         go to state 120
    block_body_header  go to state 119


State 54

  254 protocol_body: AT_END .

    $default  reduce using rule 254 (protocol_body)


State 55

  107 interface_declaration_list: . interface_declaration_list interface_declaration
  108                           | . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  251 protocol_body: protocol_reference_list . interface_declaration_list AT_END
  253              | protocol_reference_list . AT_END

    AT_END  shift, and go to state 121
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34

    interface_declaration_list   go to state 122
    interface_declaration        go to state 39
    class_method_declaration     go to state 40
    instance_method_declaration  go to state 41


State 56

  107 interface_declaration_list: interface_declaration_list . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  252 protocol_body: interface_declaration_list . AT_END

    AT_END  shift, and go to state 123
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34

    interface_declaration        go to state 105
    class_method_declaration     go to state 40
    instance_method_declaration  go to state 41


State 57

  249 protocol: protocol_header protocol_body .

    $default  reduce using rule 249 (protocol)


State 58

   11 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN . IDENTIFIER
   15                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN . error

    error       shift, and go to state 124
    IDENTIFIER  shift, and go to state 125


State 59

  125 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN . IDENTIFIER

    IDENTIFIER  shift, and go to state 126


State 60

  256 enum: ENUM IDENTIFIER SEMI_COMA .

    $default  reduce using rule 256 (enum)


State 61

  255 enum: ENUM IDENTIFIER OPEN_S . list_expr CLOSE_S SEMI_COMA
  257 list_expr: . IDENTIFIER EQUAL expr COMMA list_expr
  258          | . IDENTIFIER EQUAL expr
  259          | . IDENTIFIER
  260          | . IDENTIFIER COMMA list_expr

    IDENTIFIER  shift, and go to state 127

    list_expr  go to state 128


State 62

    4 components: IMPORT STRING_VAL SEMI_COMA .

    $default  reduce using rule 4 (components)


State 63

   96 complex_type: IDENTIFIER . MULTI

    MULTI  shift, and go to state 129


State 64

   93 simple_type: NSSTRING .

    $default  reduce using rule 93 (simple_type)


State 65

   92 simple_type: FLOAT .

    $default  reduce using rule 92 (simple_type)


State 66

   91 simple_type: CHAR .

    $default  reduce using rule 91 (simple_type)


State 67

   95 simple_type: BOOL .

    $default  reduce using rule 95 (simple_type)


State 68

   90 simple_type: INT .

    $default  reduce using rule 90 (simple_type)


State 69

   55 visibility_specification: AT_PUBLIC .

    $default  reduce using rule 55 (visibility_specification)


State 70

   54 visibility_specification: AT_PROTECTED .

    $default  reduce using rule 54 (visibility_specification)


State 71

   53 visibility_specification: AT_PRIVATE .

    $default  reduce using rule 53 (visibility_specification)


State 72

   46 instance_variables: OPEN_S CLOSE_S .

    $default  reduce using rule 46 (instance_variables)


State 73

   58 variable_declarationxx: CONST . type ids_list SEMI_COMA
   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 63
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    VOID        shift, and go to state 74
    ENUM        shift, and go to state 75
    STRUCT      shift, and go to state 76

    type          go to state 130
    struct_type   go to state 83
    enum_type     go to state 84
    simple_type   go to state 85
    complex_type  go to state 86


State 74

   94 simple_type: VOID .

    $default  reduce using rule 94 (simple_type)


State 75

   88 enum_type: ENUM . IDENTIFIER
   89          | ENUM . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 131


State 76

   86 struct_type: STRUCT . IDENTIFIER
   87            | STRUCT . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 132


State 77

   45 instance_variables: OPEN_S instance_variable_declarations . CLOSE_S
   47 instance_variable_declarations: instance_variable_declarations . instance_variable_declaration
   50 instance_variable_declaration: . visibility_specification variable_declaration_list
   53 visibility_specification: . AT_PRIVATE
   54                         | . AT_PROTECTED
   55                         | . AT_PUBLIC

    AT_PUBLIC     shift, and go to state 69
    AT_PROTECTED  shift, and go to state 70
    AT_PRIVATE    shift, and go to state 71
    CLOSE_S       shift, and go to state 133

    instance_variable_declaration  go to state 134
    visibility_specification       go to state 80


State 78

   48 instance_variable_declarations: instance_variable_declaration .

    $default  reduce using rule 48 (instance_variable_declarations)


State 79

   49 instance_variable_declarations: variable_declaration_list .  [AT_PUBLIC, AT_PROTECTED, AT_PRIVATE, CLOSE_S]
   51 variable_declaration_list: variable_declaration_list . variable_declarationxx
   57 variable_declarationxx: . type ids_list SEMI_COMA
   58                       | . CONST type ids_list SEMI_COMA
   59                       | . type IDENTIFIER array_tag error
   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 63
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    CONST       shift, and go to state 73
    VOID        shift, and go to state 74
    ENUM        shift, and go to state 75
    STRUCT      shift, and go to state 76

    $default  reduce using rule 49 (instance_variable_declarations)

    variable_declarationxx  go to state 135
    type                    go to state 82
    struct_type             go to state 83
    enum_type               go to state 84
    simple_type             go to state 85
    complex_type            go to state 86


State 80

   50 instance_variable_declaration: visibility_specification . variable_declaration_list
   51 variable_declaration_list: . variable_declaration_list variable_declarationxx
   52                          | . variable_declarationxx
   57 variable_declarationxx: . type ids_list SEMI_COMA
   58                       | . CONST type ids_list SEMI_COMA
   59                       | . type IDENTIFIER array_tag error
   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 63
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    CONST       shift, and go to state 73
    VOID        shift, and go to state 74
    ENUM        shift, and go to state 75
    STRUCT      shift, and go to state 76

    variable_declaration_list  go to state 136
    variable_declarationxx     go to state 81
    type                       go to state 82
    struct_type                go to state 83
    enum_type                  go to state 84
    simple_type                go to state 85
    complex_type               go to state 86


State 81

   52 variable_declaration_list: variable_declarationxx .

    $default  reduce using rule 52 (variable_declaration_list)


State 82

   57 variable_declarationxx: type . ids_list SEMI_COMA
   59                       | type . IDENTIFIER array_tag error
   60 ids_list: . ids_list COMMA data_member
   61         | . data_member
   62         | . error
   63 data_member: . IDENTIFIER array_tag
   64            | . IDENTIFIER
   65            | . error array_tag
   66            | . IDENTIFIER error

    error       shift, and go to state 137
    IDENTIFIER  shift, and go to state 138

    ids_list     go to state 139
    data_member  go to state 140


State 83

   84 type: struct_type .

    $default  reduce using rule 84 (type)


State 84

   85 type: enum_type .

    $default  reduce using rule 85 (type)


State 85

   82 type: simple_type .

    $default  reduce using rule 82 (type)


State 86

   83 type: complex_type .

    $default  reduce using rule 83 (type)


State 87

   36 ids_list_identifier: IDENTIFIER .

    $default  reduce using rule 36 (ids_list_identifier)


State 88

   33 protocol_reference_list: LESS_THAN ids_list_identifier . MORE_THAN
   34                        | LESS_THAN ids_list_identifier . error
   35 ids_list_identifier: ids_list_identifier . COMMA IDENTIFIER

    error      shift, and go to state 141
    COMMA      shift, and go to state 142
    MORE_THAN  shift, and go to state 143


State 89

  117 method_selectors: IDENTIFIER .  [error, SEMI_COMA, OPEN_S]
  120 selector_decleration: IDENTIFIER . SEMI_COLUMN parameter_list

    SEMI_COLUMN  shift, and go to state 144

    $default  reduce using rule 117 (method_selectors)


State 90

   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  115 p_type: OPEN_P . type CLOSE_P

    IDENTIFIER  shift, and go to state 63
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    VOID        shift, and go to state 74
    ENUM        shift, and go to state 75
    STRUCT      shift, and go to state 76

    type          go to state 145
    struct_type   go to state 83
    enum_type     go to state 84
    simple_type   go to state 85
    complex_type  go to state 86


State 91

  111 class_method_declaration: PLUS p_type . method_selectors SEMI_COMA
  112                         | PLUS p_type . method_selectors error
  116 method_selectors: . selectors_list
  117                 | . IDENTIFIER
  118 selectors_list: . selectors_list selector_decleration
  119               | . selector_decleration
  120 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 89

    method_selectors      go to state 146
    selectors_list        go to state 93
    selector_decleration  go to state 94


State 92

  113 class_method_declaration: PLUS method_selectors . error

    error  shift, and go to state 147


State 93

  116 method_selectors: selectors_list .  [error, SEMI_COMA, OPEN_S]
  118 selectors_list: selectors_list . selector_decleration
  120 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 148

    $default  reduce using rule 116 (method_selectors)

    selector_decleration  go to state 149


State 94

  119 selectors_list: selector_decleration .

    $default  reduce using rule 119 (selectors_list)


State 95

  114 instance_method_declaration: MINUS p_type . method_selectors SEMI_COMA
  116 method_selectors: . selectors_list
  117                 | . IDENTIFIER
  118 selectors_list: . selectors_list selector_decleration
  119               | . selector_decleration
  120 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 89

    method_selectors      go to state 150
    selectors_list        go to state 93
    selector_decleration  go to state 94


State 96

   24 class_interface_body: protocol_reference_list error . AT_END
   25                     | protocol_reference_list error . interface_declaration_list AT_END
   26                     | protocol_reference_list error .  [$end, error, AT_INTERFACE, AT_IMPLEMENTATION, ENUM, AT_PROTOCOL, STRUCT]
  107 interface_declaration_list: . interface_declaration_list interface_declaration
  108                           | . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    AT_END  shift, and go to state 151
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34

    $default  reduce using rule 26 (class_interface_body)

    interface_declaration_list   go to state 152
    interface_declaration        go to state 39
    class_method_declaration     go to state 40
    instance_method_declaration  go to state 41


State 97

   20 class_interface_body: protocol_reference_list AT_END .

    $default  reduce using rule 20 (class_interface_body)


State 98

   16 class_interface_body: protocol_reference_list instance_variables . interface_declaration_list AT_END
   17                     | protocol_reference_list instance_variables . AT_END
   27                     | protocol_reference_list instance_variables . interface_declaration_list error
   28                     | protocol_reference_list instance_variables . error
  107 interface_declaration_list: . interface_declaration_list interface_declaration
  108                           | . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 153
    AT_END  shift, and go to state 154
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34

    interface_declaration_list   go to state 155
    interface_declaration        go to state 39
    class_method_declaration     go to state 40
    instance_method_declaration  go to state 41


State 99

   18 class_interface_body: protocol_reference_list interface_declaration_list . AT_END
   29                     | protocol_reference_list interface_declaration_list . error
  107 interface_declaration_list: interface_declaration_list . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 156
    AT_END  shift, and go to state 157
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34

    interface_declaration        go to state 105
    class_method_declaration     go to state 40
    instance_method_declaration  go to state 41


State 100

   31 class_interface_body: instance_variables error .

    $default  reduce using rule 31 (class_interface_body)


State 101

   21 class_interface_body: instance_variables AT_END .

    $default  reduce using rule 21 (class_interface_body)


State 102

   19 class_interface_body: instance_variables interface_declaration_list . AT_END
   30                     | instance_variables interface_declaration_list . error
  107 interface_declaration_list: interface_declaration_list . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 158
    AT_END  shift, and go to state 159
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34

    interface_declaration        go to state 105
    class_method_declaration     go to state 40
    instance_method_declaration  go to state 41


State 103

   32 class_interface_body: interface_declaration_list error .

    $default  reduce using rule 32 (class_interface_body)


State 104

   22 class_interface_body: interface_declaration_list AT_END .

    $default  reduce using rule 22 (class_interface_body)


State 105

  107 interface_declaration_list: interface_declaration_list interface_declaration .

    $default  reduce using rule 107 (interface_declaration_list)


State 106

   57 variable_declarationxx: . type ids_list SEMI_COMA
   58                       | . CONST type ids_list SEMI_COMA
   59                       | . type IDENTIFIER array_tag error
   69 struct_declaration_list: error . variable_declarationxx
   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 63
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    CONST       shift, and go to state 73
    VOID        shift, and go to state 74
    ENUM        shift, and go to state 75
    STRUCT      shift, and go to state 76

    variable_declarationxx  go to state 160
    type                    go to state 82
    struct_type             go to state 83
    enum_type               go to state 84
    simple_type             go to state 85
    complex_type            go to state 86


State 107

   71 struct: struct_header OPEN_S CLOSE_S . entity SEMI_COMA
   73       | struct_header OPEN_S CLOSE_S . SEMI_COMA
   75       | struct_header OPEN_S CLOSE_S . entity error SEMI_COMA
   77       | struct_header OPEN_S CLOSE_S . error SEMI_COMA
   79 entity: . IDENTIFIER COMMA entity
   80       | . IDENTIFIER
   81       | . error COMMA

    error       shift, and go to state 161
    IDENTIFIER  shift, and go to state 162
    SEMI_COMA   shift, and go to state 163

    entity  go to state 164


State 108

   72 struct: struct_header OPEN_S struct_variable_declaration . CLOSE_S entity SEMI_COMA
   74       | struct_header OPEN_S struct_variable_declaration . CLOSE_S SEMI_COMA
   76       | struct_header OPEN_S struct_variable_declaration . CLOSE_S entity error SEMI_COMA
   78       | struct_header OPEN_S struct_variable_declaration . CLOSE_S error SEMI_COMA

    CLOSE_S  shift, and go to state 165


State 109

   68 struct_declaration_list: variable_declarationxx .

    $default  reduce using rule 68 (struct_declaration_list)


State 110

   56 struct_variable_declaration: struct_declaration_list .  [CLOSE_S]
   57 variable_declarationxx: . type ids_list SEMI_COMA
   58                       | . CONST type ids_list SEMI_COMA
   59                       | . type IDENTIFIER array_tag error
   67 struct_declaration_list: struct_declaration_list . variable_declarationxx
   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 63
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    CONST       shift, and go to state 73
    VOID        shift, and go to state 74
    ENUM        shift, and go to state 75
    STRUCT      shift, and go to state 76

    $default  reduce using rule 56 (struct_variable_declaration)

    variable_declarationxx  go to state 166
    type                    go to state 82
    struct_type             go to state 83
    enum_type               go to state 84
    simple_type             go to state 85
    complex_type            go to state 86


State 111

  116 method_selectors: . selectors_list
  117                 | . IDENTIFIER
  118 selectors_list: . selectors_list selector_decleration
  119               | . selector_decleration
  120 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list
  136 class_implementation_definition_header: PLUS p_type . method_selectors

    IDENTIFIER  shift, and go to state 89

    method_selectors      go to state 167
    selectors_list        go to state 93
    selector_decleration  go to state 94


State 112

  116 method_selectors: . selectors_list
  117                 | . IDENTIFIER
  118 selectors_list: . selectors_list selector_decleration
  119               | . selector_decleration
  120 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list
  138 instance_implementation_definition_header: MINUS p_type . method_selectors

    IDENTIFIER  shift, and go to state 89

    method_selectors      go to state 168
    selectors_list        go to state 93
    selector_decleration  go to state 94


State 113

  128 class_implementation_body: instance_variables AT_END .

    $default  reduce using rule 128 (class_implementation_body)


State 114

  127 class_implementation_body: instance_variables implementation_definition_list . AT_END
  131 implementation_definition_list: implementation_definition_list . implementation_definition
  133 implementation_definition: . class_implementation_definition
  134                          | . instance_implementation_definition
  135 class_implementation_definition: . class_implementation_definition_header block_body
  136 class_implementation_definition_header: . PLUS p_type method_selectors
  137 instance_implementation_definition: . instance_implementation_definition_header block_body
  138 instance_implementation_definition_header: . MINUS p_type method_selectors

    AT_END  shift, and go to state 169
    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45

    implementation_definition                  go to state 116
    class_implementation_definition            go to state 50
    class_implementation_definition_header     go to state 51
    instance_implementation_definition         go to state 52
    instance_implementation_definition_header  go to state 53


State 115

  129 class_implementation_body: implementation_definition_list AT_END .

    $default  reduce using rule 129 (class_implementation_body)


State 116

  131 implementation_definition_list: implementation_definition_list implementation_definition .

    $default  reduce using rule 131 (implementation_definition_list)


State 117

  140 block_body_header: OPEN_S .

    $default  reduce using rule 140 (block_body_header)


State 118

  135 class_implementation_definition: class_implementation_definition_header block_body .

    $default  reduce using rule 135 (class_implementation_definition)


State 119

   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  139           | block_body_header . block_body_statements
  140 block_body_header: . OPEN_S
  141 block_body_statements: . statement_list CLOSE_S
  142                      | . CLOSE_S
  143                      | . error CLOSE_S
  144 statement_list: . statement_list statement
  145               | . statement
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . message_call SEMI_COMA
  155          | . error SEMI_COMA
  156 asm: . AT_ASM STRING_VAL SEMI_COMA
  157 variable_declaration_block: . type variable_list SEMI_COMA
  158                           | . CONST type variable_list SEMI_COMA
  159                           | . enum
  166 return_statement: . RETURN expr SEMI_COMA
  167 loop_statement: . for_loop
  168               | . while_loop
  169               | . do_while
  170 do_while: . do_header statement while_loop_header SEMI_COMA
  171 do_header: . DO
  172 for_loop: . for_loop_header statement
  173 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR
  229 while_loop: . while_loop_header statement
  230 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  231 conditional_statement: . if_header statement
  232                      | . if_header statement ELSE statement
  233                      | . switch_header switch_body
  234 if_header: . IF OPEN_P logic_expr CLOSE_P
  235 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  255 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | . ENUM IDENTIFIER SEMI_COMA
  261 try_catch: . TRY statement catch_list finally_statement
  262          | . TRY statement catch_list

    error       shift, and go to state 170
    IDENTIFIER  shift, and go to state 171
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    OPEN_S      shift, and go to state 117
    CLOSE_S     shift, and go to state 172
    CONST       shift, and go to state 173
    VOID        shift, and go to state 74
    FOR         shift, and go to state 174
    WHILE       shift, and go to state 175
    IF          shift, and go to state 176
    DO          shift, and go to state 177
    SWITCH      shift, and go to state 178
    ENUM        shift, and go to state 179
    OPEN_ARR    shift, and go to state 180
    RETURN      shift, and go to state 181
    STRUCT      shift, and go to state 76
    TRY         shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 83
    enum_type                   go to state 84
    simple_type                 go to state 85
    complex_type                go to state 86
    block_body                  go to state 185
    block_body_header           go to state 119
    block_body_statements       go to state 186
    statement_list              go to state 187
    statement                   go to state 188
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    message_call2               go to state 199
    message_call                go to state 200
    while_loop                  go to state 201
    while_loop_header           go to state 202
    conditional_statement       go to state 203
    if_header                   go to state 204
    switch_header               go to state 205
    enum                        go to state 206
    try_catch                   go to state 207


State 120

  137 instance_implementation_definition: instance_implementation_definition_header block_body .

    $default  reduce using rule 137 (instance_implementation_definition)


State 121

  253 protocol_body: protocol_reference_list AT_END .

    $default  reduce using rule 253 (protocol_body)


State 122

  107 interface_declaration_list: interface_declaration_list . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  251 protocol_body: protocol_reference_list interface_declaration_list . AT_END

    AT_END  shift, and go to state 208
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34

    interface_declaration        go to state 105
    class_method_declaration     go to state 40
    instance_method_declaration  go to state 41


State 123

  252 protocol_body: interface_declaration_list AT_END .

    $default  reduce using rule 252 (protocol_body)


State 124

   15 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN error .

    $default  reduce using rule 15 (class_interface_header)


State 125

   11 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 11 (class_interface_header)


State 126

  125 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 125 (class_implementation_header)


State 127

  257 list_expr: IDENTIFIER . EQUAL expr COMMA list_expr
  258          | IDENTIFIER . EQUAL expr
  259          | IDENTIFIER .  [CLOSE_S]
  260          | IDENTIFIER . COMMA list_expr

    COMMA  shift, and go to state 209
    EQUAL  shift, and go to state 210

    $default  reduce using rule 259 (list_expr)


State 128

  255 enum: ENUM IDENTIFIER OPEN_S list_expr . CLOSE_S SEMI_COMA

    CLOSE_S  shift, and go to state 211


State 129

   96 complex_type: IDENTIFIER MULTI .

    $default  reduce using rule 96 (complex_type)


State 130

   58 variable_declarationxx: CONST type . ids_list SEMI_COMA
   60 ids_list: . ids_list COMMA data_member
   61         | . data_member
   62         | . error
   63 data_member: . IDENTIFIER array_tag
   64            | . IDENTIFIER
   65            | . error array_tag
   66            | . IDENTIFIER error

    error       shift, and go to state 137
    IDENTIFIER  shift, and go to state 212

    ids_list     go to state 213
    data_member  go to state 140


State 131

   88 enum_type: ENUM IDENTIFIER .  [error, IDENTIFIER, CLOSE_P]
   89          | ENUM IDENTIFIER . MULTI

    MULTI  shift, and go to state 214

    $default  reduce using rule 88 (enum_type)


State 132

   86 struct_type: STRUCT IDENTIFIER .  [error, IDENTIFIER, CLOSE_P]
   87            | STRUCT IDENTIFIER . MULTI

    MULTI  shift, and go to state 215

    $default  reduce using rule 86 (struct_type)


State 133

   45 instance_variables: OPEN_S instance_variable_declarations CLOSE_S .

    $default  reduce using rule 45 (instance_variables)


State 134

   47 instance_variable_declarations: instance_variable_declarations instance_variable_declaration .

    $default  reduce using rule 47 (instance_variable_declarations)


State 135

   51 variable_declaration_list: variable_declaration_list variable_declarationxx .

    $default  reduce using rule 51 (variable_declaration_list)


State 136

   50 instance_variable_declaration: visibility_specification variable_declaration_list .  [AT_PUBLIC, AT_PROTECTED, AT_PRIVATE, CLOSE_S]
   51 variable_declaration_list: variable_declaration_list . variable_declarationxx
   57 variable_declarationxx: . type ids_list SEMI_COMA
   58                       | . CONST type ids_list SEMI_COMA
   59                       | . type IDENTIFIER array_tag error
   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 63
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    CONST       shift, and go to state 73
    VOID        shift, and go to state 74
    ENUM        shift, and go to state 75
    STRUCT      shift, and go to state 76

    $default  reduce using rule 50 (instance_variable_declaration)

    variable_declarationxx  go to state 135
    type                    go to state 82
    struct_type             go to state 83
    enum_type               go to state 84
    simple_type             go to state 85
    complex_type            go to state 86


State 137

   62 ids_list: error .  [SEMI_COMA, COMMA]
   65 data_member: error . array_tag
   97 array_tag: . array_first_tag array_tag_list
  101 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  102                | . OPEN_ARR CLOSE_ARR

    OPEN_ARR  shift, and go to state 216

    $default  reduce using rule 62 (ids_list)

    array_tag        go to state 217
    array_first_tag  go to state 218


State 138

   59 variable_declarationxx: type IDENTIFIER . array_tag error
   63 data_member: IDENTIFIER . array_tag
   64            | IDENTIFIER .  [SEMI_COMA, COMMA]
   66            | IDENTIFIER . error
   97 array_tag: . array_first_tag array_tag_list
  101 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  102                | . OPEN_ARR CLOSE_ARR

    error     shift, and go to state 219
    OPEN_ARR  shift, and go to state 216

    SEMI_COMA  reduce using rule 64 (data_member)
    COMMA      reduce using rule 64 (data_member)

    array_tag        go to state 220
    array_first_tag  go to state 218


State 139

   57 variable_declarationxx: type ids_list . SEMI_COMA
   60 ids_list: ids_list . COMMA data_member

    SEMI_COMA  shift, and go to state 221
    COMMA      shift, and go to state 222


State 140

   61 ids_list: data_member .

    $default  reduce using rule 61 (ids_list)


State 141

   34 protocol_reference_list: LESS_THAN ids_list_identifier error .

    $default  reduce using rule 34 (protocol_reference_list)


State 142

   35 ids_list_identifier: ids_list_identifier COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 223


State 143

   33 protocol_reference_list: LESS_THAN ids_list_identifier MORE_THAN .

    $default  reduce using rule 33 (protocol_reference_list)


State 144

  115 p_type: . OPEN_P type CLOSE_P
  120 selector_decleration: IDENTIFIER SEMI_COLUMN . parameter_list
  121 parameter_list: . parameter_list SEMI_COLUMN parameter
  122               | . parameter
  123 parameter: . p_type IDENTIFIER

    OPEN_P  shift, and go to state 90

    p_type          go to state 224
    parameter_list  go to state 225
    parameter       go to state 226


State 145

  115 p_type: OPEN_P type . CLOSE_P

    CLOSE_P  shift, and go to state 227


State 146

  111 class_method_declaration: PLUS p_type method_selectors . SEMI_COMA
  112                         | PLUS p_type method_selectors . error

    error      shift, and go to state 228
    SEMI_COMA  shift, and go to state 229


State 147

  113 class_method_declaration: PLUS method_selectors error .

    $default  reduce using rule 113 (class_method_declaration)


State 148

  120 selector_decleration: IDENTIFIER . SEMI_COLUMN parameter_list

    SEMI_COLUMN  shift, and go to state 144


State 149

  118 selectors_list: selectors_list selector_decleration .

    $default  reduce using rule 118 (selectors_list)


State 150

  114 instance_method_declaration: MINUS p_type method_selectors . SEMI_COMA

    SEMI_COMA  shift, and go to state 230


State 151

   24 class_interface_body: protocol_reference_list error AT_END .

    $default  reduce using rule 24 (class_interface_body)


State 152

   25 class_interface_body: protocol_reference_list error interface_declaration_list . AT_END
  107 interface_declaration_list: interface_declaration_list . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    AT_END  shift, and go to state 231
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34

    interface_declaration        go to state 105
    class_method_declaration     go to state 40
    instance_method_declaration  go to state 41


State 153

   28 class_interface_body: protocol_reference_list instance_variables error .

    $default  reduce using rule 28 (class_interface_body)


State 154

   17 class_interface_body: protocol_reference_list instance_variables AT_END .

    $default  reduce using rule 17 (class_interface_body)


State 155

   16 class_interface_body: protocol_reference_list instance_variables interface_declaration_list . AT_END
   27                     | protocol_reference_list instance_variables interface_declaration_list . error
  107 interface_declaration_list: interface_declaration_list . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 232
    AT_END  shift, and go to state 233
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34

    interface_declaration        go to state 105
    class_method_declaration     go to state 40
    instance_method_declaration  go to state 41


State 156

   29 class_interface_body: protocol_reference_list interface_declaration_list error .

    $default  reduce using rule 29 (class_interface_body)


State 157

   18 class_interface_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 18 (class_interface_body)


State 158

   30 class_interface_body: instance_variables interface_declaration_list error .

    $default  reduce using rule 30 (class_interface_body)


State 159

   19 class_interface_body: instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 19 (class_interface_body)


State 160

   69 struct_declaration_list: error variable_declarationxx .

    $default  reduce using rule 69 (struct_declaration_list)


State 161

   77 struct: struct_header OPEN_S CLOSE_S error . SEMI_COMA
   81 entity: error . COMMA

    SEMI_COMA  shift, and go to state 234
    COMMA      shift, and go to state 235


State 162

   79 entity: IDENTIFIER . COMMA entity
   80       | IDENTIFIER .  [error, SEMI_COMA]

    COMMA  shift, and go to state 236

    $default  reduce using rule 80 (entity)


State 163

   73 struct: struct_header OPEN_S CLOSE_S SEMI_COMA .

    $default  reduce using rule 73 (struct)


State 164

   71 struct: struct_header OPEN_S CLOSE_S entity . SEMI_COMA
   75       | struct_header OPEN_S CLOSE_S entity . error SEMI_COMA

    error      shift, and go to state 237
    SEMI_COMA  shift, and go to state 238


State 165

   72 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S . entity SEMI_COMA
   74       | struct_header OPEN_S struct_variable_declaration CLOSE_S . SEMI_COMA
   76       | struct_header OPEN_S struct_variable_declaration CLOSE_S . entity error SEMI_COMA
   78       | struct_header OPEN_S struct_variable_declaration CLOSE_S . error SEMI_COMA
   79 entity: . IDENTIFIER COMMA entity
   80       | . IDENTIFIER
   81       | . error COMMA

    error       shift, and go to state 239
    IDENTIFIER  shift, and go to state 162
    SEMI_COMA   shift, and go to state 240

    entity  go to state 241


State 166

   67 struct_declaration_list: struct_declaration_list variable_declarationxx .

    $default  reduce using rule 67 (struct_declaration_list)


State 167

  136 class_implementation_definition_header: PLUS p_type method_selectors .

    $default  reduce using rule 136 (class_implementation_definition_header)


State 168

  138 instance_implementation_definition_header: MINUS p_type method_selectors .

    $default  reduce using rule 138 (instance_implementation_definition_header)


State 169

  127 class_implementation_body: instance_variables implementation_definition_list AT_END .

    $default  reduce using rule 127 (class_implementation_body)


State 170

  143 block_body_statements: error . CLOSE_S
  155 statement: error . SEMI_COMA

    SEMI_COMA  shift, and go to state 242
    CLOSE_S    shift, and go to state 243


State 171

   96 complex_type: IDENTIFIER . MULTI
  201 long_id: IDENTIFIER .  [EQUAL, DOT]

    MULTI  shift, and go to state 129

    $default  reduce using rule 201 (long_id)


State 172

  142 block_body_statements: CLOSE_S .

    $default  reduce using rule 142 (block_body_statements)


State 173

   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  158 variable_declaration_block: CONST . type variable_list SEMI_COMA

    IDENTIFIER  shift, and go to state 63
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    VOID        shift, and go to state 74
    ENUM        shift, and go to state 75
    STRUCT      shift, and go to state 76

    type          go to state 244
    struct_type   go to state 83
    enum_type     go to state 84
    simple_type   go to state 85
    complex_type  go to state 86


State 174

  173 for_loop_header: FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  175                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  176                | FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  177                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  178                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  179                | FOR . OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  180                | FOR . OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

    OPEN_P  shift, and go to state 245


State 175

  230 while_loop_header: WHILE . OPEN_P logic_expr CLOSE_P

    OPEN_P  shift, and go to state 246


State 176

  234 if_header: IF . OPEN_P logic_expr CLOSE_P

    OPEN_P  shift, and go to state 247


State 177

  171 do_header: DO .

    $default  reduce using rule 171 (do_header)


State 178

  235 switch_header: SWITCH . OPEN_P IDENTIFIER CLOSE_P switch_body_block

    OPEN_P  shift, and go to state 248


State 179

   88 enum_type: ENUM . IDENTIFIER
   89          | ENUM . IDENTIFIER MULTI
  255 enum: ENUM . IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | ENUM . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 249


State 180

  217 message_call2: OPEN_ARR .

    $default  reduce using rule 217 (message_call2)


State 181

  115 p_type: . OPEN_P type CLOSE_P
  166 return_statement: RETURN . expr SEMI_COMA
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    expr           go to state 259
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 182

   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . message_call SEMI_COMA
  155          | . error SEMI_COMA
  156 asm: . AT_ASM STRING_VAL SEMI_COMA
  157 variable_declaration_block: . type variable_list SEMI_COMA
  158                           | . CONST type variable_list SEMI_COMA
  159                           | . enum
  166 return_statement: . RETURN expr SEMI_COMA
  167 loop_statement: . for_loop
  168               | . while_loop
  169               | . do_while
  170 do_while: . do_header statement while_loop_header SEMI_COMA
  171 do_header: . DO
  172 for_loop: . for_loop_header statement
  173 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR
  229 while_loop: . while_loop_header statement
  230 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  231 conditional_statement: . if_header statement
  232                      | . if_header statement ELSE statement
  233                      | . switch_header switch_body
  234 if_header: . IF OPEN_P logic_expr CLOSE_P
  235 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  255 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | . ENUM IDENTIFIER SEMI_COMA
  261 try_catch: . TRY statement catch_list finally_statement
  261          | TRY . statement catch_list finally_statement
  262          | . TRY statement catch_list
  262          | TRY . statement catch_list

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 171
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 173
    VOID        shift, and go to state 74
    FOR         shift, and go to state 174
    WHILE       shift, and go to state 175
    IF          shift, and go to state 176
    DO          shift, and go to state 177
    SWITCH      shift, and go to state 178
    ENUM        shift, and go to state 179
    OPEN_ARR    shift, and go to state 180
    RETURN      shift, and go to state 181
    STRUCT      shift, and go to state 76
    TRY         shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 83
    enum_type                   go to state 84
    simple_type                 go to state 85
    complex_type                go to state 86
    block_body                  go to state 185
    block_body_header           go to state 119
    statement                   go to state 265
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    message_call2               go to state 199
    message_call                go to state 200
    while_loop                  go to state 201
    while_loop_header           go to state 202
    conditional_statement       go to state 203
    if_header                   go to state 204
    switch_header               go to state 205
    enum                        go to state 206
    try_catch                   go to state 207


State 183

  156 asm: AT_ASM . STRING_VAL SEMI_COMA

    STRING_VAL  shift, and go to state 266


State 184

  157 variable_declaration_block: type . variable_list SEMI_COMA
  160 variable_list: . variable_list COMMA variable
  161              | . variable
  162              | . variable_list error variable
  163 variable: . IDENTIFIER array_tag initializer
  164         | . IDENTIFIER main_initializer
  165         | . error array_tag initializer

    error       shift, and go to state 267
    IDENTIFIER  shift, and go to state 268

    variable_list  go to state 269
    variable       go to state 270


State 185

  150 statement: block_body .

    $default  reduce using rule 150 (statement)


State 186

  139 block_body: block_body_header block_body_statements .

    $default  reduce using rule 139 (block_body)


State 187

   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  141 block_body_statements: statement_list . CLOSE_S
  144 statement_list: statement_list . statement
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . message_call SEMI_COMA
  155          | . error SEMI_COMA
  156 asm: . AT_ASM STRING_VAL SEMI_COMA
  157 variable_declaration_block: . type variable_list SEMI_COMA
  158                           | . CONST type variable_list SEMI_COMA
  159                           | . enum
  166 return_statement: . RETURN expr SEMI_COMA
  167 loop_statement: . for_loop
  168               | . while_loop
  169               | . do_while
  170 do_while: . do_header statement while_loop_header SEMI_COMA
  171 do_header: . DO
  172 for_loop: . for_loop_header statement
  173 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR
  229 while_loop: . while_loop_header statement
  230 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  231 conditional_statement: . if_header statement
  232                      | . if_header statement ELSE statement
  233                      | . switch_header switch_body
  234 if_header: . IF OPEN_P logic_expr CLOSE_P
  235 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  255 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | . ENUM IDENTIFIER SEMI_COMA
  261 try_catch: . TRY statement catch_list finally_statement
  262          | . TRY statement catch_list

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 171
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    OPEN_S      shift, and go to state 117
    CLOSE_S     shift, and go to state 271
    CONST       shift, and go to state 173
    VOID        shift, and go to state 74
    FOR         shift, and go to state 174
    WHILE       shift, and go to state 175
    IF          shift, and go to state 176
    DO          shift, and go to state 177
    SWITCH      shift, and go to state 178
    ENUM        shift, and go to state 179
    OPEN_ARR    shift, and go to state 180
    RETURN      shift, and go to state 181
    STRUCT      shift, and go to state 76
    TRY         shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 83
    enum_type                   go to state 84
    simple_type                 go to state 85
    complex_type                go to state 86
    block_body                  go to state 185
    block_body_header           go to state 119
    statement                   go to state 272
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    message_call2               go to state 199
    message_call                go to state 200
    while_loop                  go to state 201
    while_loop_header           go to state 202
    conditional_statement       go to state 203
    if_header                   go to state 204
    switch_header               go to state 205
    enum                        go to state 206
    try_catch                   go to state 207


State 188

  145 statement_list: statement .

    $default  reduce using rule 145 (statement_list)


State 189

  153 statement: asm .

    $default  reduce using rule 153 (statement)


State 190

  149 statement: variable_declaration_block .

    $default  reduce using rule 149 (statement)


State 191

  151 statement: return_statement .

    $default  reduce using rule 151 (statement)


State 192

  146 statement: loop_statement .

    $default  reduce using rule 146 (statement)


State 193

  169 loop_statement: do_while .

    $default  reduce using rule 169 (loop_statement)


State 194

   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . message_call SEMI_COMA
  155          | . error SEMI_COMA
  156 asm: . AT_ASM STRING_VAL SEMI_COMA
  157 variable_declaration_block: . type variable_list SEMI_COMA
  158                           | . CONST type variable_list SEMI_COMA
  159                           | . enum
  166 return_statement: . RETURN expr SEMI_COMA
  167 loop_statement: . for_loop
  168               | . while_loop
  169               | . do_while
  170 do_while: . do_header statement while_loop_header SEMI_COMA
  170         | do_header . statement while_loop_header SEMI_COMA
  171 do_header: . DO
  172 for_loop: . for_loop_header statement
  173 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR
  229 while_loop: . while_loop_header statement
  230 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  231 conditional_statement: . if_header statement
  232                      | . if_header statement ELSE statement
  233                      | . switch_header switch_body
  234 if_header: . IF OPEN_P logic_expr CLOSE_P
  235 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  255 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | . ENUM IDENTIFIER SEMI_COMA
  261 try_catch: . TRY statement catch_list finally_statement
  262          | . TRY statement catch_list

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 171
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 173
    VOID        shift, and go to state 74
    FOR         shift, and go to state 174
    WHILE       shift, and go to state 175
    IF          shift, and go to state 176
    DO          shift, and go to state 177
    SWITCH      shift, and go to state 178
    ENUM        shift, and go to state 179
    OPEN_ARR    shift, and go to state 180
    RETURN      shift, and go to state 181
    STRUCT      shift, and go to state 76
    TRY         shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 83
    enum_type                   go to state 84
    simple_type                 go to state 85
    complex_type                go to state 86
    block_body                  go to state 185
    block_body_header           go to state 119
    statement                   go to state 273
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    message_call2               go to state 199
    message_call                go to state 200
    while_loop                  go to state 201
    while_loop_header           go to state 202
    conditional_statement       go to state 203
    if_header                   go to state 204
    switch_header               go to state 205
    enum                        go to state 206
    try_catch                   go to state 207


State 195

  167 loop_statement: for_loop .

    $default  reduce using rule 167 (loop_statement)


State 196

   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . message_call SEMI_COMA
  155          | . error SEMI_COMA
  156 asm: . AT_ASM STRING_VAL SEMI_COMA
  157 variable_declaration_block: . type variable_list SEMI_COMA
  158                           | . CONST type variable_list SEMI_COMA
  159                           | . enum
  166 return_statement: . RETURN expr SEMI_COMA
  167 loop_statement: . for_loop
  168               | . while_loop
  169               | . do_while
  170 do_while: . do_header statement while_loop_header SEMI_COMA
  171 do_header: . DO
  172 for_loop: . for_loop_header statement
  172         | for_loop_header . statement
  173 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR
  229 while_loop: . while_loop_header statement
  230 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  231 conditional_statement: . if_header statement
  232                      | . if_header statement ELSE statement
  233                      | . switch_header switch_body
  234 if_header: . IF OPEN_P logic_expr CLOSE_P
  235 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  255 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | . ENUM IDENTIFIER SEMI_COMA
  261 try_catch: . TRY statement catch_list finally_statement
  262          | . TRY statement catch_list

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 171
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 173
    VOID        shift, and go to state 74
    FOR         shift, and go to state 174
    WHILE       shift, and go to state 175
    IF          shift, and go to state 176
    DO          shift, and go to state 177
    SWITCH      shift, and go to state 178
    ENUM        shift, and go to state 179
    OPEN_ARR    shift, and go to state 180
    RETURN      shift, and go to state 181
    STRUCT      shift, and go to state 76
    TRY         shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 83
    enum_type                   go to state 84
    simple_type                 go to state 85
    complex_type                go to state 86
    block_body                  go to state 185
    block_body_header           go to state 119
    statement                   go to state 274
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    message_call2               go to state 199
    message_call                go to state 200
    while_loop                  go to state 201
    while_loop_header           go to state 202
    conditional_statement       go to state 203
    if_header                   go to state 204
    switch_header               go to state 205
    enum                        go to state 206
    try_catch                   go to state 207


State 197

  148 statement: assign_expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 275


State 198

  198 assign_expr: long_id . EQUAL simple_expr
  199 long_id: long_id . DOT IDENTIFIER

    EQUAL  shift, and go to state 276
    DOT    shift, and go to state 277


State 199

  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR
  218             | message_call2 . sender message CLOSE_ARR
  219 sender: . message_call
  220       | . IDENTIFIER

    IDENTIFIER  shift, and go to state 278
    OPEN_ARR    shift, and go to state 180

    message_call2  go to state 199
    message_call   go to state 279
    sender         go to state 280


State 200

  154 statement: message_call . SEMI_COMA
  200 long_id: message_call .  [EQUAL, DOT]

    SEMI_COMA  shift, and go to state 281

    $default  reduce using rule 200 (long_id)


State 201

  168 loop_statement: while_loop .

    $default  reduce using rule 168 (loop_statement)


State 202

   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . message_call SEMI_COMA
  155          | . error SEMI_COMA
  156 asm: . AT_ASM STRING_VAL SEMI_COMA
  157 variable_declaration_block: . type variable_list SEMI_COMA
  158                           | . CONST type variable_list SEMI_COMA
  159                           | . enum
  166 return_statement: . RETURN expr SEMI_COMA
  167 loop_statement: . for_loop
  168               | . while_loop
  169               | . do_while
  170 do_while: . do_header statement while_loop_header SEMI_COMA
  171 do_header: . DO
  172 for_loop: . for_loop_header statement
  173 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR
  229 while_loop: . while_loop_header statement
  229           | while_loop_header . statement
  230 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  231 conditional_statement: . if_header statement
  232                      | . if_header statement ELSE statement
  233                      | . switch_header switch_body
  234 if_header: . IF OPEN_P logic_expr CLOSE_P
  235 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  255 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | . ENUM IDENTIFIER SEMI_COMA
  261 try_catch: . TRY statement catch_list finally_statement
  262          | . TRY statement catch_list

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 171
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 173
    VOID        shift, and go to state 74
    FOR         shift, and go to state 174
    WHILE       shift, and go to state 175
    IF          shift, and go to state 176
    DO          shift, and go to state 177
    SWITCH      shift, and go to state 178
    ENUM        shift, and go to state 179
    OPEN_ARR    shift, and go to state 180
    RETURN      shift, and go to state 181
    STRUCT      shift, and go to state 76
    TRY         shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 83
    enum_type                   go to state 84
    simple_type                 go to state 85
    complex_type                go to state 86
    block_body                  go to state 185
    block_body_header           go to state 119
    statement                   go to state 282
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    message_call2               go to state 199
    message_call                go to state 200
    while_loop                  go to state 201
    while_loop_header           go to state 202
    conditional_statement       go to state 203
    if_header                   go to state 204
    switch_header               go to state 205
    enum                        go to state 206
    try_catch                   go to state 207


State 203

  147 statement: conditional_statement .

    $default  reduce using rule 147 (statement)


State 204

   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . message_call SEMI_COMA
  155          | . error SEMI_COMA
  156 asm: . AT_ASM STRING_VAL SEMI_COMA
  157 variable_declaration_block: . type variable_list SEMI_COMA
  158                           | . CONST type variable_list SEMI_COMA
  159                           | . enum
  166 return_statement: . RETURN expr SEMI_COMA
  167 loop_statement: . for_loop
  168               | . while_loop
  169               | . do_while
  170 do_while: . do_header statement while_loop_header SEMI_COMA
  171 do_header: . DO
  172 for_loop: . for_loop_header statement
  173 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR
  229 while_loop: . while_loop_header statement
  230 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  231 conditional_statement: . if_header statement
  231                      | if_header . statement
  232                      | . if_header statement ELSE statement
  232                      | if_header . statement ELSE statement
  233                      | . switch_header switch_body
  234 if_header: . IF OPEN_P logic_expr CLOSE_P
  235 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  255 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | . ENUM IDENTIFIER SEMI_COMA
  261 try_catch: . TRY statement catch_list finally_statement
  262          | . TRY statement catch_list

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 171
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 173
    VOID        shift, and go to state 74
    FOR         shift, and go to state 174
    WHILE       shift, and go to state 175
    IF          shift, and go to state 176
    DO          shift, and go to state 177
    SWITCH      shift, and go to state 178
    ENUM        shift, and go to state 179
    OPEN_ARR    shift, and go to state 180
    RETURN      shift, and go to state 181
    STRUCT      shift, and go to state 76
    TRY         shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 83
    enum_type                   go to state 84
    simple_type                 go to state 85
    complex_type                go to state 86
    block_body                  go to state 185
    block_body_header           go to state 119
    statement                   go to state 283
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    message_call2               go to state 199
    message_call                go to state 200
    while_loop                  go to state 201
    while_loop_header           go to state 202
    conditional_statement       go to state 203
    if_header                   go to state 204
    switch_header               go to state 205
    enum                        go to state 206
    try_catch                   go to state 207


State 205

  233 conditional_statement: switch_header . switch_body
  237 switch_body: . list_of_case default_case CLOSE_S
  238            | . list_of_case CLOSE_S
  239            | . default_case CLOSE_S
  240            | . CLOSE_S
  241 list_of_case: . list_of_case case_body
  242             | . case_body
  243 case_body: . CASE expr SEMI_COLUMN statement BREAK SEMI_COMA
  244          | . CASE expr SEMI_COLUMN statement
  245          | . CASE expr SEMI_COLUMN BREAK SEMI_COMA
  246 default_case: . DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  247             | . DEFAULT SEMI_COLUMN statement
  248             | . DEFAULT SEMI_COLUMN BREAK SEMI_COMA

    CLOSE_S  shift, and go to state 284
    CASE     shift, and go to state 285
    DEFAULT  shift, and go to state 286

    switch_body   go to state 287
    list_of_case  go to state 288
    case_body     go to state 289
    default_case  go to state 290


State 206

  159 variable_declaration_block: enum .

    $default  reduce using rule 159 (variable_declaration_block)


State 207

  152 statement: try_catch .

    $default  reduce using rule 152 (statement)


State 208

  251 protocol_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 251 (protocol_body)


State 209

  257 list_expr: . IDENTIFIER EQUAL expr COMMA list_expr
  258          | . IDENTIFIER EQUAL expr
  259          | . IDENTIFIER
  260          | . IDENTIFIER COMMA list_expr
  260          | IDENTIFIER COMMA . list_expr

    IDENTIFIER  shift, and go to state 127

    list_expr  go to state 291


State 210

  115 p_type: . OPEN_P type CLOSE_P
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR
  257 list_expr: IDENTIFIER EQUAL . expr COMMA list_expr
  258          | IDENTIFIER EQUAL . expr

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    expr           go to state 292
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 211

  255 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 293


State 212

   63 data_member: IDENTIFIER . array_tag
   64            | IDENTIFIER .  [SEMI_COMA, COMMA]
   66            | IDENTIFIER . error
   97 array_tag: . array_first_tag array_tag_list
  101 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  102                | . OPEN_ARR CLOSE_ARR

    error     shift, and go to state 219
    OPEN_ARR  shift, and go to state 216

    SEMI_COMA  reduce using rule 64 (data_member)
    COMMA      reduce using rule 64 (data_member)

    array_tag        go to state 294
    array_first_tag  go to state 218


State 213

   58 variable_declarationxx: CONST type ids_list . SEMI_COMA
   60 ids_list: ids_list . COMMA data_member

    SEMI_COMA  shift, and go to state 295
    COMMA      shift, and go to state 222


State 214

   89 enum_type: ENUM IDENTIFIER MULTI .

    $default  reduce using rule 89 (enum_type)


State 215

   87 struct_type: STRUCT IDENTIFIER MULTI .

    $default  reduce using rule 87 (struct_type)


State 216

  101 array_first_tag: OPEN_ARR . INT_VAL CLOSE_ARR
  102                | OPEN_ARR . CLOSE_ARR

    INT_VAL    shift, and go to state 296
    CLOSE_ARR  shift, and go to state 297


State 217

   65 data_member: error array_tag .

    $default  reduce using rule 65 (data_member)


State 218

   97 array_tag: array_first_tag . array_tag_list
   98 array_tag_list: . array_tag_list OPEN_ARR INT_VAL CLOSE_ARR
   99               | .
  100               | . array_tag_list OPEN_ARR error CLOSE_ARR

    $default  reduce using rule 99 (array_tag_list)

    array_tag_list  go to state 298


State 219

   66 data_member: IDENTIFIER error .

    $default  reduce using rule 66 (data_member)


State 220

   59 variable_declarationxx: type IDENTIFIER array_tag . error
   63 data_member: IDENTIFIER array_tag .  [SEMI_COMA, COMMA]

    error  shift, and go to state 299

    SEMI_COMA  reduce using rule 63 (data_member)
    COMMA      reduce using rule 63 (data_member)


State 221

   57 variable_declarationxx: type ids_list SEMI_COMA .

    $default  reduce using rule 57 (variable_declarationxx)


State 222

   60 ids_list: ids_list COMMA . data_member
   63 data_member: . IDENTIFIER array_tag
   64            | . IDENTIFIER
   65            | . error array_tag
   66            | . IDENTIFIER error

    error       shift, and go to state 300
    IDENTIFIER  shift, and go to state 212

    data_member  go to state 301


State 223

   35 ids_list_identifier: ids_list_identifier COMMA IDENTIFIER .

    $default  reduce using rule 35 (ids_list_identifier)


State 224

  123 parameter: p_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 302


State 225

  120 selector_decleration: IDENTIFIER SEMI_COLUMN parameter_list .  [error, IDENTIFIER, SEMI_COMA, OPEN_S]
  121 parameter_list: parameter_list . SEMI_COLUMN parameter

    SEMI_COLUMN  shift, and go to state 303

    $default  reduce using rule 120 (selector_decleration)


State 226

  122 parameter_list: parameter .

    $default  reduce using rule 122 (parameter_list)


State 227

  115 p_type: OPEN_P type CLOSE_P .

    $default  reduce using rule 115 (p_type)


State 228

  112 class_method_declaration: PLUS p_type method_selectors error .

    $default  reduce using rule 112 (class_method_declaration)


State 229

  111 class_method_declaration: PLUS p_type method_selectors SEMI_COMA .

    $default  reduce using rule 111 (class_method_declaration)


State 230

  114 instance_method_declaration: MINUS p_type method_selectors SEMI_COMA .

    $default  reduce using rule 114 (instance_method_declaration)


State 231

   25 class_interface_body: protocol_reference_list error interface_declaration_list AT_END .

    $default  reduce using rule 25 (class_interface_body)


State 232

   27 class_interface_body: protocol_reference_list instance_variables interface_declaration_list error .

    $default  reduce using rule 27 (class_interface_body)


State 233

   16 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 16 (class_interface_body)


State 234

   77 struct: struct_header OPEN_S CLOSE_S error SEMI_COMA .

    $default  reduce using rule 77 (struct)


State 235

   81 entity: error COMMA .

    $default  reduce using rule 81 (entity)


State 236

   79 entity: . IDENTIFIER COMMA entity
   79       | IDENTIFIER COMMA . entity
   80       | . IDENTIFIER
   81       | . error COMMA

    error       shift, and go to state 304
    IDENTIFIER  shift, and go to state 162

    entity  go to state 305


State 237

   75 struct: struct_header OPEN_S CLOSE_S entity error . SEMI_COMA

    SEMI_COMA  shift, and go to state 306


State 238

   71 struct: struct_header OPEN_S CLOSE_S entity SEMI_COMA .

    $default  reduce using rule 71 (struct)


State 239

   78 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S error . SEMI_COMA
   81 entity: error . COMMA

    SEMI_COMA  shift, and go to state 307
    COMMA      shift, and go to state 235


State 240

   74 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA .

    $default  reduce using rule 74 (struct)


State 241

   72 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity . SEMI_COMA
   76       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity . error SEMI_COMA

    error      shift, and go to state 308
    SEMI_COMA  shift, and go to state 309


State 242

  155 statement: error SEMI_COMA .

    $default  reduce using rule 155 (statement)


State 243

  143 block_body_statements: error CLOSE_S .

    $default  reduce using rule 143 (block_body_statements)


State 244

  158 variable_declaration_block: CONST type . variable_list SEMI_COMA
  160 variable_list: . variable_list COMMA variable
  161              | . variable
  162              | . variable_list error variable
  163 variable: . IDENTIFIER array_tag initializer
  164         | . IDENTIFIER main_initializer
  165         | . error array_tag initializer

    error       shift, and go to state 267
    IDENTIFIER  shift, and go to state 268

    variable_list  go to state 310
    variable       go to state 270


State 245

  173 for_loop_header: FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  175                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  176                | FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  177                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  178                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  179                | FOR OPEN_P . SEMI_COMA SEMI_COMA expr CLOSE_P
  180                | FOR OPEN_P . SEMI_COMA SEMI_COMA CLOSE_P
  181 for_initializer: . INT IDENTIFIER EQUAL expr
  182                | . IDENTIFIER EQUAL expr
  183                | . IDENTIFIER

    IDENTIFIER  shift, and go to state 311
    INT         shift, and go to state 312
    SEMI_COMA   shift, and go to state 313

    for_initializer  go to state 314


State 246

  115 p_type: . OPEN_P type CLOSE_P
  184 logic_expr: . expr LESS_THAN expr
  185           | . expr MORE_THAN expr
  186           | . expr LESS_OR_EQUAL expr
  187           | . expr MORE_OR_EQUAL expr
  188           | . expr EQUAL_EQUAL expr
  189           | . expr NOT_EQUAL expr
  190           | . NOT_EQUAL expr
  191           | . OPEN_P logic_expr CLOSE_P
  192           | . logic_expr AND_AND logic_expr
  193           | . logic_expr OR_OR logic_expr
  194           | . TRUE
  195           | . FALSE
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR
  230 while_loop_header: WHILE OPEN_P . logic_expr CLOSE_P

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 315
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    NOT_EQUAL    shift, and go to state 316
    OPEN_ARR     shift, and go to state 180
    TRUE         shift, and go to state 317
    FALSE        shift, and go to state 318
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    logic_expr     go to state 319
    expr           go to state 320
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 247

  115 p_type: . OPEN_P type CLOSE_P
  184 logic_expr: . expr LESS_THAN expr
  185           | . expr MORE_THAN expr
  186           | . expr LESS_OR_EQUAL expr
  187           | . expr MORE_OR_EQUAL expr
  188           | . expr EQUAL_EQUAL expr
  189           | . expr NOT_EQUAL expr
  190           | . NOT_EQUAL expr
  191           | . OPEN_P logic_expr CLOSE_P
  192           | . logic_expr AND_AND logic_expr
  193           | . logic_expr OR_OR logic_expr
  194           | . TRUE
  195           | . FALSE
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR
  234 if_header: IF OPEN_P . logic_expr CLOSE_P

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 315
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    NOT_EQUAL    shift, and go to state 316
    OPEN_ARR     shift, and go to state 180
    TRUE         shift, and go to state 317
    FALSE        shift, and go to state 318
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    logic_expr     go to state 321
    expr           go to state 320
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 248

  235 switch_header: SWITCH OPEN_P . IDENTIFIER CLOSE_P switch_body_block

    IDENTIFIER  shift, and go to state 322


State 249

   88 enum_type: ENUM IDENTIFIER .  [error, IDENTIFIER]
   89          | ENUM IDENTIFIER . MULTI
  255 enum: ENUM IDENTIFIER . OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | ENUM IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 60
    OPEN_S     shift, and go to state 61
    MULTI      shift, and go to state 214

    $default  reduce using rule 88 (enum_type)


State 250

  201 long_id: IDENTIFIER .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, EQUAL, DIV, CLOSE_ARR, DOT]
  212 simple_expr: IDENTIFIER . DOUBLEPLUS
  213            | IDENTIFIER . DOUBLEMINUS

    DOUBLEPLUS   shift, and go to state 323
    DOUBLEMINUS  shift, and go to state 324

    $default  reduce using rule 201 (long_id)


State 251

   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  115 p_type: . OPEN_P type CLOSE_P
  115       | OPEN_P . type CLOSE_P
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  211            | OPEN_P . simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 325
    NSSTRING     shift, and go to state 64
    FLOAT        shift, and go to state 65
    CHAR         shift, and go to state 66
    BOOL         shift, and go to state 67
    INT          shift, and go to state 68
    VOID         shift, and go to state 74
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    ENUM         shift, and go to state 75
    OPEN_ARR     shift, and go to state 180
    STRUCT       shift, and go to state 76
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    type           go to state 145
    struct_type    go to state 83
    enum_type      go to state 84
    simple_type    go to state 85
    complex_type   go to state 86
    p_type         go to state 258
    long_id        go to state 326
    simple_expr    go to state 327
    message_call2  go to state 199
    message_call   go to state 263


State 252

  202 simple_expr: STRING_VAL .

    $default  reduce using rule 202 (simple_expr)


State 253

  204 simple_expr: FLOAT_VAL .

    $default  reduce using rule 204 (simple_expr)


State 254

  205 simple_expr: CHAR_VAL .

    $default  reduce using rule 205 (simple_expr)


State 255

  203 simple_expr: INT_VAL .

    $default  reduce using rule 203 (simple_expr)


State 256

  214 simple_expr: DOUBLEPLUS . IDENTIFIER

    IDENTIFIER  shift, and go to state 328


State 257

  215 simple_expr: DOUBLEMINUS . IDENTIFIER

    IDENTIFIER  shift, and go to state 329


State 258

  115 p_type: . OPEN_P type CLOSE_P
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  216            | p_type . simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    long_id        go to state 326
    simple_expr    go to state 330
    message_call2  go to state 199
    message_call   go to state 263


State 259

  166 return_statement: RETURN expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 331


State 260

  196 expr: assign_expr .

    $default  reduce using rule 196 (expr)


State 261

  198 assign_expr: long_id . EQUAL simple_expr
  199 long_id: long_id . DOT IDENTIFIER
  206 simple_expr: long_id .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, DIV, CLOSE_ARR]

    EQUAL  shift, and go to state 276
    DOT    shift, and go to state 277

    $default  reduce using rule 206 (simple_expr)


State 262

  197 expr: simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL, CLOSE_ARR]
  207 simple_expr: simple_expr . PLUS simple_expr
  208            | simple_expr . MINUS simple_expr
  209            | simple_expr . MULTI simple_expr
  210            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 332
    MINUS  shift, and go to state 333
    MULTI  shift, and go to state 334
    DIV    shift, and go to state 335

    $default  reduce using rule 197 (expr)


State 263

  200 long_id: message_call .

    $default  reduce using rule 200 (long_id)


State 264

  155 statement: error . SEMI_COMA

    SEMI_COMA  shift, and go to state 242


State 265

  261 try_catch: TRY statement . catch_list finally_statement
  262          | TRY statement . catch_list
  263 catch_list: . CATCH OPEN_S type IDENTIFIER CLOSE_S statement
  264           | . catch_list CATCH OPEN_S type IDENTIFIER CLOSE_S statement

    CATCH  shift, and go to state 336

    catch_list  go to state 337


State 266

  156 asm: AT_ASM STRING_VAL . SEMI_COMA

    SEMI_COMA  shift, and go to state 338


State 267

   97 array_tag: . array_first_tag array_tag_list
  101 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  102                | . OPEN_ARR CLOSE_ARR
  165 variable: error . array_tag initializer

    OPEN_ARR  shift, and go to state 216

    array_tag        go to state 339
    array_first_tag  go to state 218


State 268

   97 array_tag: . array_first_tag array_tag_list
  101 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  102                | . OPEN_ARR CLOSE_ARR
  105 main_initializer: . EQUAL expr
  106                 | .  [error, SEMI_COMA, COMMA]
  163 variable: IDENTIFIER . array_tag initializer
  164         | IDENTIFIER . main_initializer

    EQUAL     shift, and go to state 340
    OPEN_ARR  shift, and go to state 216

    $default  reduce using rule 106 (main_initializer)

    array_tag         go to state 341
    array_first_tag   go to state 218
    main_initializer  go to state 342


State 269

  157 variable_declaration_block: type variable_list . SEMI_COMA
  160 variable_list: variable_list . COMMA variable
  162              | variable_list . error variable

    error      shift, and go to state 343
    SEMI_COMA  shift, and go to state 344
    COMMA      shift, and go to state 345


State 270

  161 variable_list: variable .

    $default  reduce using rule 161 (variable_list)


State 271

  141 block_body_statements: statement_list CLOSE_S .

    $default  reduce using rule 141 (block_body_statements)


State 272

  144 statement_list: statement_list statement .

    $default  reduce using rule 144 (statement_list)


State 273

  170 do_while: do_header statement . while_loop_header SEMI_COMA
  230 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P

    WHILE  shift, and go to state 175

    while_loop_header  go to state 346


State 274

  172 for_loop: for_loop_header statement .

    $default  reduce using rule 172 (for_loop)


State 275

  148 statement: assign_expr SEMI_COMA .

    $default  reduce using rule 148 (statement)


State 276

  115 p_type: . OPEN_P type CLOSE_P
  198 assign_expr: long_id EQUAL . simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    long_id        go to state 326
    simple_expr    go to state 347
    message_call2  go to state 199
    message_call   go to state 263


State 277

  199 long_id: long_id DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 348


State 278

  220 sender: IDENTIFIER .

    $default  reduce using rule 220 (sender)


State 279

  219 sender: message_call .

    $default  reduce using rule 219 (sender)


State 280

  218 message_call: message_call2 sender . message CLOSE_ARR
  221 message: . IDENTIFIER
  222        | . message_selectors_list
  223 message_selectors_list: . message_selectors_list message_selector
  224                       | . message_selector
  225 message_selector: . IDENTIFIER SEMI_COLUMN argument_list

    IDENTIFIER  shift, and go to state 349

    message                 go to state 350
    message_selectors_list  go to state 351
    message_selector        go to state 352


State 281

  154 statement: message_call SEMI_COMA .

    $default  reduce using rule 154 (statement)


State 282

  229 while_loop: while_loop_header statement .

    $default  reduce using rule 229 (while_loop)


State 283

  231 conditional_statement: if_header statement .  [error, IDENTIFIER, NSSTRING, FLOAT, CHAR, BOOL, INT, OPEN_S, CLOSE_S, CONST, VOID, FOR, WHILE, IF, DO, SWITCH, CASE, DEFAULT, BREAK, ENUM, OPEN_ARR, RETURN, STRUCT, TRY, CATCH, FINALLY, AT_ASM]
  232                      | if_header statement . ELSE statement

    ELSE  shift, and go to state 353

    $default  reduce using rule 231 (conditional_statement)

    Conflict between rule 231 and token ELSE resolved as shift (if_h < ELSE).


State 284

  240 switch_body: CLOSE_S .

    $default  reduce using rule 240 (switch_body)


State 285

  115 p_type: . OPEN_P type CLOSE_P
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR
  243 case_body: CASE . expr SEMI_COLUMN statement BREAK SEMI_COMA
  244          | CASE . expr SEMI_COLUMN statement
  245          | CASE . expr SEMI_COLUMN BREAK SEMI_COMA

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    expr           go to state 354
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 286

  246 default_case: DEFAULT . SEMI_COLUMN statement BREAK SEMI_COMA
  247             | DEFAULT . SEMI_COLUMN statement
  248             | DEFAULT . SEMI_COLUMN BREAK SEMI_COMA

    SEMI_COLUMN  shift, and go to state 355


State 287

  233 conditional_statement: switch_header switch_body .

    $default  reduce using rule 233 (conditional_statement)


State 288

  237 switch_body: list_of_case . default_case CLOSE_S
  238            | list_of_case . CLOSE_S
  241 list_of_case: list_of_case . case_body
  243 case_body: . CASE expr SEMI_COLUMN statement BREAK SEMI_COMA
  244          | . CASE expr SEMI_COLUMN statement
  245          | . CASE expr SEMI_COLUMN BREAK SEMI_COMA
  246 default_case: . DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  247             | . DEFAULT SEMI_COLUMN statement
  248             | . DEFAULT SEMI_COLUMN BREAK SEMI_COMA

    CLOSE_S  shift, and go to state 356
    CASE     shift, and go to state 285
    DEFAULT  shift, and go to state 286

    case_body     go to state 357
    default_case  go to state 358


State 289

  242 list_of_case: case_body .

    $default  reduce using rule 242 (list_of_case)


State 290

  239 switch_body: default_case . CLOSE_S

    CLOSE_S  shift, and go to state 359


State 291

  260 list_expr: IDENTIFIER COMMA list_expr .

    $default  reduce using rule 260 (list_expr)


State 292

  257 list_expr: IDENTIFIER EQUAL expr . COMMA list_expr
  258          | IDENTIFIER EQUAL expr .  [CLOSE_S]

    COMMA  shift, and go to state 360

    $default  reduce using rule 258 (list_expr)


State 293

  255 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA .

    $default  reduce using rule 255 (enum)


State 294

   63 data_member: IDENTIFIER array_tag .

    $default  reduce using rule 63 (data_member)


State 295

   58 variable_declarationxx: CONST type ids_list SEMI_COMA .

    $default  reduce using rule 58 (variable_declarationxx)


State 296

  101 array_first_tag: OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 361


State 297

  102 array_first_tag: OPEN_ARR CLOSE_ARR .

    $default  reduce using rule 102 (array_first_tag)


State 298

   97 array_tag: array_first_tag array_tag_list .  [error, SEMI_COMA, COMMA, EQUAL]
   98 array_tag_list: array_tag_list . OPEN_ARR INT_VAL CLOSE_ARR
  100               | array_tag_list . OPEN_ARR error CLOSE_ARR

    OPEN_ARR  shift, and go to state 362

    $default  reduce using rule 97 (array_tag)


State 299

   59 variable_declarationxx: type IDENTIFIER array_tag error .

    $default  reduce using rule 59 (variable_declarationxx)


State 300

   65 data_member: error . array_tag
   97 array_tag: . array_first_tag array_tag_list
  101 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  102                | . OPEN_ARR CLOSE_ARR

    OPEN_ARR  shift, and go to state 216

    array_tag        go to state 217
    array_first_tag  go to state 218


State 301

   60 ids_list: ids_list COMMA data_member .

    $default  reduce using rule 60 (ids_list)


State 302

  123 parameter: p_type IDENTIFIER .

    $default  reduce using rule 123 (parameter)


State 303

  115 p_type: . OPEN_P type CLOSE_P
  121 parameter_list: parameter_list SEMI_COLUMN . parameter
  123 parameter: . p_type IDENTIFIER

    OPEN_P  shift, and go to state 90

    p_type     go to state 224
    parameter  go to state 363


State 304

   81 entity: error . COMMA

    COMMA  shift, and go to state 235


State 305

   79 entity: IDENTIFIER COMMA entity .

    $default  reduce using rule 79 (entity)


State 306

   75 struct: struct_header OPEN_S CLOSE_S entity error SEMI_COMA .

    $default  reduce using rule 75 (struct)


State 307

   78 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA .

    $default  reduce using rule 78 (struct)


State 308

   76 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity error . SEMI_COMA

    SEMI_COMA  shift, and go to state 364


State 309

   72 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA .

    $default  reduce using rule 72 (struct)


State 310

  158 variable_declaration_block: CONST type variable_list . SEMI_COMA
  160 variable_list: variable_list . COMMA variable
  162              | variable_list . error variable

    error      shift, and go to state 343
    SEMI_COMA  shift, and go to state 365
    COMMA      shift, and go to state 345


State 311

  182 for_initializer: IDENTIFIER . EQUAL expr
  183                | IDENTIFIER .  [SEMI_COMA]

    EQUAL  shift, and go to state 366

    $default  reduce using rule 183 (for_initializer)


State 312

  181 for_initializer: INT . IDENTIFIER EQUAL expr

    IDENTIFIER  shift, and go to state 367


State 313

  115 p_type: . OPEN_P type CLOSE_P
  174 for_loop_header: FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P
  178                | FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA CLOSE_P
  179                | FOR OPEN_P SEMI_COMA . SEMI_COMA expr CLOSE_P
  180                | FOR OPEN_P SEMI_COMA . SEMI_COMA CLOSE_P
  184 logic_expr: . expr LESS_THAN expr
  185           | . expr MORE_THAN expr
  186           | . expr LESS_OR_EQUAL expr
  187           | . expr MORE_OR_EQUAL expr
  188           | . expr EQUAL_EQUAL expr
  189           | . expr NOT_EQUAL expr
  190           | . NOT_EQUAL expr
  191           | . OPEN_P logic_expr CLOSE_P
  192           | . logic_expr AND_AND logic_expr
  193           | . logic_expr OR_OR logic_expr
  194           | . TRUE
  195           | . FALSE
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    SEMI_COMA    shift, and go to state 368
    OPEN_P       shift, and go to state 315
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    NOT_EQUAL    shift, and go to state 316
    OPEN_ARR     shift, and go to state 180
    TRUE         shift, and go to state 317
    FALSE        shift, and go to state 318
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    logic_expr     go to state 369
    expr           go to state 320
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 314

  173 for_loop_header: FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  175                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA expr CLOSE_P
  176                | FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  177                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA CLOSE_P

    SEMI_COMA  shift, and go to state 370


State 315

   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  115 p_type: . OPEN_P type CLOSE_P
  115       | OPEN_P . type CLOSE_P
  184 logic_expr: . expr LESS_THAN expr
  185           | . expr MORE_THAN expr
  186           | . expr LESS_OR_EQUAL expr
  187           | . expr MORE_OR_EQUAL expr
  188           | . expr EQUAL_EQUAL expr
  189           | . expr NOT_EQUAL expr
  190           | . NOT_EQUAL expr
  191           | . OPEN_P logic_expr CLOSE_P
  191           | OPEN_P . logic_expr CLOSE_P
  192           | . logic_expr AND_AND logic_expr
  193           | . logic_expr OR_OR logic_expr
  194           | . TRUE
  195           | . FALSE
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  211            | OPEN_P . simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 325
    NSSTRING     shift, and go to state 64
    FLOAT        shift, and go to state 65
    CHAR         shift, and go to state 66
    BOOL         shift, and go to state 67
    INT          shift, and go to state 68
    VOID         shift, and go to state 74
    OPEN_P       shift, and go to state 315
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    NOT_EQUAL    shift, and go to state 316
    ENUM         shift, and go to state 75
    OPEN_ARR     shift, and go to state 180
    TRUE         shift, and go to state 317
    FALSE        shift, and go to state 318
    STRUCT       shift, and go to state 76
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    type           go to state 145
    struct_type    go to state 83
    enum_type      go to state 84
    simple_type    go to state 85
    complex_type   go to state 86
    p_type         go to state 258
    logic_expr     go to state 371
    expr           go to state 320
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 372
    message_call2  go to state 199
    message_call   go to state 263


State 316

  115 p_type: . OPEN_P type CLOSE_P
  190 logic_expr: NOT_EQUAL . expr
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    expr           go to state 373
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 317

  194 logic_expr: TRUE .

    $default  reduce using rule 194 (logic_expr)


State 318

  195 logic_expr: FALSE .

    $default  reduce using rule 195 (logic_expr)


State 319

  192 logic_expr: logic_expr . AND_AND logic_expr
  193           | logic_expr . OR_OR logic_expr
  230 while_loop_header: WHILE OPEN_P logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 374
    AND_AND  shift, and go to state 375
    OR_OR    shift, and go to state 376


State 320

  184 logic_expr: expr . LESS_THAN expr
  185           | expr . MORE_THAN expr
  186           | expr . LESS_OR_EQUAL expr
  187           | expr . MORE_OR_EQUAL expr
  188           | expr . EQUAL_EQUAL expr
  189           | expr . NOT_EQUAL expr

    LESS_THAN      shift, and go to state 377
    MORE_THAN      shift, and go to state 378
    LESS_OR_EQUAL  shift, and go to state 379
    MORE_OR_EQUAL  shift, and go to state 380
    EQUAL_EQUAL    shift, and go to state 381
    NOT_EQUAL      shift, and go to state 382


State 321

  192 logic_expr: logic_expr . AND_AND logic_expr
  193           | logic_expr . OR_OR logic_expr
  234 if_header: IF OPEN_P logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 383
    AND_AND  shift, and go to state 375
    OR_OR    shift, and go to state 376


State 322

  235 switch_header: SWITCH OPEN_P IDENTIFIER . CLOSE_P switch_body_block

    CLOSE_P  shift, and go to state 384


State 323

  212 simple_expr: IDENTIFIER DOUBLEPLUS .

    $default  reduce using rule 212 (simple_expr)


State 324

  213 simple_expr: IDENTIFIER DOUBLEMINUS .

    $default  reduce using rule 213 (simple_expr)


State 325

   96 complex_type: IDENTIFIER . MULTI
  201 long_id: IDENTIFIER .  [LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, EQUAL, DIV, DOT]
  212 simple_expr: IDENTIFIER . DOUBLEPLUS
  213            | IDENTIFIER . DOUBLEMINUS

    DOUBLEPLUS   shift, and go to state 323
    DOUBLEMINUS  shift, and go to state 324

    $default  reduce using rule 201 (long_id)

    Conflict between rule 201 and token MULTI resolved as reduce (MULTI < long_id_prec).


State 326

  199 long_id: long_id . DOT IDENTIFIER
  206 simple_expr: long_id .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, DIV, CLOSE_ARR]

    DOT  shift, and go to state 277

    $default  reduce using rule 206 (simple_expr)


State 327

  207 simple_expr: simple_expr . PLUS simple_expr
  208            | simple_expr . MINUS simple_expr
  209            | simple_expr . MULTI simple_expr
  210            | simple_expr . DIV simple_expr
  211            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 332
    MINUS    shift, and go to state 333
    CLOSE_P  shift, and go to state 385
    MULTI    shift, and go to state 334
    DIV      shift, and go to state 335


State 328

  214 simple_expr: DOUBLEPLUS IDENTIFIER .

    $default  reduce using rule 214 (simple_expr)


State 329

  215 simple_expr: DOUBLEMINUS IDENTIFIER .

    $default  reduce using rule 215 (simple_expr)


State 330

  207 simple_expr: simple_expr . PLUS simple_expr
  208            | simple_expr . MINUS simple_expr
  209            | simple_expr . MULTI simple_expr
  210            | simple_expr . DIV simple_expr
  216            | p_type simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL, CLOSE_ARR]

    PLUS   shift, and go to state 332
    MINUS  shift, and go to state 333
    MULTI  shift, and go to state 334
    DIV    shift, and go to state 335

    $default  reduce using rule 216 (simple_expr)

    Conflict between rule 216 and token PLUS resolved as shift (p_type_expr_prec < PLUS).
    Conflict between rule 216 and token MINUS resolved as shift (p_type_expr_prec < MINUS).
    Conflict between rule 216 and token MULTI resolved as shift (p_type_expr_prec < MULTI).
    Conflict between rule 216 and token DIV resolved as shift (p_type_expr_prec < DIV).


State 331

  166 return_statement: RETURN expr SEMI_COMA .

    $default  reduce using rule 166 (return_statement)


State 332

  115 p_type: . OPEN_P type CLOSE_P
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  207            | simple_expr PLUS . simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    long_id        go to state 326
    simple_expr    go to state 386
    message_call2  go to state 199
    message_call   go to state 263


State 333

  115 p_type: . OPEN_P type CLOSE_P
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  208            | simple_expr MINUS . simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    long_id        go to state 326
    simple_expr    go to state 387
    message_call2  go to state 199
    message_call   go to state 263


State 334

  115 p_type: . OPEN_P type CLOSE_P
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  209            | simple_expr MULTI . simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    long_id        go to state 326
    simple_expr    go to state 388
    message_call2  go to state 199
    message_call   go to state 263


State 335

  115 p_type: . OPEN_P type CLOSE_P
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  210            | simple_expr DIV . simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    long_id        go to state 326
    simple_expr    go to state 389
    message_call2  go to state 199
    message_call   go to state 263


State 336

  263 catch_list: CATCH . OPEN_S type IDENTIFIER CLOSE_S statement

    OPEN_S  shift, and go to state 390


State 337

  261 try_catch: TRY statement catch_list . finally_statement
  262          | TRY statement catch_list .  [error, IDENTIFIER, NSSTRING, FLOAT, CHAR, BOOL, INT, OPEN_S, CLOSE_S, CONST, VOID, FOR, WHILE, IF, DO, SWITCH, CASE, DEFAULT, BREAK, ENUM, OPEN_ARR, RETURN, ELSE, STRUCT, TRY, AT_ASM]
  264 catch_list: catch_list . CATCH OPEN_S type IDENTIFIER CLOSE_S statement
  265 finally_statement: . FINALLY statement

    CATCH    shift, and go to state 391
    FINALLY  shift, and go to state 392

    $default  reduce using rule 262 (try_catch)

    finally_statement  go to state 393

    Conflict between rule 262 and token CATCH resolved as shift (try_prec < CATCH).
    Conflict between rule 262 and token FINALLY resolved as shift (try_prec < FINALLY).


State 338

  156 asm: AT_ASM STRING_VAL SEMI_COMA .

    $default  reduce using rule 156 (asm)


State 339

  103 initializer: . EQUAL array_body
  104            | .  [error, SEMI_COMA, COMMA]
  165 variable: error array_tag . initializer

    EQUAL  shift, and go to state 394

    $default  reduce using rule 104 (initializer)

    initializer  go to state 395


State 340

  105 main_initializer: EQUAL . expr
  115 p_type: . OPEN_P type CLOSE_P
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    expr           go to state 396
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 341

  103 initializer: . EQUAL array_body
  104            | .  [error, SEMI_COMA, COMMA]
  163 variable: IDENTIFIER array_tag . initializer

    EQUAL  shift, and go to state 394

    $default  reduce using rule 104 (initializer)

    initializer  go to state 397


State 342

  164 variable: IDENTIFIER main_initializer .

    $default  reduce using rule 164 (variable)


State 343

  162 variable_list: variable_list error . variable
  163 variable: . IDENTIFIER array_tag initializer
  164         | . IDENTIFIER main_initializer
  165         | . error array_tag initializer

    error       shift, and go to state 267
    IDENTIFIER  shift, and go to state 268

    variable  go to state 398


State 344

  157 variable_declaration_block: type variable_list SEMI_COMA .

    $default  reduce using rule 157 (variable_declaration_block)


State 345

  160 variable_list: variable_list COMMA . variable
  163 variable: . IDENTIFIER array_tag initializer
  164         | . IDENTIFIER main_initializer
  165         | . error array_tag initializer

    error       shift, and go to state 267
    IDENTIFIER  shift, and go to state 268

    variable  go to state 399


State 346

  170 do_while: do_header statement while_loop_header . SEMI_COMA

    SEMI_COMA  shift, and go to state 400


State 347

  198 assign_expr: long_id EQUAL simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL, CLOSE_ARR]
  207 simple_expr: simple_expr . PLUS simple_expr
  208            | simple_expr . MINUS simple_expr
  209            | simple_expr . MULTI simple_expr
  210            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 332
    MINUS  shift, and go to state 333
    MULTI  shift, and go to state 334
    DIV    shift, and go to state 335

    $default  reduce using rule 198 (assign_expr)


State 348

  199 long_id: long_id DOT IDENTIFIER .

    $default  reduce using rule 199 (long_id)


State 349

  221 message: IDENTIFIER .  [CLOSE_ARR]
  225 message_selector: IDENTIFIER . SEMI_COLUMN argument_list

    SEMI_COLUMN  shift, and go to state 401

    $default  reduce using rule 221 (message)


State 350

  218 message_call: message_call2 sender message . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 402


State 351

  222 message: message_selectors_list .  [CLOSE_ARR]
  223 message_selectors_list: message_selectors_list . message_selector
  225 message_selector: . IDENTIFIER SEMI_COLUMN argument_list

    IDENTIFIER  shift, and go to state 403

    $default  reduce using rule 222 (message)

    message_selector  go to state 404


State 352

  224 message_selectors_list: message_selector .

    $default  reduce using rule 224 (message_selectors_list)


State 353

   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . message_call SEMI_COMA
  155          | . error SEMI_COMA
  156 asm: . AT_ASM STRING_VAL SEMI_COMA
  157 variable_declaration_block: . type variable_list SEMI_COMA
  158                           | . CONST type variable_list SEMI_COMA
  159                           | . enum
  166 return_statement: . RETURN expr SEMI_COMA
  167 loop_statement: . for_loop
  168               | . while_loop
  169               | . do_while
  170 do_while: . do_header statement while_loop_header SEMI_COMA
  171 do_header: . DO
  172 for_loop: . for_loop_header statement
  173 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR
  229 while_loop: . while_loop_header statement
  230 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  231 conditional_statement: . if_header statement
  232                      | . if_header statement ELSE statement
  232                      | if_header statement ELSE . statement
  233                      | . switch_header switch_body
  234 if_header: . IF OPEN_P logic_expr CLOSE_P
  235 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  255 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | . ENUM IDENTIFIER SEMI_COMA
  261 try_catch: . TRY statement catch_list finally_statement
  262          | . TRY statement catch_list

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 171
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 173
    VOID        shift, and go to state 74
    FOR         shift, and go to state 174
    WHILE       shift, and go to state 175
    IF          shift, and go to state 176
    DO          shift, and go to state 177
    SWITCH      shift, and go to state 178
    ENUM        shift, and go to state 179
    OPEN_ARR    shift, and go to state 180
    RETURN      shift, and go to state 181
    STRUCT      shift, and go to state 76
    TRY         shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 83
    enum_type                   go to state 84
    simple_type                 go to state 85
    complex_type                go to state 86
    block_body                  go to state 185
    block_body_header           go to state 119
    statement                   go to state 405
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    message_call2               go to state 199
    message_call                go to state 200
    while_loop                  go to state 201
    while_loop_header           go to state 202
    conditional_statement       go to state 203
    if_header                   go to state 204
    switch_header               go to state 205
    enum                        go to state 206
    try_catch                   go to state 207


State 354

  243 case_body: CASE expr . SEMI_COLUMN statement BREAK SEMI_COMA
  244          | CASE expr . SEMI_COLUMN statement
  245          | CASE expr . SEMI_COLUMN BREAK SEMI_COMA

    SEMI_COLUMN  shift, and go to state 406


State 355

   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . message_call SEMI_COMA
  155          | . error SEMI_COMA
  156 asm: . AT_ASM STRING_VAL SEMI_COMA
  157 variable_declaration_block: . type variable_list SEMI_COMA
  158                           | . CONST type variable_list SEMI_COMA
  159                           | . enum
  166 return_statement: . RETURN expr SEMI_COMA
  167 loop_statement: . for_loop
  168               | . while_loop
  169               | . do_while
  170 do_while: . do_header statement while_loop_header SEMI_COMA
  171 do_header: . DO
  172 for_loop: . for_loop_header statement
  173 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR
  229 while_loop: . while_loop_header statement
  230 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  231 conditional_statement: . if_header statement
  232                      | . if_header statement ELSE statement
  233                      | . switch_header switch_body
  234 if_header: . IF OPEN_P logic_expr CLOSE_P
  235 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  246 default_case: DEFAULT SEMI_COLUMN . statement BREAK SEMI_COMA
  247             | DEFAULT SEMI_COLUMN . statement
  248             | DEFAULT SEMI_COLUMN . BREAK SEMI_COMA
  255 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | . ENUM IDENTIFIER SEMI_COMA
  261 try_catch: . TRY statement catch_list finally_statement
  262          | . TRY statement catch_list

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 171
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 173
    VOID        shift, and go to state 74
    FOR         shift, and go to state 174
    WHILE       shift, and go to state 175
    IF          shift, and go to state 176
    DO          shift, and go to state 177
    SWITCH      shift, and go to state 178
    BREAK       shift, and go to state 407
    ENUM        shift, and go to state 179
    OPEN_ARR    shift, and go to state 180
    RETURN      shift, and go to state 181
    STRUCT      shift, and go to state 76
    TRY         shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 83
    enum_type                   go to state 84
    simple_type                 go to state 85
    complex_type                go to state 86
    block_body                  go to state 185
    block_body_header           go to state 119
    statement                   go to state 408
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    message_call2               go to state 199
    message_call                go to state 200
    while_loop                  go to state 201
    while_loop_header           go to state 202
    conditional_statement       go to state 203
    if_header                   go to state 204
    switch_header               go to state 205
    enum                        go to state 206
    try_catch                   go to state 207


State 356

  238 switch_body: list_of_case CLOSE_S .

    $default  reduce using rule 238 (switch_body)


State 357

  241 list_of_case: list_of_case case_body .

    $default  reduce using rule 241 (list_of_case)


State 358

  237 switch_body: list_of_case default_case . CLOSE_S

    CLOSE_S  shift, and go to state 409


State 359

  239 switch_body: default_case CLOSE_S .

    $default  reduce using rule 239 (switch_body)


State 360

  257 list_expr: . IDENTIFIER EQUAL expr COMMA list_expr
  257          | IDENTIFIER EQUAL expr COMMA . list_expr
  258          | . IDENTIFIER EQUAL expr
  259          | . IDENTIFIER
  260          | . IDENTIFIER COMMA list_expr

    IDENTIFIER  shift, and go to state 127

    list_expr  go to state 410


State 361

  101 array_first_tag: OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 101 (array_first_tag)


State 362

   98 array_tag_list: array_tag_list OPEN_ARR . INT_VAL CLOSE_ARR
  100               | array_tag_list OPEN_ARR . error CLOSE_ARR

    error    shift, and go to state 411
    INT_VAL  shift, and go to state 412


State 363

  121 parameter_list: parameter_list SEMI_COLUMN parameter .

    $default  reduce using rule 121 (parameter_list)


State 364

   76 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA .

    $default  reduce using rule 76 (struct)


State 365

  158 variable_declaration_block: CONST type variable_list SEMI_COMA .

    $default  reduce using rule 158 (variable_declaration_block)


State 366

  115 p_type: . OPEN_P type CLOSE_P
  182 for_initializer: IDENTIFIER EQUAL . expr
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    expr           go to state 413
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 367

  181 for_initializer: INT IDENTIFIER . EQUAL expr

    EQUAL  shift, and go to state 414


State 368

  115 p_type: . OPEN_P type CLOSE_P
  179 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA . expr CLOSE_P
  180                | FOR OPEN_P SEMI_COMA SEMI_COMA . CLOSE_P
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    CLOSE_P      shift, and go to state 415
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    expr           go to state 416
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 369

  174 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  178                | FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA CLOSE_P
  192 logic_expr: logic_expr . AND_AND logic_expr
  193           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 417
    AND_AND    shift, and go to state 375
    OR_OR      shift, and go to state 376


State 370

  115 p_type: . OPEN_P type CLOSE_P
  173 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P
  175                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA expr CLOSE_P
  176                | FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA CLOSE_P
  177                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA CLOSE_P
  184 logic_expr: . expr LESS_THAN expr
  185           | . expr MORE_THAN expr
  186           | . expr LESS_OR_EQUAL expr
  187           | . expr MORE_OR_EQUAL expr
  188           | . expr EQUAL_EQUAL expr
  189           | . expr NOT_EQUAL expr
  190           | . NOT_EQUAL expr
  191           | . OPEN_P logic_expr CLOSE_P
  192           | . logic_expr AND_AND logic_expr
  193           | . logic_expr OR_OR logic_expr
  194           | . TRUE
  195           | . FALSE
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    SEMI_COMA    shift, and go to state 418
    OPEN_P       shift, and go to state 315
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    NOT_EQUAL    shift, and go to state 316
    OPEN_ARR     shift, and go to state 180
    TRUE         shift, and go to state 317
    FALSE        shift, and go to state 318
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    logic_expr     go to state 419
    expr           go to state 320
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 371

  191 logic_expr: OPEN_P logic_expr . CLOSE_P
  192           | logic_expr . AND_AND logic_expr
  193           | logic_expr . OR_OR logic_expr

    CLOSE_P  shift, and go to state 420
    AND_AND  shift, and go to state 375
    OR_OR    shift, and go to state 376


State 372

  197 expr: simple_expr .  [LESS_THAN, MORE_THAN, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL]
  207 simple_expr: simple_expr . PLUS simple_expr
  208            | simple_expr . MINUS simple_expr
  209            | simple_expr . MULTI simple_expr
  210            | simple_expr . DIV simple_expr
  211            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 332
    MINUS    shift, and go to state 333
    CLOSE_P  shift, and go to state 385
    MULTI    shift, and go to state 334
    DIV      shift, and go to state 335

    $default  reduce using rule 197 (expr)


State 373

  190 logic_expr: NOT_EQUAL expr .

    $default  reduce using rule 190 (logic_expr)


State 374

  230 while_loop_header: WHILE OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 230 (while_loop_header)


State 375

  115 p_type: . OPEN_P type CLOSE_P
  184 logic_expr: . expr LESS_THAN expr
  185           | . expr MORE_THAN expr
  186           | . expr LESS_OR_EQUAL expr
  187           | . expr MORE_OR_EQUAL expr
  188           | . expr EQUAL_EQUAL expr
  189           | . expr NOT_EQUAL expr
  190           | . NOT_EQUAL expr
  191           | . OPEN_P logic_expr CLOSE_P
  192           | . logic_expr AND_AND logic_expr
  192           | logic_expr AND_AND . logic_expr
  193           | . logic_expr OR_OR logic_expr
  194           | . TRUE
  195           | . FALSE
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 315
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    NOT_EQUAL    shift, and go to state 316
    OPEN_ARR     shift, and go to state 180
    TRUE         shift, and go to state 317
    FALSE        shift, and go to state 318
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    logic_expr     go to state 421
    expr           go to state 320
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 376

  115 p_type: . OPEN_P type CLOSE_P
  184 logic_expr: . expr LESS_THAN expr
  185           | . expr MORE_THAN expr
  186           | . expr LESS_OR_EQUAL expr
  187           | . expr MORE_OR_EQUAL expr
  188           | . expr EQUAL_EQUAL expr
  189           | . expr NOT_EQUAL expr
  190           | . NOT_EQUAL expr
  191           | . OPEN_P logic_expr CLOSE_P
  192           | . logic_expr AND_AND logic_expr
  193           | . logic_expr OR_OR logic_expr
  193           | logic_expr OR_OR . logic_expr
  194           | . TRUE
  195           | . FALSE
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 315
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    NOT_EQUAL    shift, and go to state 316
    OPEN_ARR     shift, and go to state 180
    TRUE         shift, and go to state 317
    FALSE        shift, and go to state 318
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    logic_expr     go to state 422
    expr           go to state 320
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 377

  115 p_type: . OPEN_P type CLOSE_P
  184 logic_expr: expr LESS_THAN . expr
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    expr           go to state 423
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 378

  115 p_type: . OPEN_P type CLOSE_P
  185 logic_expr: expr MORE_THAN . expr
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    expr           go to state 424
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 379

  115 p_type: . OPEN_P type CLOSE_P
  186 logic_expr: expr LESS_OR_EQUAL . expr
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    expr           go to state 425
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 380

  115 p_type: . OPEN_P type CLOSE_P
  187 logic_expr: expr MORE_OR_EQUAL . expr
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    expr           go to state 426
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 381

  115 p_type: . OPEN_P type CLOSE_P
  188 logic_expr: expr EQUAL_EQUAL . expr
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    expr           go to state 427
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 382

  115 p_type: . OPEN_P type CLOSE_P
  189 logic_expr: expr NOT_EQUAL . expr
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    expr           go to state 428
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 383

  234 if_header: IF OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 234 (if_header)


State 384

  235 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P . switch_body_block
  236 switch_body_block: . OPEN_S

    OPEN_S  shift, and go to state 429

    switch_body_block  go to state 430


State 385

  211 simple_expr: OPEN_P simple_expr CLOSE_P .

    $default  reduce using rule 211 (simple_expr)


State 386

  207 simple_expr: simple_expr . PLUS simple_expr
  207            | simple_expr PLUS simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL, CLOSE_ARR]
  208            | simple_expr . MINUS simple_expr
  209            | simple_expr . MULTI simple_expr
  210            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 334
    DIV    shift, and go to state 335

    $default  reduce using rule 207 (simple_expr)

    Conflict between rule 207 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 207 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 207 and token MULTI resolved as shift (PLUS < MULTI).
    Conflict between rule 207 and token DIV resolved as shift (PLUS < DIV).


State 387

  207 simple_expr: simple_expr . PLUS simple_expr
  208            | simple_expr . MINUS simple_expr
  208            | simple_expr MINUS simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL, CLOSE_ARR]
  209            | simple_expr . MULTI simple_expr
  210            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 334
    DIV    shift, and go to state 335

    $default  reduce using rule 208 (simple_expr)

    Conflict between rule 208 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 208 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 208 and token MULTI resolved as shift (MINUS < MULTI).
    Conflict between rule 208 and token DIV resolved as shift (MINUS < DIV).


State 388

  207 simple_expr: simple_expr . PLUS simple_expr
  208            | simple_expr . MINUS simple_expr
  209            | simple_expr . MULTI simple_expr
  209            | simple_expr MULTI simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, DIV, CLOSE_ARR]
  210            | simple_expr . DIV simple_expr

    $default  reduce using rule 209 (simple_expr)

    Conflict between rule 209 and token PLUS resolved as reduce (PLUS < MULTI).
    Conflict between rule 209 and token MINUS resolved as reduce (MINUS < MULTI).
    Conflict between rule 209 and token MULTI resolved as reduce (%left MULTI).
    Conflict between rule 209 and token DIV resolved as reduce (%left DIV).


State 389

  207 simple_expr: simple_expr . PLUS simple_expr
  208            | simple_expr . MINUS simple_expr
  209            | simple_expr . MULTI simple_expr
  210            | simple_expr . DIV simple_expr
  210            | simple_expr DIV simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, DIV, CLOSE_ARR]

    $default  reduce using rule 210 (simple_expr)

    Conflict between rule 210 and token PLUS resolved as reduce (PLUS < DIV).
    Conflict between rule 210 and token MINUS resolved as reduce (MINUS < DIV).
    Conflict between rule 210 and token MULTI resolved as reduce (%left MULTI).
    Conflict between rule 210 and token DIV resolved as reduce (%left DIV).


State 390

   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  263 catch_list: CATCH OPEN_S . type IDENTIFIER CLOSE_S statement

    IDENTIFIER  shift, and go to state 63
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    VOID        shift, and go to state 74
    ENUM        shift, and go to state 75
    STRUCT      shift, and go to state 76

    type          go to state 431
    struct_type   go to state 83
    enum_type     go to state 84
    simple_type   go to state 85
    complex_type  go to state 86


State 391

  264 catch_list: catch_list CATCH . OPEN_S type IDENTIFIER CLOSE_S statement

    OPEN_S  shift, and go to state 432


State 392

   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . message_call SEMI_COMA
  155          | . error SEMI_COMA
  156 asm: . AT_ASM STRING_VAL SEMI_COMA
  157 variable_declaration_block: . type variable_list SEMI_COMA
  158                           | . CONST type variable_list SEMI_COMA
  159                           | . enum
  166 return_statement: . RETURN expr SEMI_COMA
  167 loop_statement: . for_loop
  168               | . while_loop
  169               | . do_while
  170 do_while: . do_header statement while_loop_header SEMI_COMA
  171 do_header: . DO
  172 for_loop: . for_loop_header statement
  173 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR
  229 while_loop: . while_loop_header statement
  230 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  231 conditional_statement: . if_header statement
  232                      | . if_header statement ELSE statement
  233                      | . switch_header switch_body
  234 if_header: . IF OPEN_P logic_expr CLOSE_P
  235 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  255 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | . ENUM IDENTIFIER SEMI_COMA
  261 try_catch: . TRY statement catch_list finally_statement
  262          | . TRY statement catch_list
  265 finally_statement: FINALLY . statement

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 171
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 173
    VOID        shift, and go to state 74
    FOR         shift, and go to state 174
    WHILE       shift, and go to state 175
    IF          shift, and go to state 176
    DO          shift, and go to state 177
    SWITCH      shift, and go to state 178
    ENUM        shift, and go to state 179
    OPEN_ARR    shift, and go to state 180
    RETURN      shift, and go to state 181
    STRUCT      shift, and go to state 76
    TRY         shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 83
    enum_type                   go to state 84
    simple_type                 go to state 85
    complex_type                go to state 86
    block_body                  go to state 185
    block_body_header           go to state 119
    statement                   go to state 433
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    message_call2               go to state 199
    message_call                go to state 200
    while_loop                  go to state 201
    while_loop_header           go to state 202
    conditional_statement       go to state 203
    if_header                   go to state 204
    switch_header               go to state 205
    enum                        go to state 206
    try_catch                   go to state 207


State 393

  261 try_catch: TRY statement catch_list finally_statement .

    $default  reduce using rule 261 (try_catch)


State 394

   37 array_body: . OPEN_S array_ele CLOSE_S
   38           | . OPEN_S CLOSE_S
  103 initializer: EQUAL . array_body

    OPEN_S  shift, and go to state 434

    array_body  go to state 435


State 395

  165 variable: error array_tag initializer .

    $default  reduce using rule 165 (variable)


State 396

  105 main_initializer: EQUAL expr .

    $default  reduce using rule 105 (main_initializer)


State 397

  163 variable: IDENTIFIER array_tag initializer .

    $default  reduce using rule 163 (variable)


State 398

  162 variable_list: variable_list error variable .

    $default  reduce using rule 162 (variable_list)


State 399

  160 variable_list: variable_list COMMA variable .

    $default  reduce using rule 160 (variable_list)


State 400

  170 do_while: do_header statement while_loop_header SEMI_COMA .

    $default  reduce using rule 170 (do_while)


State 401

  115 p_type: . OPEN_P type CLOSE_P
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR
  225 message_selector: IDENTIFIER SEMI_COLUMN . argument_list
  226 argument_list: . argument_list SEMI_COLUMN argument
  227              | . argument
  228 argument: . expr

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    expr           go to state 436
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263
    argument_list  go to state 437
    argument       go to state 438


State 402

  218 message_call: message_call2 sender message CLOSE_ARR .

    $default  reduce using rule 218 (message_call)


State 403

  225 message_selector: IDENTIFIER . SEMI_COLUMN argument_list

    SEMI_COLUMN  shift, and go to state 401


State 404

  223 message_selectors_list: message_selectors_list message_selector .

    $default  reduce using rule 223 (message_selectors_list)


State 405

  232 conditional_statement: if_header statement ELSE statement .

    $default  reduce using rule 232 (conditional_statement)


State 406

   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . message_call SEMI_COMA
  155          | . error SEMI_COMA
  156 asm: . AT_ASM STRING_VAL SEMI_COMA
  157 variable_declaration_block: . type variable_list SEMI_COMA
  158                           | . CONST type variable_list SEMI_COMA
  159                           | . enum
  166 return_statement: . RETURN expr SEMI_COMA
  167 loop_statement: . for_loop
  168               | . while_loop
  169               | . do_while
  170 do_while: . do_header statement while_loop_header SEMI_COMA
  171 do_header: . DO
  172 for_loop: . for_loop_header statement
  173 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR
  229 while_loop: . while_loop_header statement
  230 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  231 conditional_statement: . if_header statement
  232                      | . if_header statement ELSE statement
  233                      | . switch_header switch_body
  234 if_header: . IF OPEN_P logic_expr CLOSE_P
  235 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  243 case_body: CASE expr SEMI_COLUMN . statement BREAK SEMI_COMA
  244          | CASE expr SEMI_COLUMN . statement
  245          | CASE expr SEMI_COLUMN . BREAK SEMI_COMA
  255 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | . ENUM IDENTIFIER SEMI_COMA
  261 try_catch: . TRY statement catch_list finally_statement
  262          | . TRY statement catch_list

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 171
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 173
    VOID        shift, and go to state 74
    FOR         shift, and go to state 174
    WHILE       shift, and go to state 175
    IF          shift, and go to state 176
    DO          shift, and go to state 177
    SWITCH      shift, and go to state 178
    BREAK       shift, and go to state 439
    ENUM        shift, and go to state 179
    OPEN_ARR    shift, and go to state 180
    RETURN      shift, and go to state 181
    STRUCT      shift, and go to state 76
    TRY         shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 83
    enum_type                   go to state 84
    simple_type                 go to state 85
    complex_type                go to state 86
    block_body                  go to state 185
    block_body_header           go to state 119
    statement                   go to state 440
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    message_call2               go to state 199
    message_call                go to state 200
    while_loop                  go to state 201
    while_loop_header           go to state 202
    conditional_statement       go to state 203
    if_header                   go to state 204
    switch_header               go to state 205
    enum                        go to state 206
    try_catch                   go to state 207


State 407

  248 default_case: DEFAULT SEMI_COLUMN BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 441


State 408

  246 default_case: DEFAULT SEMI_COLUMN statement . BREAK SEMI_COMA
  247             | DEFAULT SEMI_COLUMN statement .  [CLOSE_S]

    BREAK  shift, and go to state 442

    $default  reduce using rule 247 (default_case)


State 409

  237 switch_body: list_of_case default_case CLOSE_S .

    $default  reduce using rule 237 (switch_body)


State 410

  257 list_expr: IDENTIFIER EQUAL expr COMMA list_expr .

    $default  reduce using rule 257 (list_expr)


State 411

  100 array_tag_list: array_tag_list OPEN_ARR error . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 443


State 412

   98 array_tag_list: array_tag_list OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 444


State 413

  182 for_initializer: IDENTIFIER EQUAL expr .

    $default  reduce using rule 182 (for_initializer)


State 414

  115 p_type: . OPEN_P type CLOSE_P
  181 for_initializer: INT IDENTIFIER EQUAL . expr
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    expr           go to state 445
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 415

  180 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 180 (for_loop_header)


State 416

  179 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 446


State 417

  115 p_type: . OPEN_P type CLOSE_P
  174 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P
  178                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . CLOSE_P
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    CLOSE_P      shift, and go to state 447
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    expr           go to state 448
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 418

  115 p_type: . OPEN_P type CLOSE_P
  175 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . expr CLOSE_P
  177                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . CLOSE_P
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    CLOSE_P      shift, and go to state 449
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    expr           go to state 450
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 419

  173 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  176                | FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA CLOSE_P
  192 logic_expr: logic_expr . AND_AND logic_expr
  193           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 451
    AND_AND    shift, and go to state 375
    OR_OR      shift, and go to state 376


State 420

  191 logic_expr: OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 191 (logic_expr)


State 421

  192 logic_expr: logic_expr . AND_AND logic_expr
  192           | logic_expr AND_AND logic_expr .  [SEMI_COMA, CLOSE_P]
  193           | logic_expr . OR_OR logic_expr

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 192 (logic_expr)

    Conflict between rule 192 and token AND_AND resolved as an error (%nonassoc AND_AND).
    Conflict between rule 192 and token OR_OR resolved as an error (%nonassoc OR_OR).


State 422

  192 logic_expr: logic_expr . AND_AND logic_expr
  193           | logic_expr . OR_OR logic_expr
  193           | logic_expr OR_OR logic_expr .  [SEMI_COMA, CLOSE_P]

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 193 (logic_expr)

    Conflict between rule 193 and token AND_AND resolved as an error (%nonassoc AND_AND).
    Conflict between rule 193 and token OR_OR resolved as an error (%nonassoc OR_OR).


State 423

  184 logic_expr: expr LESS_THAN expr .

    $default  reduce using rule 184 (logic_expr)


State 424

  185 logic_expr: expr MORE_THAN expr .

    $default  reduce using rule 185 (logic_expr)


State 425

  186 logic_expr: expr LESS_OR_EQUAL expr .

    $default  reduce using rule 186 (logic_expr)


State 426

  187 logic_expr: expr MORE_OR_EQUAL expr .

    $default  reduce using rule 187 (logic_expr)


State 427

  188 logic_expr: expr EQUAL_EQUAL expr .

    $default  reduce using rule 188 (logic_expr)


State 428

  189 logic_expr: expr NOT_EQUAL expr .

    $default  reduce using rule 189 (logic_expr)


State 429

  236 switch_body_block: OPEN_S .

    $default  reduce using rule 236 (switch_body_block)


State 430

  235 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block .

    $default  reduce using rule 235 (switch_header)


State 431

  263 catch_list: CATCH OPEN_S type . IDENTIFIER CLOSE_S statement

    IDENTIFIER  shift, and go to state 452


State 432

   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  264 catch_list: catch_list CATCH OPEN_S . type IDENTIFIER CLOSE_S statement

    IDENTIFIER  shift, and go to state 63
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    VOID        shift, and go to state 74
    ENUM        shift, and go to state 75
    STRUCT      shift, and go to state 76

    type          go to state 453
    struct_type   go to state 83
    enum_type     go to state 84
    simple_type   go to state 85
    complex_type  go to state 86


State 433

  265 finally_statement: FINALLY statement .

    $default  reduce using rule 265 (finally_statement)


State 434

   37 array_body: OPEN_S . array_ele CLOSE_S
   38           | OPEN_S . CLOSE_S
   39 array_ele: . expr COMMA array_ele
   40          | . expr
   41          | . OPEN_S CLOSE_S
   42          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   43          | . OPEN_S array_ele CLOSE_S
   44          | . OPEN_S CLOSE_S COMMA array_ele
  115 p_type: . OPEN_P type CLOSE_P
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_S       shift, and go to state 454
    CLOSE_S      shift, and go to state 455
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    array_ele      go to state 456
    p_type         go to state 258
    expr           go to state 457
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 435

  103 initializer: EQUAL array_body .

    $default  reduce using rule 103 (initializer)


State 436

  228 argument: expr .

    $default  reduce using rule 228 (argument)


State 437

  225 message_selector: IDENTIFIER SEMI_COLUMN argument_list .  [IDENTIFIER, CLOSE_ARR]
  226 argument_list: argument_list . SEMI_COLUMN argument

    SEMI_COLUMN  shift, and go to state 458

    $default  reduce using rule 225 (message_selector)


State 438

  227 argument_list: argument .

    $default  reduce using rule 227 (argument_list)


State 439

  245 case_body: CASE expr SEMI_COLUMN BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 459


State 440

  243 case_body: CASE expr SEMI_COLUMN statement . BREAK SEMI_COMA
  244          | CASE expr SEMI_COLUMN statement .  [CLOSE_S, CASE, DEFAULT]

    BREAK  shift, and go to state 460

    $default  reduce using rule 244 (case_body)


State 441

  248 default_case: DEFAULT SEMI_COLUMN BREAK SEMI_COMA .

    $default  reduce using rule 248 (default_case)


State 442

  246 default_case: DEFAULT SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 461


State 443

  100 array_tag_list: array_tag_list OPEN_ARR error CLOSE_ARR .

    $default  reduce using rule 100 (array_tag_list)


State 444

   98 array_tag_list: array_tag_list OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 98 (array_tag_list)


State 445

  181 for_initializer: INT IDENTIFIER EQUAL expr .

    $default  reduce using rule 181 (for_initializer)


State 446

  179 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 179 (for_loop_header)


State 447

  178 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P .

    $default  reduce using rule 178 (for_loop_header)


State 448

  174 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 462


State 449

  177 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 177 (for_loop_header)


State 450

  175 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 463


State 451

  115 p_type: . OPEN_P type CLOSE_P
  173 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P
  176                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . CLOSE_P
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    CLOSE_P      shift, and go to state 464
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    expr           go to state 465
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 452

  263 catch_list: CATCH OPEN_S type IDENTIFIER . CLOSE_S statement

    CLOSE_S  shift, and go to state 466


State 453

  264 catch_list: catch_list CATCH OPEN_S type . IDENTIFIER CLOSE_S statement

    IDENTIFIER  shift, and go to state 467


State 454

   39 array_ele: . expr COMMA array_ele
   40          | . expr
   41          | . OPEN_S CLOSE_S
   41          | OPEN_S . CLOSE_S
   42          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | OPEN_S . array_ele CLOSE_S COMMA array_ele
   43          | . OPEN_S array_ele CLOSE_S
   43          | OPEN_S . array_ele CLOSE_S
   44          | . OPEN_S CLOSE_S COMMA array_ele
   44          | OPEN_S . CLOSE_S COMMA array_ele
  115 p_type: . OPEN_P type CLOSE_P
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_S       shift, and go to state 454
    CLOSE_S      shift, and go to state 468
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    array_ele      go to state 469
    p_type         go to state 258
    expr           go to state 457
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 455

   38 array_body: OPEN_S CLOSE_S .

    $default  reduce using rule 38 (array_body)


State 456

   37 array_body: OPEN_S array_ele . CLOSE_S

    CLOSE_S  shift, and go to state 470


State 457

   39 array_ele: expr . COMMA array_ele
   40          | expr .  [CLOSE_S]

    COMMA  shift, and go to state 471

    $default  reduce using rule 40 (array_ele)


State 458

  115 p_type: . OPEN_P type CLOSE_P
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR
  226 argument_list: argument_list SEMI_COLUMN . argument
  228 argument: . expr

    IDENTIFIER   shift, and go to state 250
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    p_type         go to state 258
    expr           go to state 436
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263
    argument       go to state 472


State 459

  245 case_body: CASE expr SEMI_COLUMN BREAK SEMI_COMA .

    $default  reduce using rule 245 (case_body)


State 460

  243 case_body: CASE expr SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 473


State 461

  246 default_case: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 246 (default_case)


State 462

  174 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 174 (for_loop_header)


State 463

  175 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 175 (for_loop_header)


State 464

  176 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P .

    $default  reduce using rule 176 (for_loop_header)


State 465

  173 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 474


State 466

   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . message_call SEMI_COMA
  155          | . error SEMI_COMA
  156 asm: . AT_ASM STRING_VAL SEMI_COMA
  157 variable_declaration_block: . type variable_list SEMI_COMA
  158                           | . CONST type variable_list SEMI_COMA
  159                           | . enum
  166 return_statement: . RETURN expr SEMI_COMA
  167 loop_statement: . for_loop
  168               | . while_loop
  169               | . do_while
  170 do_while: . do_header statement while_loop_header SEMI_COMA
  171 do_header: . DO
  172 for_loop: . for_loop_header statement
  173 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR
  229 while_loop: . while_loop_header statement
  230 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  231 conditional_statement: . if_header statement
  232                      | . if_header statement ELSE statement
  233                      | . switch_header switch_body
  234 if_header: . IF OPEN_P logic_expr CLOSE_P
  235 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  255 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | . ENUM IDENTIFIER SEMI_COMA
  261 try_catch: . TRY statement catch_list finally_statement
  262          | . TRY statement catch_list
  263 catch_list: CATCH OPEN_S type IDENTIFIER CLOSE_S . statement

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 171
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 173
    VOID        shift, and go to state 74
    FOR         shift, and go to state 174
    WHILE       shift, and go to state 175
    IF          shift, and go to state 176
    DO          shift, and go to state 177
    SWITCH      shift, and go to state 178
    ENUM        shift, and go to state 179
    OPEN_ARR    shift, and go to state 180
    RETURN      shift, and go to state 181
    STRUCT      shift, and go to state 76
    TRY         shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 83
    enum_type                   go to state 84
    simple_type                 go to state 85
    complex_type                go to state 86
    block_body                  go to state 185
    block_body_header           go to state 119
    statement                   go to state 475
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    message_call2               go to state 199
    message_call                go to state 200
    while_loop                  go to state 201
    while_loop_header           go to state 202
    conditional_statement       go to state 203
    if_header                   go to state 204
    switch_header               go to state 205
    enum                        go to state 206
    try_catch                   go to state 207


State 467

  264 catch_list: catch_list CATCH OPEN_S type IDENTIFIER . CLOSE_S statement

    CLOSE_S  shift, and go to state 476


State 468

   41 array_ele: OPEN_S CLOSE_S .  [CLOSE_S]
   44          | OPEN_S CLOSE_S . COMMA array_ele

    COMMA  shift, and go to state 477

    $default  reduce using rule 41 (array_ele)


State 469

   42 array_ele: OPEN_S array_ele . CLOSE_S COMMA array_ele
   43          | OPEN_S array_ele . CLOSE_S

    CLOSE_S  shift, and go to state 478


State 470

   37 array_body: OPEN_S array_ele CLOSE_S .

    $default  reduce using rule 37 (array_body)


State 471

   39 array_ele: . expr COMMA array_ele
   39          | expr COMMA . array_ele
   40          | . expr
   41          | . OPEN_S CLOSE_S
   42          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   43          | . OPEN_S array_ele CLOSE_S
   44          | . OPEN_S CLOSE_S COMMA array_ele
  115 p_type: . OPEN_P type CLOSE_P
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_S       shift, and go to state 454
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    array_ele      go to state 479
    p_type         go to state 258
    expr           go to state 457
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 472

  226 argument_list: argument_list SEMI_COLUMN argument .

    $default  reduce using rule 226 (argument_list)


State 473

  243 case_body: CASE expr SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 243 (case_body)


State 474

  173 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 173 (for_loop_header)


State 475

  263 catch_list: CATCH OPEN_S type IDENTIFIER CLOSE_S statement .

    $default  reduce using rule 263 (catch_list)


State 476

   82 type: . simple_type
   83     | . complex_type
   84     | . struct_type
   85     | . enum_type
   86 struct_type: . STRUCT IDENTIFIER
   87            | . STRUCT IDENTIFIER MULTI
   88 enum_type: . ENUM IDENTIFIER
   89          | . ENUM IDENTIFIER MULTI
   90 simple_type: . INT
   91            | . CHAR
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . message_call SEMI_COMA
  155          | . error SEMI_COMA
  156 asm: . AT_ASM STRING_VAL SEMI_COMA
  157 variable_declaration_block: . type variable_list SEMI_COMA
  158                           | . CONST type variable_list SEMI_COMA
  159                           | . enum
  166 return_statement: . RETURN expr SEMI_COMA
  167 loop_statement: . for_loop
  168               | . while_loop
  169               | . do_while
  170 do_while: . do_header statement while_loop_header SEMI_COMA
  171 do_header: . DO
  172 for_loop: . for_loop_header statement
  173 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  174                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  175                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  178                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR
  229 while_loop: . while_loop_header statement
  230 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  231 conditional_statement: . if_header statement
  232                      | . if_header statement ELSE statement
  233                      | . switch_header switch_body
  234 if_header: . IF OPEN_P logic_expr CLOSE_P
  235 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  255 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | . ENUM IDENTIFIER SEMI_COMA
  261 try_catch: . TRY statement catch_list finally_statement
  262          | . TRY statement catch_list
  264 catch_list: catch_list CATCH OPEN_S type IDENTIFIER CLOSE_S . statement

    error       shift, and go to state 264
    IDENTIFIER  shift, and go to state 171
    NSSTRING    shift, and go to state 64
    FLOAT       shift, and go to state 65
    CHAR        shift, and go to state 66
    BOOL        shift, and go to state 67
    INT         shift, and go to state 68
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 173
    VOID        shift, and go to state 74
    FOR         shift, and go to state 174
    WHILE       shift, and go to state 175
    IF          shift, and go to state 176
    DO          shift, and go to state 177
    SWITCH      shift, and go to state 178
    ENUM        shift, and go to state 179
    OPEN_ARR    shift, and go to state 180
    RETURN      shift, and go to state 181
    STRUCT      shift, and go to state 76
    TRY         shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 83
    enum_type                   go to state 84
    simple_type                 go to state 85
    complex_type                go to state 86
    block_body                  go to state 185
    block_body_header           go to state 119
    statement                   go to state 480
    asm                         go to state 189
    variable_declaration_block  go to state 190
    return_statement            go to state 191
    loop_statement              go to state 192
    do_while                    go to state 193
    do_header                   go to state 194
    for_loop                    go to state 195
    for_loop_header             go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    message_call2               go to state 199
    message_call                go to state 200
    while_loop                  go to state 201
    while_loop_header           go to state 202
    conditional_statement       go to state 203
    if_header                   go to state 204
    switch_header               go to state 205
    enum                        go to state 206
    try_catch                   go to state 207


State 477

   39 array_ele: . expr COMMA array_ele
   40          | . expr
   41          | . OPEN_S CLOSE_S
   42          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   43          | . OPEN_S array_ele CLOSE_S
   44          | . OPEN_S CLOSE_S COMMA array_ele
   44          | OPEN_S CLOSE_S COMMA . array_ele
  115 p_type: . OPEN_P type CLOSE_P
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_S       shift, and go to state 454
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    array_ele      go to state 481
    p_type         go to state 258
    expr           go to state 457
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 478

   42 array_ele: OPEN_S array_ele CLOSE_S . COMMA array_ele
   43          | OPEN_S array_ele CLOSE_S .  [CLOSE_S]

    COMMA  shift, and go to state 482

    $default  reduce using rule 43 (array_ele)


State 479

   39 array_ele: expr COMMA array_ele .

    $default  reduce using rule 39 (array_ele)


State 480

  264 catch_list: catch_list CATCH OPEN_S type IDENTIFIER CLOSE_S statement .

    $default  reduce using rule 264 (catch_list)


State 481

   44 array_ele: OPEN_S CLOSE_S COMMA array_ele .

    $default  reduce using rule 44 (array_ele)


State 482

   39 array_ele: . expr COMMA array_ele
   40          | . expr
   41          | . OPEN_S CLOSE_S
   42          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | OPEN_S array_ele CLOSE_S COMMA . array_ele
   43          | . OPEN_S array_ele CLOSE_S
   44          | . OPEN_S CLOSE_S COMMA array_ele
  115 p_type: . OPEN_P type CLOSE_P
  196 expr: . assign_expr
  197     | . simple_expr
  198 assign_expr: . long_id EQUAL simple_expr
  199 long_id: . long_id DOT IDENTIFIER
  200        | . message_call
  201        | . IDENTIFIER
  202 simple_expr: . STRING_VAL
  203            | . INT_VAL
  204            | . FLOAT_VAL
  205            | . CHAR_VAL
  206            | . long_id
  207            | . simple_expr PLUS simple_expr
  208            | . simple_expr MINUS simple_expr
  209            | . simple_expr MULTI simple_expr
  210            | . simple_expr DIV simple_expr
  211            | . OPEN_P simple_expr CLOSE_P
  212            | . IDENTIFIER DOUBLEPLUS
  213            | . IDENTIFIER DOUBLEMINUS
  214            | . DOUBLEPLUS IDENTIFIER
  215            | . DOUBLEMINUS IDENTIFIER
  216            | . p_type simple_expr
  217 message_call2: . OPEN_ARR
  218 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 250
    OPEN_S       shift, and go to state 454
    OPEN_P       shift, and go to state 251
    STRING_VAL   shift, and go to state 252
    FLOAT_VAL    shift, and go to state 253
    CHAR_VAL     shift, and go to state 254
    INT_VAL      shift, and go to state 255
    OPEN_ARR     shift, and go to state 180
    DOUBLEPLUS   shift, and go to state 256
    DOUBLEMINUS  shift, and go to state 257

    array_ele      go to state 483
    p_type         go to state 258
    expr           go to state 457
    assign_expr    go to state 260
    long_id        go to state 261
    simple_expr    go to state 262
    message_call2  go to state 199
    message_call   go to state 263


State 483

   42 array_ele: OPEN_S array_ele CLOSE_S COMMA array_ele .

    $default  reduce using rule 42 (array_ele)
