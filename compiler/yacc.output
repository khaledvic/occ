Terminals unused in grammar

   ID
   SELF
   expr_1


Grammar

    0 $accept: program $end

    1 program: components

    2 components: components component
    3           | component

    4 component: class_interface
    5          | class_implementation
    6          | protocol
    7          | struct
    8          | enum

    9 class_interface: class_interface_header class_interface_body

   10 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
   11                       | AT_INTERFACE IDENTIFIER
   12                       | error IDENTIFIER
   13                       | AT_INTERFACE error
   14                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN error

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END
   16                     | protocol_reference_list instance_variables AT_END
   17                     | protocol_reference_list interface_declaration_list AT_END
   18                     | instance_variables interface_declaration_list AT_END
   19                     | protocol_reference_list AT_END
   20                     | instance_variables AT_END
   21                     | interface_declaration_list AT_END
   22                     | AT_END
   23                     | protocol_reference_list error AT_END
   24                     | protocol_reference_list error interface_declaration_list AT_END
   25                     | protocol_reference_list error
   26                     | protocol_reference_list instance_variables interface_declaration_list error
   27                     | protocol_reference_list instance_variables error
   28                     | protocol_reference_list interface_declaration_list error
   29                     | instance_variables interface_declaration_list error
   30                     | instance_variables error
   31                     | interface_declaration_list error

   32 protocol_reference_list: LESS_THAN ids_list_identifier MORE_THAN
   33                        | LESS_THAN ids_list_identifier error

   34 ids_list_identifier: ids_list_identifier COMMA IDENTIFIER
   35                    | IDENTIFIER

   36 array_body: OPEN_S array_ele CLOSE_S
   37           | OPEN_S CLOSE_S

   38 array_ele: expr COMMA array_ele
   39          | expr
   40          | OPEN_S CLOSE_S
   41          | OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | OPEN_S array_ele CLOSE_S
   43          | OPEN_S CLOSE_S COMMA array_ele

   44 instance_variables: OPEN_S instance_variable_declarations CLOSE_S
   45                   | OPEN_S CLOSE_S

   46 instance_variable_declarations: instance_variable_declarations instance_variable_declaration
   47                               | instance_variable_declaration
   48                               | variable_declaration_list

   49 instance_variable_declaration: visibility_specification variable_declaration_list

   50 variable_declaration_list: variable_declaration_list variable_declarationxx
   51                          | variable_declarationxx

   52 visibility_specification: AT_PRIVATE
   53                         | AT_PROTECTED
   54                         | AT_PUBLIC

   55 struct_variable_declaration: struct_declaration_list

   56 variable_declarationxx: type ids_list SEMI_COMA
   57                       | CONST type ids_list SEMI_COMA
   58                       | type IDENTIFIER array_tag error

   59 ids_list: ids_list COMMA data_member
   60         | data_member
   61         | error

   62 data_member: IDENTIFIER array_tag
   63            | IDENTIFIER
   64            | error array_tag
   65            | IDENTIFIER error

   66 struct_declaration_list: struct_declaration_list variable_declarationxx
   67                        | variable_declarationxx
   68                        | error variable_declarationxx

   69 struct_header: STRUCT IDENTIFIER

   70 struct: struct_header OPEN_S CLOSE_S entity SEMI_COMA
   71       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | struct_header OPEN_S CLOSE_S SEMI_COMA
   73       | struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   74       | struct_header OPEN_S CLOSE_S entity error SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | struct_header OPEN_S CLOSE_S error SEMI_COMA
   77       | struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA

   78 entity: IDENTIFIER COMMA entity
   79       | IDENTIFIER
   80       | error COMMA

   81 type: simple_type
   82     | complex_type
   83     | struct_type
   84     | enum_type

   85 struct_type: STRUCT IDENTIFIER
   86            | STRUCT IDENTIFIER MULTI

   87 enum_type: ENUM IDENTIFIER
   88          | ENUM IDENTIFIER MULTI

   89 simple_type: INT
   90            | CHAR
   91            | FLOAT
   92            | NSSTRING
   93            | VOID
   94            | BOOL

   95 complex_type: IDENTIFIER MULTI

   96 array_tag: array_first_tag array_tag_list

   97 array_tag_list: array_tag_list OPEN_ARR INT_VAL CLOSE_ARR
   98               | %empty
   99               | array_tag_list OPEN_ARR error CLOSE_ARR

  100 array_first_tag: OPEN_ARR INT_VAL CLOSE_ARR
  101                | OPEN_ARR CLOSE_ARR

  102 initializer: EQUAL array_body
  103            | %empty

  104 main_initializer: EQUAL expr
  105                 | %empty

  106 interface_declaration_list: interface_declaration_list interface_declaration
  107                           | interface_declaration

  108 interface_declaration: class_method_declaration
  109                      | instance_method_declaration

  110 class_method_declaration: PLUS p_type method_selector SEMI_COMA
  111                         | PLUS method_selector SEMI_COMA
  112                         | PLUS p_type method_selector error
  113                         | PLUS method_selector error

  114 instance_method_declaration: MINUS p_type method_selector SEMI_COMA
  115                            | MINUS method_selector SEMI_COMA

  116 p_type: OPEN_P type CLOSE_P

  117 method_selector: IDENTIFIER SEMI_COLUMN parameter_list
  118                | IDENTIFIER

  119 parameter_list: parameter_list SEMI_COLUMN parameter
  120               | parameter_list IDENTIFIER SEMI_COLUMN parameter
  121               | parameter

  122 parameter: p_type IDENTIFIER

  123 class_implementation: class_implementation_header class_implementation_body

  124 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  125                            | AT_IMPLEMENTATION IDENTIFIER

  126 class_implementation_body: instance_variables implementation_definition_list AT_END
  127                          | instance_variables AT_END
  128                          | implementation_definition_list AT_END
  129                          | AT_END

  130 implementation_definition_list: implementation_definition_list implementation_definition
  131                               | implementation_definition

  132 implementation_definition: class_implementation_definition
  133                          | instance_implementation_definition

  134 class_implementation_definition: class_implementation_definition_header block_body

  135 class_implementation_definition_header: PLUS p_type method_selector
  136                                       | PLUS method_selector

  137 instance_implementation_definition: instance_implementation_definition_header block_body

  138 instance_implementation_definition_header: MINUS p_type method_selector
  139                                          | MINUS method_selector

  140 block_body: block_body_header block_body_statements

  141 block_body_header: OPEN_S

  142 block_body_statements: statement_list CLOSE_S
  143                      | CLOSE_S

  144 statement_list: statement_list statement
  145               | statement

  146 statement: loop_statement
  147          | conditional_statement
  148          | assign_expr SEMI_COMA
  149          | variable_declaration_block
  150          | block_body
  151          | return_statement
  152          | try_catch
  153          | asm

  154 asm: AT_ASM IDENTIFIER SEMI_COMA

  155 variable_declaration_block: type variable_list SEMI_COMA
  156                           | CONST type variable_list SEMI_COMA
  157                           | enum

  158 variable_list: variable_list COMMA variable
  159              | variable
  160              | variable_list error variable

  161 variable: IDENTIFIER array_tag initializer
  162         | IDENTIFIER main_initializer
  163         | error array_tag initializer

  164 return_statement: RETURN expr SEMI_COMA

  165 loop_statement: for_loop
  166               | while_loop
  167               | do_while

  168 do_while: do_header statement while_loop_header SEMI_COMA

  169 do_header: DO

  170 for_loop: for_loop_header statement

  171 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  172                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  173                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  174                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  175                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  176                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  177                | FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  178                | FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

  179 for_initializer: INT IDENTIFIER EQUAL expr
  180                | IDENTIFIER EQUAL expr
  181                | IDENTIFIER

  182 logic_expr: expr LESS_THAN expr
  183           | expr MORE_THAN expr
  184           | expr LESS_OR_EQUAL expr
  185           | expr MORE_OR_EQUAL expr
  186           | expr EQUAL_EQUAL expr
  187           | NOT_EQUAL expr
  188           | OPEN_P logic_expr CLOSE_P
  189           | logic_expr AND_AND logic_expr
  190           | logic_expr OR_OR logic_expr
  191           | TRUE
  192           | FALSE

  193 expr: assign_expr
  194     | simple_expr

  195 assign_expr: long_id EQUAL simple_expr

  196 long_id: long_id DOT IDENTIFIER
  197        | message_call
  198        | IDENTIFIER

  199 simple_expr: STRING_VAL
  200            | INT_VAL
  201            | FLOAT_VAL
  202            | CHAR_VAL
  203            | long_id
  204            | simple_expr PLUS simple_expr
  205            | simple_expr MINUS simple_expr
  206            | simple_expr MULTI simple_expr
  207            | simple_expr DIV simple_expr
  208            | OPEN_P simple_expr CLOSE_P
  209            | IDENTIFIER DOUBLEPLUS
  210            | IDENTIFIER DOUBLEMINUS
  211            | DOUBLEPLUS IDENTIFIER
  212            | DOUBLEMINUS IDENTIFIER
  213            | p_type simple_expr

  214 message_call2: OPEN_ARR

  215 message_call: message_call2 sender message CLOSE_ARR

  216 sender: message_call
  217       | IDENTIFIER

  218 message: IDENTIFIER
  219        | IDENTIFIER SEMI_COLUMN argument_list

  220 argument_list: argument_list argument
  221              | argument

  222 argument: expr
  223         | IDENTIFIER SEMI_COLUMN expr

  224 while_loop: while_loop_header statement

  225 while_loop_header: WHILE OPEN_P logic_expr CLOSE_P

  226 conditional_statement: if_header statement
  227                      | if_header statement ELSE statement
  228                      | switch_header switch_body

  229 if_header: IF OPEN_P logic_expr CLOSE_P

  230 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block

  231 switch_body_block: OPEN_S

  232 switch_body: list_of_case default_case CLOSE_S
  233            | list_of_case CLOSE_S
  234            | default_case CLOSE_S
  235            | CLOSE_S

  236 list_of_case: list_of_case case_body
  237             | case_body

  238 case_body: CASE expr SEMI_COLUMN statement BREAK SEMI_COMA
  239          | CASE expr SEMI_COLUMN statement
  240          | CASE expr SEMI_COLUMN BREAK SEMI_COMA

  241 default_case: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  242             | DEFAULT SEMI_COLUMN statement
  243             | DEFAULT SEMI_COLUMN BREAK SEMI_COMA

  244 protocol: protocol_header protocol_body

  245 protocol_header: AT_PROTOCOL IDENTIFIER

  246 protocol_body: protocol_reference_list interface_declaration_list AT_END
  247              | interface_declaration_list AT_END
  248              | protocol_reference_list AT_END
  249              | AT_END

  250 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  251     | ENUM IDENTIFIER SEMI_COMA

  252 list_expr: IDENTIFIER EQUAL expr COMMA list_expr
  253          | IDENTIFIER EQUAL expr
  254          | IDENTIFIER
  255          | IDENTIFIER COMMA list_expr

  256 try_catch: TRY statement catch_list finally_statement
  257          | TRY statement catch_list

  258 catch_list: CATCH OPEN_S type IDENTIFIER CLOSE_S statement
  259           | catch_list CATCH OPEN_S type IDENTIFIER CLOSE_S statement

  260 finally_statement: FINALLY statement


Terminals, with rules where they appear

$end (0) 0
error (256) 12 13 14 23 24 25 26 27 28 29 30 31 33 58 61 64 65 68 74
    75 76 77 80 99 112 113 160 163
AT_INTERFACE (258) 10 11 13 14
IDENTIFIER (259) 10 11 12 14 34 35 58 62 63 65 69 78 79 85 86 87 88
    95 117 118 120 122 124 125 154 161 162 179 180 181 196 198 209
    210 211 212 217 218 219 223 230 245 250 251 252 253 254 255 258
    259
SEMI_COLUMN (260) 10 14 117 119 120 124 219 223 238 239 240 241 242
    243
NSSTRING (261) 92
FLOAT (262) 91
CHAR (263) 90
BOOL (264) 94
INT (265) 89 179
SEMI_COMA (266) 56 57 70 71 72 73 74 75 76 77 110 111 114 115 148 154
    155 156 164 168 171 172 173 174 175 176 177 178 238 240 241 243
    250 251
ID (267)
AT_PUBLIC (268) 54
AT_PROTECTED (269) 53
AT_PRIVATE (270) 52
OPEN_S (271) 36 37 40 41 42 43 44 45 70 71 72 73 74 75 76 77 141 231
    250 258 259
CLOSE_S (272) 36 37 40 41 42 43 44 45 70 71 72 73 74 75 76 77 142 143
    232 233 234 235 250 258 259
COMMA (273) 34 38 41 43 59 78 80 158 252 255
LESS_THAN (274) 32 33 182
MORE_THAN (275) 32 183
AT_END (276) 15 16 17 18 19 20 21 22 23 24 126 127 128 129 246 247
    248 249
CONST (277) 57 156
VOID (278) 93
PLUS (279) 110 111 112 113 135 136 204
MINUS (280) 114 115 138 139 205
OPEN_P (281) 116 171 172 173 174 175 176 177 178 188 208 225 229 230
CLOSE_P (282) 116 171 172 173 174 175 176 177 178 188 208 225 229 230
AT_IMPLEMENTATION (283) 124 125
AND_AND (284) 189
OR_OR (285) 190
STRING_VAL (286) 199
FLOAT_VAL (287) 201
LESS_OR_EQUAL (288) 184
CHAR_VAL (289) 202
INT_VAL (290) 97 100 200
MORE_OR_EQUAL (291) 185
MULTI (292) 86 88 95 206
EQUAL_EQUAL (293) 186
NOT_EQUAL (294) 187
FOR (295) 171 172 173 174 175 176 177 178
EQUAL (296) 102 104 179 180 195 252 253
DIV (297) 207
WHILE (298) 225
IF (299) 229
DO (300) 169
SWITCH (301) 230
CASE (302) 238 239 240
DEFAULT (303) 241 242 243
BREAK (304) 238 240 241 243
ENUM (305) 87 88 250 251
OPEN_ARR (306) 97 99 100 101 214
CLOSE_ARR (307) 97 99 100 101 215
TRUE (308) 191
FALSE (309) 192
RETURN (310) 164
AT_PROTOCOL (311) 245
ELSE (312) 227
STRUCT (313) 69 85 86
DOT (314) 196
DOUBLEPLUS (315) 209 211
DOUBLEMINUS (316) 210 212
TRY (317) 256 257
CATCH (318) 258 259
FINALLY (319) 260
AT_ASM (320) 154
SELF (321)
if_h (322)
expr_1 (323)
p_type_expr_prec (324)
long_id_prec (325)
try_prec (326)


Nonterminals, with rules where they appear

$accept (72)
    on left: 0
program (73)
    on left: 1, on right: 0
components (74)
    on left: 2 3, on right: 1 2
component (75)
    on left: 4 5 6 7 8, on right: 2 3
class_interface (76)
    on left: 9, on right: 4
class_interface_header (77)
    on left: 10 11 12 13 14, on right: 9
class_interface_body (78)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31, on right:
    9
protocol_reference_list (79)
    on left: 32 33, on right: 15 16 17 19 23 24 25 26 27 28 246 248
ids_list_identifier (80)
    on left: 34 35, on right: 32 33 34
array_body (81)
    on left: 36 37, on right: 102
array_ele (82)
    on left: 38 39 40 41 42 43, on right: 36 38 41 42 43
instance_variables (83)
    on left: 44 45, on right: 15 16 18 20 26 27 29 30 126 127
instance_variable_declarations (84)
    on left: 46 47 48, on right: 44 46
instance_variable_declaration (85)
    on left: 49, on right: 46 47
variable_declaration_list (86)
    on left: 50 51, on right: 48 49 50
visibility_specification (87)
    on left: 52 53 54, on right: 49
struct_variable_declaration (88)
    on left: 55, on right: 71 73 75 77
variable_declarationxx (89)
    on left: 56 57 58, on right: 50 51 66 67 68
ids_list (90)
    on left: 59 60 61, on right: 56 57 59
data_member (91)
    on left: 62 63 64 65, on right: 59 60
struct_declaration_list (92)
    on left: 66 67 68, on right: 55 66
struct_header (93)
    on left: 69, on right: 70 71 72 73 74 75 76 77
struct (94)
    on left: 70 71 72 73 74 75 76 77, on right: 7
entity (95)
    on left: 78 79 80, on right: 70 71 74 75 78
type (96)
    on left: 81 82 83 84, on right: 56 57 58 116 155 156 258 259
struct_type (97)
    on left: 85 86, on right: 83
enum_type (98)
    on left: 87 88, on right: 84
simple_type (99)
    on left: 89 90 91 92 93 94, on right: 81
complex_type (100)
    on left: 95, on right: 82
array_tag (101)
    on left: 96, on right: 58 62 64 161 163
array_tag_list (102)
    on left: 97 98 99, on right: 96 97 99
array_first_tag (103)
    on left: 100 101, on right: 96
initializer (104)
    on left: 102 103, on right: 161 163
main_initializer (105)
    on left: 104 105, on right: 162
interface_declaration_list (106)
    on left: 106 107, on right: 15 17 18 21 24 26 28 29 31 106 246
    247
interface_declaration (107)
    on left: 108 109, on right: 106 107
class_method_declaration (108)
    on left: 110 111 112 113, on right: 108
instance_method_declaration (109)
    on left: 114 115, on right: 109
p_type (110)
    on left: 116, on right: 110 112 114 122 135 138 213
method_selector (111)
    on left: 117 118, on right: 110 111 112 113 114 115 135 136 138
    139
parameter_list (112)
    on left: 119 120 121, on right: 117 119 120
parameter (113)
    on left: 122, on right: 119 120 121
class_implementation (114)
    on left: 123, on right: 5
class_implementation_header (115)
    on left: 124 125, on right: 123
class_implementation_body (116)
    on left: 126 127 128 129, on right: 123
implementation_definition_list (117)
    on left: 130 131, on right: 126 128 130
implementation_definition (118)
    on left: 132 133, on right: 130 131
class_implementation_definition (119)
    on left: 134, on right: 132
class_implementation_definition_header (120)
    on left: 135 136, on right: 134
instance_implementation_definition (121)
    on left: 137, on right: 133
instance_implementation_definition_header (122)
    on left: 138 139, on right: 137
block_body (123)
    on left: 140, on right: 134 137 150
block_body_header (124)
    on left: 141, on right: 140
block_body_statements (125)
    on left: 142 143, on right: 140
statement_list (126)
    on left: 144 145, on right: 142 144
statement (127)
    on left: 146 147 148 149 150 151 152 153, on right: 144 145 168
    170 224 226 227 238 239 241 242 256 257 258 259 260
asm (128)
    on left: 154, on right: 153
variable_declaration_block (129)
    on left: 155 156 157, on right: 149
variable_list (130)
    on left: 158 159 160, on right: 155 156 158 160
variable (131)
    on left: 161 162 163, on right: 158 159 160
return_statement (132)
    on left: 164, on right: 151
loop_statement (133)
    on left: 165 166 167, on right: 146
do_while (134)
    on left: 168, on right: 167
do_header (135)
    on left: 169, on right: 168
for_loop (136)
    on left: 170, on right: 165
for_loop_header (137)
    on left: 171 172 173 174 175 176 177 178, on right: 170
for_initializer (138)
    on left: 179 180 181, on right: 171 173 174 175
logic_expr (139)
    on left: 182 183 184 185 186 187 188 189 190 191 192, on right:
    171 172 174 176 188 189 190 225 229
expr (140)
    on left: 193 194, on right: 38 39 104 164 171 172 173 177 179 180
    182 183 184 185 186 187 222 223 238 239 240 252 253
assign_expr (141)
    on left: 195, on right: 148 193
long_id (142)
    on left: 196 197 198, on right: 195 196 203
simple_expr (143)
    on left: 199 200 201 202 203 204 205 206 207 208 209 210 211 212
    213, on right: 194 195 204 205 206 207 208 213
message_call2 (144)
    on left: 214, on right: 215
message_call (145)
    on left: 215, on right: 197 216
sender (146)
    on left: 216 217, on right: 215
message (147)
    on left: 218 219, on right: 215
argument_list (148)
    on left: 220 221, on right: 219 220
argument (149)
    on left: 222 223, on right: 220 221
while_loop (150)
    on left: 224, on right: 166
while_loop_header (151)
    on left: 225, on right: 168 224
conditional_statement (152)
    on left: 226 227 228, on right: 147
if_header (153)
    on left: 229, on right: 226 227
switch_header (154)
    on left: 230, on right: 228
switch_body_block (155)
    on left: 231, on right: 230
switch_body (156)
    on left: 232 233 234 235, on right: 228
list_of_case (157)
    on left: 236 237, on right: 232 233 236
case_body (158)
    on left: 238 239 240, on right: 236 237
default_case (159)
    on left: 241 242 243, on right: 232 234
protocol (160)
    on left: 244, on right: 6
protocol_header (161)
    on left: 245, on right: 244
protocol_body (162)
    on left: 246 247 248 249, on right: 244
enum (163)
    on left: 250 251, on right: 8 157
list_expr (164)
    on left: 252 253 254 255, on right: 250 252 255
try_catch (165)
    on left: 256 257, on right: 152
catch_list (166)
    on left: 258 259, on right: 256 257 259
finally_statement (167)
    on left: 260, on right: 256


State 0

    0 $accept: . program $end

    error              shift, and go to state 1
    AT_INTERFACE       shift, and go to state 2
    AT_IMPLEMENTATION  shift, and go to state 3
    ENUM               shift, and go to state 4
    AT_PROTOCOL        shift, and go to state 5
    STRUCT             shift, and go to state 6

    program                      go to state 7
    components                   go to state 8
    component                    go to state 9
    class_interface              go to state 10
    class_interface_header       go to state 11
    struct_header                go to state 12
    struct                       go to state 13
    class_implementation         go to state 14
    class_implementation_header  go to state 15
    protocol                     go to state 16
    protocol_header              go to state 17
    enum                         go to state 18


State 1

   12 class_interface_header: error . IDENTIFIER

    IDENTIFIER  shift, and go to state 19


State 2

   10 class_interface_header: AT_INTERFACE . IDENTIFIER SEMI_COLUMN IDENTIFIER
   11                       | AT_INTERFACE . IDENTIFIER
   13                       | AT_INTERFACE . error
   14                       | AT_INTERFACE . IDENTIFIER SEMI_COLUMN error

    error       shift, and go to state 20
    IDENTIFIER  shift, and go to state 21


State 3

  124 class_implementation_header: AT_IMPLEMENTATION . IDENTIFIER SEMI_COLUMN IDENTIFIER
  125                            | AT_IMPLEMENTATION . IDENTIFIER

    IDENTIFIER  shift, and go to state 22


State 4

  250 enum: ENUM . IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  251     | ENUM . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 23


State 5

  245 protocol_header: AT_PROTOCOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 24


State 6

   69 struct_header: STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 25


State 7

    0 $accept: program . $end

    $end  shift, and go to state 26


State 8

    1 program: components .
    2 components: components . component

    error              shift, and go to state 1
    AT_INTERFACE       shift, and go to state 2
    AT_IMPLEMENTATION  shift, and go to state 3
    ENUM               shift, and go to state 4
    AT_PROTOCOL        shift, and go to state 5
    STRUCT             shift, and go to state 6

    $end  reduce using rule 1 (program)

    component                    go to state 27
    class_interface              go to state 10
    class_interface_header       go to state 11
    struct_header                go to state 12
    struct                       go to state 13
    class_implementation         go to state 14
    class_implementation_header  go to state 15
    protocol                     go to state 16
    protocol_header              go to state 17
    enum                         go to state 18


State 9

    3 components: component .

    $default  reduce using rule 3 (components)


State 10

    4 component: class_interface .

    $default  reduce using rule 4 (component)


State 11

    9 class_interface: class_interface_header . class_interface_body

    OPEN_S     shift, and go to state 28
    LESS_THAN  shift, and go to state 29
    AT_END     shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32

    class_interface_body         go to state 33
    protocol_reference_list      go to state 34
    instance_variables           go to state 35
    interface_declaration_list   go to state 36
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 12

   70 struct: struct_header . OPEN_S CLOSE_S entity SEMI_COMA
   71       | struct_header . OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | struct_header . OPEN_S CLOSE_S SEMI_COMA
   73       | struct_header . OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   74       | struct_header . OPEN_S CLOSE_S entity error SEMI_COMA
   75       | struct_header . OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | struct_header . OPEN_S CLOSE_S error SEMI_COMA
   77       | struct_header . OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA

    OPEN_S  shift, and go to state 40


State 13

    7 component: struct .

    $default  reduce using rule 7 (component)


State 14

    5 component: class_implementation .

    $default  reduce using rule 5 (component)


State 15

  123 class_implementation: class_implementation_header . class_implementation_body

    OPEN_S  shift, and go to state 28
    AT_END  shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    instance_variables                         go to state 44
    class_implementation_body                  go to state 45
    implementation_definition_list             go to state 46
    implementation_definition                  go to state 47
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 16

    6 component: protocol .

    $default  reduce using rule 6 (component)


State 17

  244 protocol: protocol_header . protocol_body

    LESS_THAN  shift, and go to state 29
    AT_END     shift, and go to state 52
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32

    protocol_reference_list      go to state 53
    interface_declaration_list   go to state 54
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39
    protocol_body                go to state 55


State 18

    8 component: enum .

    $default  reduce using rule 8 (component)


State 19

   12 class_interface_header: error IDENTIFIER .

    $default  reduce using rule 12 (class_interface_header)


State 20

   13 class_interface_header: AT_INTERFACE error .

    $default  reduce using rule 13 (class_interface_header)


State 21

   10 class_interface_header: AT_INTERFACE IDENTIFIER . SEMI_COLUMN IDENTIFIER
   11                       | AT_INTERFACE IDENTIFIER .
   14                       | AT_INTERFACE IDENTIFIER . SEMI_COLUMN error

    SEMI_COLUMN  shift, and go to state 56

    $default  reduce using rule 11 (class_interface_header)


State 22

  124 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER . SEMI_COLUMN IDENTIFIER
  125                            | AT_IMPLEMENTATION IDENTIFIER .

    SEMI_COLUMN  shift, and go to state 57

    $default  reduce using rule 125 (class_implementation_header)


State 23

  250 enum: ENUM IDENTIFIER . OPEN_S list_expr CLOSE_S SEMI_COMA
  251     | ENUM IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 58
    OPEN_S     shift, and go to state 59


State 24

  245 protocol_header: AT_PROTOCOL IDENTIFIER .

    $default  reduce using rule 245 (protocol_header)


State 25

   69 struct_header: STRUCT IDENTIFIER .

    $default  reduce using rule 69 (struct_header)


State 26

    0 $accept: program $end .

    $default  accept


State 27

    2 components: components component .

    $default  reduce using rule 2 (components)


State 28

   44 instance_variables: OPEN_S . instance_variable_declarations CLOSE_S
   45                   | OPEN_S . CLOSE_S

    IDENTIFIER    shift, and go to state 60
    NSSTRING      shift, and go to state 61
    FLOAT         shift, and go to state 62
    CHAR          shift, and go to state 63
    BOOL          shift, and go to state 64
    INT           shift, and go to state 65
    AT_PUBLIC     shift, and go to state 66
    AT_PROTECTED  shift, and go to state 67
    AT_PRIVATE    shift, and go to state 68
    CLOSE_S       shift, and go to state 69
    CONST         shift, and go to state 70
    VOID          shift, and go to state 71
    ENUM          shift, and go to state 72
    STRUCT        shift, and go to state 73

    instance_variable_declarations  go to state 74
    instance_variable_declaration   go to state 75
    variable_declaration_list       go to state 76
    visibility_specification        go to state 77
    variable_declarationxx          go to state 78
    type                            go to state 79
    struct_type                     go to state 80
    enum_type                       go to state 81
    simple_type                     go to state 82
    complex_type                    go to state 83


State 29

   32 protocol_reference_list: LESS_THAN . ids_list_identifier MORE_THAN
   33                        | LESS_THAN . ids_list_identifier error

    IDENTIFIER  shift, and go to state 84

    ids_list_identifier  go to state 85


State 30

   22 class_interface_body: AT_END .

    $default  reduce using rule 22 (class_interface_body)


State 31

  110 class_method_declaration: PLUS . p_type method_selector SEMI_COMA
  111                         | PLUS . method_selector SEMI_COMA
  112                         | PLUS . p_type method_selector error
  113                         | PLUS . method_selector error

    IDENTIFIER  shift, and go to state 86
    OPEN_P      shift, and go to state 87

    p_type           go to state 88
    method_selector  go to state 89


State 32

  114 instance_method_declaration: MINUS . p_type method_selector SEMI_COMA
  115                            | MINUS . method_selector SEMI_COMA

    IDENTIFIER  shift, and go to state 86
    OPEN_P      shift, and go to state 87

    p_type           go to state 90
    method_selector  go to state 91


State 33

    9 class_interface: class_interface_header class_interface_body .

    $default  reduce using rule 9 (class_interface)


State 34

   15 class_interface_body: protocol_reference_list . instance_variables interface_declaration_list AT_END
   16                     | protocol_reference_list . instance_variables AT_END
   17                     | protocol_reference_list . interface_declaration_list AT_END
   19                     | protocol_reference_list . AT_END
   23                     | protocol_reference_list . error AT_END
   24                     | protocol_reference_list . error interface_declaration_list AT_END
   25                     | protocol_reference_list . error
   26                     | protocol_reference_list . instance_variables interface_declaration_list error
   27                     | protocol_reference_list . instance_variables error
   28                     | protocol_reference_list . interface_declaration_list error

    error   shift, and go to state 92
    OPEN_S  shift, and go to state 28
    AT_END  shift, and go to state 93
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    instance_variables           go to state 94
    interface_declaration_list   go to state 95
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 35

   18 class_interface_body: instance_variables . interface_declaration_list AT_END
   20                     | instance_variables . AT_END
   29                     | instance_variables . interface_declaration_list error
   30                     | instance_variables . error

    error   shift, and go to state 96
    AT_END  shift, and go to state 97
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 98
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 36

   21 class_interface_body: interface_declaration_list . AT_END
   31                     | interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration

    error   shift, and go to state 99
    AT_END  shift, and go to state 100
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 101
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 37

  107 interface_declaration_list: interface_declaration .

    $default  reduce using rule 107 (interface_declaration_list)


State 38

  108 interface_declaration: class_method_declaration .

    $default  reduce using rule 108 (interface_declaration)


State 39

  109 interface_declaration: instance_method_declaration .

    $default  reduce using rule 109 (interface_declaration)


State 40

   70 struct: struct_header OPEN_S . CLOSE_S entity SEMI_COMA
   71       | struct_header OPEN_S . struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | struct_header OPEN_S . CLOSE_S SEMI_COMA
   73       | struct_header OPEN_S . struct_variable_declaration CLOSE_S SEMI_COMA
   74       | struct_header OPEN_S . CLOSE_S entity error SEMI_COMA
   75       | struct_header OPEN_S . struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | struct_header OPEN_S . CLOSE_S error SEMI_COMA
   77       | struct_header OPEN_S . struct_variable_declaration CLOSE_S error SEMI_COMA

    error       shift, and go to state 102
    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CLOSE_S     shift, and go to state 103
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    struct_variable_declaration  go to state 104
    variable_declarationxx       go to state 105
    struct_declaration_list      go to state 106
    type                         go to state 79
    struct_type                  go to state 80
    enum_type                    go to state 81
    simple_type                  go to state 82
    complex_type                 go to state 83


State 41

  129 class_implementation_body: AT_END .

    $default  reduce using rule 129 (class_implementation_body)


State 42

  135 class_implementation_definition_header: PLUS . p_type method_selector
  136                                       | PLUS . method_selector

    IDENTIFIER  shift, and go to state 86
    OPEN_P      shift, and go to state 87

    p_type           go to state 107
    method_selector  go to state 108


State 43

  138 instance_implementation_definition_header: MINUS . p_type method_selector
  139                                          | MINUS . method_selector

    IDENTIFIER  shift, and go to state 86
    OPEN_P      shift, and go to state 87

    p_type           go to state 109
    method_selector  go to state 110


State 44

  126 class_implementation_body: instance_variables . implementation_definition_list AT_END
  127                          | instance_variables . AT_END

    AT_END  shift, and go to state 111
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition_list             go to state 112
    implementation_definition                  go to state 47
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 45

  123 class_implementation: class_implementation_header class_implementation_body .

    $default  reduce using rule 123 (class_implementation)


State 46

  128 class_implementation_body: implementation_definition_list . AT_END
  130 implementation_definition_list: implementation_definition_list . implementation_definition

    AT_END  shift, and go to state 113
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition                  go to state 114
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 47

  131 implementation_definition_list: implementation_definition .

    $default  reduce using rule 131 (implementation_definition_list)


State 48

  132 implementation_definition: class_implementation_definition .

    $default  reduce using rule 132 (implementation_definition)


State 49

  134 class_implementation_definition: class_implementation_definition_header . block_body

    OPEN_S  shift, and go to state 115

    block_body         go to state 116
    block_body_header  go to state 117


State 50

  133 implementation_definition: instance_implementation_definition .

    $default  reduce using rule 133 (implementation_definition)


State 51

  137 instance_implementation_definition: instance_implementation_definition_header . block_body

    OPEN_S  shift, and go to state 115

    block_body         go to state 118
    block_body_header  go to state 117


State 52

  249 protocol_body: AT_END .

    $default  reduce using rule 249 (protocol_body)


State 53

  246 protocol_body: protocol_reference_list . interface_declaration_list AT_END
  248              | protocol_reference_list . AT_END

    AT_END  shift, and go to state 119
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 120
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 54

  106 interface_declaration_list: interface_declaration_list . interface_declaration
  247 protocol_body: interface_declaration_list . AT_END

    AT_END  shift, and go to state 121
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 101
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 55

  244 protocol: protocol_header protocol_body .

    $default  reduce using rule 244 (protocol)


State 56

   10 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN . IDENTIFIER
   14                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN . error

    error       shift, and go to state 122
    IDENTIFIER  shift, and go to state 123


State 57

  124 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN . IDENTIFIER

    IDENTIFIER  shift, and go to state 124


State 58

  251 enum: ENUM IDENTIFIER SEMI_COMA .

    $default  reduce using rule 251 (enum)


State 59

  250 enum: ENUM IDENTIFIER OPEN_S . list_expr CLOSE_S SEMI_COMA

    IDENTIFIER  shift, and go to state 125

    list_expr  go to state 126


State 60

   95 complex_type: IDENTIFIER . MULTI

    MULTI  shift, and go to state 127


State 61

   92 simple_type: NSSTRING .

    $default  reduce using rule 92 (simple_type)


State 62

   91 simple_type: FLOAT .

    $default  reduce using rule 91 (simple_type)


State 63

   90 simple_type: CHAR .

    $default  reduce using rule 90 (simple_type)


State 64

   94 simple_type: BOOL .

    $default  reduce using rule 94 (simple_type)


State 65

   89 simple_type: INT .

    $default  reduce using rule 89 (simple_type)


State 66

   54 visibility_specification: AT_PUBLIC .

    $default  reduce using rule 54 (visibility_specification)


State 67

   53 visibility_specification: AT_PROTECTED .

    $default  reduce using rule 53 (visibility_specification)


State 68

   52 visibility_specification: AT_PRIVATE .

    $default  reduce using rule 52 (visibility_specification)


State 69

   45 instance_variables: OPEN_S CLOSE_S .

    $default  reduce using rule 45 (instance_variables)


State 70

   57 variable_declarationxx: CONST . type ids_list SEMI_COMA

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    type          go to state 128
    struct_type   go to state 80
    enum_type     go to state 81
    simple_type   go to state 82
    complex_type  go to state 83


State 71

   93 simple_type: VOID .

    $default  reduce using rule 93 (simple_type)


State 72

   87 enum_type: ENUM . IDENTIFIER
   88          | ENUM . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 129


State 73

   85 struct_type: STRUCT . IDENTIFIER
   86            | STRUCT . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 130


State 74

   44 instance_variables: OPEN_S instance_variable_declarations . CLOSE_S
   46 instance_variable_declarations: instance_variable_declarations . instance_variable_declaration

    AT_PUBLIC     shift, and go to state 66
    AT_PROTECTED  shift, and go to state 67
    AT_PRIVATE    shift, and go to state 68
    CLOSE_S       shift, and go to state 131

    instance_variable_declaration  go to state 132
    visibility_specification       go to state 77


State 75

   47 instance_variable_declarations: instance_variable_declaration .

    $default  reduce using rule 47 (instance_variable_declarations)


State 76

   48 instance_variable_declarations: variable_declaration_list .
   50 variable_declaration_list: variable_declaration_list . variable_declarationxx

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    $default  reduce using rule 48 (instance_variable_declarations)

    variable_declarationxx  go to state 133
    type                    go to state 79
    struct_type             go to state 80
    enum_type               go to state 81
    simple_type             go to state 82
    complex_type            go to state 83


State 77

   49 instance_variable_declaration: visibility_specification . variable_declaration_list

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    variable_declaration_list  go to state 134
    variable_declarationxx     go to state 78
    type                       go to state 79
    struct_type                go to state 80
    enum_type                  go to state 81
    simple_type                go to state 82
    complex_type               go to state 83


State 78

   51 variable_declaration_list: variable_declarationxx .

    $default  reduce using rule 51 (variable_declaration_list)


State 79

   56 variable_declarationxx: type . ids_list SEMI_COMA
   58                       | type . IDENTIFIER array_tag error

    error       shift, and go to state 135
    IDENTIFIER  shift, and go to state 136

    ids_list     go to state 137
    data_member  go to state 138


State 80

   83 type: struct_type .

    $default  reduce using rule 83 (type)


State 81

   84 type: enum_type .

    $default  reduce using rule 84 (type)


State 82

   81 type: simple_type .

    $default  reduce using rule 81 (type)


State 83

   82 type: complex_type .

    $default  reduce using rule 82 (type)


State 84

   35 ids_list_identifier: IDENTIFIER .

    $default  reduce using rule 35 (ids_list_identifier)


State 85

   32 protocol_reference_list: LESS_THAN ids_list_identifier . MORE_THAN
   33                        | LESS_THAN ids_list_identifier . error
   34 ids_list_identifier: ids_list_identifier . COMMA IDENTIFIER

    error      shift, and go to state 139
    COMMA      shift, and go to state 140
    MORE_THAN  shift, and go to state 141


State 86

  117 method_selector: IDENTIFIER . SEMI_COLUMN parameter_list
  118                | IDENTIFIER .

    SEMI_COLUMN  shift, and go to state 142

    $default  reduce using rule 118 (method_selector)


State 87

  116 p_type: OPEN_P . type CLOSE_P

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    type          go to state 143
    struct_type   go to state 80
    enum_type     go to state 81
    simple_type   go to state 82
    complex_type  go to state 83


State 88

  110 class_method_declaration: PLUS p_type . method_selector SEMI_COMA
  112                         | PLUS p_type . method_selector error

    IDENTIFIER  shift, and go to state 86

    method_selector  go to state 144


State 89

  111 class_method_declaration: PLUS method_selector . SEMI_COMA
  113                         | PLUS method_selector . error

    error      shift, and go to state 145
    SEMI_COMA  shift, and go to state 146


State 90

  114 instance_method_declaration: MINUS p_type . method_selector SEMI_COMA

    IDENTIFIER  shift, and go to state 86

    method_selector  go to state 147


State 91

  115 instance_method_declaration: MINUS method_selector . SEMI_COMA

    SEMI_COMA  shift, and go to state 148


State 92

   23 class_interface_body: protocol_reference_list error . AT_END
   24                     | protocol_reference_list error . interface_declaration_list AT_END
   25                     | protocol_reference_list error .

    AT_END  shift, and go to state 149
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    $default  reduce using rule 25 (class_interface_body)

    interface_declaration_list   go to state 150
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 93

   19 class_interface_body: protocol_reference_list AT_END .

    $default  reduce using rule 19 (class_interface_body)


State 94

   15 class_interface_body: protocol_reference_list instance_variables . interface_declaration_list AT_END
   16                     | protocol_reference_list instance_variables . AT_END
   26                     | protocol_reference_list instance_variables . interface_declaration_list error
   27                     | protocol_reference_list instance_variables . error

    error   shift, and go to state 151
    AT_END  shift, and go to state 152
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 153
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 95

   17 class_interface_body: protocol_reference_list interface_declaration_list . AT_END
   28                     | protocol_reference_list interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration

    error   shift, and go to state 154
    AT_END  shift, and go to state 155
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 101
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 96

   30 class_interface_body: instance_variables error .

    $default  reduce using rule 30 (class_interface_body)


State 97

   20 class_interface_body: instance_variables AT_END .

    $default  reduce using rule 20 (class_interface_body)


State 98

   18 class_interface_body: instance_variables interface_declaration_list . AT_END
   29                     | instance_variables interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration

    error   shift, and go to state 156
    AT_END  shift, and go to state 157
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 101
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 99

   31 class_interface_body: interface_declaration_list error .

    $default  reduce using rule 31 (class_interface_body)


State 100

   21 class_interface_body: interface_declaration_list AT_END .

    $default  reduce using rule 21 (class_interface_body)


State 101

  106 interface_declaration_list: interface_declaration_list interface_declaration .

    $default  reduce using rule 106 (interface_declaration_list)


State 102

   68 struct_declaration_list: error . variable_declarationxx

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    variable_declarationxx  go to state 158
    type                    go to state 79
    struct_type             go to state 80
    enum_type               go to state 81
    simple_type             go to state 82
    complex_type            go to state 83


State 103

   70 struct: struct_header OPEN_S CLOSE_S . entity SEMI_COMA
   72       | struct_header OPEN_S CLOSE_S . SEMI_COMA
   74       | struct_header OPEN_S CLOSE_S . entity error SEMI_COMA
   76       | struct_header OPEN_S CLOSE_S . error SEMI_COMA

    error       shift, and go to state 159
    IDENTIFIER  shift, and go to state 160
    SEMI_COMA   shift, and go to state 161

    entity  go to state 162


State 104

   71 struct: struct_header OPEN_S struct_variable_declaration . CLOSE_S entity SEMI_COMA
   73       | struct_header OPEN_S struct_variable_declaration . CLOSE_S SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration . CLOSE_S entity error SEMI_COMA
   77       | struct_header OPEN_S struct_variable_declaration . CLOSE_S error SEMI_COMA

    CLOSE_S  shift, and go to state 163


State 105

   67 struct_declaration_list: variable_declarationxx .

    $default  reduce using rule 67 (struct_declaration_list)


State 106

   55 struct_variable_declaration: struct_declaration_list .
   66 struct_declaration_list: struct_declaration_list . variable_declarationxx

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    $default  reduce using rule 55 (struct_variable_declaration)

    variable_declarationxx  go to state 164
    type                    go to state 79
    struct_type             go to state 80
    enum_type               go to state 81
    simple_type             go to state 82
    complex_type            go to state 83


State 107

  135 class_implementation_definition_header: PLUS p_type . method_selector

    IDENTIFIER  shift, and go to state 86

    method_selector  go to state 165


State 108

  136 class_implementation_definition_header: PLUS method_selector .

    $default  reduce using rule 136 (class_implementation_definition_header)


State 109

  138 instance_implementation_definition_header: MINUS p_type . method_selector

    IDENTIFIER  shift, and go to state 86

    method_selector  go to state 166


State 110

  139 instance_implementation_definition_header: MINUS method_selector .

    $default  reduce using rule 139 (instance_implementation_definition_header)


State 111

  127 class_implementation_body: instance_variables AT_END .

    $default  reduce using rule 127 (class_implementation_body)


State 112

  126 class_implementation_body: instance_variables implementation_definition_list . AT_END
  130 implementation_definition_list: implementation_definition_list . implementation_definition

    AT_END  shift, and go to state 167
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition                  go to state 114
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 113

  128 class_implementation_body: implementation_definition_list AT_END .

    $default  reduce using rule 128 (class_implementation_body)


State 114

  130 implementation_definition_list: implementation_definition_list implementation_definition .

    $default  reduce using rule 130 (implementation_definition_list)


State 115

  141 block_body_header: OPEN_S .

    $default  reduce using rule 141 (block_body_header)


State 116

  134 class_implementation_definition: class_implementation_definition_header block_body .

    $default  reduce using rule 134 (class_implementation_definition)


State 117

  140 block_body: block_body_header . block_body_statements

    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 115
    CLOSE_S     shift, and go to state 169
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 117
    block_body_statements       go to state 183
    statement_list              go to state 184
    statement                   go to state 185
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 118

  137 instance_implementation_definition: instance_implementation_definition_header block_body .

    $default  reduce using rule 137 (instance_implementation_definition)


State 119

  248 protocol_body: protocol_reference_list AT_END .

    $default  reduce using rule 248 (protocol_body)


State 120

  106 interface_declaration_list: interface_declaration_list . interface_declaration
  246 protocol_body: protocol_reference_list interface_declaration_list . AT_END

    AT_END  shift, and go to state 205
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 101
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 121

  247 protocol_body: interface_declaration_list AT_END .

    $default  reduce using rule 247 (protocol_body)


State 122

   14 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN error .

    $default  reduce using rule 14 (class_interface_header)


State 123

   10 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 10 (class_interface_header)


State 124

  124 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 124 (class_implementation_header)


State 125

  252 list_expr: IDENTIFIER . EQUAL expr COMMA list_expr
  253          | IDENTIFIER . EQUAL expr
  254          | IDENTIFIER .
  255          | IDENTIFIER . COMMA list_expr

    COMMA  shift, and go to state 206
    EQUAL  shift, and go to state 207

    $default  reduce using rule 254 (list_expr)


State 126

  250 enum: ENUM IDENTIFIER OPEN_S list_expr . CLOSE_S SEMI_COMA

    CLOSE_S  shift, and go to state 208


State 127

   95 complex_type: IDENTIFIER MULTI .

    $default  reduce using rule 95 (complex_type)


State 128

   57 variable_declarationxx: CONST type . ids_list SEMI_COMA

    error       shift, and go to state 135
    IDENTIFIER  shift, and go to state 209

    ids_list     go to state 210
    data_member  go to state 138


State 129

   87 enum_type: ENUM IDENTIFIER .
   88          | ENUM IDENTIFIER . MULTI

    MULTI  shift, and go to state 211

    $default  reduce using rule 87 (enum_type)


State 130

   85 struct_type: STRUCT IDENTIFIER .
   86            | STRUCT IDENTIFIER . MULTI

    MULTI  shift, and go to state 212

    $default  reduce using rule 85 (struct_type)


State 131

   44 instance_variables: OPEN_S instance_variable_declarations CLOSE_S .

    $default  reduce using rule 44 (instance_variables)


State 132

   46 instance_variable_declarations: instance_variable_declarations instance_variable_declaration .

    $default  reduce using rule 46 (instance_variable_declarations)


State 133

   50 variable_declaration_list: variable_declaration_list variable_declarationxx .

    $default  reduce using rule 50 (variable_declaration_list)


State 134

   49 instance_variable_declaration: visibility_specification variable_declaration_list .
   50 variable_declaration_list: variable_declaration_list . variable_declarationxx

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    $default  reduce using rule 49 (instance_variable_declaration)

    variable_declarationxx  go to state 133
    type                    go to state 79
    struct_type             go to state 80
    enum_type               go to state 81
    simple_type             go to state 82
    complex_type            go to state 83


State 135

   61 ids_list: error .
   64 data_member: error . array_tag

    OPEN_ARR  shift, and go to state 213

    $default  reduce using rule 61 (ids_list)

    array_tag        go to state 214
    array_first_tag  go to state 215


State 136

   58 variable_declarationxx: type IDENTIFIER . array_tag error
   62 data_member: IDENTIFIER . array_tag
   63            | IDENTIFIER .
   65            | IDENTIFIER . error

    error     shift, and go to state 216
    OPEN_ARR  shift, and go to state 213

    SEMI_COMA  reduce using rule 63 (data_member)
    COMMA      reduce using rule 63 (data_member)

    array_tag        go to state 217
    array_first_tag  go to state 215


State 137

   56 variable_declarationxx: type ids_list . SEMI_COMA
   59 ids_list: ids_list . COMMA data_member

    SEMI_COMA  shift, and go to state 218
    COMMA      shift, and go to state 219


State 138

   60 ids_list: data_member .

    $default  reduce using rule 60 (ids_list)


State 139

   33 protocol_reference_list: LESS_THAN ids_list_identifier error .

    $default  reduce using rule 33 (protocol_reference_list)


State 140

   34 ids_list_identifier: ids_list_identifier COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 220


State 141

   32 protocol_reference_list: LESS_THAN ids_list_identifier MORE_THAN .

    $default  reduce using rule 32 (protocol_reference_list)


State 142

  117 method_selector: IDENTIFIER SEMI_COLUMN . parameter_list

    OPEN_P  shift, and go to state 87

    p_type          go to state 221
    parameter_list  go to state 222
    parameter       go to state 223


State 143

  116 p_type: OPEN_P type . CLOSE_P

    CLOSE_P  shift, and go to state 224


State 144

  110 class_method_declaration: PLUS p_type method_selector . SEMI_COMA
  112                         | PLUS p_type method_selector . error

    error      shift, and go to state 225
    SEMI_COMA  shift, and go to state 226


State 145

  113 class_method_declaration: PLUS method_selector error .

    $default  reduce using rule 113 (class_method_declaration)


State 146

  111 class_method_declaration: PLUS method_selector SEMI_COMA .

    $default  reduce using rule 111 (class_method_declaration)


State 147

  114 instance_method_declaration: MINUS p_type method_selector . SEMI_COMA

    SEMI_COMA  shift, and go to state 227


State 148

  115 instance_method_declaration: MINUS method_selector SEMI_COMA .

    $default  reduce using rule 115 (instance_method_declaration)


State 149

   23 class_interface_body: protocol_reference_list error AT_END .

    $default  reduce using rule 23 (class_interface_body)


State 150

   24 class_interface_body: protocol_reference_list error interface_declaration_list . AT_END
  106 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 228
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 101
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 151

   27 class_interface_body: protocol_reference_list instance_variables error .

    $default  reduce using rule 27 (class_interface_body)


State 152

   16 class_interface_body: protocol_reference_list instance_variables AT_END .

    $default  reduce using rule 16 (class_interface_body)


State 153

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list . AT_END
   26                     | protocol_reference_list instance_variables interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration

    error   shift, and go to state 229
    AT_END  shift, and go to state 230
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 101
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 154

   28 class_interface_body: protocol_reference_list interface_declaration_list error .

    $default  reduce using rule 28 (class_interface_body)


State 155

   17 class_interface_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 17 (class_interface_body)


State 156

   29 class_interface_body: instance_variables interface_declaration_list error .

    $default  reduce using rule 29 (class_interface_body)


State 157

   18 class_interface_body: instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 18 (class_interface_body)


State 158

   68 struct_declaration_list: error variable_declarationxx .

    $default  reduce using rule 68 (struct_declaration_list)


State 159

   76 struct: struct_header OPEN_S CLOSE_S error . SEMI_COMA
   80 entity: error . COMMA

    SEMI_COMA  shift, and go to state 231
    COMMA      shift, and go to state 232


State 160

   78 entity: IDENTIFIER . COMMA entity
   79       | IDENTIFIER .

    COMMA  shift, and go to state 233

    $default  reduce using rule 79 (entity)


State 161

   72 struct: struct_header OPEN_S CLOSE_S SEMI_COMA .

    $default  reduce using rule 72 (struct)


State 162

   70 struct: struct_header OPEN_S CLOSE_S entity . SEMI_COMA
   74       | struct_header OPEN_S CLOSE_S entity . error SEMI_COMA

    error      shift, and go to state 234
    SEMI_COMA  shift, and go to state 235


State 163

   71 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S . entity SEMI_COMA
   73       | struct_header OPEN_S struct_variable_declaration CLOSE_S . SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration CLOSE_S . entity error SEMI_COMA
   77       | struct_header OPEN_S struct_variable_declaration CLOSE_S . error SEMI_COMA

    error       shift, and go to state 236
    IDENTIFIER  shift, and go to state 160
    SEMI_COMA   shift, and go to state 237

    entity  go to state 238


State 164

   66 struct_declaration_list: struct_declaration_list variable_declarationxx .

    $default  reduce using rule 66 (struct_declaration_list)


State 165

  135 class_implementation_definition_header: PLUS p_type method_selector .

    $default  reduce using rule 135 (class_implementation_definition_header)


State 166

  138 instance_implementation_definition_header: MINUS p_type method_selector .

    $default  reduce using rule 138 (instance_implementation_definition_header)


State 167

  126 class_implementation_body: instance_variables implementation_definition_list AT_END .

    $default  reduce using rule 126 (class_implementation_body)


State 168

   95 complex_type: IDENTIFIER . MULTI
  198 long_id: IDENTIFIER .

    MULTI  shift, and go to state 127

    $default  reduce using rule 198 (long_id)


State 169

  143 block_body_statements: CLOSE_S .

    $default  reduce using rule 143 (block_body_statements)


State 170

  156 variable_declaration_block: CONST . type variable_list SEMI_COMA

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    type          go to state 239
    struct_type   go to state 80
    enum_type     go to state 81
    simple_type   go to state 82
    complex_type  go to state 83


State 171

  171 for_loop_header: FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  172                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  173                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  174                | FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  175                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  176                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  177                | FOR . OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  178                | FOR . OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

    OPEN_P  shift, and go to state 240


State 172

  225 while_loop_header: WHILE . OPEN_P logic_expr CLOSE_P

    OPEN_P  shift, and go to state 241


State 173

  229 if_header: IF . OPEN_P logic_expr CLOSE_P

    OPEN_P  shift, and go to state 242


State 174

  169 do_header: DO .

    $default  reduce using rule 169 (do_header)


State 175

  230 switch_header: SWITCH . OPEN_P IDENTIFIER CLOSE_P switch_body_block

    OPEN_P  shift, and go to state 243


State 176

   87 enum_type: ENUM . IDENTIFIER
   88          | ENUM . IDENTIFIER MULTI
  250 enum: ENUM . IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  251     | ENUM . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 244


State 177

  214 message_call2: OPEN_ARR .

    $default  reduce using rule 214 (message_call2)


State 178

  164 return_statement: RETURN . expr SEMI_COMA

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    expr           go to state 254
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 179

  256 try_catch: TRY . statement catch_list finally_statement
  257          | TRY . statement catch_list

    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 117
    statement                   go to state 258
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 180

  154 asm: AT_ASM . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 259


State 181

  155 variable_declaration_block: type . variable_list SEMI_COMA

    error       shift, and go to state 260
    IDENTIFIER  shift, and go to state 261

    variable_list  go to state 262
    variable       go to state 263


State 182

  150 statement: block_body .

    $default  reduce using rule 150 (statement)


State 183

  140 block_body: block_body_header block_body_statements .

    $default  reduce using rule 140 (block_body)


State 184

  142 block_body_statements: statement_list . CLOSE_S
  144 statement_list: statement_list . statement

    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 115
    CLOSE_S     shift, and go to state 264
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 117
    statement                   go to state 265
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 185

  145 statement_list: statement .

    $default  reduce using rule 145 (statement_list)


State 186

  153 statement: asm .

    $default  reduce using rule 153 (statement)


State 187

  149 statement: variable_declaration_block .

    $default  reduce using rule 149 (statement)


State 188

  151 statement: return_statement .

    $default  reduce using rule 151 (statement)


State 189

  146 statement: loop_statement .

    $default  reduce using rule 146 (statement)


State 190

  167 loop_statement: do_while .

    $default  reduce using rule 167 (loop_statement)


State 191

  168 do_while: do_header . statement while_loop_header SEMI_COMA

    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 117
    statement                   go to state 266
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 192

  165 loop_statement: for_loop .

    $default  reduce using rule 165 (loop_statement)


State 193

  170 for_loop: for_loop_header . statement

    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 117
    statement                   go to state 267
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 194

  148 statement: assign_expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 268


State 195

  195 assign_expr: long_id . EQUAL simple_expr
  196 long_id: long_id . DOT IDENTIFIER

    EQUAL  shift, and go to state 269
    DOT    shift, and go to state 270


State 196

  215 message_call: message_call2 . sender message CLOSE_ARR

    IDENTIFIER  shift, and go to state 271
    OPEN_ARR    shift, and go to state 177

    message_call2  go to state 196
    message_call   go to state 272
    sender         go to state 273


State 197

  197 long_id: message_call .

    $default  reduce using rule 197 (long_id)


State 198

  166 loop_statement: while_loop .

    $default  reduce using rule 166 (loop_statement)


State 199

  224 while_loop: while_loop_header . statement

    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 117
    statement                   go to state 274
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 200

  147 statement: conditional_statement .

    $default  reduce using rule 147 (statement)


State 201

  226 conditional_statement: if_header . statement
  227                      | if_header . statement ELSE statement

    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 117
    statement                   go to state 275
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 202

  228 conditional_statement: switch_header . switch_body

    CLOSE_S  shift, and go to state 276
    CASE     shift, and go to state 277
    DEFAULT  shift, and go to state 278

    switch_body   go to state 279
    list_of_case  go to state 280
    case_body     go to state 281
    default_case  go to state 282


State 203

  157 variable_declaration_block: enum .

    $default  reduce using rule 157 (variable_declaration_block)


State 204

  152 statement: try_catch .

    $default  reduce using rule 152 (statement)


State 205

  246 protocol_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 246 (protocol_body)


State 206

  255 list_expr: IDENTIFIER COMMA . list_expr

    IDENTIFIER  shift, and go to state 125

    list_expr  go to state 283


State 207

  252 list_expr: IDENTIFIER EQUAL . expr COMMA list_expr
  253          | IDENTIFIER EQUAL . expr

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    expr           go to state 284
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 208

  250 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 285


State 209

   62 data_member: IDENTIFIER . array_tag
   63            | IDENTIFIER .
   65            | IDENTIFIER . error

    error     shift, and go to state 216
    OPEN_ARR  shift, and go to state 213

    SEMI_COMA  reduce using rule 63 (data_member)
    COMMA      reduce using rule 63 (data_member)

    array_tag        go to state 286
    array_first_tag  go to state 215


State 210

   57 variable_declarationxx: CONST type ids_list . SEMI_COMA
   59 ids_list: ids_list . COMMA data_member

    SEMI_COMA  shift, and go to state 287
    COMMA      shift, and go to state 219


State 211

   88 enum_type: ENUM IDENTIFIER MULTI .

    $default  reduce using rule 88 (enum_type)


State 212

   86 struct_type: STRUCT IDENTIFIER MULTI .

    $default  reduce using rule 86 (struct_type)


State 213

  100 array_first_tag: OPEN_ARR . INT_VAL CLOSE_ARR
  101                | OPEN_ARR . CLOSE_ARR

    INT_VAL    shift, and go to state 288
    CLOSE_ARR  shift, and go to state 289


State 214

   64 data_member: error array_tag .

    $default  reduce using rule 64 (data_member)


State 215

   96 array_tag: array_first_tag . array_tag_list

    $default  reduce using rule 98 (array_tag_list)

    array_tag_list  go to state 290


State 216

   65 data_member: IDENTIFIER error .

    $default  reduce using rule 65 (data_member)


State 217

   58 variable_declarationxx: type IDENTIFIER array_tag . error
   62 data_member: IDENTIFIER array_tag .

    error  shift, and go to state 291

    SEMI_COMA  reduce using rule 62 (data_member)
    COMMA      reduce using rule 62 (data_member)


State 218

   56 variable_declarationxx: type ids_list SEMI_COMA .

    $default  reduce using rule 56 (variable_declarationxx)


State 219

   59 ids_list: ids_list COMMA . data_member

    error       shift, and go to state 292
    IDENTIFIER  shift, and go to state 209

    data_member  go to state 293


State 220

   34 ids_list_identifier: ids_list_identifier COMMA IDENTIFIER .

    $default  reduce using rule 34 (ids_list_identifier)


State 221

  122 parameter: p_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 294


State 222

  117 method_selector: IDENTIFIER SEMI_COLUMN parameter_list .
  119 parameter_list: parameter_list . SEMI_COLUMN parameter
  120               | parameter_list . IDENTIFIER SEMI_COLUMN parameter

    IDENTIFIER   shift, and go to state 295
    SEMI_COLUMN  shift, and go to state 296

    $default  reduce using rule 117 (method_selector)


State 223

  121 parameter_list: parameter .

    $default  reduce using rule 121 (parameter_list)


State 224

  116 p_type: OPEN_P type CLOSE_P .

    $default  reduce using rule 116 (p_type)


State 225

  112 class_method_declaration: PLUS p_type method_selector error .

    $default  reduce using rule 112 (class_method_declaration)


State 226

  110 class_method_declaration: PLUS p_type method_selector SEMI_COMA .

    $default  reduce using rule 110 (class_method_declaration)


State 227

  114 instance_method_declaration: MINUS p_type method_selector SEMI_COMA .

    $default  reduce using rule 114 (instance_method_declaration)


State 228

   24 class_interface_body: protocol_reference_list error interface_declaration_list AT_END .

    $default  reduce using rule 24 (class_interface_body)


State 229

   26 class_interface_body: protocol_reference_list instance_variables interface_declaration_list error .

    $default  reduce using rule 26 (class_interface_body)


State 230

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 15 (class_interface_body)


State 231

   76 struct: struct_header OPEN_S CLOSE_S error SEMI_COMA .

    $default  reduce using rule 76 (struct)


State 232

   80 entity: error COMMA .

    $default  reduce using rule 80 (entity)


State 233

   78 entity: IDENTIFIER COMMA . entity

    error       shift, and go to state 297
    IDENTIFIER  shift, and go to state 160

    entity  go to state 298


State 234

   74 struct: struct_header OPEN_S CLOSE_S entity error . SEMI_COMA

    SEMI_COMA  shift, and go to state 299


State 235

   70 struct: struct_header OPEN_S CLOSE_S entity SEMI_COMA .

    $default  reduce using rule 70 (struct)


State 236

   77 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S error . SEMI_COMA
   80 entity: error . COMMA

    SEMI_COMA  shift, and go to state 300
    COMMA      shift, and go to state 232


State 237

   73 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA .

    $default  reduce using rule 73 (struct)


State 238

   71 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity . SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity . error SEMI_COMA

    error      shift, and go to state 301
    SEMI_COMA  shift, and go to state 302


State 239

  156 variable_declaration_block: CONST type . variable_list SEMI_COMA

    error       shift, and go to state 260
    IDENTIFIER  shift, and go to state 261

    variable_list  go to state 303
    variable       go to state 263


State 240

  171 for_loop_header: FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  172                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  173                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  174                | FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  175                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  176                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  177                | FOR OPEN_P . SEMI_COMA SEMI_COMA expr CLOSE_P
  178                | FOR OPEN_P . SEMI_COMA SEMI_COMA CLOSE_P

    IDENTIFIER  shift, and go to state 304
    INT         shift, and go to state 305
    SEMI_COMA   shift, and go to state 306

    for_initializer  go to state 307


State 241

  225 while_loop_header: WHILE OPEN_P . logic_expr CLOSE_P

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 308
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    NOT_EQUAL    shift, and go to state 309
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 310
    FALSE        shift, and go to state 311
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    logic_expr     go to state 312
    expr           go to state 313
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 242

  229 if_header: IF OPEN_P . logic_expr CLOSE_P

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 308
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    NOT_EQUAL    shift, and go to state 309
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 310
    FALSE        shift, and go to state 311
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    logic_expr     go to state 314
    expr           go to state 313
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 243

  230 switch_header: SWITCH OPEN_P . IDENTIFIER CLOSE_P switch_body_block

    IDENTIFIER  shift, and go to state 315


State 244

   87 enum_type: ENUM IDENTIFIER .
   88          | ENUM IDENTIFIER . MULTI
  250 enum: ENUM IDENTIFIER . OPEN_S list_expr CLOSE_S SEMI_COMA
  251     | ENUM IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 58
    OPEN_S     shift, and go to state 59
    MULTI      shift, and go to state 211

    $default  reduce using rule 87 (enum_type)


State 245

  198 long_id: IDENTIFIER .
  209 simple_expr: IDENTIFIER . DOUBLEPLUS
  210            | IDENTIFIER . DOUBLEMINUS

    $default  reduce using rule 198 (long_id)


State 246

  116 p_type: OPEN_P . type CLOSE_P
  208 simple_expr: OPEN_P . simple_expr CLOSE_P

    IDENTIFIER   shift, and go to state 318
    NSSTRING     shift, and go to state 61
    FLOAT        shift, and go to state 62
    CHAR         shift, and go to state 63
    BOOL         shift, and go to state 64
    INT          shift, and go to state 65
    VOID         shift, and go to state 71
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    ENUM         shift, and go to state 72
    OPEN_ARR     shift, and go to state 177
    STRUCT       shift, and go to state 73
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    type           go to state 143
    struct_type    go to state 80
    enum_type      go to state 81
    simple_type    go to state 82
    complex_type   go to state 83
    p_type         go to state 253
    long_id        go to state 319
    simple_expr    go to state 320
    message_call2  go to state 196
    message_call   go to state 197


State 247

  199 simple_expr: STRING_VAL .

    $default  reduce using rule 199 (simple_expr)


State 248

  201 simple_expr: FLOAT_VAL .

    $default  reduce using rule 201 (simple_expr)


State 249

  202 simple_expr: CHAR_VAL .

    $default  reduce using rule 202 (simple_expr)


State 250

  200 simple_expr: INT_VAL .

    $default  reduce using rule 200 (simple_expr)


State 251

  211 simple_expr: DOUBLEPLUS . IDENTIFIER

    IDENTIFIER  shift, and go to state 321


State 252

  212 simple_expr: DOUBLEMINUS . IDENTIFIER

    IDENTIFIER  shift, and go to state 322


State 253

  213 simple_expr: p_type . simple_expr

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    long_id        go to state 319
    simple_expr    go to state 323
    message_call2  go to state 196
    message_call   go to state 197


State 254

  164 return_statement: RETURN expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 324


State 255

  193 expr: assign_expr .

    $default  reduce using rule 193 (expr)


State 256

  195 assign_expr: long_id . EQUAL simple_expr
  196 long_id: long_id . DOT IDENTIFIER
  203 simple_expr: long_id .

    EQUAL  shift, and go to state 269
    DOT    shift, and go to state 270

    $default  reduce using rule 203 (simple_expr)


State 257

  194 expr: simple_expr .
  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 325
    MINUS  shift, and go to state 326
    MULTI  shift, and go to state 327
    DIV    shift, and go to state 328

    $default  reduce using rule 194 (expr)


State 258

  256 try_catch: TRY statement . catch_list finally_statement
  257          | TRY statement . catch_list

    CATCH  shift, and go to state 329

    catch_list  go to state 330


State 259

  154 asm: AT_ASM IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 331


State 260

  163 variable: error . array_tag initializer

    OPEN_ARR  shift, and go to state 213

    array_tag        go to state 332
    array_first_tag  go to state 215


State 261

  161 variable: IDENTIFIER . array_tag initializer
  162         | IDENTIFIER . main_initializer

    EQUAL     shift, and go to state 333
    OPEN_ARR  shift, and go to state 213

    $default  reduce using rule 105 (main_initializer)

    array_tag         go to state 334
    array_first_tag   go to state 215
    main_initializer  go to state 335


State 262

  155 variable_declaration_block: type variable_list . SEMI_COMA
  158 variable_list: variable_list . COMMA variable
  160              | variable_list . error variable

    error      shift, and go to state 336
    SEMI_COMA  shift, and go to state 337
    COMMA      shift, and go to state 338


State 263

  159 variable_list: variable .

    $default  reduce using rule 159 (variable_list)


State 264

  142 block_body_statements: statement_list CLOSE_S .

    $default  reduce using rule 142 (block_body_statements)


State 265

  144 statement_list: statement_list statement .

    $default  reduce using rule 144 (statement_list)


State 266

  168 do_while: do_header statement . while_loop_header SEMI_COMA

    WHILE  shift, and go to state 172

    while_loop_header  go to state 339


State 267

  170 for_loop: for_loop_header statement .

    $default  reduce using rule 170 (for_loop)


State 268

  148 statement: assign_expr SEMI_COMA .

    $default  reduce using rule 148 (statement)


State 269

  195 assign_expr: long_id EQUAL . simple_expr

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    long_id        go to state 319
    simple_expr    go to state 340
    message_call2  go to state 196
    message_call   go to state 197


State 270

  196 long_id: long_id DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 341


State 271

  217 sender: IDENTIFIER .

    $default  reduce using rule 217 (sender)


State 272

  216 sender: message_call .

    $default  reduce using rule 216 (sender)


State 273

  215 message_call: message_call2 sender . message CLOSE_ARR

    IDENTIFIER  shift, and go to state 342

    message  go to state 343


State 274

  224 while_loop: while_loop_header statement .

    $default  reduce using rule 224 (while_loop)


State 275

  226 conditional_statement: if_header statement .
  227                      | if_header statement . ELSE statement

    ELSE  shift, and go to state 344

    $default  reduce using rule 226 (conditional_statement)


State 276

  235 switch_body: CLOSE_S .

    $default  reduce using rule 235 (switch_body)


State 277

  238 case_body: CASE . expr SEMI_COLUMN statement BREAK SEMI_COMA
  239          | CASE . expr SEMI_COLUMN statement
  240          | CASE . expr SEMI_COLUMN BREAK SEMI_COMA

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    expr           go to state 345
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 278

  241 default_case: DEFAULT . SEMI_COLUMN statement BREAK SEMI_COMA
  242             | DEFAULT . SEMI_COLUMN statement
  243             | DEFAULT . SEMI_COLUMN BREAK SEMI_COMA

    SEMI_COLUMN  shift, and go to state 346


State 279

  228 conditional_statement: switch_header switch_body .

    $default  reduce using rule 228 (conditional_statement)


State 280

  232 switch_body: list_of_case . default_case CLOSE_S
  233            | list_of_case . CLOSE_S
  236 list_of_case: list_of_case . case_body

    CLOSE_S  shift, and go to state 347
    CASE     shift, and go to state 277
    DEFAULT  shift, and go to state 278

    case_body     go to state 348
    default_case  go to state 349


State 281

  237 list_of_case: case_body .

    $default  reduce using rule 237 (list_of_case)


State 282

  234 switch_body: default_case . CLOSE_S

    CLOSE_S  shift, and go to state 350


State 283

  255 list_expr: IDENTIFIER COMMA list_expr .

    $default  reduce using rule 255 (list_expr)


State 284

  252 list_expr: IDENTIFIER EQUAL expr . COMMA list_expr
  253          | IDENTIFIER EQUAL expr .

    COMMA  shift, and go to state 351

    $default  reduce using rule 253 (list_expr)


State 285

  250 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA .

    $default  reduce using rule 250 (enum)


State 286

   62 data_member: IDENTIFIER array_tag .

    $default  reduce using rule 62 (data_member)


State 287

   57 variable_declarationxx: CONST type ids_list SEMI_COMA .

    $default  reduce using rule 57 (variable_declarationxx)


State 288

  100 array_first_tag: OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 352


State 289

  101 array_first_tag: OPEN_ARR CLOSE_ARR .

    $default  reduce using rule 101 (array_first_tag)


State 290

   96 array_tag: array_first_tag array_tag_list .
   97 array_tag_list: array_tag_list . OPEN_ARR INT_VAL CLOSE_ARR
   99               | array_tag_list . OPEN_ARR error CLOSE_ARR

    OPEN_ARR  shift, and go to state 353

    $default  reduce using rule 96 (array_tag)


State 291

   58 variable_declarationxx: type IDENTIFIER array_tag error .

    $default  reduce using rule 58 (variable_declarationxx)


State 292

   64 data_member: error . array_tag

    OPEN_ARR  shift, and go to state 213

    array_tag        go to state 214
    array_first_tag  go to state 215


State 293

   59 ids_list: ids_list COMMA data_member .

    $default  reduce using rule 59 (ids_list)


State 294

  122 parameter: p_type IDENTIFIER .

    $default  reduce using rule 122 (parameter)


State 295

  120 parameter_list: parameter_list IDENTIFIER . SEMI_COLUMN parameter

    SEMI_COLUMN  shift, and go to state 354


State 296

  119 parameter_list: parameter_list SEMI_COLUMN . parameter

    OPEN_P  shift, and go to state 87

    p_type     go to state 221
    parameter  go to state 355


State 297

   80 entity: error . COMMA

    COMMA  shift, and go to state 232


State 298

   78 entity: IDENTIFIER COMMA entity .

    $default  reduce using rule 78 (entity)


State 299

   74 struct: struct_header OPEN_S CLOSE_S entity error SEMI_COMA .

    $default  reduce using rule 74 (struct)


State 300

   77 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA .

    $default  reduce using rule 77 (struct)


State 301

   75 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity error . SEMI_COMA

    SEMI_COMA  shift, and go to state 356


State 302

   71 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA .

    $default  reduce using rule 71 (struct)


State 303

  156 variable_declaration_block: CONST type variable_list . SEMI_COMA
  158 variable_list: variable_list . COMMA variable
  160              | variable_list . error variable

    error      shift, and go to state 336
    SEMI_COMA  shift, and go to state 357
    COMMA      shift, and go to state 338


State 304

  180 for_initializer: IDENTIFIER . EQUAL expr
  181                | IDENTIFIER .

    EQUAL  shift, and go to state 358

    $default  reduce using rule 181 (for_initializer)


State 305

  179 for_initializer: INT . IDENTIFIER EQUAL expr

    IDENTIFIER  shift, and go to state 359


State 306

  172 for_loop_header: FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P
  176                | FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA CLOSE_P
  177                | FOR OPEN_P SEMI_COMA . SEMI_COMA expr CLOSE_P
  178                | FOR OPEN_P SEMI_COMA . SEMI_COMA CLOSE_P

    IDENTIFIER   shift, and go to state 245
    SEMI_COMA    shift, and go to state 360
    OPEN_P       shift, and go to state 308
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    NOT_EQUAL    shift, and go to state 309
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 310
    FALSE        shift, and go to state 311
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    logic_expr     go to state 361
    expr           go to state 313
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 307

  171 for_loop_header: FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  173                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA expr CLOSE_P
  174                | FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  175                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA CLOSE_P

    SEMI_COMA  shift, and go to state 362


State 308

  116 p_type: OPEN_P . type CLOSE_P
  188 logic_expr: OPEN_P . logic_expr CLOSE_P
  208 simple_expr: OPEN_P . simple_expr CLOSE_P

    IDENTIFIER   shift, and go to state 318
    NSSTRING     shift, and go to state 61
    FLOAT        shift, and go to state 62
    CHAR         shift, and go to state 63
    BOOL         shift, and go to state 64
    INT          shift, and go to state 65
    VOID         shift, and go to state 71
    OPEN_P       shift, and go to state 308
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    NOT_EQUAL    shift, and go to state 309
    ENUM         shift, and go to state 72
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 310
    FALSE        shift, and go to state 311
    STRUCT       shift, and go to state 73
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    type           go to state 143
    struct_type    go to state 80
    enum_type      go to state 81
    simple_type    go to state 82
    complex_type   go to state 83
    p_type         go to state 253
    logic_expr     go to state 363
    expr           go to state 313
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 364
    message_call2  go to state 196
    message_call   go to state 197


State 309

  187 logic_expr: NOT_EQUAL . expr

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    expr           go to state 365
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 310

  191 logic_expr: TRUE .

    $default  reduce using rule 191 (logic_expr)


State 311

  192 logic_expr: FALSE .

    $default  reduce using rule 192 (logic_expr)


State 312

  189 logic_expr: logic_expr . AND_AND logic_expr
  190           | logic_expr . OR_OR logic_expr
  225 while_loop_header: WHILE OPEN_P logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 366
    AND_AND  shift, and go to state 367
    OR_OR    shift, and go to state 368


State 313

  182 logic_expr: expr . LESS_THAN expr
  183           | expr . MORE_THAN expr
  184           | expr . LESS_OR_EQUAL expr
  185           | expr . MORE_OR_EQUAL expr
  186           | expr . EQUAL_EQUAL expr

    LESS_THAN      shift, and go to state 369
    MORE_THAN      shift, and go to state 370
    LESS_OR_EQUAL  shift, and go to state 371
    MORE_OR_EQUAL  shift, and go to state 372
    EQUAL_EQUAL    shift, and go to state 373


State 314

  189 logic_expr: logic_expr . AND_AND logic_expr
  190           | logic_expr . OR_OR logic_expr
  229 if_header: IF OPEN_P logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 374
    AND_AND  shift, and go to state 367
    OR_OR    shift, and go to state 368


State 315

  230 switch_header: SWITCH OPEN_P IDENTIFIER . CLOSE_P switch_body_block

    CLOSE_P  shift, and go to state 375


State 316

  209 simple_expr: IDENTIFIER DOUBLEPLUS .

    $default  reduce using rule 209 (simple_expr)


State 317

  210 simple_expr: IDENTIFIER DOUBLEMINUS .

    $default  reduce using rule 210 (simple_expr)


State 318

   95 complex_type: IDENTIFIER . MULTI
  198 long_id: IDENTIFIER .
  209 simple_expr: IDENTIFIER . DOUBLEPLUS
  210            | IDENTIFIER . DOUBLEMINUS

    DOUBLEPLUS   shift, and go to state 316
    DOUBLEMINUS  shift, and go to state 317

    $default  reduce using rule 198 (long_id)


State 319

  196 long_id: long_id . DOT IDENTIFIER
  203 simple_expr: long_id .

    DOT  shift, and go to state 270

    $default  reduce using rule 203 (simple_expr)


State 320

  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr
  208            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 325
    MINUS    shift, and go to state 326
    CLOSE_P  shift, and go to state 376
    MULTI    shift, and go to state 327
    DIV      shift, and go to state 328


State 321

  211 simple_expr: DOUBLEPLUS IDENTIFIER .

    $default  reduce using rule 211 (simple_expr)


State 322

  212 simple_expr: DOUBLEMINUS IDENTIFIER .

    $default  reduce using rule 212 (simple_expr)


State 323

  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr
  213            | p_type simple_expr .

    PLUS   shift, and go to state 325
    MINUS  shift, and go to state 326
    MULTI  shift, and go to state 327
    DIV    shift, and go to state 328

    $default  reduce using rule 213 (simple_expr)


State 324

  164 return_statement: RETURN expr SEMI_COMA .

    $default  reduce using rule 164 (return_statement)


State 325

  204 simple_expr: simple_expr PLUS . simple_expr

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    long_id        go to state 319
    simple_expr    go to state 377
    message_call2  go to state 196
    message_call   go to state 197


State 326

  205 simple_expr: simple_expr MINUS . simple_expr

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    long_id        go to state 319
    simple_expr    go to state 378
    message_call2  go to state 196
    message_call   go to state 197


State 327

  206 simple_expr: simple_expr MULTI . simple_expr

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    long_id        go to state 319
    simple_expr    go to state 379
    message_call2  go to state 196
    message_call   go to state 197


State 328

  207 simple_expr: simple_expr DIV . simple_expr

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    long_id        go to state 319
    simple_expr    go to state 380
    message_call2  go to state 196
    message_call   go to state 197


State 329

  258 catch_list: CATCH . OPEN_S type IDENTIFIER CLOSE_S statement

    OPEN_S  shift, and go to state 381


State 330

  256 try_catch: TRY statement catch_list . finally_statement
  257          | TRY statement catch_list .
  259 catch_list: catch_list . CATCH OPEN_S type IDENTIFIER CLOSE_S statement

    CATCH    shift, and go to state 382
    FINALLY  shift, and go to state 383

    $default  reduce using rule 257 (try_catch)

    finally_statement  go to state 384


State 331

  154 asm: AT_ASM IDENTIFIER SEMI_COMA .

    $default  reduce using rule 154 (asm)


State 332

  163 variable: error array_tag . initializer

    EQUAL  shift, and go to state 385

    $default  reduce using rule 103 (initializer)

    initializer  go to state 386


State 333

  104 main_initializer: EQUAL . expr

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    expr           go to state 387
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 334

  161 variable: IDENTIFIER array_tag . initializer

    EQUAL  shift, and go to state 385

    $default  reduce using rule 103 (initializer)

    initializer  go to state 388


State 335

  162 variable: IDENTIFIER main_initializer .

    $default  reduce using rule 162 (variable)


State 336

  160 variable_list: variable_list error . variable

    error       shift, and go to state 260
    IDENTIFIER  shift, and go to state 261

    variable  go to state 389


State 337

  155 variable_declaration_block: type variable_list SEMI_COMA .

    $default  reduce using rule 155 (variable_declaration_block)


State 338

  158 variable_list: variable_list COMMA . variable

    error       shift, and go to state 260
    IDENTIFIER  shift, and go to state 261

    variable  go to state 390


State 339

  168 do_while: do_header statement while_loop_header . SEMI_COMA

    SEMI_COMA  shift, and go to state 391


State 340

  195 assign_expr: long_id EQUAL simple_expr .
  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 325
    MINUS  shift, and go to state 326
    MULTI  shift, and go to state 327
    DIV    shift, and go to state 328

    $default  reduce using rule 195 (assign_expr)


State 341

  196 long_id: long_id DOT IDENTIFIER .

    $default  reduce using rule 196 (long_id)


State 342

  218 message: IDENTIFIER .
  219        | IDENTIFIER . SEMI_COLUMN argument_list

    SEMI_COLUMN  shift, and go to state 392

    $default  reduce using rule 218 (message)


State 343

  215 message_call: message_call2 sender message . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 393


State 344

  227 conditional_statement: if_header statement ELSE . statement

    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 117
    statement                   go to state 394
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 345

  238 case_body: CASE expr . SEMI_COLUMN statement BREAK SEMI_COMA
  239          | CASE expr . SEMI_COLUMN statement
  240          | CASE expr . SEMI_COLUMN BREAK SEMI_COMA

    SEMI_COLUMN  shift, and go to state 395


State 346

  241 default_case: DEFAULT SEMI_COLUMN . statement BREAK SEMI_COMA
  242             | DEFAULT SEMI_COLUMN . statement
  243             | DEFAULT SEMI_COLUMN . BREAK SEMI_COMA

    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    BREAK       shift, and go to state 396
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 117
    statement                   go to state 397
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 347

  233 switch_body: list_of_case CLOSE_S .

    $default  reduce using rule 233 (switch_body)


State 348

  236 list_of_case: list_of_case case_body .

    $default  reduce using rule 236 (list_of_case)


State 349

  232 switch_body: list_of_case default_case . CLOSE_S

    CLOSE_S  shift, and go to state 398


State 350

  234 switch_body: default_case CLOSE_S .

    $default  reduce using rule 234 (switch_body)


State 351

  252 list_expr: IDENTIFIER EQUAL expr COMMA . list_expr

    IDENTIFIER  shift, and go to state 125

    list_expr  go to state 399


State 352

  100 array_first_tag: OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 100 (array_first_tag)


State 353

   97 array_tag_list: array_tag_list OPEN_ARR . INT_VAL CLOSE_ARR
   99               | array_tag_list OPEN_ARR . error CLOSE_ARR

    error    shift, and go to state 400
    INT_VAL  shift, and go to state 401


State 354

  120 parameter_list: parameter_list IDENTIFIER SEMI_COLUMN . parameter

    OPEN_P  shift, and go to state 87

    p_type     go to state 221
    parameter  go to state 402


State 355

  119 parameter_list: parameter_list SEMI_COLUMN parameter .

    $default  reduce using rule 119 (parameter_list)


State 356

   75 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA .

    $default  reduce using rule 75 (struct)


State 357

  156 variable_declaration_block: CONST type variable_list SEMI_COMA .

    $default  reduce using rule 156 (variable_declaration_block)


State 358

  180 for_initializer: IDENTIFIER EQUAL . expr

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    expr           go to state 403
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 359

  179 for_initializer: INT IDENTIFIER . EQUAL expr

    EQUAL  shift, and go to state 404


State 360

  177 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA . expr CLOSE_P
  178                | FOR OPEN_P SEMI_COMA SEMI_COMA . CLOSE_P

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    CLOSE_P      shift, and go to state 405
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    expr           go to state 406
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 361

  172 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  176                | FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA CLOSE_P
  189 logic_expr: logic_expr . AND_AND logic_expr
  190           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 407
    AND_AND    shift, and go to state 367
    OR_OR      shift, and go to state 368


State 362

  171 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P
  173                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA expr CLOSE_P
  174                | FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA CLOSE_P
  175                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA CLOSE_P

    IDENTIFIER   shift, and go to state 245
    SEMI_COMA    shift, and go to state 408
    OPEN_P       shift, and go to state 308
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    NOT_EQUAL    shift, and go to state 309
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 310
    FALSE        shift, and go to state 311
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    logic_expr     go to state 409
    expr           go to state 313
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 363

  188 logic_expr: OPEN_P logic_expr . CLOSE_P
  189           | logic_expr . AND_AND logic_expr
  190           | logic_expr . OR_OR logic_expr

    CLOSE_P  shift, and go to state 410
    AND_AND  shift, and go to state 367
    OR_OR    shift, and go to state 368


State 364

  194 expr: simple_expr .
  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr
  208            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 325
    MINUS    shift, and go to state 326
    CLOSE_P  shift, and go to state 376
    MULTI    shift, and go to state 327
    DIV      shift, and go to state 328

    $default  reduce using rule 194 (expr)


State 365

  187 logic_expr: NOT_EQUAL expr .

    $default  reduce using rule 187 (logic_expr)


State 366

  225 while_loop_header: WHILE OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 225 (while_loop_header)


State 367

  189 logic_expr: logic_expr AND_AND . logic_expr

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 308
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    NOT_EQUAL    shift, and go to state 309
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 310
    FALSE        shift, and go to state 311
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    logic_expr     go to state 411
    expr           go to state 313
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 368

  190 logic_expr: logic_expr OR_OR . logic_expr

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 308
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    NOT_EQUAL    shift, and go to state 309
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 310
    FALSE        shift, and go to state 311
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    logic_expr     go to state 412
    expr           go to state 313
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 369

  182 logic_expr: expr LESS_THAN . expr

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    expr           go to state 413
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 370

  183 logic_expr: expr MORE_THAN . expr

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    expr           go to state 414
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 371

  184 logic_expr: expr LESS_OR_EQUAL . expr

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    expr           go to state 415
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 372

  185 logic_expr: expr MORE_OR_EQUAL . expr

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    expr           go to state 416
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 373

  186 logic_expr: expr EQUAL_EQUAL . expr

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    expr           go to state 417
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 374

  229 if_header: IF OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 229 (if_header)


State 375

  230 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P . switch_body_block

    OPEN_S  shift, and go to state 418

    switch_body_block  go to state 419


State 376

  208 simple_expr: OPEN_P simple_expr CLOSE_P .

    $default  reduce using rule 208 (simple_expr)


State 377

  204 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr PLUS simple_expr .
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 327
    DIV    shift, and go to state 328

    $default  reduce using rule 204 (simple_expr)


State 378

  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  205            | simple_expr MINUS simple_expr .
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 327
    DIV    shift, and go to state 328

    $default  reduce using rule 205 (simple_expr)


State 379

  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  206            | simple_expr MULTI simple_expr .
  207            | simple_expr . DIV simple_expr

    $default  reduce using rule 206 (simple_expr)


State 380

  204 simple_expr: simple_expr . PLUS simple_expr
  205            | simple_expr . MINUS simple_expr
  206            | simple_expr . MULTI simple_expr
  207            | simple_expr . DIV simple_expr
  207            | simple_expr DIV simple_expr .

    $default  reduce using rule 207 (simple_expr)


State 381

  258 catch_list: CATCH OPEN_S . type IDENTIFIER CLOSE_S statement

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    type          go to state 420
    struct_type   go to state 80
    enum_type     go to state 81
    simple_type   go to state 82
    complex_type  go to state 83


State 382

  259 catch_list: catch_list CATCH . OPEN_S type IDENTIFIER CLOSE_S statement

    OPEN_S  shift, and go to state 421


State 383

  260 finally_statement: FINALLY . statement

    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 117
    statement                   go to state 422
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 384

  256 try_catch: TRY statement catch_list finally_statement .

    $default  reduce using rule 256 (try_catch)


State 385

  102 initializer: EQUAL . array_body

    OPEN_S  shift, and go to state 423

    array_body  go to state 424


State 386

  163 variable: error array_tag initializer .

    $default  reduce using rule 163 (variable)


State 387

  104 main_initializer: EQUAL expr .

    $default  reduce using rule 104 (main_initializer)


State 388

  161 variable: IDENTIFIER array_tag initializer .

    $default  reduce using rule 161 (variable)


State 389

  160 variable_list: variable_list error variable .

    $default  reduce using rule 160 (variable_list)


State 390

  158 variable_list: variable_list COMMA variable .

    $default  reduce using rule 158 (variable_list)


State 391

  168 do_while: do_header statement while_loop_header SEMI_COMA .

    $default  reduce using rule 168 (do_while)


State 392

  219 message: IDENTIFIER SEMI_COLUMN . argument_list

    IDENTIFIER   shift, and go to state 425
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    expr           go to state 426
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197
    argument_list  go to state 427
    argument       go to state 428


State 393

  215 message_call: message_call2 sender message CLOSE_ARR .

    $default  reduce using rule 215 (message_call)


State 394

  227 conditional_statement: if_header statement ELSE statement .

    $default  reduce using rule 227 (conditional_statement)


State 395

  238 case_body: CASE expr SEMI_COLUMN . statement BREAK SEMI_COMA
  239          | CASE expr SEMI_COLUMN . statement
  240          | CASE expr SEMI_COLUMN . BREAK SEMI_COMA

    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    BREAK       shift, and go to state 429
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 117
    statement                   go to state 430
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 396

  243 default_case: DEFAULT SEMI_COLUMN BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 431


State 397

  241 default_case: DEFAULT SEMI_COLUMN statement . BREAK SEMI_COMA
  242             | DEFAULT SEMI_COLUMN statement .

    BREAK  shift, and go to state 432

    $default  reduce using rule 242 (default_case)


State 398

  232 switch_body: list_of_case default_case CLOSE_S .

    $default  reduce using rule 232 (switch_body)


State 399

  252 list_expr: IDENTIFIER EQUAL expr COMMA list_expr .

    $default  reduce using rule 252 (list_expr)


State 400

   99 array_tag_list: array_tag_list OPEN_ARR error . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 433


State 401

   97 array_tag_list: array_tag_list OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 434


State 402

  120 parameter_list: parameter_list IDENTIFIER SEMI_COLUMN parameter .

    $default  reduce using rule 120 (parameter_list)


State 403

  180 for_initializer: IDENTIFIER EQUAL expr .

    $default  reduce using rule 180 (for_initializer)


State 404

  179 for_initializer: INT IDENTIFIER EQUAL . expr

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    expr           go to state 435
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 405

  178 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 178 (for_loop_header)


State 406

  177 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 436


State 407

  172 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P
  176                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . CLOSE_P

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    CLOSE_P      shift, and go to state 437
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    expr           go to state 438
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 408

  173 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . expr CLOSE_P
  175                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . CLOSE_P

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    CLOSE_P      shift, and go to state 439
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    expr           go to state 440
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 409

  171 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  174                | FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA CLOSE_P
  189 logic_expr: logic_expr . AND_AND logic_expr
  190           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 441
    AND_AND    shift, and go to state 367
    OR_OR      shift, and go to state 368


State 410

  188 logic_expr: OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 188 (logic_expr)


State 411

  189 logic_expr: logic_expr . AND_AND logic_expr
  189           | logic_expr AND_AND logic_expr .
  190           | logic_expr . OR_OR logic_expr

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 189 (logic_expr)


State 412

  189 logic_expr: logic_expr . AND_AND logic_expr
  190           | logic_expr . OR_OR logic_expr
  190           | logic_expr OR_OR logic_expr .

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 190 (logic_expr)


State 413

  182 logic_expr: expr LESS_THAN expr .

    $default  reduce using rule 182 (logic_expr)


State 414

  183 logic_expr: expr MORE_THAN expr .

    $default  reduce using rule 183 (logic_expr)


State 415

  184 logic_expr: expr LESS_OR_EQUAL expr .

    $default  reduce using rule 184 (logic_expr)


State 416

  185 logic_expr: expr MORE_OR_EQUAL expr .

    $default  reduce using rule 185 (logic_expr)


State 417

  186 logic_expr: expr EQUAL_EQUAL expr .

    $default  reduce using rule 186 (logic_expr)


State 418

  231 switch_body_block: OPEN_S .

    $default  reduce using rule 231 (switch_body_block)


State 419

  230 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block .

    $default  reduce using rule 230 (switch_header)


State 420

  258 catch_list: CATCH OPEN_S type . IDENTIFIER CLOSE_S statement

    IDENTIFIER  shift, and go to state 442


State 421

  259 catch_list: catch_list CATCH OPEN_S . type IDENTIFIER CLOSE_S statement

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    type          go to state 443
    struct_type   go to state 80
    enum_type     go to state 81
    simple_type   go to state 82
    complex_type  go to state 83


State 422

  260 finally_statement: FINALLY statement .

    $default  reduce using rule 260 (finally_statement)


State 423

   36 array_body: OPEN_S . array_ele CLOSE_S
   37           | OPEN_S . CLOSE_S

    IDENTIFIER   shift, and go to state 245
    OPEN_S       shift, and go to state 444
    CLOSE_S      shift, and go to state 445
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    array_ele      go to state 446
    p_type         go to state 253
    expr           go to state 447
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 424

  102 initializer: EQUAL array_body .

    $default  reduce using rule 102 (initializer)


State 425

  198 long_id: IDENTIFIER .
  209 simple_expr: IDENTIFIER . DOUBLEPLUS
  210            | IDENTIFIER . DOUBLEMINUS
  223 argument: IDENTIFIER . SEMI_COLUMN expr

    SEMI_COLUMN  shift, and go to state 448

    $default  reduce using rule 198 (long_id)


State 426

  222 argument: expr .

    $default  reduce using rule 222 (argument)


State 427

  219 message: IDENTIFIER SEMI_COLUMN argument_list .
  220 argument_list: argument_list . argument

    IDENTIFIER   shift, and go to state 425
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    $default  reduce using rule 219 (message)

    p_type         go to state 253
    expr           go to state 426
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197
    argument       go to state 449


State 428

  221 argument_list: argument .

    $default  reduce using rule 221 (argument_list)


State 429

  240 case_body: CASE expr SEMI_COLUMN BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 450


State 430

  238 case_body: CASE expr SEMI_COLUMN statement . BREAK SEMI_COMA
  239          | CASE expr SEMI_COLUMN statement .

    BREAK  shift, and go to state 451

    $default  reduce using rule 239 (case_body)


State 431

  243 default_case: DEFAULT SEMI_COLUMN BREAK SEMI_COMA .

    $default  reduce using rule 243 (default_case)


State 432

  241 default_case: DEFAULT SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 452


State 433

   99 array_tag_list: array_tag_list OPEN_ARR error CLOSE_ARR .

    $default  reduce using rule 99 (array_tag_list)


State 434

   97 array_tag_list: array_tag_list OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 97 (array_tag_list)


State 435

  179 for_initializer: INT IDENTIFIER EQUAL expr .

    $default  reduce using rule 179 (for_initializer)


State 436

  177 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 177 (for_loop_header)


State 437

  176 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P .

    $default  reduce using rule 176 (for_loop_header)


State 438

  172 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 453


State 439

  175 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 175 (for_loop_header)


State 440

  173 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 454


State 441

  171 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P
  174                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . CLOSE_P

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    CLOSE_P      shift, and go to state 455
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    expr           go to state 456
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 442

  258 catch_list: CATCH OPEN_S type IDENTIFIER . CLOSE_S statement

    CLOSE_S  shift, and go to state 457


State 443

  259 catch_list: catch_list CATCH OPEN_S type . IDENTIFIER CLOSE_S statement

    IDENTIFIER  shift, and go to state 458


State 444

   40 array_ele: OPEN_S . CLOSE_S
   41          | OPEN_S . array_ele CLOSE_S COMMA array_ele
   42          | OPEN_S . array_ele CLOSE_S
   43          | OPEN_S . CLOSE_S COMMA array_ele

    IDENTIFIER   shift, and go to state 245
    OPEN_S       shift, and go to state 444
    CLOSE_S      shift, and go to state 459
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    array_ele      go to state 460
    p_type         go to state 253
    expr           go to state 447
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 445

   37 array_body: OPEN_S CLOSE_S .

    $default  reduce using rule 37 (array_body)


State 446

   36 array_body: OPEN_S array_ele . CLOSE_S

    CLOSE_S  shift, and go to state 461


State 447

   38 array_ele: expr . COMMA array_ele
   39          | expr .

    COMMA  shift, and go to state 462

    $default  reduce using rule 39 (array_ele)


State 448

  223 argument: IDENTIFIER SEMI_COLUMN . expr

    IDENTIFIER   shift, and go to state 245
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    p_type         go to state 253
    expr           go to state 463
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 449

  220 argument_list: argument_list argument .

    $default  reduce using rule 220 (argument_list)


State 450

  240 case_body: CASE expr SEMI_COLUMN BREAK SEMI_COMA .

    $default  reduce using rule 240 (case_body)


State 451

  238 case_body: CASE expr SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 464


State 452

  241 default_case: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 241 (default_case)


State 453

  172 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 172 (for_loop_header)


State 454

  173 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 173 (for_loop_header)


State 455

  174 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P .

    $default  reduce using rule 174 (for_loop_header)


State 456

  171 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 465


State 457

  258 catch_list: CATCH OPEN_S type IDENTIFIER CLOSE_S . statement

    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 117
    statement                   go to state 466
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 458

  259 catch_list: catch_list CATCH OPEN_S type IDENTIFIER . CLOSE_S statement

    CLOSE_S  shift, and go to state 467


State 459

   40 array_ele: OPEN_S CLOSE_S .
   43          | OPEN_S CLOSE_S . COMMA array_ele

    COMMA  shift, and go to state 468

    $default  reduce using rule 40 (array_ele)


State 460

   41 array_ele: OPEN_S array_ele . CLOSE_S COMMA array_ele
   42          | OPEN_S array_ele . CLOSE_S

    CLOSE_S  shift, and go to state 469


State 461

   36 array_body: OPEN_S array_ele CLOSE_S .

    $default  reduce using rule 36 (array_body)


State 462

   38 array_ele: expr COMMA . array_ele

    IDENTIFIER   shift, and go to state 245
    OPEN_S       shift, and go to state 444
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    array_ele      go to state 470
    p_type         go to state 253
    expr           go to state 447
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 463

  223 argument: IDENTIFIER SEMI_COLUMN expr .

    $default  reduce using rule 223 (argument)


State 464

  238 case_body: CASE expr SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 238 (case_body)


State 465

  171 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 171 (for_loop_header)


State 466

  258 catch_list: CATCH OPEN_S type IDENTIFIER CLOSE_S statement .

    $default  reduce using rule 258 (catch_list)


State 467

  259 catch_list: catch_list CATCH OPEN_S type IDENTIFIER CLOSE_S . statement

    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 115
    CONST       shift, and go to state 170
    VOID        shift, and go to state 71
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 179
    AT_ASM      shift, and go to state 180

    type                        go to state 181
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 182
    block_body_header           go to state 117
    statement                   go to state 471
    asm                         go to state 186
    variable_declaration_block  go to state 187
    return_statement            go to state 188
    loop_statement              go to state 189
    do_while                    go to state 190
    do_header                   go to state 191
    for_loop                    go to state 192
    for_loop_header             go to state 193
    assign_expr                 go to state 194
    long_id                     go to state 195
    message_call2               go to state 196
    message_call                go to state 197
    while_loop                  go to state 198
    while_loop_header           go to state 199
    conditional_statement       go to state 200
    if_header                   go to state 201
    switch_header               go to state 202
    enum                        go to state 203
    try_catch                   go to state 204


State 468

   43 array_ele: OPEN_S CLOSE_S COMMA . array_ele

    IDENTIFIER   shift, and go to state 245
    OPEN_S       shift, and go to state 444
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    array_ele      go to state 472
    p_type         go to state 253
    expr           go to state 447
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 469

   41 array_ele: OPEN_S array_ele CLOSE_S . COMMA array_ele
   42          | OPEN_S array_ele CLOSE_S .

    COMMA  shift, and go to state 473

    $default  reduce using rule 42 (array_ele)


State 470

   38 array_ele: expr COMMA array_ele .

    $default  reduce using rule 38 (array_ele)


State 471

  259 catch_list: catch_list CATCH OPEN_S type IDENTIFIER CLOSE_S statement .

    $default  reduce using rule 259 (catch_list)


State 472

   43 array_ele: OPEN_S CLOSE_S COMMA array_ele .

    $default  reduce using rule 43 (array_ele)


State 473

   41 array_ele: OPEN_S array_ele CLOSE_S COMMA . array_ele

    IDENTIFIER   shift, and go to state 245
    OPEN_S       shift, and go to state 444
    OPEN_P       shift, and go to state 246
    STRING_VAL   shift, and go to state 247
    FLOAT_VAL    shift, and go to state 248
    CHAR_VAL     shift, and go to state 249
    INT_VAL      shift, and go to state 250
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 251
    DOUBLEMINUS  shift, and go to state 252

    array_ele      go to state 474
    p_type         go to state 253
    expr           go to state 447
    assign_expr    go to state 255
    long_id        go to state 256
    simple_expr    go to state 257
    message_call2  go to state 196
    message_call   go to state 197


State 474

   41 array_ele: OPEN_S array_ele CLOSE_S COMMA array_ele .

    $default  reduce using rule 41 (array_ele)
