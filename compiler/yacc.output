Terminals unused in grammar

   ID
   SELF
   expr_1


Grammar

    0 $accept: program $end

    1 program: components

    2 components: components component
    3           | component

    4 component: class_interface
    5          | class_implementation
    6          | protocol
    7          | struct
    8          | enum

    9 class_interface: class_interface_header class_interface_body

   10 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
   11                       | AT_INTERFACE IDENTIFIER
   12                       | error IDENTIFIER
   13                       | AT_INTERFACE error
   14                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN error

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END
   16                     | protocol_reference_list instance_variables AT_END
   17                     | protocol_reference_list interface_declaration_list AT_END
   18                     | instance_variables interface_declaration_list AT_END
   19                     | protocol_reference_list AT_END
   20                     | instance_variables AT_END
   21                     | interface_declaration_list AT_END
   22                     | AT_END
   23                     | protocol_reference_list error AT_END
   24                     | protocol_reference_list error interface_declaration_list AT_END
   25                     | protocol_reference_list error
   26                     | protocol_reference_list instance_variables interface_declaration_list error
   27                     | protocol_reference_list instance_variables error
   28                     | protocol_reference_list interface_declaration_list error
   29                     | instance_variables interface_declaration_list error
   30                     | instance_variables error
   31                     | interface_declaration_list error

   32 protocol_reference_list: LESS_THAN ids_list_identifier MORE_THAN
   33                        | LESS_THAN ids_list_identifier error

   34 ids_list_identifier: ids_list_identifier COMMA IDENTIFIER
   35                    | IDENTIFIER

   36 array_body: OPEN_S array_ele CLOSE_S
   37           | OPEN_S CLOSE_S

   38 array_ele: expr COMMA array_ele
   39          | expr
   40          | OPEN_S CLOSE_S
   41          | OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | OPEN_S array_ele CLOSE_S
   43          | OPEN_S CLOSE_S COMMA array_ele

   44 instance_variables: OPEN_S instance_variable_declarations CLOSE_S
   45                   | OPEN_S CLOSE_S

   46 instance_variable_declarations: instance_variable_declarations instance_variable_declaration
   47                               | instance_variable_declaration
   48                               | variable_declaration_list

   49 instance_variable_declaration: visibility_specification variable_declaration_list

   50 variable_declaration_list: variable_declaration_list variable_declarationxx
   51                          | variable_declarationxx

   52 visibility_specification: AT_PRIVATE
   53                         | AT_PROTECTED
   54                         | AT_PUBLIC

   55 struct_variable_declaration: struct_declaration_list

   56 variable_declarationxx: type ids_list SEMI_COMA
   57                       | CONST type ids_list SEMI_COMA
   58                       | type IDENTIFIER array_tag error

   59 ids_list: ids_list COMMA data_member
   60         | data_member
   61         | error

   62 data_member: IDENTIFIER array_tag
   63            | IDENTIFIER
   64            | error array_tag
   65            | IDENTIFIER error

   66 struct_declaration_list: struct_declaration_list variable_declarationxx
   67                        | variable_declarationxx
   68                        | error variable_declarationxx

   69 struct_header: STRUCT IDENTIFIER

   70 struct: struct_header OPEN_S CLOSE_S entity SEMI_COMA
   71       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | struct_header OPEN_S CLOSE_S SEMI_COMA
   73       | struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   74       | struct_header OPEN_S CLOSE_S entity error SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | struct_header OPEN_S CLOSE_S error SEMI_COMA
   77       | struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA

   78 entity: IDENTIFIER COMMA entity
   79       | IDENTIFIER
   80       | error COMMA

   81 type: simple_type
   82     | complex_type
   83     | struct_type
   84     | enum_type

   85 struct_type: STRUCT IDENTIFIER
   86            | STRUCT IDENTIFIER MULTI

   87 enum_type: ENUM IDENTIFIER
   88          | ENUM IDENTIFIER MULTI

   89 simple_type: INT
   90            | CHAR
   91            | FLOAT
   92            | NSSTRING
   93            | VOID
   94            | BOOL

   95 complex_type: IDENTIFIER MULTI

   96 array_tag: array_first_tag array_tag_list

   97 array_tag_list: array_tag_list OPEN_ARR INT_VAL CLOSE_ARR
   98               | %empty
   99               | array_tag_list OPEN_ARR error CLOSE_ARR

  100 array_first_tag: OPEN_ARR INT_VAL CLOSE_ARR
  101                | OPEN_ARR CLOSE_ARR

  102 initializer: EQUAL array_body
  103            | %empty

  104 main_initializer: EQUAL expr
  105                 | %empty

  106 interface_declaration_list: interface_declaration_list interface_declaration
  107                           | interface_declaration

  108 interface_declaration: class_method_declaration
  109                      | instance_method_declaration

  110 class_method_declaration: PLUS p_type method_selectors SEMI_COMA
  111                         | PLUS method_selectors SEMI_COMA
  112                         | PLUS p_type method_selectors error
  113                         | PLUS method_selectors error

  114 instance_method_declaration: MINUS p_type method_selectors SEMI_COMA
  115                            | MINUS method_selectors SEMI_COMA

  116 p_type: OPEN_P type CLOSE_P

  117 method_selectors: selectors_list
  118                 | IDENTIFIER

  119 selectors_list: selectors_list selector_decleration
  120               | selector_decleration

  121 selector_decleration: IDENTIFIER SEMI_COLUMN parameter_list

  122 parameter_list: parameter_list SEMI_COLUMN parameter
  123               | parameter

  124 parameter: p_type IDENTIFIER

  125 class_implementation: class_implementation_header class_implementation_body

  126 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  127                            | AT_IMPLEMENTATION IDENTIFIER

  128 class_implementation_body: instance_variables implementation_definition_list AT_END
  129                          | instance_variables AT_END
  130                          | implementation_definition_list AT_END
  131                          | AT_END

  132 implementation_definition_list: implementation_definition_list implementation_definition
  133                               | implementation_definition

  134 implementation_definition: class_implementation_definition
  135                          | instance_implementation_definition

  136 class_implementation_definition: class_implementation_definition_header block_body

  137 class_implementation_definition_header: PLUS p_type method_selectors
  138                                       | PLUS method_selectors

  139 instance_implementation_definition: instance_implementation_definition_header block_body

  140 instance_implementation_definition_header: MINUS p_type method_selectors
  141                                          | MINUS method_selectors

  142 block_body: block_body_header block_body_statements

  143 block_body_header: OPEN_S

  144 block_body_statements: statement_list CLOSE_S
  145                      | CLOSE_S

  146 statement_list: statement_list statement
  147               | statement

  148 statement: loop_statement
  149          | conditional_statement
  150          | assign_expr SEMI_COMA
  151          | variable_declaration_block
  152          | block_body
  153          | return_statement
  154          | try_catch
  155          | asm
  156          | message_call SEMI_COMA

  157 asm: AT_ASM IDENTIFIER SEMI_COMA

  158 variable_declaration_block: type variable_list SEMI_COMA
  159                           | CONST type variable_list SEMI_COMA
  160                           | enum

  161 variable_list: variable_list COMMA variable
  162              | variable
  163              | variable_list error variable

  164 variable: IDENTIFIER array_tag initializer
  165         | IDENTIFIER main_initializer
  166         | error array_tag initializer

  167 return_statement: RETURN expr SEMI_COMA

  168 loop_statement: for_loop
  169               | while_loop
  170               | do_while

  171 do_while: do_header statement while_loop_header SEMI_COMA

  172 do_header: DO

  173 for_loop: for_loop_header statement

  174 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  175                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  176                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  178                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  179                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  180                | FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  181                | FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

  182 for_initializer: INT IDENTIFIER EQUAL expr
  183                | IDENTIFIER EQUAL expr
  184                | IDENTIFIER

  185 logic_expr: expr LESS_THAN expr
  186           | expr MORE_THAN expr
  187           | expr LESS_OR_EQUAL expr
  188           | expr MORE_OR_EQUAL expr
  189           | expr EQUAL_EQUAL expr
  190           | NOT_EQUAL expr
  191           | OPEN_P logic_expr CLOSE_P
  192           | logic_expr AND_AND logic_expr
  193           | logic_expr OR_OR logic_expr
  194           | TRUE
  195           | FALSE

  196 expr: assign_expr
  197     | simple_expr

  198 assign_expr: long_id EQUAL simple_expr

  199 long_id: long_id DOT IDENTIFIER
  200        | message_call
  201        | IDENTIFIER

  202 simple_expr: STRING_VAL
  203            | INT_VAL
  204            | FLOAT_VAL
  205            | CHAR_VAL
  206            | long_id
  207            | simple_expr PLUS simple_expr
  208            | simple_expr MINUS simple_expr
  209            | simple_expr MULTI simple_expr
  210            | simple_expr DIV simple_expr
  211            | OPEN_P simple_expr CLOSE_P
  212            | IDENTIFIER DOUBLEPLUS
  213            | IDENTIFIER DOUBLEMINUS
  214            | DOUBLEPLUS IDENTIFIER
  215            | DOUBLEMINUS IDENTIFIER
  216            | p_type simple_expr

  217 message_call2: OPEN_ARR

  218 message_call: message_call2 sender message CLOSE_ARR

  219 sender: message_call
  220       | IDENTIFIER

  221 message: IDENTIFIER
  222        | message_selectors_list

  223 message_selectors_list: message_selectors_list message_selector
  224                       | message_selector

  225 message_selector: IDENTIFIER SEMI_COLUMN argument_list

  226 argument_list: argument_list SEMI_COLUMN argument
  227              | argument

  228 argument: expr

  229 while_loop: while_loop_header statement

  230 while_loop_header: WHILE OPEN_P logic_expr CLOSE_P

  231 conditional_statement: if_header statement
  232                      | if_header statement ELSE statement
  233                      | switch_header switch_body

  234 if_header: IF OPEN_P logic_expr CLOSE_P

  235 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block

  236 switch_body_block: OPEN_S

  237 switch_body: list_of_case default_case CLOSE_S
  238            | list_of_case CLOSE_S
  239            | default_case CLOSE_S
  240            | CLOSE_S

  241 list_of_case: list_of_case case_body
  242             | case_body

  243 case_body: CASE expr SEMI_COLUMN statement BREAK SEMI_COMA
  244          | CASE expr SEMI_COLUMN statement
  245          | CASE expr SEMI_COLUMN BREAK SEMI_COMA

  246 default_case: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  247             | DEFAULT SEMI_COLUMN statement
  248             | DEFAULT SEMI_COLUMN BREAK SEMI_COMA

  249 protocol: protocol_header protocol_body

  250 protocol_header: AT_PROTOCOL IDENTIFIER

  251 protocol_body: protocol_reference_list interface_declaration_list AT_END
  252              | interface_declaration_list AT_END
  253              | protocol_reference_list AT_END
  254              | AT_END

  255 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | ENUM IDENTIFIER SEMI_COMA

  257 list_expr: IDENTIFIER EQUAL expr COMMA list_expr
  258          | IDENTIFIER EQUAL expr
  259          | IDENTIFIER
  260          | IDENTIFIER COMMA list_expr

  261 try_catch: TRY statement catch_list finally_statement
  262          | TRY statement catch_list

  263 catch_list: CATCH OPEN_S type IDENTIFIER CLOSE_S statement
  264           | catch_list CATCH OPEN_S type IDENTIFIER CLOSE_S statement

  265 finally_statement: FINALLY statement


Terminals, with rules where they appear

$end (0) 0
error (256) 12 13 14 23 24 25 26 27 28 29 30 31 33 58 61 64 65 68 74
    75 76 77 80 99 112 113 163 166
AT_INTERFACE (258) 10 11 13 14
IDENTIFIER (259) 10 11 12 14 34 35 58 62 63 65 69 78 79 85 86 87 88
    95 118 121 124 126 127 157 164 165 182 183 184 199 201 212 213
    214 215 220 221 225 235 250 255 256 257 258 259 260 263 264
SEMI_COLUMN (260) 10 14 121 122 126 225 226 243 244 245 246 247 248
NSSTRING (261) 92
FLOAT (262) 91
CHAR (263) 90
BOOL (264) 94
INT (265) 89 182
SEMI_COMA (266) 56 57 70 71 72 73 74 75 76 77 110 111 114 115 150 156
    157 158 159 167 171 174 175 176 177 178 179 180 181 243 245 246
    248 255 256
ID (267)
AT_PUBLIC (268) 54
AT_PROTECTED (269) 53
AT_PRIVATE (270) 52
OPEN_S (271) 36 37 40 41 42 43 44 45 70 71 72 73 74 75 76 77 143 236
    255 263 264
CLOSE_S (272) 36 37 40 41 42 43 44 45 70 71 72 73 74 75 76 77 144 145
    237 238 239 240 255 263 264
COMMA (273) 34 38 41 43 59 78 80 161 257 260
LESS_THAN (274) 32 33 185
MORE_THAN (275) 32 186
AT_END (276) 15 16 17 18 19 20 21 22 23 24 128 129 130 131 251 252
    253 254
CONST (277) 57 159
VOID (278) 93
PLUS (279) 110 111 112 113 137 138 207
MINUS (280) 114 115 140 141 208
OPEN_P (281) 116 174 175 176 177 178 179 180 181 191 211 230 234 235
CLOSE_P (282) 116 174 175 176 177 178 179 180 181 191 211 230 234 235
AT_IMPLEMENTATION (283) 126 127
AND_AND (284) 192
OR_OR (285) 193
STRING_VAL (286) 202
FLOAT_VAL (287) 204
LESS_OR_EQUAL (288) 187
CHAR_VAL (289) 205
INT_VAL (290) 97 100 203
MORE_OR_EQUAL (291) 188
MULTI (292) 86 88 95 209
EQUAL_EQUAL (293) 189
NOT_EQUAL (294) 190
FOR (295) 174 175 176 177 178 179 180 181
EQUAL (296) 102 104 182 183 198 257 258
DIV (297) 210
WHILE (298) 230
IF (299) 234
DO (300) 172
SWITCH (301) 235
CASE (302) 243 244 245
DEFAULT (303) 246 247 248
BREAK (304) 243 245 246 248
ENUM (305) 87 88 255 256
OPEN_ARR (306) 97 99 100 101 217
CLOSE_ARR (307) 97 99 100 101 218
TRUE (308) 194
FALSE (309) 195
RETURN (310) 167
AT_PROTOCOL (311) 250
ELSE (312) 232
STRUCT (313) 69 85 86
DOT (314) 199
DOUBLEPLUS (315) 212 214
DOUBLEMINUS (316) 213 215
TRY (317) 261 262
CATCH (318) 263 264
FINALLY (319) 265
AT_ASM (320) 157
SELF (321)
if_h (322)
expr_1 (323)
p_type_expr_prec (324)
long_id_prec (325)
try_prec (326)


Nonterminals, with rules where they appear

$accept (72)
    on left: 0
program (73)
    on left: 1, on right: 0
components (74)
    on left: 2 3, on right: 1 2
component (75)
    on left: 4 5 6 7 8, on right: 2 3
class_interface (76)
    on left: 9, on right: 4
class_interface_header (77)
    on left: 10 11 12 13 14, on right: 9
class_interface_body (78)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31, on right:
    9
protocol_reference_list (79)
    on left: 32 33, on right: 15 16 17 19 23 24 25 26 27 28 251 253
ids_list_identifier (80)
    on left: 34 35, on right: 32 33 34
array_body (81)
    on left: 36 37, on right: 102
array_ele (82)
    on left: 38 39 40 41 42 43, on right: 36 38 41 42 43
instance_variables (83)
    on left: 44 45, on right: 15 16 18 20 26 27 29 30 128 129
instance_variable_declarations (84)
    on left: 46 47 48, on right: 44 46
instance_variable_declaration (85)
    on left: 49, on right: 46 47
variable_declaration_list (86)
    on left: 50 51, on right: 48 49 50
visibility_specification (87)
    on left: 52 53 54, on right: 49
struct_variable_declaration (88)
    on left: 55, on right: 71 73 75 77
variable_declarationxx (89)
    on left: 56 57 58, on right: 50 51 66 67 68
ids_list (90)
    on left: 59 60 61, on right: 56 57 59
data_member (91)
    on left: 62 63 64 65, on right: 59 60
struct_declaration_list (92)
    on left: 66 67 68, on right: 55 66
struct_header (93)
    on left: 69, on right: 70 71 72 73 74 75 76 77
struct (94)
    on left: 70 71 72 73 74 75 76 77, on right: 7
entity (95)
    on left: 78 79 80, on right: 70 71 74 75 78
type (96)
    on left: 81 82 83 84, on right: 56 57 58 116 158 159 263 264
struct_type (97)
    on left: 85 86, on right: 83
enum_type (98)
    on left: 87 88, on right: 84
simple_type (99)
    on left: 89 90 91 92 93 94, on right: 81
complex_type (100)
    on left: 95, on right: 82
array_tag (101)
    on left: 96, on right: 58 62 64 164 166
array_tag_list (102)
    on left: 97 98 99, on right: 96 97 99
array_first_tag (103)
    on left: 100 101, on right: 96
initializer (104)
    on left: 102 103, on right: 164 166
main_initializer (105)
    on left: 104 105, on right: 165
interface_declaration_list (106)
    on left: 106 107, on right: 15 17 18 21 24 26 28 29 31 106 251
    252
interface_declaration (107)
    on left: 108 109, on right: 106 107
class_method_declaration (108)
    on left: 110 111 112 113, on right: 108
instance_method_declaration (109)
    on left: 114 115, on right: 109
p_type (110)
    on left: 116, on right: 110 112 114 124 137 140 216
method_selectors (111)
    on left: 117 118, on right: 110 111 112 113 114 115 137 138 140
    141
selectors_list (112)
    on left: 119 120, on right: 117 119
selector_decleration (113)
    on left: 121, on right: 119 120
parameter_list (114)
    on left: 122 123, on right: 121 122
parameter (115)
    on left: 124, on right: 122 123
class_implementation (116)
    on left: 125, on right: 5
class_implementation_header (117)
    on left: 126 127, on right: 125
class_implementation_body (118)
    on left: 128 129 130 131, on right: 125
implementation_definition_list (119)
    on left: 132 133, on right: 128 130 132
implementation_definition (120)
    on left: 134 135, on right: 132 133
class_implementation_definition (121)
    on left: 136, on right: 134
class_implementation_definition_header (122)
    on left: 137 138, on right: 136
instance_implementation_definition (123)
    on left: 139, on right: 135
instance_implementation_definition_header (124)
    on left: 140 141, on right: 139
block_body (125)
    on left: 142, on right: 136 139 152
block_body_header (126)
    on left: 143, on right: 142
block_body_statements (127)
    on left: 144 145, on right: 142
statement_list (128)
    on left: 146 147, on right: 144 146
statement (129)
    on left: 148 149 150 151 152 153 154 155 156, on right: 146 147
    171 173 229 231 232 243 244 246 247 261 262 263 264 265
asm (130)
    on left: 157, on right: 155
variable_declaration_block (131)
    on left: 158 159 160, on right: 151
variable_list (132)
    on left: 161 162 163, on right: 158 159 161 163
variable (133)
    on left: 164 165 166, on right: 161 162 163
return_statement (134)
    on left: 167, on right: 153
loop_statement (135)
    on left: 168 169 170, on right: 148
do_while (136)
    on left: 171, on right: 170
do_header (137)
    on left: 172, on right: 171
for_loop (138)
    on left: 173, on right: 168
for_loop_header (139)
    on left: 174 175 176 177 178 179 180 181, on right: 173
for_initializer (140)
    on left: 182 183 184, on right: 174 176 177 178
logic_expr (141)
    on left: 185 186 187 188 189 190 191 192 193 194 195, on right:
    174 175 177 179 191 192 193 230 234
expr (142)
    on left: 196 197, on right: 38 39 104 167 174 175 176 180 182 183
    185 186 187 188 189 190 228 243 244 245 257 258
assign_expr (143)
    on left: 198, on right: 150 196
long_id (144)
    on left: 199 200 201, on right: 198 199 206
simple_expr (145)
    on left: 202 203 204 205 206 207 208 209 210 211 212 213 214 215
    216, on right: 197 198 207 208 209 210 211 216
message_call2 (146)
    on left: 217, on right: 218
message_call (147)
    on left: 218, on right: 156 200 219
sender (148)
    on left: 219 220, on right: 218
message (149)
    on left: 221 222, on right: 218
message_selectors_list (150)
    on left: 223 224, on right: 222 223
message_selector (151)
    on left: 225, on right: 223 224
argument_list (152)
    on left: 226 227, on right: 225 226
argument (153)
    on left: 228, on right: 226 227
while_loop (154)
    on left: 229, on right: 169
while_loop_header (155)
    on left: 230, on right: 171 229
conditional_statement (156)
    on left: 231 232 233, on right: 149
if_header (157)
    on left: 234, on right: 231 232
switch_header (158)
    on left: 235, on right: 233
switch_body_block (159)
    on left: 236, on right: 235
switch_body (160)
    on left: 237 238 239 240, on right: 233
list_of_case (161)
    on left: 241 242, on right: 237 238 241
case_body (162)
    on left: 243 244 245, on right: 241 242
default_case (163)
    on left: 246 247 248, on right: 237 239
protocol (164)
    on left: 249, on right: 6
protocol_header (165)
    on left: 250, on right: 249
protocol_body (166)
    on left: 251 252 253 254, on right: 249
enum (167)
    on left: 255 256, on right: 8 160
list_expr (168)
    on left: 257 258 259 260, on right: 255 257 260
try_catch (169)
    on left: 261 262, on right: 154
catch_list (170)
    on left: 263 264, on right: 261 262 264
finally_statement (171)
    on left: 265, on right: 261


State 0

    0 $accept: . program $end

    error              shift, and go to state 1
    AT_INTERFACE       shift, and go to state 2
    AT_IMPLEMENTATION  shift, and go to state 3
    ENUM               shift, and go to state 4
    AT_PROTOCOL        shift, and go to state 5
    STRUCT             shift, and go to state 6

    program                      go to state 7
    components                   go to state 8
    component                    go to state 9
    class_interface              go to state 10
    class_interface_header       go to state 11
    struct_header                go to state 12
    struct                       go to state 13
    class_implementation         go to state 14
    class_implementation_header  go to state 15
    protocol                     go to state 16
    protocol_header              go to state 17
    enum                         go to state 18


State 1

   12 class_interface_header: error . IDENTIFIER

    IDENTIFIER  shift, and go to state 19


State 2

   10 class_interface_header: AT_INTERFACE . IDENTIFIER SEMI_COLUMN IDENTIFIER
   11                       | AT_INTERFACE . IDENTIFIER
   13                       | AT_INTERFACE . error
   14                       | AT_INTERFACE . IDENTIFIER SEMI_COLUMN error

    error       shift, and go to state 20
    IDENTIFIER  shift, and go to state 21


State 3

  126 class_implementation_header: AT_IMPLEMENTATION . IDENTIFIER SEMI_COLUMN IDENTIFIER
  127                            | AT_IMPLEMENTATION . IDENTIFIER

    IDENTIFIER  shift, and go to state 22


State 4

  255 enum: ENUM . IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | ENUM . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 23


State 5

  250 protocol_header: AT_PROTOCOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 24


State 6

   69 struct_header: STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 25


State 7

    0 $accept: program . $end

    $end  shift, and go to state 26


State 8

    1 program: components .
    2 components: components . component

    error              shift, and go to state 1
    AT_INTERFACE       shift, and go to state 2
    AT_IMPLEMENTATION  shift, and go to state 3
    ENUM               shift, and go to state 4
    AT_PROTOCOL        shift, and go to state 5
    STRUCT             shift, and go to state 6

    $end  reduce using rule 1 (program)

    component                    go to state 27
    class_interface              go to state 10
    class_interface_header       go to state 11
    struct_header                go to state 12
    struct                       go to state 13
    class_implementation         go to state 14
    class_implementation_header  go to state 15
    protocol                     go to state 16
    protocol_header              go to state 17
    enum                         go to state 18


State 9

    3 components: component .

    $default  reduce using rule 3 (components)


State 10

    4 component: class_interface .

    $default  reduce using rule 4 (component)


State 11

    9 class_interface: class_interface_header . class_interface_body

    OPEN_S     shift, and go to state 28
    LESS_THAN  shift, and go to state 29
    AT_END     shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32

    class_interface_body         go to state 33
    protocol_reference_list      go to state 34
    instance_variables           go to state 35
    interface_declaration_list   go to state 36
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 12

   70 struct: struct_header . OPEN_S CLOSE_S entity SEMI_COMA
   71       | struct_header . OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | struct_header . OPEN_S CLOSE_S SEMI_COMA
   73       | struct_header . OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   74       | struct_header . OPEN_S CLOSE_S entity error SEMI_COMA
   75       | struct_header . OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | struct_header . OPEN_S CLOSE_S error SEMI_COMA
   77       | struct_header . OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA

    OPEN_S  shift, and go to state 40


State 13

    7 component: struct .

    $default  reduce using rule 7 (component)


State 14

    5 component: class_implementation .

    $default  reduce using rule 5 (component)


State 15

  125 class_implementation: class_implementation_header . class_implementation_body

    OPEN_S  shift, and go to state 28
    AT_END  shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    instance_variables                         go to state 44
    class_implementation_body                  go to state 45
    implementation_definition_list             go to state 46
    implementation_definition                  go to state 47
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 16

    6 component: protocol .

    $default  reduce using rule 6 (component)


State 17

  249 protocol: protocol_header . protocol_body

    LESS_THAN  shift, and go to state 29
    AT_END     shift, and go to state 52
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32

    protocol_reference_list      go to state 53
    interface_declaration_list   go to state 54
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39
    protocol_body                go to state 55


State 18

    8 component: enum .

    $default  reduce using rule 8 (component)


State 19

   12 class_interface_header: error IDENTIFIER .

    $default  reduce using rule 12 (class_interface_header)


State 20

   13 class_interface_header: AT_INTERFACE error .

    $default  reduce using rule 13 (class_interface_header)


State 21

   10 class_interface_header: AT_INTERFACE IDENTIFIER . SEMI_COLUMN IDENTIFIER
   11                       | AT_INTERFACE IDENTIFIER .
   14                       | AT_INTERFACE IDENTIFIER . SEMI_COLUMN error

    SEMI_COLUMN  shift, and go to state 56

    $default  reduce using rule 11 (class_interface_header)


State 22

  126 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER . SEMI_COLUMN IDENTIFIER
  127                            | AT_IMPLEMENTATION IDENTIFIER .

    SEMI_COLUMN  shift, and go to state 57

    $default  reduce using rule 127 (class_implementation_header)


State 23

  255 enum: ENUM IDENTIFIER . OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | ENUM IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 58
    OPEN_S     shift, and go to state 59


State 24

  250 protocol_header: AT_PROTOCOL IDENTIFIER .

    $default  reduce using rule 250 (protocol_header)


State 25

   69 struct_header: STRUCT IDENTIFIER .

    $default  reduce using rule 69 (struct_header)


State 26

    0 $accept: program $end .

    $default  accept


State 27

    2 components: components component .

    $default  reduce using rule 2 (components)


State 28

   44 instance_variables: OPEN_S . instance_variable_declarations CLOSE_S
   45                   | OPEN_S . CLOSE_S

    IDENTIFIER    shift, and go to state 60
    NSSTRING      shift, and go to state 61
    FLOAT         shift, and go to state 62
    CHAR          shift, and go to state 63
    BOOL          shift, and go to state 64
    INT           shift, and go to state 65
    AT_PUBLIC     shift, and go to state 66
    AT_PROTECTED  shift, and go to state 67
    AT_PRIVATE    shift, and go to state 68
    CLOSE_S       shift, and go to state 69
    CONST         shift, and go to state 70
    VOID          shift, and go to state 71
    ENUM          shift, and go to state 72
    STRUCT        shift, and go to state 73

    instance_variable_declarations  go to state 74
    instance_variable_declaration   go to state 75
    variable_declaration_list       go to state 76
    visibility_specification        go to state 77
    variable_declarationxx          go to state 78
    type                            go to state 79
    struct_type                     go to state 80
    enum_type                       go to state 81
    simple_type                     go to state 82
    complex_type                    go to state 83


State 29

   32 protocol_reference_list: LESS_THAN . ids_list_identifier MORE_THAN
   33                        | LESS_THAN . ids_list_identifier error

    IDENTIFIER  shift, and go to state 84

    ids_list_identifier  go to state 85


State 30

   22 class_interface_body: AT_END .

    $default  reduce using rule 22 (class_interface_body)


State 31

  110 class_method_declaration: PLUS . p_type method_selectors SEMI_COMA
  111                         | PLUS . method_selectors SEMI_COMA
  112                         | PLUS . p_type method_selectors error
  113                         | PLUS . method_selectors error

    IDENTIFIER  shift, and go to state 86
    OPEN_P      shift, and go to state 87

    p_type                go to state 88
    method_selectors      go to state 89
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 32

  114 instance_method_declaration: MINUS . p_type method_selectors SEMI_COMA
  115                            | MINUS . method_selectors SEMI_COMA

    IDENTIFIER  shift, and go to state 86
    OPEN_P      shift, and go to state 87

    p_type                go to state 92
    method_selectors      go to state 93
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 33

    9 class_interface: class_interface_header class_interface_body .

    $default  reduce using rule 9 (class_interface)


State 34

   15 class_interface_body: protocol_reference_list . instance_variables interface_declaration_list AT_END
   16                     | protocol_reference_list . instance_variables AT_END
   17                     | protocol_reference_list . interface_declaration_list AT_END
   19                     | protocol_reference_list . AT_END
   23                     | protocol_reference_list . error AT_END
   24                     | protocol_reference_list . error interface_declaration_list AT_END
   25                     | protocol_reference_list . error
   26                     | protocol_reference_list . instance_variables interface_declaration_list error
   27                     | protocol_reference_list . instance_variables error
   28                     | protocol_reference_list . interface_declaration_list error

    error   shift, and go to state 94
    OPEN_S  shift, and go to state 28
    AT_END  shift, and go to state 95
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    instance_variables           go to state 96
    interface_declaration_list   go to state 97
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 35

   18 class_interface_body: instance_variables . interface_declaration_list AT_END
   20                     | instance_variables . AT_END
   29                     | instance_variables . interface_declaration_list error
   30                     | instance_variables . error

    error   shift, and go to state 98
    AT_END  shift, and go to state 99
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 100
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 36

   21 class_interface_body: interface_declaration_list . AT_END
   31                     | interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration

    error   shift, and go to state 101
    AT_END  shift, and go to state 102
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 37

  107 interface_declaration_list: interface_declaration .

    $default  reduce using rule 107 (interface_declaration_list)


State 38

  108 interface_declaration: class_method_declaration .

    $default  reduce using rule 108 (interface_declaration)


State 39

  109 interface_declaration: instance_method_declaration .

    $default  reduce using rule 109 (interface_declaration)


State 40

   70 struct: struct_header OPEN_S . CLOSE_S entity SEMI_COMA
   71       | struct_header OPEN_S . struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | struct_header OPEN_S . CLOSE_S SEMI_COMA
   73       | struct_header OPEN_S . struct_variable_declaration CLOSE_S SEMI_COMA
   74       | struct_header OPEN_S . CLOSE_S entity error SEMI_COMA
   75       | struct_header OPEN_S . struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | struct_header OPEN_S . CLOSE_S error SEMI_COMA
   77       | struct_header OPEN_S . struct_variable_declaration CLOSE_S error SEMI_COMA

    error       shift, and go to state 104
    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CLOSE_S     shift, and go to state 105
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    struct_variable_declaration  go to state 106
    variable_declarationxx       go to state 107
    struct_declaration_list      go to state 108
    type                         go to state 79
    struct_type                  go to state 80
    enum_type                    go to state 81
    simple_type                  go to state 82
    complex_type                 go to state 83


State 41

  131 class_implementation_body: AT_END .

    $default  reduce using rule 131 (class_implementation_body)


State 42

  137 class_implementation_definition_header: PLUS . p_type method_selectors
  138                                       | PLUS . method_selectors

    IDENTIFIER  shift, and go to state 86
    OPEN_P      shift, and go to state 87

    p_type                go to state 109
    method_selectors      go to state 110
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 43

  140 instance_implementation_definition_header: MINUS . p_type method_selectors
  141                                          | MINUS . method_selectors

    IDENTIFIER  shift, and go to state 86
    OPEN_P      shift, and go to state 87

    p_type                go to state 111
    method_selectors      go to state 112
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 44

  128 class_implementation_body: instance_variables . implementation_definition_list AT_END
  129                          | instance_variables . AT_END

    AT_END  shift, and go to state 113
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition_list             go to state 114
    implementation_definition                  go to state 47
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 45

  125 class_implementation: class_implementation_header class_implementation_body .

    $default  reduce using rule 125 (class_implementation)


State 46

  130 class_implementation_body: implementation_definition_list . AT_END
  132 implementation_definition_list: implementation_definition_list . implementation_definition

    AT_END  shift, and go to state 115
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition                  go to state 116
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 47

  133 implementation_definition_list: implementation_definition .

    $default  reduce using rule 133 (implementation_definition_list)


State 48

  134 implementation_definition: class_implementation_definition .

    $default  reduce using rule 134 (implementation_definition)


State 49

  136 class_implementation_definition: class_implementation_definition_header . block_body

    OPEN_S  shift, and go to state 117

    block_body         go to state 118
    block_body_header  go to state 119


State 50

  135 implementation_definition: instance_implementation_definition .

    $default  reduce using rule 135 (implementation_definition)


State 51

  139 instance_implementation_definition: instance_implementation_definition_header . block_body

    OPEN_S  shift, and go to state 117

    block_body         go to state 120
    block_body_header  go to state 119


State 52

  254 protocol_body: AT_END .

    $default  reduce using rule 254 (protocol_body)


State 53

  251 protocol_body: protocol_reference_list . interface_declaration_list AT_END
  253              | protocol_reference_list . AT_END

    AT_END  shift, and go to state 121
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 122
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 54

  106 interface_declaration_list: interface_declaration_list . interface_declaration
  252 protocol_body: interface_declaration_list . AT_END

    AT_END  shift, and go to state 123
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 55

  249 protocol: protocol_header protocol_body .

    $default  reduce using rule 249 (protocol)


State 56

   10 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN . IDENTIFIER
   14                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN . error

    error       shift, and go to state 124
    IDENTIFIER  shift, and go to state 125


State 57

  126 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN . IDENTIFIER

    IDENTIFIER  shift, and go to state 126


State 58

  256 enum: ENUM IDENTIFIER SEMI_COMA .

    $default  reduce using rule 256 (enum)


State 59

  255 enum: ENUM IDENTIFIER OPEN_S . list_expr CLOSE_S SEMI_COMA

    IDENTIFIER  shift, and go to state 127

    list_expr  go to state 128


State 60

   95 complex_type: IDENTIFIER . MULTI

    MULTI  shift, and go to state 129


State 61

   92 simple_type: NSSTRING .

    $default  reduce using rule 92 (simple_type)


State 62

   91 simple_type: FLOAT .

    $default  reduce using rule 91 (simple_type)


State 63

   90 simple_type: CHAR .

    $default  reduce using rule 90 (simple_type)


State 64

   94 simple_type: BOOL .

    $default  reduce using rule 94 (simple_type)


State 65

   89 simple_type: INT .

    $default  reduce using rule 89 (simple_type)


State 66

   54 visibility_specification: AT_PUBLIC .

    $default  reduce using rule 54 (visibility_specification)


State 67

   53 visibility_specification: AT_PROTECTED .

    $default  reduce using rule 53 (visibility_specification)


State 68

   52 visibility_specification: AT_PRIVATE .

    $default  reduce using rule 52 (visibility_specification)


State 69

   45 instance_variables: OPEN_S CLOSE_S .

    $default  reduce using rule 45 (instance_variables)


State 70

   57 variable_declarationxx: CONST . type ids_list SEMI_COMA

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    type          go to state 130
    struct_type   go to state 80
    enum_type     go to state 81
    simple_type   go to state 82
    complex_type  go to state 83


State 71

   93 simple_type: VOID .

    $default  reduce using rule 93 (simple_type)


State 72

   87 enum_type: ENUM . IDENTIFIER
   88          | ENUM . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 131


State 73

   85 struct_type: STRUCT . IDENTIFIER
   86            | STRUCT . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 132


State 74

   44 instance_variables: OPEN_S instance_variable_declarations . CLOSE_S
   46 instance_variable_declarations: instance_variable_declarations . instance_variable_declaration

    AT_PUBLIC     shift, and go to state 66
    AT_PROTECTED  shift, and go to state 67
    AT_PRIVATE    shift, and go to state 68
    CLOSE_S       shift, and go to state 133

    instance_variable_declaration  go to state 134
    visibility_specification       go to state 77


State 75

   47 instance_variable_declarations: instance_variable_declaration .

    $default  reduce using rule 47 (instance_variable_declarations)


State 76

   48 instance_variable_declarations: variable_declaration_list .
   50 variable_declaration_list: variable_declaration_list . variable_declarationxx

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    $default  reduce using rule 48 (instance_variable_declarations)

    variable_declarationxx  go to state 135
    type                    go to state 79
    struct_type             go to state 80
    enum_type               go to state 81
    simple_type             go to state 82
    complex_type            go to state 83


State 77

   49 instance_variable_declaration: visibility_specification . variable_declaration_list

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    variable_declaration_list  go to state 136
    variable_declarationxx     go to state 78
    type                       go to state 79
    struct_type                go to state 80
    enum_type                  go to state 81
    simple_type                go to state 82
    complex_type               go to state 83


State 78

   51 variable_declaration_list: variable_declarationxx .

    $default  reduce using rule 51 (variable_declaration_list)


State 79

   56 variable_declarationxx: type . ids_list SEMI_COMA
   58                       | type . IDENTIFIER array_tag error

    error       shift, and go to state 137
    IDENTIFIER  shift, and go to state 138

    ids_list     go to state 139
    data_member  go to state 140


State 80

   83 type: struct_type .

    $default  reduce using rule 83 (type)


State 81

   84 type: enum_type .

    $default  reduce using rule 84 (type)


State 82

   81 type: simple_type .

    $default  reduce using rule 81 (type)


State 83

   82 type: complex_type .

    $default  reduce using rule 82 (type)


State 84

   35 ids_list_identifier: IDENTIFIER .

    $default  reduce using rule 35 (ids_list_identifier)


State 85

   32 protocol_reference_list: LESS_THAN ids_list_identifier . MORE_THAN
   33                        | LESS_THAN ids_list_identifier . error
   34 ids_list_identifier: ids_list_identifier . COMMA IDENTIFIER

    error      shift, and go to state 141
    COMMA      shift, and go to state 142
    MORE_THAN  shift, and go to state 143


State 86

  118 method_selectors: IDENTIFIER .
  121 selector_decleration: IDENTIFIER . SEMI_COLUMN parameter_list

    SEMI_COLUMN  shift, and go to state 144

    $default  reduce using rule 118 (method_selectors)


State 87

  116 p_type: OPEN_P . type CLOSE_P

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    type          go to state 145
    struct_type   go to state 80
    enum_type     go to state 81
    simple_type   go to state 82
    complex_type  go to state 83


State 88

  110 class_method_declaration: PLUS p_type . method_selectors SEMI_COMA
  112                         | PLUS p_type . method_selectors error

    IDENTIFIER  shift, and go to state 86

    method_selectors      go to state 146
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 89

  111 class_method_declaration: PLUS method_selectors . SEMI_COMA
  113                         | PLUS method_selectors . error

    error      shift, and go to state 147
    SEMI_COMA  shift, and go to state 148


State 90

  117 method_selectors: selectors_list .
  119 selectors_list: selectors_list . selector_decleration

    IDENTIFIER  shift, and go to state 149

    $default  reduce using rule 117 (method_selectors)

    selector_decleration  go to state 150


State 91

  120 selectors_list: selector_decleration .

    $default  reduce using rule 120 (selectors_list)


State 92

  114 instance_method_declaration: MINUS p_type . method_selectors SEMI_COMA

    IDENTIFIER  shift, and go to state 86

    method_selectors      go to state 151
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 93

  115 instance_method_declaration: MINUS method_selectors . SEMI_COMA

    SEMI_COMA  shift, and go to state 152


State 94

   23 class_interface_body: protocol_reference_list error . AT_END
   24                     | protocol_reference_list error . interface_declaration_list AT_END
   25                     | protocol_reference_list error .

    AT_END  shift, and go to state 153
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    $default  reduce using rule 25 (class_interface_body)

    interface_declaration_list   go to state 154
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 95

   19 class_interface_body: protocol_reference_list AT_END .

    $default  reduce using rule 19 (class_interface_body)


State 96

   15 class_interface_body: protocol_reference_list instance_variables . interface_declaration_list AT_END
   16                     | protocol_reference_list instance_variables . AT_END
   26                     | protocol_reference_list instance_variables . interface_declaration_list error
   27                     | protocol_reference_list instance_variables . error

    error   shift, and go to state 155
    AT_END  shift, and go to state 156
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 157
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 97

   17 class_interface_body: protocol_reference_list interface_declaration_list . AT_END
   28                     | protocol_reference_list interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration

    error   shift, and go to state 158
    AT_END  shift, and go to state 159
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 98

   30 class_interface_body: instance_variables error .

    $default  reduce using rule 30 (class_interface_body)


State 99

   20 class_interface_body: instance_variables AT_END .

    $default  reduce using rule 20 (class_interface_body)


State 100

   18 class_interface_body: instance_variables interface_declaration_list . AT_END
   29                     | instance_variables interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration

    error   shift, and go to state 160
    AT_END  shift, and go to state 161
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 101

   31 class_interface_body: interface_declaration_list error .

    $default  reduce using rule 31 (class_interface_body)


State 102

   21 class_interface_body: interface_declaration_list AT_END .

    $default  reduce using rule 21 (class_interface_body)


State 103

  106 interface_declaration_list: interface_declaration_list interface_declaration .

    $default  reduce using rule 106 (interface_declaration_list)


State 104

   68 struct_declaration_list: error . variable_declarationxx

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    variable_declarationxx  go to state 162
    type                    go to state 79
    struct_type             go to state 80
    enum_type               go to state 81
    simple_type             go to state 82
    complex_type            go to state 83


State 105

   70 struct: struct_header OPEN_S CLOSE_S . entity SEMI_COMA
   72       | struct_header OPEN_S CLOSE_S . SEMI_COMA
   74       | struct_header OPEN_S CLOSE_S . entity error SEMI_COMA
   76       | struct_header OPEN_S CLOSE_S . error SEMI_COMA

    error       shift, and go to state 163
    IDENTIFIER  shift, and go to state 164
    SEMI_COMA   shift, and go to state 165

    entity  go to state 166


State 106

   71 struct: struct_header OPEN_S struct_variable_declaration . CLOSE_S entity SEMI_COMA
   73       | struct_header OPEN_S struct_variable_declaration . CLOSE_S SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration . CLOSE_S entity error SEMI_COMA
   77       | struct_header OPEN_S struct_variable_declaration . CLOSE_S error SEMI_COMA

    CLOSE_S  shift, and go to state 167


State 107

   67 struct_declaration_list: variable_declarationxx .

    $default  reduce using rule 67 (struct_declaration_list)


State 108

   55 struct_variable_declaration: struct_declaration_list .
   66 struct_declaration_list: struct_declaration_list . variable_declarationxx

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    $default  reduce using rule 55 (struct_variable_declaration)

    variable_declarationxx  go to state 168
    type                    go to state 79
    struct_type             go to state 80
    enum_type               go to state 81
    simple_type             go to state 82
    complex_type            go to state 83


State 109

  137 class_implementation_definition_header: PLUS p_type . method_selectors

    IDENTIFIER  shift, and go to state 86

    method_selectors      go to state 169
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 110

  138 class_implementation_definition_header: PLUS method_selectors .

    $default  reduce using rule 138 (class_implementation_definition_header)


State 111

  140 instance_implementation_definition_header: MINUS p_type . method_selectors

    IDENTIFIER  shift, and go to state 86

    method_selectors      go to state 170
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 112

  141 instance_implementation_definition_header: MINUS method_selectors .

    $default  reduce using rule 141 (instance_implementation_definition_header)


State 113

  129 class_implementation_body: instance_variables AT_END .

    $default  reduce using rule 129 (class_implementation_body)


State 114

  128 class_implementation_body: instance_variables implementation_definition_list . AT_END
  132 implementation_definition_list: implementation_definition_list . implementation_definition

    AT_END  shift, and go to state 171
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition                  go to state 116
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 115

  130 class_implementation_body: implementation_definition_list AT_END .

    $default  reduce using rule 130 (class_implementation_body)


State 116

  132 implementation_definition_list: implementation_definition_list implementation_definition .

    $default  reduce using rule 132 (implementation_definition_list)


State 117

  143 block_body_header: OPEN_S .

    $default  reduce using rule 143 (block_body_header)


State 118

  136 class_implementation_definition: class_implementation_definition_header block_body .

    $default  reduce using rule 136 (class_implementation_definition)


State 119

  142 block_body: block_body_header . block_body_statements

    IDENTIFIER  shift, and go to state 172
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CLOSE_S     shift, and go to state 173
    CONST       shift, and go to state 174
    VOID        shift, and go to state 71
    FOR         shift, and go to state 175
    WHILE       shift, and go to state 176
    IF          shift, and go to state 177
    DO          shift, and go to state 178
    SWITCH      shift, and go to state 179
    ENUM        shift, and go to state 180
    OPEN_ARR    shift, and go to state 181
    RETURN      shift, and go to state 182
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 183
    AT_ASM      shift, and go to state 184

    type                        go to state 185
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 186
    block_body_header           go to state 119
    block_body_statements       go to state 187
    statement_list              go to state 188
    statement                   go to state 189
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 120

  139 instance_implementation_definition: instance_implementation_definition_header block_body .

    $default  reduce using rule 139 (instance_implementation_definition)


State 121

  253 protocol_body: protocol_reference_list AT_END .

    $default  reduce using rule 253 (protocol_body)


State 122

  106 interface_declaration_list: interface_declaration_list . interface_declaration
  251 protocol_body: protocol_reference_list interface_declaration_list . AT_END

    AT_END  shift, and go to state 209
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 123

  252 protocol_body: interface_declaration_list AT_END .

    $default  reduce using rule 252 (protocol_body)


State 124

   14 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN error .

    $default  reduce using rule 14 (class_interface_header)


State 125

   10 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 10 (class_interface_header)


State 126

  126 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 126 (class_implementation_header)


State 127

  257 list_expr: IDENTIFIER . EQUAL expr COMMA list_expr
  258          | IDENTIFIER . EQUAL expr
  259          | IDENTIFIER .
  260          | IDENTIFIER . COMMA list_expr

    COMMA  shift, and go to state 210
    EQUAL  shift, and go to state 211

    $default  reduce using rule 259 (list_expr)


State 128

  255 enum: ENUM IDENTIFIER OPEN_S list_expr . CLOSE_S SEMI_COMA

    CLOSE_S  shift, and go to state 212


State 129

   95 complex_type: IDENTIFIER MULTI .

    $default  reduce using rule 95 (complex_type)


State 130

   57 variable_declarationxx: CONST type . ids_list SEMI_COMA

    error       shift, and go to state 137
    IDENTIFIER  shift, and go to state 213

    ids_list     go to state 214
    data_member  go to state 140


State 131

   87 enum_type: ENUM IDENTIFIER .
   88          | ENUM IDENTIFIER . MULTI

    MULTI  shift, and go to state 215

    $default  reduce using rule 87 (enum_type)


State 132

   85 struct_type: STRUCT IDENTIFIER .
   86            | STRUCT IDENTIFIER . MULTI

    MULTI  shift, and go to state 216

    $default  reduce using rule 85 (struct_type)


State 133

   44 instance_variables: OPEN_S instance_variable_declarations CLOSE_S .

    $default  reduce using rule 44 (instance_variables)


State 134

   46 instance_variable_declarations: instance_variable_declarations instance_variable_declaration .

    $default  reduce using rule 46 (instance_variable_declarations)


State 135

   50 variable_declaration_list: variable_declaration_list variable_declarationxx .

    $default  reduce using rule 50 (variable_declaration_list)


State 136

   49 instance_variable_declaration: visibility_specification variable_declaration_list .
   50 variable_declaration_list: variable_declaration_list . variable_declarationxx

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    $default  reduce using rule 49 (instance_variable_declaration)

    variable_declarationxx  go to state 135
    type                    go to state 79
    struct_type             go to state 80
    enum_type               go to state 81
    simple_type             go to state 82
    complex_type            go to state 83


State 137

   61 ids_list: error .
   64 data_member: error . array_tag

    OPEN_ARR  shift, and go to state 217

    $default  reduce using rule 61 (ids_list)

    array_tag        go to state 218
    array_first_tag  go to state 219


State 138

   58 variable_declarationxx: type IDENTIFIER . array_tag error
   62 data_member: IDENTIFIER . array_tag
   63            | IDENTIFIER .
   65            | IDENTIFIER . error

    error     shift, and go to state 220
    OPEN_ARR  shift, and go to state 217

    SEMI_COMA  reduce using rule 63 (data_member)
    COMMA      reduce using rule 63 (data_member)

    array_tag        go to state 221
    array_first_tag  go to state 219


State 139

   56 variable_declarationxx: type ids_list . SEMI_COMA
   59 ids_list: ids_list . COMMA data_member

    SEMI_COMA  shift, and go to state 222
    COMMA      shift, and go to state 223


State 140

   60 ids_list: data_member .

    $default  reduce using rule 60 (ids_list)


State 141

   33 protocol_reference_list: LESS_THAN ids_list_identifier error .

    $default  reduce using rule 33 (protocol_reference_list)


State 142

   34 ids_list_identifier: ids_list_identifier COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 224


State 143

   32 protocol_reference_list: LESS_THAN ids_list_identifier MORE_THAN .

    $default  reduce using rule 32 (protocol_reference_list)


State 144

  121 selector_decleration: IDENTIFIER SEMI_COLUMN . parameter_list

    OPEN_P  shift, and go to state 87

    p_type          go to state 225
    parameter_list  go to state 226
    parameter       go to state 227


State 145

  116 p_type: OPEN_P type . CLOSE_P

    CLOSE_P  shift, and go to state 228


State 146

  110 class_method_declaration: PLUS p_type method_selectors . SEMI_COMA
  112                         | PLUS p_type method_selectors . error

    error      shift, and go to state 229
    SEMI_COMA  shift, and go to state 230


State 147

  113 class_method_declaration: PLUS method_selectors error .

    $default  reduce using rule 113 (class_method_declaration)


State 148

  111 class_method_declaration: PLUS method_selectors SEMI_COMA .

    $default  reduce using rule 111 (class_method_declaration)


State 149

  121 selector_decleration: IDENTIFIER . SEMI_COLUMN parameter_list

    SEMI_COLUMN  shift, and go to state 144


State 150

  119 selectors_list: selectors_list selector_decleration .

    $default  reduce using rule 119 (selectors_list)


State 151

  114 instance_method_declaration: MINUS p_type method_selectors . SEMI_COMA

    SEMI_COMA  shift, and go to state 231


State 152

  115 instance_method_declaration: MINUS method_selectors SEMI_COMA .

    $default  reduce using rule 115 (instance_method_declaration)


State 153

   23 class_interface_body: protocol_reference_list error AT_END .

    $default  reduce using rule 23 (class_interface_body)


State 154

   24 class_interface_body: protocol_reference_list error interface_declaration_list . AT_END
  106 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 232
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 155

   27 class_interface_body: protocol_reference_list instance_variables error .

    $default  reduce using rule 27 (class_interface_body)


State 156

   16 class_interface_body: protocol_reference_list instance_variables AT_END .

    $default  reduce using rule 16 (class_interface_body)


State 157

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list . AT_END
   26                     | protocol_reference_list instance_variables interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration

    error   shift, and go to state 233
    AT_END  shift, and go to state 234
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 158

   28 class_interface_body: protocol_reference_list interface_declaration_list error .

    $default  reduce using rule 28 (class_interface_body)


State 159

   17 class_interface_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 17 (class_interface_body)


State 160

   29 class_interface_body: instance_variables interface_declaration_list error .

    $default  reduce using rule 29 (class_interface_body)


State 161

   18 class_interface_body: instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 18 (class_interface_body)


State 162

   68 struct_declaration_list: error variable_declarationxx .

    $default  reduce using rule 68 (struct_declaration_list)


State 163

   76 struct: struct_header OPEN_S CLOSE_S error . SEMI_COMA
   80 entity: error . COMMA

    SEMI_COMA  shift, and go to state 235
    COMMA      shift, and go to state 236


State 164

   78 entity: IDENTIFIER . COMMA entity
   79       | IDENTIFIER .

    COMMA  shift, and go to state 237

    $default  reduce using rule 79 (entity)


State 165

   72 struct: struct_header OPEN_S CLOSE_S SEMI_COMA .

    $default  reduce using rule 72 (struct)


State 166

   70 struct: struct_header OPEN_S CLOSE_S entity . SEMI_COMA
   74       | struct_header OPEN_S CLOSE_S entity . error SEMI_COMA

    error      shift, and go to state 238
    SEMI_COMA  shift, and go to state 239


State 167

   71 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S . entity SEMI_COMA
   73       | struct_header OPEN_S struct_variable_declaration CLOSE_S . SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration CLOSE_S . entity error SEMI_COMA
   77       | struct_header OPEN_S struct_variable_declaration CLOSE_S . error SEMI_COMA

    error       shift, and go to state 240
    IDENTIFIER  shift, and go to state 164
    SEMI_COMA   shift, and go to state 241

    entity  go to state 242


State 168

   66 struct_declaration_list: struct_declaration_list variable_declarationxx .

    $default  reduce using rule 66 (struct_declaration_list)


State 169

  137 class_implementation_definition_header: PLUS p_type method_selectors .

    $default  reduce using rule 137 (class_implementation_definition_header)


State 170

  140 instance_implementation_definition_header: MINUS p_type method_selectors .

    $default  reduce using rule 140 (instance_implementation_definition_header)


State 171

  128 class_implementation_body: instance_variables implementation_definition_list AT_END .

    $default  reduce using rule 128 (class_implementation_body)


State 172

   95 complex_type: IDENTIFIER . MULTI
  201 long_id: IDENTIFIER .

    MULTI  shift, and go to state 129

    $default  reduce using rule 201 (long_id)


State 173

  145 block_body_statements: CLOSE_S .

    $default  reduce using rule 145 (block_body_statements)


State 174

  159 variable_declaration_block: CONST . type variable_list SEMI_COMA

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    type          go to state 243
    struct_type   go to state 80
    enum_type     go to state 81
    simple_type   go to state 82
    complex_type  go to state 83


State 175

  174 for_loop_header: FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  175                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  176                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  178                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  179                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  180                | FOR . OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  181                | FOR . OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

    OPEN_P  shift, and go to state 244


State 176

  230 while_loop_header: WHILE . OPEN_P logic_expr CLOSE_P

    OPEN_P  shift, and go to state 245


State 177

  234 if_header: IF . OPEN_P logic_expr CLOSE_P

    OPEN_P  shift, and go to state 246


State 178

  172 do_header: DO .

    $default  reduce using rule 172 (do_header)


State 179

  235 switch_header: SWITCH . OPEN_P IDENTIFIER CLOSE_P switch_body_block

    OPEN_P  shift, and go to state 247


State 180

   87 enum_type: ENUM . IDENTIFIER
   88          | ENUM . IDENTIFIER MULTI
  255 enum: ENUM . IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | ENUM . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 248


State 181

  217 message_call2: OPEN_ARR .

    $default  reduce using rule 217 (message_call2)


State 182

  167 return_statement: RETURN . expr SEMI_COMA

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    expr           go to state 258
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 183

  261 try_catch: TRY . statement catch_list finally_statement
  262          | TRY . statement catch_list

    IDENTIFIER  shift, and go to state 172
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 174
    VOID        shift, and go to state 71
    FOR         shift, and go to state 175
    WHILE       shift, and go to state 176
    IF          shift, and go to state 177
    DO          shift, and go to state 178
    SWITCH      shift, and go to state 179
    ENUM        shift, and go to state 180
    OPEN_ARR    shift, and go to state 181
    RETURN      shift, and go to state 182
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 183
    AT_ASM      shift, and go to state 184

    type                        go to state 185
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 186
    block_body_header           go to state 119
    statement                   go to state 263
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 184

  157 asm: AT_ASM . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 264


State 185

  158 variable_declaration_block: type . variable_list SEMI_COMA

    error       shift, and go to state 265
    IDENTIFIER  shift, and go to state 266

    variable_list  go to state 267
    variable       go to state 268


State 186

  152 statement: block_body .

    $default  reduce using rule 152 (statement)


State 187

  142 block_body: block_body_header block_body_statements .

    $default  reduce using rule 142 (block_body)


State 188

  144 block_body_statements: statement_list . CLOSE_S
  146 statement_list: statement_list . statement

    IDENTIFIER  shift, and go to state 172
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CLOSE_S     shift, and go to state 269
    CONST       shift, and go to state 174
    VOID        shift, and go to state 71
    FOR         shift, and go to state 175
    WHILE       shift, and go to state 176
    IF          shift, and go to state 177
    DO          shift, and go to state 178
    SWITCH      shift, and go to state 179
    ENUM        shift, and go to state 180
    OPEN_ARR    shift, and go to state 181
    RETURN      shift, and go to state 182
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 183
    AT_ASM      shift, and go to state 184

    type                        go to state 185
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 186
    block_body_header           go to state 119
    statement                   go to state 270
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 189

  147 statement_list: statement .

    $default  reduce using rule 147 (statement_list)


State 190

  155 statement: asm .

    $default  reduce using rule 155 (statement)


State 191

  151 statement: variable_declaration_block .

    $default  reduce using rule 151 (statement)


State 192

  153 statement: return_statement .

    $default  reduce using rule 153 (statement)


State 193

  148 statement: loop_statement .

    $default  reduce using rule 148 (statement)


State 194

  170 loop_statement: do_while .

    $default  reduce using rule 170 (loop_statement)


State 195

  171 do_while: do_header . statement while_loop_header SEMI_COMA

    IDENTIFIER  shift, and go to state 172
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 174
    VOID        shift, and go to state 71
    FOR         shift, and go to state 175
    WHILE       shift, and go to state 176
    IF          shift, and go to state 177
    DO          shift, and go to state 178
    SWITCH      shift, and go to state 179
    ENUM        shift, and go to state 180
    OPEN_ARR    shift, and go to state 181
    RETURN      shift, and go to state 182
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 183
    AT_ASM      shift, and go to state 184

    type                        go to state 185
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 186
    block_body_header           go to state 119
    statement                   go to state 271
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 196

  168 loop_statement: for_loop .

    $default  reduce using rule 168 (loop_statement)


State 197

  173 for_loop: for_loop_header . statement

    IDENTIFIER  shift, and go to state 172
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 174
    VOID        shift, and go to state 71
    FOR         shift, and go to state 175
    WHILE       shift, and go to state 176
    IF          shift, and go to state 177
    DO          shift, and go to state 178
    SWITCH      shift, and go to state 179
    ENUM        shift, and go to state 180
    OPEN_ARR    shift, and go to state 181
    RETURN      shift, and go to state 182
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 183
    AT_ASM      shift, and go to state 184

    type                        go to state 185
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 186
    block_body_header           go to state 119
    statement                   go to state 272
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 198

  150 statement: assign_expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 273


State 199

  198 assign_expr: long_id . EQUAL simple_expr
  199 long_id: long_id . DOT IDENTIFIER

    EQUAL  shift, and go to state 274
    DOT    shift, and go to state 275


State 200

  218 message_call: message_call2 . sender message CLOSE_ARR

    IDENTIFIER  shift, and go to state 276
    OPEN_ARR    shift, and go to state 181

    message_call2  go to state 200
    message_call   go to state 277
    sender         go to state 278


State 201

  156 statement: message_call . SEMI_COMA
  200 long_id: message_call .

    SEMI_COMA  shift, and go to state 279

    $default  reduce using rule 200 (long_id)


State 202

  169 loop_statement: while_loop .

    $default  reduce using rule 169 (loop_statement)


State 203

  229 while_loop: while_loop_header . statement

    IDENTIFIER  shift, and go to state 172
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 174
    VOID        shift, and go to state 71
    FOR         shift, and go to state 175
    WHILE       shift, and go to state 176
    IF          shift, and go to state 177
    DO          shift, and go to state 178
    SWITCH      shift, and go to state 179
    ENUM        shift, and go to state 180
    OPEN_ARR    shift, and go to state 181
    RETURN      shift, and go to state 182
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 183
    AT_ASM      shift, and go to state 184

    type                        go to state 185
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 186
    block_body_header           go to state 119
    statement                   go to state 280
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 204

  149 statement: conditional_statement .

    $default  reduce using rule 149 (statement)


State 205

  231 conditional_statement: if_header . statement
  232                      | if_header . statement ELSE statement

    IDENTIFIER  shift, and go to state 172
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 174
    VOID        shift, and go to state 71
    FOR         shift, and go to state 175
    WHILE       shift, and go to state 176
    IF          shift, and go to state 177
    DO          shift, and go to state 178
    SWITCH      shift, and go to state 179
    ENUM        shift, and go to state 180
    OPEN_ARR    shift, and go to state 181
    RETURN      shift, and go to state 182
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 183
    AT_ASM      shift, and go to state 184

    type                        go to state 185
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 186
    block_body_header           go to state 119
    statement                   go to state 281
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 206

  233 conditional_statement: switch_header . switch_body

    CLOSE_S  shift, and go to state 282
    CASE     shift, and go to state 283
    DEFAULT  shift, and go to state 284

    switch_body   go to state 285
    list_of_case  go to state 286
    case_body     go to state 287
    default_case  go to state 288


State 207

  160 variable_declaration_block: enum .

    $default  reduce using rule 160 (variable_declaration_block)


State 208

  154 statement: try_catch .

    $default  reduce using rule 154 (statement)


State 209

  251 protocol_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 251 (protocol_body)


State 210

  260 list_expr: IDENTIFIER COMMA . list_expr

    IDENTIFIER  shift, and go to state 127

    list_expr  go to state 289


State 211

  257 list_expr: IDENTIFIER EQUAL . expr COMMA list_expr
  258          | IDENTIFIER EQUAL . expr

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    expr           go to state 290
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 212

  255 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 291


State 213

   62 data_member: IDENTIFIER . array_tag
   63            | IDENTIFIER .
   65            | IDENTIFIER . error

    error     shift, and go to state 220
    OPEN_ARR  shift, and go to state 217

    SEMI_COMA  reduce using rule 63 (data_member)
    COMMA      reduce using rule 63 (data_member)

    array_tag        go to state 292
    array_first_tag  go to state 219


State 214

   57 variable_declarationxx: CONST type ids_list . SEMI_COMA
   59 ids_list: ids_list . COMMA data_member

    SEMI_COMA  shift, and go to state 293
    COMMA      shift, and go to state 223


State 215

   88 enum_type: ENUM IDENTIFIER MULTI .

    $default  reduce using rule 88 (enum_type)


State 216

   86 struct_type: STRUCT IDENTIFIER MULTI .

    $default  reduce using rule 86 (struct_type)


State 217

  100 array_first_tag: OPEN_ARR . INT_VAL CLOSE_ARR
  101                | OPEN_ARR . CLOSE_ARR

    INT_VAL    shift, and go to state 294
    CLOSE_ARR  shift, and go to state 295


State 218

   64 data_member: error array_tag .

    $default  reduce using rule 64 (data_member)


State 219

   96 array_tag: array_first_tag . array_tag_list

    $default  reduce using rule 98 (array_tag_list)

    array_tag_list  go to state 296


State 220

   65 data_member: IDENTIFIER error .

    $default  reduce using rule 65 (data_member)


State 221

   58 variable_declarationxx: type IDENTIFIER array_tag . error
   62 data_member: IDENTIFIER array_tag .

    error  shift, and go to state 297

    SEMI_COMA  reduce using rule 62 (data_member)
    COMMA      reduce using rule 62 (data_member)


State 222

   56 variable_declarationxx: type ids_list SEMI_COMA .

    $default  reduce using rule 56 (variable_declarationxx)


State 223

   59 ids_list: ids_list COMMA . data_member

    error       shift, and go to state 298
    IDENTIFIER  shift, and go to state 213

    data_member  go to state 299


State 224

   34 ids_list_identifier: ids_list_identifier COMMA IDENTIFIER .

    $default  reduce using rule 34 (ids_list_identifier)


State 225

  124 parameter: p_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 300


State 226

  121 selector_decleration: IDENTIFIER SEMI_COLUMN parameter_list .
  122 parameter_list: parameter_list . SEMI_COLUMN parameter

    SEMI_COLUMN  shift, and go to state 301

    $default  reduce using rule 121 (selector_decleration)


State 227

  123 parameter_list: parameter .

    $default  reduce using rule 123 (parameter_list)


State 228

  116 p_type: OPEN_P type CLOSE_P .

    $default  reduce using rule 116 (p_type)


State 229

  112 class_method_declaration: PLUS p_type method_selectors error .

    $default  reduce using rule 112 (class_method_declaration)


State 230

  110 class_method_declaration: PLUS p_type method_selectors SEMI_COMA .

    $default  reduce using rule 110 (class_method_declaration)


State 231

  114 instance_method_declaration: MINUS p_type method_selectors SEMI_COMA .

    $default  reduce using rule 114 (instance_method_declaration)


State 232

   24 class_interface_body: protocol_reference_list error interface_declaration_list AT_END .

    $default  reduce using rule 24 (class_interface_body)


State 233

   26 class_interface_body: protocol_reference_list instance_variables interface_declaration_list error .

    $default  reduce using rule 26 (class_interface_body)


State 234

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 15 (class_interface_body)


State 235

   76 struct: struct_header OPEN_S CLOSE_S error SEMI_COMA .

    $default  reduce using rule 76 (struct)


State 236

   80 entity: error COMMA .

    $default  reduce using rule 80 (entity)


State 237

   78 entity: IDENTIFIER COMMA . entity

    error       shift, and go to state 302
    IDENTIFIER  shift, and go to state 164

    entity  go to state 303


State 238

   74 struct: struct_header OPEN_S CLOSE_S entity error . SEMI_COMA

    SEMI_COMA  shift, and go to state 304


State 239

   70 struct: struct_header OPEN_S CLOSE_S entity SEMI_COMA .

    $default  reduce using rule 70 (struct)


State 240

   77 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S error . SEMI_COMA
   80 entity: error . COMMA

    SEMI_COMA  shift, and go to state 305
    COMMA      shift, and go to state 236


State 241

   73 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA .

    $default  reduce using rule 73 (struct)


State 242

   71 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity . SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity . error SEMI_COMA

    error      shift, and go to state 306
    SEMI_COMA  shift, and go to state 307


State 243

  159 variable_declaration_block: CONST type . variable_list SEMI_COMA

    error       shift, and go to state 265
    IDENTIFIER  shift, and go to state 266

    variable_list  go to state 308
    variable       go to state 268


State 244

  174 for_loop_header: FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  175                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  176                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  178                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  179                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  180                | FOR OPEN_P . SEMI_COMA SEMI_COMA expr CLOSE_P
  181                | FOR OPEN_P . SEMI_COMA SEMI_COMA CLOSE_P

    IDENTIFIER  shift, and go to state 309
    INT         shift, and go to state 310
    SEMI_COMA   shift, and go to state 311

    for_initializer  go to state 312


State 245

  230 while_loop_header: WHILE OPEN_P . logic_expr CLOSE_P

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 313
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    NOT_EQUAL    shift, and go to state 314
    OPEN_ARR     shift, and go to state 181
    TRUE         shift, and go to state 315
    FALSE        shift, and go to state 316
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    logic_expr     go to state 317
    expr           go to state 318
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 246

  234 if_header: IF OPEN_P . logic_expr CLOSE_P

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 313
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    NOT_EQUAL    shift, and go to state 314
    OPEN_ARR     shift, and go to state 181
    TRUE         shift, and go to state 315
    FALSE        shift, and go to state 316
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    logic_expr     go to state 319
    expr           go to state 318
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 247

  235 switch_header: SWITCH OPEN_P . IDENTIFIER CLOSE_P switch_body_block

    IDENTIFIER  shift, and go to state 320


State 248

   87 enum_type: ENUM IDENTIFIER .
   88          | ENUM IDENTIFIER . MULTI
  255 enum: ENUM IDENTIFIER . OPEN_S list_expr CLOSE_S SEMI_COMA
  256     | ENUM IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 58
    OPEN_S     shift, and go to state 59
    MULTI      shift, and go to state 215

    $default  reduce using rule 87 (enum_type)


State 249

  201 long_id: IDENTIFIER .
  212 simple_expr: IDENTIFIER . DOUBLEPLUS
  213            | IDENTIFIER . DOUBLEMINUS

    DOUBLEPLUS   shift, and go to state 321
    DOUBLEMINUS  shift, and go to state 322

    $default  reduce using rule 201 (long_id)


State 250

  116 p_type: OPEN_P . type CLOSE_P
  211 simple_expr: OPEN_P . simple_expr CLOSE_P

    IDENTIFIER   shift, and go to state 323
    NSSTRING     shift, and go to state 61
    FLOAT        shift, and go to state 62
    CHAR         shift, and go to state 63
    BOOL         shift, and go to state 64
    INT          shift, and go to state 65
    VOID         shift, and go to state 71
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    ENUM         shift, and go to state 72
    OPEN_ARR     shift, and go to state 181
    STRUCT       shift, and go to state 73
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    type           go to state 145
    struct_type    go to state 80
    enum_type      go to state 81
    simple_type    go to state 82
    complex_type   go to state 83
    p_type         go to state 257
    long_id        go to state 324
    simple_expr    go to state 325
    message_call2  go to state 200
    message_call   go to state 262


State 251

  202 simple_expr: STRING_VAL .

    $default  reduce using rule 202 (simple_expr)


State 252

  204 simple_expr: FLOAT_VAL .

    $default  reduce using rule 204 (simple_expr)


State 253

  205 simple_expr: CHAR_VAL .

    $default  reduce using rule 205 (simple_expr)


State 254

  203 simple_expr: INT_VAL .

    $default  reduce using rule 203 (simple_expr)


State 255

  214 simple_expr: DOUBLEPLUS . IDENTIFIER

    IDENTIFIER  shift, and go to state 326


State 256

  215 simple_expr: DOUBLEMINUS . IDENTIFIER

    IDENTIFIER  shift, and go to state 327


State 257

  216 simple_expr: p_type . simple_expr

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    long_id        go to state 324
    simple_expr    go to state 328
    message_call2  go to state 200
    message_call   go to state 262


State 258

  167 return_statement: RETURN expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 329


State 259

  196 expr: assign_expr .

    $default  reduce using rule 196 (expr)


State 260

  198 assign_expr: long_id . EQUAL simple_expr
  199 long_id: long_id . DOT IDENTIFIER
  206 simple_expr: long_id .

    EQUAL  shift, and go to state 274
    DOT    shift, and go to state 275

    $default  reduce using rule 206 (simple_expr)


State 261

  197 expr: simple_expr .
  207 simple_expr: simple_expr . PLUS simple_expr
  208            | simple_expr . MINUS simple_expr
  209            | simple_expr . MULTI simple_expr
  210            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 330
    MINUS  shift, and go to state 331
    MULTI  shift, and go to state 332
    DIV    shift, and go to state 333

    $default  reduce using rule 197 (expr)


State 262

  200 long_id: message_call .

    $default  reduce using rule 200 (long_id)


State 263

  261 try_catch: TRY statement . catch_list finally_statement
  262          | TRY statement . catch_list

    CATCH  shift, and go to state 334

    catch_list  go to state 335


State 264

  157 asm: AT_ASM IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 336


State 265

  166 variable: error . array_tag initializer

    OPEN_ARR  shift, and go to state 217

    array_tag        go to state 337
    array_first_tag  go to state 219


State 266

  164 variable: IDENTIFIER . array_tag initializer
  165         | IDENTIFIER . main_initializer

    EQUAL     shift, and go to state 338
    OPEN_ARR  shift, and go to state 217

    $default  reduce using rule 105 (main_initializer)

    array_tag         go to state 339
    array_first_tag   go to state 219
    main_initializer  go to state 340


State 267

  158 variable_declaration_block: type variable_list . SEMI_COMA
  161 variable_list: variable_list . COMMA variable
  163              | variable_list . error variable

    error      shift, and go to state 341
    SEMI_COMA  shift, and go to state 342
    COMMA      shift, and go to state 343


State 268

  162 variable_list: variable .

    $default  reduce using rule 162 (variable_list)


State 269

  144 block_body_statements: statement_list CLOSE_S .

    $default  reduce using rule 144 (block_body_statements)


State 270

  146 statement_list: statement_list statement .

    $default  reduce using rule 146 (statement_list)


State 271

  171 do_while: do_header statement . while_loop_header SEMI_COMA

    WHILE  shift, and go to state 176

    while_loop_header  go to state 344


State 272

  173 for_loop: for_loop_header statement .

    $default  reduce using rule 173 (for_loop)


State 273

  150 statement: assign_expr SEMI_COMA .

    $default  reduce using rule 150 (statement)


State 274

  198 assign_expr: long_id EQUAL . simple_expr

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    long_id        go to state 324
    simple_expr    go to state 345
    message_call2  go to state 200
    message_call   go to state 262


State 275

  199 long_id: long_id DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 346


State 276

  220 sender: IDENTIFIER .

    $default  reduce using rule 220 (sender)


State 277

  219 sender: message_call .

    $default  reduce using rule 219 (sender)


State 278

  218 message_call: message_call2 sender . message CLOSE_ARR

    IDENTIFIER  shift, and go to state 347

    message                 go to state 348
    message_selectors_list  go to state 349
    message_selector        go to state 350


State 279

  156 statement: message_call SEMI_COMA .

    $default  reduce using rule 156 (statement)


State 280

  229 while_loop: while_loop_header statement .

    $default  reduce using rule 229 (while_loop)


State 281

  231 conditional_statement: if_header statement .
  232                      | if_header statement . ELSE statement

    ELSE  shift, and go to state 351

    $default  reduce using rule 231 (conditional_statement)


State 282

  240 switch_body: CLOSE_S .

    $default  reduce using rule 240 (switch_body)


State 283

  243 case_body: CASE . expr SEMI_COLUMN statement BREAK SEMI_COMA
  244          | CASE . expr SEMI_COLUMN statement
  245          | CASE . expr SEMI_COLUMN BREAK SEMI_COMA

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    expr           go to state 352
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 284

  246 default_case: DEFAULT . SEMI_COLUMN statement BREAK SEMI_COMA
  247             | DEFAULT . SEMI_COLUMN statement
  248             | DEFAULT . SEMI_COLUMN BREAK SEMI_COMA

    SEMI_COLUMN  shift, and go to state 353


State 285

  233 conditional_statement: switch_header switch_body .

    $default  reduce using rule 233 (conditional_statement)


State 286

  237 switch_body: list_of_case . default_case CLOSE_S
  238            | list_of_case . CLOSE_S
  241 list_of_case: list_of_case . case_body

    CLOSE_S  shift, and go to state 354
    CASE     shift, and go to state 283
    DEFAULT  shift, and go to state 284

    case_body     go to state 355
    default_case  go to state 356


State 287

  242 list_of_case: case_body .

    $default  reduce using rule 242 (list_of_case)


State 288

  239 switch_body: default_case . CLOSE_S

    CLOSE_S  shift, and go to state 357


State 289

  260 list_expr: IDENTIFIER COMMA list_expr .

    $default  reduce using rule 260 (list_expr)


State 290

  257 list_expr: IDENTIFIER EQUAL expr . COMMA list_expr
  258          | IDENTIFIER EQUAL expr .

    COMMA  shift, and go to state 358

    $default  reduce using rule 258 (list_expr)


State 291

  255 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA .

    $default  reduce using rule 255 (enum)


State 292

   62 data_member: IDENTIFIER array_tag .

    $default  reduce using rule 62 (data_member)


State 293

   57 variable_declarationxx: CONST type ids_list SEMI_COMA .

    $default  reduce using rule 57 (variable_declarationxx)


State 294

  100 array_first_tag: OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 359


State 295

  101 array_first_tag: OPEN_ARR CLOSE_ARR .

    $default  reduce using rule 101 (array_first_tag)


State 296

   96 array_tag: array_first_tag array_tag_list .
   97 array_tag_list: array_tag_list . OPEN_ARR INT_VAL CLOSE_ARR
   99               | array_tag_list . OPEN_ARR error CLOSE_ARR

    OPEN_ARR  shift, and go to state 360

    $default  reduce using rule 96 (array_tag)


State 297

   58 variable_declarationxx: type IDENTIFIER array_tag error .

    $default  reduce using rule 58 (variable_declarationxx)


State 298

   64 data_member: error . array_tag

    OPEN_ARR  shift, and go to state 217

    array_tag        go to state 218
    array_first_tag  go to state 219


State 299

   59 ids_list: ids_list COMMA data_member .

    $default  reduce using rule 59 (ids_list)


State 300

  124 parameter: p_type IDENTIFIER .

    $default  reduce using rule 124 (parameter)


State 301

  122 parameter_list: parameter_list SEMI_COLUMN . parameter

    OPEN_P  shift, and go to state 87

    p_type     go to state 225
    parameter  go to state 361


State 302

   80 entity: error . COMMA

    COMMA  shift, and go to state 236


State 303

   78 entity: IDENTIFIER COMMA entity .

    $default  reduce using rule 78 (entity)


State 304

   74 struct: struct_header OPEN_S CLOSE_S entity error SEMI_COMA .

    $default  reduce using rule 74 (struct)


State 305

   77 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA .

    $default  reduce using rule 77 (struct)


State 306

   75 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity error . SEMI_COMA

    SEMI_COMA  shift, and go to state 362


State 307

   71 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA .

    $default  reduce using rule 71 (struct)


State 308

  159 variable_declaration_block: CONST type variable_list . SEMI_COMA
  161 variable_list: variable_list . COMMA variable
  163              | variable_list . error variable

    error      shift, and go to state 341
    SEMI_COMA  shift, and go to state 363
    COMMA      shift, and go to state 343


State 309

  183 for_initializer: IDENTIFIER . EQUAL expr
  184                | IDENTIFIER .

    EQUAL  shift, and go to state 364

    $default  reduce using rule 184 (for_initializer)


State 310

  182 for_initializer: INT . IDENTIFIER EQUAL expr

    IDENTIFIER  shift, and go to state 365


State 311

  175 for_loop_header: FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P
  179                | FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA CLOSE_P
  180                | FOR OPEN_P SEMI_COMA . SEMI_COMA expr CLOSE_P
  181                | FOR OPEN_P SEMI_COMA . SEMI_COMA CLOSE_P

    IDENTIFIER   shift, and go to state 249
    SEMI_COMA    shift, and go to state 366
    OPEN_P       shift, and go to state 313
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    NOT_EQUAL    shift, and go to state 314
    OPEN_ARR     shift, and go to state 181
    TRUE         shift, and go to state 315
    FALSE        shift, and go to state 316
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    logic_expr     go to state 367
    expr           go to state 318
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 312

  174 for_loop_header: FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  176                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  178                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA CLOSE_P

    SEMI_COMA  shift, and go to state 368


State 313

  116 p_type: OPEN_P . type CLOSE_P
  191 logic_expr: OPEN_P . logic_expr CLOSE_P
  211 simple_expr: OPEN_P . simple_expr CLOSE_P

    IDENTIFIER   shift, and go to state 323
    NSSTRING     shift, and go to state 61
    FLOAT        shift, and go to state 62
    CHAR         shift, and go to state 63
    BOOL         shift, and go to state 64
    INT          shift, and go to state 65
    VOID         shift, and go to state 71
    OPEN_P       shift, and go to state 313
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    NOT_EQUAL    shift, and go to state 314
    ENUM         shift, and go to state 72
    OPEN_ARR     shift, and go to state 181
    TRUE         shift, and go to state 315
    FALSE        shift, and go to state 316
    STRUCT       shift, and go to state 73
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    type           go to state 145
    struct_type    go to state 80
    enum_type      go to state 81
    simple_type    go to state 82
    complex_type   go to state 83
    p_type         go to state 257
    logic_expr     go to state 369
    expr           go to state 318
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 370
    message_call2  go to state 200
    message_call   go to state 262


State 314

  190 logic_expr: NOT_EQUAL . expr

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    expr           go to state 371
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 315

  194 logic_expr: TRUE .

    $default  reduce using rule 194 (logic_expr)


State 316

  195 logic_expr: FALSE .

    $default  reduce using rule 195 (logic_expr)


State 317

  192 logic_expr: logic_expr . AND_AND logic_expr
  193           | logic_expr . OR_OR logic_expr
  230 while_loop_header: WHILE OPEN_P logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 372
    AND_AND  shift, and go to state 373
    OR_OR    shift, and go to state 374


State 318

  185 logic_expr: expr . LESS_THAN expr
  186           | expr . MORE_THAN expr
  187           | expr . LESS_OR_EQUAL expr
  188           | expr . MORE_OR_EQUAL expr
  189           | expr . EQUAL_EQUAL expr

    LESS_THAN      shift, and go to state 375
    MORE_THAN      shift, and go to state 376
    LESS_OR_EQUAL  shift, and go to state 377
    MORE_OR_EQUAL  shift, and go to state 378
    EQUAL_EQUAL    shift, and go to state 379


State 319

  192 logic_expr: logic_expr . AND_AND logic_expr
  193           | logic_expr . OR_OR logic_expr
  234 if_header: IF OPEN_P logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 380
    AND_AND  shift, and go to state 373
    OR_OR    shift, and go to state 374


State 320

  235 switch_header: SWITCH OPEN_P IDENTIFIER . CLOSE_P switch_body_block

    CLOSE_P  shift, and go to state 381


State 321

  212 simple_expr: IDENTIFIER DOUBLEPLUS .

    $default  reduce using rule 212 (simple_expr)


State 322

  213 simple_expr: IDENTIFIER DOUBLEMINUS .

    $default  reduce using rule 213 (simple_expr)


State 323

   95 complex_type: IDENTIFIER . MULTI
  201 long_id: IDENTIFIER .
  212 simple_expr: IDENTIFIER . DOUBLEPLUS
  213            | IDENTIFIER . DOUBLEMINUS

    DOUBLEPLUS   shift, and go to state 321
    DOUBLEMINUS  shift, and go to state 322

    $default  reduce using rule 201 (long_id)


State 324

  199 long_id: long_id . DOT IDENTIFIER
  206 simple_expr: long_id .

    DOT  shift, and go to state 275

    $default  reduce using rule 206 (simple_expr)


State 325

  207 simple_expr: simple_expr . PLUS simple_expr
  208            | simple_expr . MINUS simple_expr
  209            | simple_expr . MULTI simple_expr
  210            | simple_expr . DIV simple_expr
  211            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 330
    MINUS    shift, and go to state 331
    CLOSE_P  shift, and go to state 382
    MULTI    shift, and go to state 332
    DIV      shift, and go to state 333


State 326

  214 simple_expr: DOUBLEPLUS IDENTIFIER .

    $default  reduce using rule 214 (simple_expr)


State 327

  215 simple_expr: DOUBLEMINUS IDENTIFIER .

    $default  reduce using rule 215 (simple_expr)


State 328

  207 simple_expr: simple_expr . PLUS simple_expr
  208            | simple_expr . MINUS simple_expr
  209            | simple_expr . MULTI simple_expr
  210            | simple_expr . DIV simple_expr
  216            | p_type simple_expr .

    PLUS   shift, and go to state 330
    MINUS  shift, and go to state 331
    MULTI  shift, and go to state 332
    DIV    shift, and go to state 333

    $default  reduce using rule 216 (simple_expr)


State 329

  167 return_statement: RETURN expr SEMI_COMA .

    $default  reduce using rule 167 (return_statement)


State 330

  207 simple_expr: simple_expr PLUS . simple_expr

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    long_id        go to state 324
    simple_expr    go to state 383
    message_call2  go to state 200
    message_call   go to state 262


State 331

  208 simple_expr: simple_expr MINUS . simple_expr

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    long_id        go to state 324
    simple_expr    go to state 384
    message_call2  go to state 200
    message_call   go to state 262


State 332

  209 simple_expr: simple_expr MULTI . simple_expr

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    long_id        go to state 324
    simple_expr    go to state 385
    message_call2  go to state 200
    message_call   go to state 262


State 333

  210 simple_expr: simple_expr DIV . simple_expr

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    long_id        go to state 324
    simple_expr    go to state 386
    message_call2  go to state 200
    message_call   go to state 262


State 334

  263 catch_list: CATCH . OPEN_S type IDENTIFIER CLOSE_S statement

    OPEN_S  shift, and go to state 387


State 335

  261 try_catch: TRY statement catch_list . finally_statement
  262          | TRY statement catch_list .
  264 catch_list: catch_list . CATCH OPEN_S type IDENTIFIER CLOSE_S statement

    CATCH    shift, and go to state 388
    FINALLY  shift, and go to state 389

    $default  reduce using rule 262 (try_catch)

    finally_statement  go to state 390


State 336

  157 asm: AT_ASM IDENTIFIER SEMI_COMA .

    $default  reduce using rule 157 (asm)


State 337

  166 variable: error array_tag . initializer

    EQUAL  shift, and go to state 391

    $default  reduce using rule 103 (initializer)

    initializer  go to state 392


State 338

  104 main_initializer: EQUAL . expr

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    expr           go to state 393
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 339

  164 variable: IDENTIFIER array_tag . initializer

    EQUAL  shift, and go to state 391

    $default  reduce using rule 103 (initializer)

    initializer  go to state 394


State 340

  165 variable: IDENTIFIER main_initializer .

    $default  reduce using rule 165 (variable)


State 341

  163 variable_list: variable_list error . variable

    error       shift, and go to state 265
    IDENTIFIER  shift, and go to state 266

    variable  go to state 395


State 342

  158 variable_declaration_block: type variable_list SEMI_COMA .

    $default  reduce using rule 158 (variable_declaration_block)


State 343

  161 variable_list: variable_list COMMA . variable

    error       shift, and go to state 265
    IDENTIFIER  shift, and go to state 266

    variable  go to state 396


State 344

  171 do_while: do_header statement while_loop_header . SEMI_COMA

    SEMI_COMA  shift, and go to state 397


State 345

  198 assign_expr: long_id EQUAL simple_expr .
  207 simple_expr: simple_expr . PLUS simple_expr
  208            | simple_expr . MINUS simple_expr
  209            | simple_expr . MULTI simple_expr
  210            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 330
    MINUS  shift, and go to state 331
    MULTI  shift, and go to state 332
    DIV    shift, and go to state 333

    $default  reduce using rule 198 (assign_expr)


State 346

  199 long_id: long_id DOT IDENTIFIER .

    $default  reduce using rule 199 (long_id)


State 347

  221 message: IDENTIFIER .
  225 message_selector: IDENTIFIER . SEMI_COLUMN argument_list

    SEMI_COLUMN  shift, and go to state 398

    $default  reduce using rule 221 (message)


State 348

  218 message_call: message_call2 sender message . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 399


State 349

  222 message: message_selectors_list .
  223 message_selectors_list: message_selectors_list . message_selector

    IDENTIFIER  shift, and go to state 400

    $default  reduce using rule 222 (message)

    message_selector  go to state 401


State 350

  224 message_selectors_list: message_selector .

    $default  reduce using rule 224 (message_selectors_list)


State 351

  232 conditional_statement: if_header statement ELSE . statement

    IDENTIFIER  shift, and go to state 172
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 174
    VOID        shift, and go to state 71
    FOR         shift, and go to state 175
    WHILE       shift, and go to state 176
    IF          shift, and go to state 177
    DO          shift, and go to state 178
    SWITCH      shift, and go to state 179
    ENUM        shift, and go to state 180
    OPEN_ARR    shift, and go to state 181
    RETURN      shift, and go to state 182
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 183
    AT_ASM      shift, and go to state 184

    type                        go to state 185
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 186
    block_body_header           go to state 119
    statement                   go to state 402
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 352

  243 case_body: CASE expr . SEMI_COLUMN statement BREAK SEMI_COMA
  244          | CASE expr . SEMI_COLUMN statement
  245          | CASE expr . SEMI_COLUMN BREAK SEMI_COMA

    SEMI_COLUMN  shift, and go to state 403


State 353

  246 default_case: DEFAULT SEMI_COLUMN . statement BREAK SEMI_COMA
  247             | DEFAULT SEMI_COLUMN . statement
  248             | DEFAULT SEMI_COLUMN . BREAK SEMI_COMA

    IDENTIFIER  shift, and go to state 172
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 174
    VOID        shift, and go to state 71
    FOR         shift, and go to state 175
    WHILE       shift, and go to state 176
    IF          shift, and go to state 177
    DO          shift, and go to state 178
    SWITCH      shift, and go to state 179
    BREAK       shift, and go to state 404
    ENUM        shift, and go to state 180
    OPEN_ARR    shift, and go to state 181
    RETURN      shift, and go to state 182
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 183
    AT_ASM      shift, and go to state 184

    type                        go to state 185
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 186
    block_body_header           go to state 119
    statement                   go to state 405
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 354

  238 switch_body: list_of_case CLOSE_S .

    $default  reduce using rule 238 (switch_body)


State 355

  241 list_of_case: list_of_case case_body .

    $default  reduce using rule 241 (list_of_case)


State 356

  237 switch_body: list_of_case default_case . CLOSE_S

    CLOSE_S  shift, and go to state 406


State 357

  239 switch_body: default_case CLOSE_S .

    $default  reduce using rule 239 (switch_body)


State 358

  257 list_expr: IDENTIFIER EQUAL expr COMMA . list_expr

    IDENTIFIER  shift, and go to state 127

    list_expr  go to state 407


State 359

  100 array_first_tag: OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 100 (array_first_tag)


State 360

   97 array_tag_list: array_tag_list OPEN_ARR . INT_VAL CLOSE_ARR
   99               | array_tag_list OPEN_ARR . error CLOSE_ARR

    error    shift, and go to state 408
    INT_VAL  shift, and go to state 409


State 361

  122 parameter_list: parameter_list SEMI_COLUMN parameter .

    $default  reduce using rule 122 (parameter_list)


State 362

   75 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA .

    $default  reduce using rule 75 (struct)


State 363

  159 variable_declaration_block: CONST type variable_list SEMI_COMA .

    $default  reduce using rule 159 (variable_declaration_block)


State 364

  183 for_initializer: IDENTIFIER EQUAL . expr

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    expr           go to state 410
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 365

  182 for_initializer: INT IDENTIFIER . EQUAL expr

    EQUAL  shift, and go to state 411


State 366

  180 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA . expr CLOSE_P
  181                | FOR OPEN_P SEMI_COMA SEMI_COMA . CLOSE_P

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    CLOSE_P      shift, and go to state 412
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    expr           go to state 413
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 367

  175 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  179                | FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA CLOSE_P
  192 logic_expr: logic_expr . AND_AND logic_expr
  193           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 414
    AND_AND    shift, and go to state 373
    OR_OR      shift, and go to state 374


State 368

  174 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P
  176                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA expr CLOSE_P
  177                | FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA CLOSE_P
  178                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA CLOSE_P

    IDENTIFIER   shift, and go to state 249
    SEMI_COMA    shift, and go to state 415
    OPEN_P       shift, and go to state 313
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    NOT_EQUAL    shift, and go to state 314
    OPEN_ARR     shift, and go to state 181
    TRUE         shift, and go to state 315
    FALSE        shift, and go to state 316
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    logic_expr     go to state 416
    expr           go to state 318
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 369

  191 logic_expr: OPEN_P logic_expr . CLOSE_P
  192           | logic_expr . AND_AND logic_expr
  193           | logic_expr . OR_OR logic_expr

    CLOSE_P  shift, and go to state 417
    AND_AND  shift, and go to state 373
    OR_OR    shift, and go to state 374


State 370

  197 expr: simple_expr .
  207 simple_expr: simple_expr . PLUS simple_expr
  208            | simple_expr . MINUS simple_expr
  209            | simple_expr . MULTI simple_expr
  210            | simple_expr . DIV simple_expr
  211            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 330
    MINUS    shift, and go to state 331
    CLOSE_P  shift, and go to state 382
    MULTI    shift, and go to state 332
    DIV      shift, and go to state 333

    $default  reduce using rule 197 (expr)


State 371

  190 logic_expr: NOT_EQUAL expr .

    $default  reduce using rule 190 (logic_expr)


State 372

  230 while_loop_header: WHILE OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 230 (while_loop_header)


State 373

  192 logic_expr: logic_expr AND_AND . logic_expr

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 313
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    NOT_EQUAL    shift, and go to state 314
    OPEN_ARR     shift, and go to state 181
    TRUE         shift, and go to state 315
    FALSE        shift, and go to state 316
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    logic_expr     go to state 418
    expr           go to state 318
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 374

  193 logic_expr: logic_expr OR_OR . logic_expr

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 313
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    NOT_EQUAL    shift, and go to state 314
    OPEN_ARR     shift, and go to state 181
    TRUE         shift, and go to state 315
    FALSE        shift, and go to state 316
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    logic_expr     go to state 419
    expr           go to state 318
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 375

  185 logic_expr: expr LESS_THAN . expr

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    expr           go to state 420
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 376

  186 logic_expr: expr MORE_THAN . expr

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    expr           go to state 421
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 377

  187 logic_expr: expr LESS_OR_EQUAL . expr

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    expr           go to state 422
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 378

  188 logic_expr: expr MORE_OR_EQUAL . expr

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    expr           go to state 423
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 379

  189 logic_expr: expr EQUAL_EQUAL . expr

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    expr           go to state 424
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 380

  234 if_header: IF OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 234 (if_header)


State 381

  235 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P . switch_body_block

    OPEN_S  shift, and go to state 425

    switch_body_block  go to state 426


State 382

  211 simple_expr: OPEN_P simple_expr CLOSE_P .

    $default  reduce using rule 211 (simple_expr)


State 383

  207 simple_expr: simple_expr . PLUS simple_expr
  207            | simple_expr PLUS simple_expr .
  208            | simple_expr . MINUS simple_expr
  209            | simple_expr . MULTI simple_expr
  210            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 332
    DIV    shift, and go to state 333

    $default  reduce using rule 207 (simple_expr)


State 384

  207 simple_expr: simple_expr . PLUS simple_expr
  208            | simple_expr . MINUS simple_expr
  208            | simple_expr MINUS simple_expr .
  209            | simple_expr . MULTI simple_expr
  210            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 332
    DIV    shift, and go to state 333

    $default  reduce using rule 208 (simple_expr)


State 385

  207 simple_expr: simple_expr . PLUS simple_expr
  208            | simple_expr . MINUS simple_expr
  209            | simple_expr . MULTI simple_expr
  209            | simple_expr MULTI simple_expr .
  210            | simple_expr . DIV simple_expr

    $default  reduce using rule 209 (simple_expr)


State 386

  207 simple_expr: simple_expr . PLUS simple_expr
  208            | simple_expr . MINUS simple_expr
  209            | simple_expr . MULTI simple_expr
  210            | simple_expr . DIV simple_expr
  210            | simple_expr DIV simple_expr .

    $default  reduce using rule 210 (simple_expr)


State 387

  263 catch_list: CATCH OPEN_S . type IDENTIFIER CLOSE_S statement

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    type          go to state 427
    struct_type   go to state 80
    enum_type     go to state 81
    simple_type   go to state 82
    complex_type  go to state 83


State 388

  264 catch_list: catch_list CATCH . OPEN_S type IDENTIFIER CLOSE_S statement

    OPEN_S  shift, and go to state 428


State 389

  265 finally_statement: FINALLY . statement

    IDENTIFIER  shift, and go to state 172
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 174
    VOID        shift, and go to state 71
    FOR         shift, and go to state 175
    WHILE       shift, and go to state 176
    IF          shift, and go to state 177
    DO          shift, and go to state 178
    SWITCH      shift, and go to state 179
    ENUM        shift, and go to state 180
    OPEN_ARR    shift, and go to state 181
    RETURN      shift, and go to state 182
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 183
    AT_ASM      shift, and go to state 184

    type                        go to state 185
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 186
    block_body_header           go to state 119
    statement                   go to state 429
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 390

  261 try_catch: TRY statement catch_list finally_statement .

    $default  reduce using rule 261 (try_catch)


State 391

  102 initializer: EQUAL . array_body

    OPEN_S  shift, and go to state 430

    array_body  go to state 431


State 392

  166 variable: error array_tag initializer .

    $default  reduce using rule 166 (variable)


State 393

  104 main_initializer: EQUAL expr .

    $default  reduce using rule 104 (main_initializer)


State 394

  164 variable: IDENTIFIER array_tag initializer .

    $default  reduce using rule 164 (variable)


State 395

  163 variable_list: variable_list error variable .

    $default  reduce using rule 163 (variable_list)


State 396

  161 variable_list: variable_list COMMA variable .

    $default  reduce using rule 161 (variable_list)


State 397

  171 do_while: do_header statement while_loop_header SEMI_COMA .

    $default  reduce using rule 171 (do_while)


State 398

  225 message_selector: IDENTIFIER SEMI_COLUMN . argument_list

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    expr           go to state 432
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262
    argument_list  go to state 433
    argument       go to state 434


State 399

  218 message_call: message_call2 sender message CLOSE_ARR .

    $default  reduce using rule 218 (message_call)


State 400

  225 message_selector: IDENTIFIER . SEMI_COLUMN argument_list

    SEMI_COLUMN  shift, and go to state 398


State 401

  223 message_selectors_list: message_selectors_list message_selector .

    $default  reduce using rule 223 (message_selectors_list)


State 402

  232 conditional_statement: if_header statement ELSE statement .

    $default  reduce using rule 232 (conditional_statement)


State 403

  243 case_body: CASE expr SEMI_COLUMN . statement BREAK SEMI_COMA
  244          | CASE expr SEMI_COLUMN . statement
  245          | CASE expr SEMI_COLUMN . BREAK SEMI_COMA

    IDENTIFIER  shift, and go to state 172
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 174
    VOID        shift, and go to state 71
    FOR         shift, and go to state 175
    WHILE       shift, and go to state 176
    IF          shift, and go to state 177
    DO          shift, and go to state 178
    SWITCH      shift, and go to state 179
    BREAK       shift, and go to state 435
    ENUM        shift, and go to state 180
    OPEN_ARR    shift, and go to state 181
    RETURN      shift, and go to state 182
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 183
    AT_ASM      shift, and go to state 184

    type                        go to state 185
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 186
    block_body_header           go to state 119
    statement                   go to state 436
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 404

  248 default_case: DEFAULT SEMI_COLUMN BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 437


State 405

  246 default_case: DEFAULT SEMI_COLUMN statement . BREAK SEMI_COMA
  247             | DEFAULT SEMI_COLUMN statement .

    BREAK  shift, and go to state 438

    $default  reduce using rule 247 (default_case)


State 406

  237 switch_body: list_of_case default_case CLOSE_S .

    $default  reduce using rule 237 (switch_body)


State 407

  257 list_expr: IDENTIFIER EQUAL expr COMMA list_expr .

    $default  reduce using rule 257 (list_expr)


State 408

   99 array_tag_list: array_tag_list OPEN_ARR error . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 439


State 409

   97 array_tag_list: array_tag_list OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 440


State 410

  183 for_initializer: IDENTIFIER EQUAL expr .

    $default  reduce using rule 183 (for_initializer)


State 411

  182 for_initializer: INT IDENTIFIER EQUAL . expr

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    expr           go to state 441
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 412

  181 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 181 (for_loop_header)


State 413

  180 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 442


State 414

  175 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P
  179                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . CLOSE_P

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    CLOSE_P      shift, and go to state 443
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    expr           go to state 444
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 415

  176 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . expr CLOSE_P
  178                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . CLOSE_P

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    CLOSE_P      shift, and go to state 445
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    expr           go to state 446
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 416

  174 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  177                | FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA CLOSE_P
  192 logic_expr: logic_expr . AND_AND logic_expr
  193           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 447
    AND_AND    shift, and go to state 373
    OR_OR      shift, and go to state 374


State 417

  191 logic_expr: OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 191 (logic_expr)


State 418

  192 logic_expr: logic_expr . AND_AND logic_expr
  192           | logic_expr AND_AND logic_expr .
  193           | logic_expr . OR_OR logic_expr

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 192 (logic_expr)


State 419

  192 logic_expr: logic_expr . AND_AND logic_expr
  193           | logic_expr . OR_OR logic_expr
  193           | logic_expr OR_OR logic_expr .

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 193 (logic_expr)


State 420

  185 logic_expr: expr LESS_THAN expr .

    $default  reduce using rule 185 (logic_expr)


State 421

  186 logic_expr: expr MORE_THAN expr .

    $default  reduce using rule 186 (logic_expr)


State 422

  187 logic_expr: expr LESS_OR_EQUAL expr .

    $default  reduce using rule 187 (logic_expr)


State 423

  188 logic_expr: expr MORE_OR_EQUAL expr .

    $default  reduce using rule 188 (logic_expr)


State 424

  189 logic_expr: expr EQUAL_EQUAL expr .

    $default  reduce using rule 189 (logic_expr)


State 425

  236 switch_body_block: OPEN_S .

    $default  reduce using rule 236 (switch_body_block)


State 426

  235 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block .

    $default  reduce using rule 235 (switch_header)


State 427

  263 catch_list: CATCH OPEN_S type . IDENTIFIER CLOSE_S statement

    IDENTIFIER  shift, and go to state 448


State 428

  264 catch_list: catch_list CATCH OPEN_S . type IDENTIFIER CLOSE_S statement

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    type          go to state 449
    struct_type   go to state 80
    enum_type     go to state 81
    simple_type   go to state 82
    complex_type  go to state 83


State 429

  265 finally_statement: FINALLY statement .

    $default  reduce using rule 265 (finally_statement)


State 430

   36 array_body: OPEN_S . array_ele CLOSE_S
   37           | OPEN_S . CLOSE_S

    IDENTIFIER   shift, and go to state 249
    OPEN_S       shift, and go to state 450
    CLOSE_S      shift, and go to state 451
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    array_ele      go to state 452
    p_type         go to state 257
    expr           go to state 453
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 431

  102 initializer: EQUAL array_body .

    $default  reduce using rule 102 (initializer)


State 432

  228 argument: expr .

    $default  reduce using rule 228 (argument)


State 433

  225 message_selector: IDENTIFIER SEMI_COLUMN argument_list .
  226 argument_list: argument_list . SEMI_COLUMN argument

    SEMI_COLUMN  shift, and go to state 454

    $default  reduce using rule 225 (message_selector)


State 434

  227 argument_list: argument .

    $default  reduce using rule 227 (argument_list)


State 435

  245 case_body: CASE expr SEMI_COLUMN BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 455


State 436

  243 case_body: CASE expr SEMI_COLUMN statement . BREAK SEMI_COMA
  244          | CASE expr SEMI_COLUMN statement .

    BREAK  shift, and go to state 456

    $default  reduce using rule 244 (case_body)


State 437

  248 default_case: DEFAULT SEMI_COLUMN BREAK SEMI_COMA .

    $default  reduce using rule 248 (default_case)


State 438

  246 default_case: DEFAULT SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 457


State 439

   99 array_tag_list: array_tag_list OPEN_ARR error CLOSE_ARR .

    $default  reduce using rule 99 (array_tag_list)


State 440

   97 array_tag_list: array_tag_list OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 97 (array_tag_list)


State 441

  182 for_initializer: INT IDENTIFIER EQUAL expr .

    $default  reduce using rule 182 (for_initializer)


State 442

  180 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 180 (for_loop_header)


State 443

  179 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P .

    $default  reduce using rule 179 (for_loop_header)


State 444

  175 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 458


State 445

  178 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 178 (for_loop_header)


State 446

  176 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 459


State 447

  174 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P
  177                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . CLOSE_P

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    CLOSE_P      shift, and go to state 460
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    expr           go to state 461
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 448

  263 catch_list: CATCH OPEN_S type IDENTIFIER . CLOSE_S statement

    CLOSE_S  shift, and go to state 462


State 449

  264 catch_list: catch_list CATCH OPEN_S type . IDENTIFIER CLOSE_S statement

    IDENTIFIER  shift, and go to state 463


State 450

   40 array_ele: OPEN_S . CLOSE_S
   41          | OPEN_S . array_ele CLOSE_S COMMA array_ele
   42          | OPEN_S . array_ele CLOSE_S
   43          | OPEN_S . CLOSE_S COMMA array_ele

    IDENTIFIER   shift, and go to state 249
    OPEN_S       shift, and go to state 450
    CLOSE_S      shift, and go to state 464
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    array_ele      go to state 465
    p_type         go to state 257
    expr           go to state 453
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 451

   37 array_body: OPEN_S CLOSE_S .

    $default  reduce using rule 37 (array_body)


State 452

   36 array_body: OPEN_S array_ele . CLOSE_S

    CLOSE_S  shift, and go to state 466


State 453

   38 array_ele: expr . COMMA array_ele
   39          | expr .

    COMMA  shift, and go to state 467

    $default  reduce using rule 39 (array_ele)


State 454

  226 argument_list: argument_list SEMI_COLUMN . argument

    IDENTIFIER   shift, and go to state 249
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    p_type         go to state 257
    expr           go to state 432
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262
    argument       go to state 468


State 455

  245 case_body: CASE expr SEMI_COLUMN BREAK SEMI_COMA .

    $default  reduce using rule 245 (case_body)


State 456

  243 case_body: CASE expr SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 469


State 457

  246 default_case: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 246 (default_case)


State 458

  175 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 175 (for_loop_header)


State 459

  176 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 176 (for_loop_header)


State 460

  177 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P .

    $default  reduce using rule 177 (for_loop_header)


State 461

  174 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 470


State 462

  263 catch_list: CATCH OPEN_S type IDENTIFIER CLOSE_S . statement

    IDENTIFIER  shift, and go to state 172
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 174
    VOID        shift, and go to state 71
    FOR         shift, and go to state 175
    WHILE       shift, and go to state 176
    IF          shift, and go to state 177
    DO          shift, and go to state 178
    SWITCH      shift, and go to state 179
    ENUM        shift, and go to state 180
    OPEN_ARR    shift, and go to state 181
    RETURN      shift, and go to state 182
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 183
    AT_ASM      shift, and go to state 184

    type                        go to state 185
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 186
    block_body_header           go to state 119
    statement                   go to state 471
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 463

  264 catch_list: catch_list CATCH OPEN_S type IDENTIFIER . CLOSE_S statement

    CLOSE_S  shift, and go to state 472


State 464

   40 array_ele: OPEN_S CLOSE_S .
   43          | OPEN_S CLOSE_S . COMMA array_ele

    COMMA  shift, and go to state 473

    $default  reduce using rule 40 (array_ele)


State 465

   41 array_ele: OPEN_S array_ele . CLOSE_S COMMA array_ele
   42          | OPEN_S array_ele . CLOSE_S

    CLOSE_S  shift, and go to state 474


State 466

   36 array_body: OPEN_S array_ele CLOSE_S .

    $default  reduce using rule 36 (array_body)


State 467

   38 array_ele: expr COMMA . array_ele

    IDENTIFIER   shift, and go to state 249
    OPEN_S       shift, and go to state 450
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    array_ele      go to state 475
    p_type         go to state 257
    expr           go to state 453
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 468

  226 argument_list: argument_list SEMI_COLUMN argument .

    $default  reduce using rule 226 (argument_list)


State 469

  243 case_body: CASE expr SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 243 (case_body)


State 470

  174 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 174 (for_loop_header)


State 471

  263 catch_list: CATCH OPEN_S type IDENTIFIER CLOSE_S statement .

    $default  reduce using rule 263 (catch_list)


State 472

  264 catch_list: catch_list CATCH OPEN_S type IDENTIFIER CLOSE_S . statement

    IDENTIFIER  shift, and go to state 172
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 174
    VOID        shift, and go to state 71
    FOR         shift, and go to state 175
    WHILE       shift, and go to state 176
    IF          shift, and go to state 177
    DO          shift, and go to state 178
    SWITCH      shift, and go to state 179
    ENUM        shift, and go to state 180
    OPEN_ARR    shift, and go to state 181
    RETURN      shift, and go to state 182
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 183
    AT_ASM      shift, and go to state 184

    type                        go to state 185
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 186
    block_body_header           go to state 119
    statement                   go to state 476
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 473

   43 array_ele: OPEN_S CLOSE_S COMMA . array_ele

    IDENTIFIER   shift, and go to state 249
    OPEN_S       shift, and go to state 450
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    array_ele      go to state 477
    p_type         go to state 257
    expr           go to state 453
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 474

   41 array_ele: OPEN_S array_ele CLOSE_S . COMMA array_ele
   42          | OPEN_S array_ele CLOSE_S .

    COMMA  shift, and go to state 478

    $default  reduce using rule 42 (array_ele)


State 475

   38 array_ele: expr COMMA array_ele .

    $default  reduce using rule 38 (array_ele)


State 476

  264 catch_list: catch_list CATCH OPEN_S type IDENTIFIER CLOSE_S statement .

    $default  reduce using rule 264 (catch_list)


State 477

   43 array_ele: OPEN_S CLOSE_S COMMA array_ele .

    $default  reduce using rule 43 (array_ele)


State 478

   41 array_ele: OPEN_S array_ele CLOSE_S COMMA . array_ele

    IDENTIFIER   shift, and go to state 249
    OPEN_S       shift, and go to state 450
    OPEN_P       shift, and go to state 250
    STRING_VAL   shift, and go to state 251
    FLOAT_VAL    shift, and go to state 252
    CHAR_VAL     shift, and go to state 253
    INT_VAL      shift, and go to state 254
    OPEN_ARR     shift, and go to state 181
    DOUBLEPLUS   shift, and go to state 255
    DOUBLEMINUS  shift, and go to state 256

    array_ele      go to state 479
    p_type         go to state 257
    expr           go to state 453
    assign_expr    go to state 259
    long_id        go to state 260
    simple_expr    go to state 261
    message_call2  go to state 200
    message_call   go to state 262


State 479

   41 array_ele: OPEN_S array_ele CLOSE_S COMMA array_ele .

    $default  reduce using rule 41 (array_ele)
