Terminals unused in grammar

   ID
   SELF
   expr_1


Grammar

    0 $accept: program $end

    1 program: components

    2 components: components component
    3           | component

    4 component: class_interface
    5          | class_implementation
    6          | protocol
    7          | struct
    8          | enum

    9 class_interface: class_interface_header class_interface_body

   10 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
   11                       | AT_INTERFACE IDENTIFIER
   12                       | error IDENTIFIER
   13                       | AT_INTERFACE error
   14                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN error

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END
   16                     | protocol_reference_list instance_variables AT_END
   17                     | protocol_reference_list interface_declaration_list AT_END
   18                     | instance_variables interface_declaration_list AT_END
   19                     | protocol_reference_list AT_END
   20                     | instance_variables AT_END
   21                     | interface_declaration_list AT_END
   22                     | AT_END
   23                     | protocol_reference_list error AT_END
   24                     | protocol_reference_list error interface_declaration_list AT_END
   25                     | protocol_reference_list error
   26                     | protocol_reference_list instance_variables interface_declaration_list error
   27                     | protocol_reference_list instance_variables error
   28                     | protocol_reference_list interface_declaration_list error
   29                     | instance_variables interface_declaration_list error
   30                     | instance_variables error
   31                     | interface_declaration_list error

   32 protocol_reference_list: LESS_THAN ids_list_identifier MORE_THAN
   33                        | LESS_THAN ids_list_identifier error

   34 ids_list_identifier: ids_list_identifier COMMA IDENTIFIER
   35                    | IDENTIFIER

   36 array_body: OPEN_S array_ele CLOSE_S
   37           | OPEN_S CLOSE_S

   38 array_ele: expr COMMA array_ele
   39          | expr
   40          | OPEN_S CLOSE_S
   41          | OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | OPEN_S array_ele CLOSE_S
   43          | OPEN_S CLOSE_S COMMA array_ele

   44 instance_variables: OPEN_S instance_variable_declarations CLOSE_S
   45                   | OPEN_S CLOSE_S

   46 instance_variable_declarations: instance_variable_declarations instance_variable_declaration
   47                               | instance_variable_declaration
   48                               | variable_declaration_list

   49 instance_variable_declaration: visibility_specification variable_declaration_list

   50 variable_declaration_list: variable_declaration_list variable_declarationxx
   51                          | variable_declarationxx

   52 visibility_specification: AT_PRIVATE
   53                         | AT_PROTECTED
   54                         | AT_PUBLIC

   55 struct_variable_declaration: struct_declaration_list

   56 variable_declarationxx: type ids_list SEMI_COMA
   57                       | CONST type ids_list SEMI_COMA
   58                       | type IDENTIFIER array_tag error

   59 ids_list: ids_list COMMA data_member
   60         | data_member
   61         | error

   62 data_member: IDENTIFIER array_tag
   63            | IDENTIFIER
   64            | error array_tag
   65            | IDENTIFIER error

   66 struct_declaration_list: struct_declaration_list variable_declarationxx
   67                        | variable_declarationxx
   68                        | error variable_declarationxx

   69 struct_header: STRUCT IDENTIFIER

   70 struct: struct_header OPEN_S CLOSE_S entity SEMI_COMA
   71       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | struct_header OPEN_S CLOSE_S SEMI_COMA
   73       | struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   74       | struct_header OPEN_S CLOSE_S entity error SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | struct_header OPEN_S CLOSE_S error SEMI_COMA
   77       | struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA

   78 entity: IDENTIFIER COMMA entity
   79       | IDENTIFIER
   80       | error COMMA

   81 type: simple_type
   82     | complex_type
   83     | struct_type
   84     | enum_type

   85 struct_type: STRUCT IDENTIFIER
   86            | STRUCT IDENTIFIER MULTI

   87 enum_type: ENUM IDENTIFIER
   88          | ENUM IDENTIFIER MULTI

   89 simple_type: INT
   90            | CHAR
   91            | FLOAT
   92            | NSSTRING
   93            | VOID
   94            | BOOL

   95 complex_type: IDENTIFIER MULTI

   96 array_tag: array_first_tag array_tag_list

   97 array_tag_list: array_tag_list OPEN_ARR INT_VAL CLOSE_ARR
   98               | %empty
   99               | array_tag_list OPEN_ARR error CLOSE_ARR

  100 array_first_tag: OPEN_ARR INT_VAL CLOSE_ARR
  101                | OPEN_ARR CLOSE_ARR

  102 initializer: EQUAL array_body
  103            | %empty

  104 main_initializer: EQUAL expr
  105                 | %empty

  106 interface_declaration_list: interface_declaration_list interface_declaration
  107                           | interface_declaration

  108 interface_declaration: class_method_declaration
  109                      | instance_method_declaration

  110 class_method_declaration: PLUS p_type method_selectors SEMI_COMA
  111                         | PLUS method_selectors SEMI_COMA
  112                         | PLUS p_type method_selectors error
  113                         | PLUS method_selectors error

  114 instance_method_declaration: MINUS p_type method_selectors SEMI_COMA
  115                            | MINUS method_selectors SEMI_COMA

  116 p_type: OPEN_P type CLOSE_P

  117 method_selectors: selectors_list
  118                 | IDENTIFIER

  119 selectors_list: selectors_list selector_decleration
  120               | selector_decleration

  121 selector_decleration: IDENTIFIER SEMI_COLUMN parameter_list

  122 parameter_list: parameter_list SEMI_COLUMN parameter
  123               | parameter

  124 parameter: p_type IDENTIFIER

  125 class_implementation: class_implementation_header class_implementation_body

  126 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  127                            | AT_IMPLEMENTATION IDENTIFIER

  128 class_implementation_body: instance_variables implementation_definition_list AT_END
  129                          | instance_variables AT_END
  130                          | implementation_definition_list AT_END
  131                          | AT_END

  132 implementation_definition_list: implementation_definition_list implementation_definition
  133                               | implementation_definition

  134 implementation_definition: class_implementation_definition
  135                          | instance_implementation_definition

  136 class_implementation_definition: class_implementation_definition_header block_body

  137 class_implementation_definition_header: PLUS p_type method_selectors
  138                                       | PLUS method_selectors

  139 instance_implementation_definition: instance_implementation_definition_header block_body

  140 instance_implementation_definition_header: MINUS p_type method_selectors
  141                                          | MINUS method_selectors

  142 block_body: block_body_header block_body_statements

  143 block_body_header: OPEN_S

  144 block_body_statements: statement_list CLOSE_S
  145                      | CLOSE_S
  146                      | error CLOSE_S

  147 statement_list: statement_list statement
  148               | statement

  149 statement: loop_statement
  150          | conditional_statement
  151          | assign_expr SEMI_COMA
  152          | variable_declaration_block
  153          | block_body
  154          | return_statement
  155          | try_catch
  156          | asm
  157          | message_call SEMI_COMA
  158          | error SEMI_COMA

  159 asm: AT_ASM STRING_VAL SEMI_COMA

  160 variable_declaration_block: type variable_list SEMI_COMA
  161                           | CONST type variable_list SEMI_COMA
  162                           | enum

  163 variable_list: variable_list COMMA variable
  164              | variable
  165              | variable_list error variable

  166 variable: IDENTIFIER array_tag initializer
  167         | IDENTIFIER main_initializer
  168         | error array_tag initializer

  169 return_statement: RETURN expr SEMI_COMA

  170 loop_statement: for_loop
  171               | while_loop
  172               | do_while

  173 do_while: do_header statement while_loop_header SEMI_COMA

  174 do_header: DO

  175 for_loop: for_loop_header statement

  176 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  177                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  178                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  180                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  181                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  182                | FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  183                | FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

  184 for_initializer: INT IDENTIFIER EQUAL expr
  185                | IDENTIFIER EQUAL expr
  186                | IDENTIFIER

  187 logic_expr: expr LESS_THAN expr
  188           | expr MORE_THAN expr
  189           | expr LESS_OR_EQUAL expr
  190           | expr MORE_OR_EQUAL expr
  191           | expr EQUAL_EQUAL expr
  192           | NOT_EQUAL expr
  193           | OPEN_P logic_expr CLOSE_P
  194           | logic_expr AND_AND logic_expr
  195           | logic_expr OR_OR logic_expr
  196           | TRUE
  197           | FALSE

  198 expr: assign_expr
  199     | simple_expr

  200 assign_expr: long_id EQUAL simple_expr

  201 long_id: long_id DOT IDENTIFIER
  202        | message_call
  203        | IDENTIFIER

  204 simple_expr: STRING_VAL
  205            | INT_VAL
  206            | FLOAT_VAL
  207            | CHAR_VAL
  208            | long_id
  209            | simple_expr PLUS simple_expr
  210            | simple_expr MINUS simple_expr
  211            | simple_expr MULTI simple_expr
  212            | simple_expr DIV simple_expr
  213            | OPEN_P simple_expr CLOSE_P
  214            | IDENTIFIER DOUBLEPLUS
  215            | IDENTIFIER DOUBLEMINUS
  216            | DOUBLEPLUS IDENTIFIER
  217            | DOUBLEMINUS IDENTIFIER
  218            | p_type simple_expr

  219 message_call2: OPEN_ARR

  220 message_call: message_call2 sender message CLOSE_ARR

  221 sender: message_call
  222       | IDENTIFIER

  223 message: IDENTIFIER
  224        | message_selectors_list

  225 message_selectors_list: message_selectors_list message_selector
  226                       | message_selector

  227 message_selector: IDENTIFIER SEMI_COLUMN argument_list

  228 argument_list: argument_list SEMI_COLUMN argument
  229              | argument

  230 argument: expr

  231 while_loop: while_loop_header statement

  232 while_loop_header: WHILE OPEN_P logic_expr CLOSE_P

  233 conditional_statement: if_header statement
  234                      | if_header statement ELSE statement
  235                      | switch_header switch_body

  236 if_header: IF OPEN_P logic_expr CLOSE_P

  237 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block

  238 switch_body_block: OPEN_S

  239 switch_body: list_of_case default_case CLOSE_S
  240            | list_of_case CLOSE_S
  241            | default_case CLOSE_S
  242            | CLOSE_S

  243 list_of_case: list_of_case case_body
  244             | case_body

  245 case_body: CASE expr SEMI_COLUMN statement BREAK SEMI_COMA
  246          | CASE expr SEMI_COLUMN statement
  247          | CASE expr SEMI_COLUMN BREAK SEMI_COMA

  248 default_case: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  249             | DEFAULT SEMI_COLUMN statement
  250             | DEFAULT SEMI_COLUMN BREAK SEMI_COMA

  251 protocol: protocol_header protocol_body

  252 protocol_header: AT_PROTOCOL IDENTIFIER

  253 protocol_body: protocol_reference_list interface_declaration_list AT_END
  254              | interface_declaration_list AT_END
  255              | protocol_reference_list AT_END
  256              | AT_END

  257 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  258     | ENUM IDENTIFIER SEMI_COMA

  259 list_expr: IDENTIFIER EQUAL expr COMMA list_expr
  260          | IDENTIFIER EQUAL expr
  261          | IDENTIFIER
  262          | IDENTIFIER COMMA list_expr

  263 try_catch: TRY statement catch_list finally_statement
  264          | TRY statement catch_list

  265 catch_list: CATCH OPEN_S type IDENTIFIER CLOSE_S statement
  266           | catch_list CATCH OPEN_S type IDENTIFIER CLOSE_S statement

  267 finally_statement: FINALLY statement


Terminals, with rules where they appear

$end (0) 0
error (256) 12 13 14 23 24 25 26 27 28 29 30 31 33 58 61 64 65 68 74
    75 76 77 80 99 112 113 146 158 165 168
AT_INTERFACE (258) 10 11 13 14
IDENTIFIER (259) 10 11 12 14 34 35 58 62 63 65 69 78 79 85 86 87 88
    95 118 121 124 126 127 166 167 184 185 186 201 203 214 215 216
    217 222 223 227 237 252 257 258 259 260 261 262 265 266
SEMI_COLUMN (260) 10 14 121 122 126 227 228 245 246 247 248 249 250
NSSTRING (261) 92
FLOAT (262) 91
CHAR (263) 90
BOOL (264) 94
INT (265) 89 184
SEMI_COMA (266) 56 57 70 71 72 73 74 75 76 77 110 111 114 115 151 157
    158 159 160 161 169 173 176 177 178 179 180 181 182 183 245 247
    248 250 257 258
ID (267)
AT_PUBLIC (268) 54
AT_PROTECTED (269) 53
AT_PRIVATE (270) 52
OPEN_S (271) 36 37 40 41 42 43 44 45 70 71 72 73 74 75 76 77 143 238
    257 265 266
CLOSE_S (272) 36 37 40 41 42 43 44 45 70 71 72 73 74 75 76 77 144 145
    146 239 240 241 242 257 265 266
COMMA (273) 34 38 41 43 59 78 80 163 259 262
LESS_THAN (274) 32 33 187
MORE_THAN (275) 32 188
AT_END (276) 15 16 17 18 19 20 21 22 23 24 128 129 130 131 253 254
    255 256
CONST (277) 57 161
VOID (278) 93
PLUS (279) 110 111 112 113 137 138 209
MINUS (280) 114 115 140 141 210
OPEN_P (281) 116 176 177 178 179 180 181 182 183 193 213 232 236 237
CLOSE_P (282) 116 176 177 178 179 180 181 182 183 193 213 232 236 237
AT_IMPLEMENTATION (283) 126 127
AND_AND (284) 194
OR_OR (285) 195
STRING_VAL (286) 159 204
FLOAT_VAL (287) 206
LESS_OR_EQUAL (288) 189
CHAR_VAL (289) 207
INT_VAL (290) 97 100 205
MORE_OR_EQUAL (291) 190
MULTI (292) 86 88 95 211
EQUAL_EQUAL (293) 191
NOT_EQUAL (294) 192
FOR (295) 176 177 178 179 180 181 182 183
EQUAL (296) 102 104 184 185 200 259 260
DIV (297) 212
WHILE (298) 232
IF (299) 236
DO (300) 174
SWITCH (301) 237
CASE (302) 245 246 247
DEFAULT (303) 248 249 250
BREAK (304) 245 247 248 250
ENUM (305) 87 88 257 258
OPEN_ARR (306) 97 99 100 101 219
CLOSE_ARR (307) 97 99 100 101 220
TRUE (308) 196
FALSE (309) 197
RETURN (310) 169
AT_PROTOCOL (311) 252
ELSE (312) 234
STRUCT (313) 69 85 86
DOT (314) 201
DOUBLEPLUS (315) 214 216
DOUBLEMINUS (316) 215 217
TRY (317) 263 264
CATCH (318) 265 266
FINALLY (319) 267
AT_ASM (320) 159
SELF (321)
if_h (322)
expr_1 (323)
p_type_expr_prec (324)
long_id_prec (325)
try_prec (326)


Nonterminals, with rules where they appear

$accept (72)
    on left: 0
program (73)
    on left: 1, on right: 0
components (74)
    on left: 2 3, on right: 1 2
component (75)
    on left: 4 5 6 7 8, on right: 2 3
class_interface (76)
    on left: 9, on right: 4
class_interface_header (77)
    on left: 10 11 12 13 14, on right: 9
class_interface_body (78)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31, on right:
    9
protocol_reference_list (79)
    on left: 32 33, on right: 15 16 17 19 23 24 25 26 27 28 253 255
ids_list_identifier (80)
    on left: 34 35, on right: 32 33 34
array_body (81)
    on left: 36 37, on right: 102
array_ele (82)
    on left: 38 39 40 41 42 43, on right: 36 38 41 42 43
instance_variables (83)
    on left: 44 45, on right: 15 16 18 20 26 27 29 30 128 129
instance_variable_declarations (84)
    on left: 46 47 48, on right: 44 46
instance_variable_declaration (85)
    on left: 49, on right: 46 47
variable_declaration_list (86)
    on left: 50 51, on right: 48 49 50
visibility_specification (87)
    on left: 52 53 54, on right: 49
struct_variable_declaration (88)
    on left: 55, on right: 71 73 75 77
variable_declarationxx (89)
    on left: 56 57 58, on right: 50 51 66 67 68
ids_list (90)
    on left: 59 60 61, on right: 56 57 59
data_member (91)
    on left: 62 63 64 65, on right: 59 60
struct_declaration_list (92)
    on left: 66 67 68, on right: 55 66
struct_header (93)
    on left: 69, on right: 70 71 72 73 74 75 76 77
struct (94)
    on left: 70 71 72 73 74 75 76 77, on right: 7
entity (95)
    on left: 78 79 80, on right: 70 71 74 75 78
type (96)
    on left: 81 82 83 84, on right: 56 57 58 116 160 161 265 266
struct_type (97)
    on left: 85 86, on right: 83
enum_type (98)
    on left: 87 88, on right: 84
simple_type (99)
    on left: 89 90 91 92 93 94, on right: 81
complex_type (100)
    on left: 95, on right: 82
array_tag (101)
    on left: 96, on right: 58 62 64 166 168
array_tag_list (102)
    on left: 97 98 99, on right: 96 97 99
array_first_tag (103)
    on left: 100 101, on right: 96
initializer (104)
    on left: 102 103, on right: 166 168
main_initializer (105)
    on left: 104 105, on right: 167
interface_declaration_list (106)
    on left: 106 107, on right: 15 17 18 21 24 26 28 29 31 106 253
    254
interface_declaration (107)
    on left: 108 109, on right: 106 107
class_method_declaration (108)
    on left: 110 111 112 113, on right: 108
instance_method_declaration (109)
    on left: 114 115, on right: 109
p_type (110)
    on left: 116, on right: 110 112 114 124 137 140 218
method_selectors (111)
    on left: 117 118, on right: 110 111 112 113 114 115 137 138 140
    141
selectors_list (112)
    on left: 119 120, on right: 117 119
selector_decleration (113)
    on left: 121, on right: 119 120
parameter_list (114)
    on left: 122 123, on right: 121 122
parameter (115)
    on left: 124, on right: 122 123
class_implementation (116)
    on left: 125, on right: 5
class_implementation_header (117)
    on left: 126 127, on right: 125
class_implementation_body (118)
    on left: 128 129 130 131, on right: 125
implementation_definition_list (119)
    on left: 132 133, on right: 128 130 132
implementation_definition (120)
    on left: 134 135, on right: 132 133
class_implementation_definition (121)
    on left: 136, on right: 134
class_implementation_definition_header (122)
    on left: 137 138, on right: 136
instance_implementation_definition (123)
    on left: 139, on right: 135
instance_implementation_definition_header (124)
    on left: 140 141, on right: 139
block_body (125)
    on left: 142, on right: 136 139 153
block_body_header (126)
    on left: 143, on right: 142
block_body_statements (127)
    on left: 144 145 146, on right: 142
statement_list (128)
    on left: 147 148, on right: 144 147
statement (129)
    on left: 149 150 151 152 153 154 155 156 157 158, on right: 147
    148 173 175 231 233 234 245 246 248 249 263 264 265 266 267
asm (130)
    on left: 159, on right: 156
variable_declaration_block (131)
    on left: 160 161 162, on right: 152
variable_list (132)
    on left: 163 164 165, on right: 160 161 163 165
variable (133)
    on left: 166 167 168, on right: 163 164 165
return_statement (134)
    on left: 169, on right: 154
loop_statement (135)
    on left: 170 171 172, on right: 149
do_while (136)
    on left: 173, on right: 172
do_header (137)
    on left: 174, on right: 173
for_loop (138)
    on left: 175, on right: 170
for_loop_header (139)
    on left: 176 177 178 179 180 181 182 183, on right: 175
for_initializer (140)
    on left: 184 185 186, on right: 176 178 179 180
logic_expr (141)
    on left: 187 188 189 190 191 192 193 194 195 196 197, on right:
    176 177 179 181 193 194 195 232 236
expr (142)
    on left: 198 199, on right: 38 39 104 169 176 177 178 182 184 185
    187 188 189 190 191 192 230 245 246 247 259 260
assign_expr (143)
    on left: 200, on right: 151 198
long_id (144)
    on left: 201 202 203, on right: 200 201 208
simple_expr (145)
    on left: 204 205 206 207 208 209 210 211 212 213 214 215 216 217
    218, on right: 199 200 209 210 211 212 213 218
message_call2 (146)
    on left: 219, on right: 220
message_call (147)
    on left: 220, on right: 157 202 221
sender (148)
    on left: 221 222, on right: 220
message (149)
    on left: 223 224, on right: 220
message_selectors_list (150)
    on left: 225 226, on right: 224 225
message_selector (151)
    on left: 227, on right: 225 226
argument_list (152)
    on left: 228 229, on right: 227 228
argument (153)
    on left: 230, on right: 228 229
while_loop (154)
    on left: 231, on right: 171
while_loop_header (155)
    on left: 232, on right: 173 231
conditional_statement (156)
    on left: 233 234 235, on right: 150
if_header (157)
    on left: 236, on right: 233 234
switch_header (158)
    on left: 237, on right: 235
switch_body_block (159)
    on left: 238, on right: 237
switch_body (160)
    on left: 239 240 241 242, on right: 235
list_of_case (161)
    on left: 243 244, on right: 239 240 243
case_body (162)
    on left: 245 246 247, on right: 243 244
default_case (163)
    on left: 248 249 250, on right: 239 241
protocol (164)
    on left: 251, on right: 6
protocol_header (165)
    on left: 252, on right: 251
protocol_body (166)
    on left: 253 254 255 256, on right: 251
enum (167)
    on left: 257 258, on right: 8 162
list_expr (168)
    on left: 259 260 261 262, on right: 257 259 262
try_catch (169)
    on left: 263 264, on right: 155
catch_list (170)
    on left: 265 266, on right: 263 264 266
finally_statement (171)
    on left: 267, on right: 263


State 0

    0 $accept: . program $end
    1 program: . components
    2 components: . components component
    3           | . component
    4 component: . class_interface
    5          | . class_implementation
    6          | . protocol
    7          | . struct
    8          | . enum
    9 class_interface: . class_interface_header class_interface_body
   10 class_interface_header: . AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
   11                       | . AT_INTERFACE IDENTIFIER
   12                       | . error IDENTIFIER
   13                       | . AT_INTERFACE error
   14                       | . AT_INTERFACE IDENTIFIER SEMI_COLUMN error
   69 struct_header: . STRUCT IDENTIFIER
   70 struct: . struct_header OPEN_S CLOSE_S entity SEMI_COMA
   71       | . struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | . struct_header OPEN_S CLOSE_S SEMI_COMA
   73       | . struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   74       | . struct_header OPEN_S CLOSE_S entity error SEMI_COMA
   75       | . struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | . struct_header OPEN_S CLOSE_S error SEMI_COMA
   77       | . struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA
  125 class_implementation: . class_implementation_header class_implementation_body
  126 class_implementation_header: . AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  127                            | . AT_IMPLEMENTATION IDENTIFIER
  251 protocol: . protocol_header protocol_body
  252 protocol_header: . AT_PROTOCOL IDENTIFIER
  257 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  258     | . ENUM IDENTIFIER SEMI_COMA

    error              shift, and go to state 1
    AT_INTERFACE       shift, and go to state 2
    AT_IMPLEMENTATION  shift, and go to state 3
    ENUM               shift, and go to state 4
    AT_PROTOCOL        shift, and go to state 5
    STRUCT             shift, and go to state 6

    program                      go to state 7
    components                   go to state 8
    component                    go to state 9
    class_interface              go to state 10
    class_interface_header       go to state 11
    struct_header                go to state 12
    struct                       go to state 13
    class_implementation         go to state 14
    class_implementation_header  go to state 15
    protocol                     go to state 16
    protocol_header              go to state 17
    enum                         go to state 18


State 1

   12 class_interface_header: error . IDENTIFIER

    IDENTIFIER  shift, and go to state 19


State 2

   10 class_interface_header: AT_INTERFACE . IDENTIFIER SEMI_COLUMN IDENTIFIER
   11                       | AT_INTERFACE . IDENTIFIER
   13                       | AT_INTERFACE . error
   14                       | AT_INTERFACE . IDENTIFIER SEMI_COLUMN error

    error       shift, and go to state 20
    IDENTIFIER  shift, and go to state 21


State 3

  126 class_implementation_header: AT_IMPLEMENTATION . IDENTIFIER SEMI_COLUMN IDENTIFIER
  127                            | AT_IMPLEMENTATION . IDENTIFIER

    IDENTIFIER  shift, and go to state 22


State 4

  257 enum: ENUM . IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  258     | ENUM . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 23


State 5

  252 protocol_header: AT_PROTOCOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 24


State 6

   69 struct_header: STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 25


State 7

    0 $accept: program . $end

    $end  shift, and go to state 26


State 8

    1 program: components .  [$end]
    2 components: components . component
    4 component: . class_interface
    5          | . class_implementation
    6          | . protocol
    7          | . struct
    8          | . enum
    9 class_interface: . class_interface_header class_interface_body
   10 class_interface_header: . AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
   11                       | . AT_INTERFACE IDENTIFIER
   12                       | . error IDENTIFIER
   13                       | . AT_INTERFACE error
   14                       | . AT_INTERFACE IDENTIFIER SEMI_COLUMN error
   69 struct_header: . STRUCT IDENTIFIER
   70 struct: . struct_header OPEN_S CLOSE_S entity SEMI_COMA
   71       | . struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | . struct_header OPEN_S CLOSE_S SEMI_COMA
   73       | . struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   74       | . struct_header OPEN_S CLOSE_S entity error SEMI_COMA
   75       | . struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | . struct_header OPEN_S CLOSE_S error SEMI_COMA
   77       | . struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA
  125 class_implementation: . class_implementation_header class_implementation_body
  126 class_implementation_header: . AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  127                            | . AT_IMPLEMENTATION IDENTIFIER
  251 protocol: . protocol_header protocol_body
  252 protocol_header: . AT_PROTOCOL IDENTIFIER
  257 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  258     | . ENUM IDENTIFIER SEMI_COMA

    error              shift, and go to state 1
    AT_INTERFACE       shift, and go to state 2
    AT_IMPLEMENTATION  shift, and go to state 3
    ENUM               shift, and go to state 4
    AT_PROTOCOL        shift, and go to state 5
    STRUCT             shift, and go to state 6

    $end  reduce using rule 1 (program)

    component                    go to state 27
    class_interface              go to state 10
    class_interface_header       go to state 11
    struct_header                go to state 12
    struct                       go to state 13
    class_implementation         go to state 14
    class_implementation_header  go to state 15
    protocol                     go to state 16
    protocol_header              go to state 17
    enum                         go to state 18


State 9

    3 components: component .

    $default  reduce using rule 3 (components)


State 10

    4 component: class_interface .

    $default  reduce using rule 4 (component)


State 11

    9 class_interface: class_interface_header . class_interface_body
   15 class_interface_body: . protocol_reference_list instance_variables interface_declaration_list AT_END
   16                     | . protocol_reference_list instance_variables AT_END
   17                     | . protocol_reference_list interface_declaration_list AT_END
   18                     | . instance_variables interface_declaration_list AT_END
   19                     | . protocol_reference_list AT_END
   20                     | . instance_variables AT_END
   21                     | . interface_declaration_list AT_END
   22                     | . AT_END
   23                     | . protocol_reference_list error AT_END
   24                     | . protocol_reference_list error interface_declaration_list AT_END
   25                     | . protocol_reference_list error
   26                     | . protocol_reference_list instance_variables interface_declaration_list error
   27                     | . protocol_reference_list instance_variables error
   28                     | . protocol_reference_list interface_declaration_list error
   29                     | . instance_variables interface_declaration_list error
   30                     | . instance_variables error
   31                     | . interface_declaration_list error
   32 protocol_reference_list: . LESS_THAN ids_list_identifier MORE_THAN
   33                        | . LESS_THAN ids_list_identifier error
   44 instance_variables: . OPEN_S instance_variable_declarations CLOSE_S
   45                   | . OPEN_S CLOSE_S
  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  115                            | . MINUS method_selectors SEMI_COMA

    OPEN_S     shift, and go to state 28
    LESS_THAN  shift, and go to state 29
    AT_END     shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32

    class_interface_body         go to state 33
    protocol_reference_list      go to state 34
    instance_variables           go to state 35
    interface_declaration_list   go to state 36
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 12

   70 struct: struct_header . OPEN_S CLOSE_S entity SEMI_COMA
   71       | struct_header . OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | struct_header . OPEN_S CLOSE_S SEMI_COMA
   73       | struct_header . OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   74       | struct_header . OPEN_S CLOSE_S entity error SEMI_COMA
   75       | struct_header . OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | struct_header . OPEN_S CLOSE_S error SEMI_COMA
   77       | struct_header . OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA

    OPEN_S  shift, and go to state 40


State 13

    7 component: struct .

    $default  reduce using rule 7 (component)


State 14

    5 component: class_implementation .

    $default  reduce using rule 5 (component)


State 15

   44 instance_variables: . OPEN_S instance_variable_declarations CLOSE_S
   45                   | . OPEN_S CLOSE_S
  125 class_implementation: class_implementation_header . class_implementation_body
  128 class_implementation_body: . instance_variables implementation_definition_list AT_END
  129                          | . instance_variables AT_END
  130                          | . implementation_definition_list AT_END
  131                          | . AT_END
  132 implementation_definition_list: . implementation_definition_list implementation_definition
  133                               | . implementation_definition
  134 implementation_definition: . class_implementation_definition
  135                          | . instance_implementation_definition
  136 class_implementation_definition: . class_implementation_definition_header block_body
  137 class_implementation_definition_header: . PLUS p_type method_selectors
  138                                       | . PLUS method_selectors
  139 instance_implementation_definition: . instance_implementation_definition_header block_body
  140 instance_implementation_definition_header: . MINUS p_type method_selectors
  141                                          | . MINUS method_selectors

    OPEN_S  shift, and go to state 28
    AT_END  shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    instance_variables                         go to state 44
    class_implementation_body                  go to state 45
    implementation_definition_list             go to state 46
    implementation_definition                  go to state 47
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 16

    6 component: protocol .

    $default  reduce using rule 6 (component)


State 17

   32 protocol_reference_list: . LESS_THAN ids_list_identifier MORE_THAN
   33                        | . LESS_THAN ids_list_identifier error
  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  115                            | . MINUS method_selectors SEMI_COMA
  251 protocol: protocol_header . protocol_body
  253 protocol_body: . protocol_reference_list interface_declaration_list AT_END
  254              | . interface_declaration_list AT_END
  255              | . protocol_reference_list AT_END
  256              | . AT_END

    LESS_THAN  shift, and go to state 29
    AT_END     shift, and go to state 52
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32

    protocol_reference_list      go to state 53
    interface_declaration_list   go to state 54
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39
    protocol_body                go to state 55


State 18

    8 component: enum .

    $default  reduce using rule 8 (component)


State 19

   12 class_interface_header: error IDENTIFIER .

    $default  reduce using rule 12 (class_interface_header)


State 20

   13 class_interface_header: AT_INTERFACE error .

    $default  reduce using rule 13 (class_interface_header)


State 21

   10 class_interface_header: AT_INTERFACE IDENTIFIER . SEMI_COLUMN IDENTIFIER
   11                       | AT_INTERFACE IDENTIFIER .  [OPEN_S, LESS_THAN, AT_END, PLUS, MINUS]
   14                       | AT_INTERFACE IDENTIFIER . SEMI_COLUMN error

    SEMI_COLUMN  shift, and go to state 56

    $default  reduce using rule 11 (class_interface_header)


State 22

  126 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER . SEMI_COLUMN IDENTIFIER
  127                            | AT_IMPLEMENTATION IDENTIFIER .  [OPEN_S, AT_END, PLUS, MINUS]

    SEMI_COLUMN  shift, and go to state 57

    $default  reduce using rule 127 (class_implementation_header)


State 23

  257 enum: ENUM IDENTIFIER . OPEN_S list_expr CLOSE_S SEMI_COMA
  258     | ENUM IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 58
    OPEN_S     shift, and go to state 59


State 24

  252 protocol_header: AT_PROTOCOL IDENTIFIER .

    $default  reduce using rule 252 (protocol_header)


State 25

   69 struct_header: STRUCT IDENTIFIER .

    $default  reduce using rule 69 (struct_header)


State 26

    0 $accept: program $end .

    $default  accept


State 27

    2 components: components component .

    $default  reduce using rule 2 (components)


State 28

   44 instance_variables: OPEN_S . instance_variable_declarations CLOSE_S
   45                   | OPEN_S . CLOSE_S
   46 instance_variable_declarations: . instance_variable_declarations instance_variable_declaration
   47                               | . instance_variable_declaration
   48                               | . variable_declaration_list
   49 instance_variable_declaration: . visibility_specification variable_declaration_list
   50 variable_declaration_list: . variable_declaration_list variable_declarationxx
   51                          | . variable_declarationxx
   52 visibility_specification: . AT_PRIVATE
   53                         | . AT_PROTECTED
   54                         | . AT_PUBLIC
   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    IDENTIFIER    shift, and go to state 60
    NSSTRING      shift, and go to state 61
    FLOAT         shift, and go to state 62
    CHAR          shift, and go to state 63
    BOOL          shift, and go to state 64
    INT           shift, and go to state 65
    AT_PUBLIC     shift, and go to state 66
    AT_PROTECTED  shift, and go to state 67
    AT_PRIVATE    shift, and go to state 68
    CLOSE_S       shift, and go to state 69
    CONST         shift, and go to state 70
    VOID          shift, and go to state 71
    ENUM          shift, and go to state 72
    STRUCT        shift, and go to state 73

    instance_variable_declarations  go to state 74
    instance_variable_declaration   go to state 75
    variable_declaration_list       go to state 76
    visibility_specification        go to state 77
    variable_declarationxx          go to state 78
    type                            go to state 79
    struct_type                     go to state 80
    enum_type                       go to state 81
    simple_type                     go to state 82
    complex_type                    go to state 83


State 29

   32 protocol_reference_list: LESS_THAN . ids_list_identifier MORE_THAN
   33                        | LESS_THAN . ids_list_identifier error
   34 ids_list_identifier: . ids_list_identifier COMMA IDENTIFIER
   35                    | . IDENTIFIER

    IDENTIFIER  shift, and go to state 84

    ids_list_identifier  go to state 85


State 30

   22 class_interface_body: AT_END .

    $default  reduce using rule 22 (class_interface_body)


State 31

  110 class_method_declaration: PLUS . p_type method_selectors SEMI_COMA
  111                         | PLUS . method_selectors SEMI_COMA
  112                         | PLUS . p_type method_selectors error
  113                         | PLUS . method_selectors error
  116 p_type: . OPEN_P type CLOSE_P
  117 method_selectors: . selectors_list
  118                 | . IDENTIFIER
  119 selectors_list: . selectors_list selector_decleration
  120               | . selector_decleration
  121 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 86
    OPEN_P      shift, and go to state 87

    p_type                go to state 88
    method_selectors      go to state 89
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 32

  114 instance_method_declaration: MINUS . p_type method_selectors SEMI_COMA
  115                            | MINUS . method_selectors SEMI_COMA
  116 p_type: . OPEN_P type CLOSE_P
  117 method_selectors: . selectors_list
  118                 | . IDENTIFIER
  119 selectors_list: . selectors_list selector_decleration
  120               | . selector_decleration
  121 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 86
    OPEN_P      shift, and go to state 87

    p_type                go to state 92
    method_selectors      go to state 93
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 33

    9 class_interface: class_interface_header class_interface_body .

    $default  reduce using rule 9 (class_interface)


State 34

   15 class_interface_body: protocol_reference_list . instance_variables interface_declaration_list AT_END
   16                     | protocol_reference_list . instance_variables AT_END
   17                     | protocol_reference_list . interface_declaration_list AT_END
   19                     | protocol_reference_list . AT_END
   23                     | protocol_reference_list . error AT_END
   24                     | protocol_reference_list . error interface_declaration_list AT_END
   25                     | protocol_reference_list . error
   26                     | protocol_reference_list . instance_variables interface_declaration_list error
   27                     | protocol_reference_list . instance_variables error
   28                     | protocol_reference_list . interface_declaration_list error
   44 instance_variables: . OPEN_S instance_variable_declarations CLOSE_S
   45                   | . OPEN_S CLOSE_S
  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  115                            | . MINUS method_selectors SEMI_COMA

    error   shift, and go to state 94
    OPEN_S  shift, and go to state 28
    AT_END  shift, and go to state 95
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    instance_variables           go to state 96
    interface_declaration_list   go to state 97
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 35

   18 class_interface_body: instance_variables . interface_declaration_list AT_END
   20                     | instance_variables . AT_END
   29                     | instance_variables . interface_declaration_list error
   30                     | instance_variables . error
  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  115                            | . MINUS method_selectors SEMI_COMA

    error   shift, and go to state 98
    AT_END  shift, and go to state 99
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 100
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 36

   21 class_interface_body: interface_declaration_list . AT_END
   31                     | interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  115                            | . MINUS method_selectors SEMI_COMA

    error   shift, and go to state 101
    AT_END  shift, and go to state 102
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 37

  107 interface_declaration_list: interface_declaration .

    $default  reduce using rule 107 (interface_declaration_list)


State 38

  108 interface_declaration: class_method_declaration .

    $default  reduce using rule 108 (interface_declaration)


State 39

  109 interface_declaration: instance_method_declaration .

    $default  reduce using rule 109 (interface_declaration)


State 40

   55 struct_variable_declaration: . struct_declaration_list
   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   66 struct_declaration_list: . struct_declaration_list variable_declarationxx
   67                        | . variable_declarationxx
   68                        | . error variable_declarationxx
   70 struct: struct_header OPEN_S . CLOSE_S entity SEMI_COMA
   71       | struct_header OPEN_S . struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | struct_header OPEN_S . CLOSE_S SEMI_COMA
   73       | struct_header OPEN_S . struct_variable_declaration CLOSE_S SEMI_COMA
   74       | struct_header OPEN_S . CLOSE_S entity error SEMI_COMA
   75       | struct_header OPEN_S . struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | struct_header OPEN_S . CLOSE_S error SEMI_COMA
   77       | struct_header OPEN_S . struct_variable_declaration CLOSE_S error SEMI_COMA
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    error       shift, and go to state 104
    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CLOSE_S     shift, and go to state 105
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    struct_variable_declaration  go to state 106
    variable_declarationxx       go to state 107
    struct_declaration_list      go to state 108
    type                         go to state 79
    struct_type                  go to state 80
    enum_type                    go to state 81
    simple_type                  go to state 82
    complex_type                 go to state 83


State 41

  131 class_implementation_body: AT_END .

    $default  reduce using rule 131 (class_implementation_body)


State 42

  116 p_type: . OPEN_P type CLOSE_P
  117 method_selectors: . selectors_list
  118                 | . IDENTIFIER
  119 selectors_list: . selectors_list selector_decleration
  120               | . selector_decleration
  121 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list
  137 class_implementation_definition_header: PLUS . p_type method_selectors
  138                                       | PLUS . method_selectors

    IDENTIFIER  shift, and go to state 86
    OPEN_P      shift, and go to state 87

    p_type                go to state 109
    method_selectors      go to state 110
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 43

  116 p_type: . OPEN_P type CLOSE_P
  117 method_selectors: . selectors_list
  118                 | . IDENTIFIER
  119 selectors_list: . selectors_list selector_decleration
  120               | . selector_decleration
  121 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list
  140 instance_implementation_definition_header: MINUS . p_type method_selectors
  141                                          | MINUS . method_selectors

    IDENTIFIER  shift, and go to state 86
    OPEN_P      shift, and go to state 87

    p_type                go to state 111
    method_selectors      go to state 112
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 44

  128 class_implementation_body: instance_variables . implementation_definition_list AT_END
  129                          | instance_variables . AT_END
  132 implementation_definition_list: . implementation_definition_list implementation_definition
  133                               | . implementation_definition
  134 implementation_definition: . class_implementation_definition
  135                          | . instance_implementation_definition
  136 class_implementation_definition: . class_implementation_definition_header block_body
  137 class_implementation_definition_header: . PLUS p_type method_selectors
  138                                       | . PLUS method_selectors
  139 instance_implementation_definition: . instance_implementation_definition_header block_body
  140 instance_implementation_definition_header: . MINUS p_type method_selectors
  141                                          | . MINUS method_selectors

    AT_END  shift, and go to state 113
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition_list             go to state 114
    implementation_definition                  go to state 47
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 45

  125 class_implementation: class_implementation_header class_implementation_body .

    $default  reduce using rule 125 (class_implementation)


State 46

  130 class_implementation_body: implementation_definition_list . AT_END
  132 implementation_definition_list: implementation_definition_list . implementation_definition
  134 implementation_definition: . class_implementation_definition
  135                          | . instance_implementation_definition
  136 class_implementation_definition: . class_implementation_definition_header block_body
  137 class_implementation_definition_header: . PLUS p_type method_selectors
  138                                       | . PLUS method_selectors
  139 instance_implementation_definition: . instance_implementation_definition_header block_body
  140 instance_implementation_definition_header: . MINUS p_type method_selectors
  141                                          | . MINUS method_selectors

    AT_END  shift, and go to state 115
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition                  go to state 116
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 47

  133 implementation_definition_list: implementation_definition .

    $default  reduce using rule 133 (implementation_definition_list)


State 48

  134 implementation_definition: class_implementation_definition .

    $default  reduce using rule 134 (implementation_definition)


State 49

  136 class_implementation_definition: class_implementation_definition_header . block_body
  142 block_body: . block_body_header block_body_statements
  143 block_body_header: . OPEN_S

    OPEN_S  shift, and go to state 117

    block_body         go to state 118
    block_body_header  go to state 119


State 50

  135 implementation_definition: instance_implementation_definition .

    $default  reduce using rule 135 (implementation_definition)


State 51

  139 instance_implementation_definition: instance_implementation_definition_header . block_body
  142 block_body: . block_body_header block_body_statements
  143 block_body_header: . OPEN_S

    OPEN_S  shift, and go to state 117

    block_body         go to state 120
    block_body_header  go to state 119


State 52

  256 protocol_body: AT_END .

    $default  reduce using rule 256 (protocol_body)


State 53

  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  115                            | . MINUS method_selectors SEMI_COMA
  253 protocol_body: protocol_reference_list . interface_declaration_list AT_END
  255              | protocol_reference_list . AT_END

    AT_END  shift, and go to state 121
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 122
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 54

  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  115                            | . MINUS method_selectors SEMI_COMA
  254 protocol_body: interface_declaration_list . AT_END

    AT_END  shift, and go to state 123
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 55

  251 protocol: protocol_header protocol_body .

    $default  reduce using rule 251 (protocol)


State 56

   10 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN . IDENTIFIER
   14                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN . error

    error       shift, and go to state 124
    IDENTIFIER  shift, and go to state 125


State 57

  126 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN . IDENTIFIER

    IDENTIFIER  shift, and go to state 126


State 58

  258 enum: ENUM IDENTIFIER SEMI_COMA .

    $default  reduce using rule 258 (enum)


State 59

  257 enum: ENUM IDENTIFIER OPEN_S . list_expr CLOSE_S SEMI_COMA
  259 list_expr: . IDENTIFIER EQUAL expr COMMA list_expr
  260          | . IDENTIFIER EQUAL expr
  261          | . IDENTIFIER
  262          | . IDENTIFIER COMMA list_expr

    IDENTIFIER  shift, and go to state 127

    list_expr  go to state 128


State 60

   95 complex_type: IDENTIFIER . MULTI

    MULTI  shift, and go to state 129


State 61

   92 simple_type: NSSTRING .

    $default  reduce using rule 92 (simple_type)


State 62

   91 simple_type: FLOAT .

    $default  reduce using rule 91 (simple_type)


State 63

   90 simple_type: CHAR .

    $default  reduce using rule 90 (simple_type)


State 64

   94 simple_type: BOOL .

    $default  reduce using rule 94 (simple_type)


State 65

   89 simple_type: INT .

    $default  reduce using rule 89 (simple_type)


State 66

   54 visibility_specification: AT_PUBLIC .

    $default  reduce using rule 54 (visibility_specification)


State 67

   53 visibility_specification: AT_PROTECTED .

    $default  reduce using rule 53 (visibility_specification)


State 68

   52 visibility_specification: AT_PRIVATE .

    $default  reduce using rule 52 (visibility_specification)


State 69

   45 instance_variables: OPEN_S CLOSE_S .

    $default  reduce using rule 45 (instance_variables)


State 70

   57 variable_declarationxx: CONST . type ids_list SEMI_COMA
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    type          go to state 130
    struct_type   go to state 80
    enum_type     go to state 81
    simple_type   go to state 82
    complex_type  go to state 83


State 71

   93 simple_type: VOID .

    $default  reduce using rule 93 (simple_type)


State 72

   87 enum_type: ENUM . IDENTIFIER
   88          | ENUM . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 131


State 73

   85 struct_type: STRUCT . IDENTIFIER
   86            | STRUCT . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 132


State 74

   44 instance_variables: OPEN_S instance_variable_declarations . CLOSE_S
   46 instance_variable_declarations: instance_variable_declarations . instance_variable_declaration
   49 instance_variable_declaration: . visibility_specification variable_declaration_list
   52 visibility_specification: . AT_PRIVATE
   53                         | . AT_PROTECTED
   54                         | . AT_PUBLIC

    AT_PUBLIC     shift, and go to state 66
    AT_PROTECTED  shift, and go to state 67
    AT_PRIVATE    shift, and go to state 68
    CLOSE_S       shift, and go to state 133

    instance_variable_declaration  go to state 134
    visibility_specification       go to state 77


State 75

   47 instance_variable_declarations: instance_variable_declaration .

    $default  reduce using rule 47 (instance_variable_declarations)


State 76

   48 instance_variable_declarations: variable_declaration_list .  [AT_PUBLIC, AT_PROTECTED, AT_PRIVATE, CLOSE_S]
   50 variable_declaration_list: variable_declaration_list . variable_declarationxx
   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    $default  reduce using rule 48 (instance_variable_declarations)

    variable_declarationxx  go to state 135
    type                    go to state 79
    struct_type             go to state 80
    enum_type               go to state 81
    simple_type             go to state 82
    complex_type            go to state 83


State 77

   49 instance_variable_declaration: visibility_specification . variable_declaration_list
   50 variable_declaration_list: . variable_declaration_list variable_declarationxx
   51                          | . variable_declarationxx
   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    variable_declaration_list  go to state 136
    variable_declarationxx     go to state 78
    type                       go to state 79
    struct_type                go to state 80
    enum_type                  go to state 81
    simple_type                go to state 82
    complex_type               go to state 83


State 78

   51 variable_declaration_list: variable_declarationxx .

    $default  reduce using rule 51 (variable_declaration_list)


State 79

   56 variable_declarationxx: type . ids_list SEMI_COMA
   58                       | type . IDENTIFIER array_tag error
   59 ids_list: . ids_list COMMA data_member
   60         | . data_member
   61         | . error
   62 data_member: . IDENTIFIER array_tag
   63            | . IDENTIFIER
   64            | . error array_tag
   65            | . IDENTIFIER error

    error       shift, and go to state 137
    IDENTIFIER  shift, and go to state 138

    ids_list     go to state 139
    data_member  go to state 140


State 80

   83 type: struct_type .

    $default  reduce using rule 83 (type)


State 81

   84 type: enum_type .

    $default  reduce using rule 84 (type)


State 82

   81 type: simple_type .

    $default  reduce using rule 81 (type)


State 83

   82 type: complex_type .

    $default  reduce using rule 82 (type)


State 84

   35 ids_list_identifier: IDENTIFIER .

    $default  reduce using rule 35 (ids_list_identifier)


State 85

   32 protocol_reference_list: LESS_THAN ids_list_identifier . MORE_THAN
   33                        | LESS_THAN ids_list_identifier . error
   34 ids_list_identifier: ids_list_identifier . COMMA IDENTIFIER

    error      shift, and go to state 141
    COMMA      shift, and go to state 142
    MORE_THAN  shift, and go to state 143


State 86

  118 method_selectors: IDENTIFIER .  [error, SEMI_COMA, OPEN_S]
  121 selector_decleration: IDENTIFIER . SEMI_COLUMN parameter_list

    SEMI_COLUMN  shift, and go to state 144

    $default  reduce using rule 118 (method_selectors)


State 87

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  116 p_type: OPEN_P . type CLOSE_P

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    type          go to state 145
    struct_type   go to state 80
    enum_type     go to state 81
    simple_type   go to state 82
    complex_type  go to state 83


State 88

  110 class_method_declaration: PLUS p_type . method_selectors SEMI_COMA
  112                         | PLUS p_type . method_selectors error
  117 method_selectors: . selectors_list
  118                 | . IDENTIFIER
  119 selectors_list: . selectors_list selector_decleration
  120               | . selector_decleration
  121 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 86

    method_selectors      go to state 146
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 89

  111 class_method_declaration: PLUS method_selectors . SEMI_COMA
  113                         | PLUS method_selectors . error

    error      shift, and go to state 147
    SEMI_COMA  shift, and go to state 148


State 90

  117 method_selectors: selectors_list .  [error, SEMI_COMA, OPEN_S]
  119 selectors_list: selectors_list . selector_decleration
  121 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 149

    $default  reduce using rule 117 (method_selectors)

    selector_decleration  go to state 150


State 91

  120 selectors_list: selector_decleration .

    $default  reduce using rule 120 (selectors_list)


State 92

  114 instance_method_declaration: MINUS p_type . method_selectors SEMI_COMA
  117 method_selectors: . selectors_list
  118                 | . IDENTIFIER
  119 selectors_list: . selectors_list selector_decleration
  120               | . selector_decleration
  121 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 86

    method_selectors      go to state 151
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 93

  115 instance_method_declaration: MINUS method_selectors . SEMI_COMA

    SEMI_COMA  shift, and go to state 152


State 94

   23 class_interface_body: protocol_reference_list error . AT_END
   24                     | protocol_reference_list error . interface_declaration_list AT_END
   25                     | protocol_reference_list error .  [$end, error, AT_INTERFACE, AT_IMPLEMENTATION, ENUM, AT_PROTOCOL, STRUCT]
  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  115                            | . MINUS method_selectors SEMI_COMA

    AT_END  shift, and go to state 153
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    $default  reduce using rule 25 (class_interface_body)

    interface_declaration_list   go to state 154
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 95

   19 class_interface_body: protocol_reference_list AT_END .

    $default  reduce using rule 19 (class_interface_body)


State 96

   15 class_interface_body: protocol_reference_list instance_variables . interface_declaration_list AT_END
   16                     | protocol_reference_list instance_variables . AT_END
   26                     | protocol_reference_list instance_variables . interface_declaration_list error
   27                     | protocol_reference_list instance_variables . error
  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  115                            | . MINUS method_selectors SEMI_COMA

    error   shift, and go to state 155
    AT_END  shift, and go to state 156
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 157
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 97

   17 class_interface_body: protocol_reference_list interface_declaration_list . AT_END
   28                     | protocol_reference_list interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  115                            | . MINUS method_selectors SEMI_COMA

    error   shift, and go to state 158
    AT_END  shift, and go to state 159
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 98

   30 class_interface_body: instance_variables error .

    $default  reduce using rule 30 (class_interface_body)


State 99

   20 class_interface_body: instance_variables AT_END .

    $default  reduce using rule 20 (class_interface_body)


State 100

   18 class_interface_body: instance_variables interface_declaration_list . AT_END
   29                     | instance_variables interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  115                            | . MINUS method_selectors SEMI_COMA

    error   shift, and go to state 160
    AT_END  shift, and go to state 161
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 101

   31 class_interface_body: interface_declaration_list error .

    $default  reduce using rule 31 (class_interface_body)


State 102

   21 class_interface_body: interface_declaration_list AT_END .

    $default  reduce using rule 21 (class_interface_body)


State 103

  106 interface_declaration_list: interface_declaration_list interface_declaration .

    $default  reduce using rule 106 (interface_declaration_list)


State 104

   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   68 struct_declaration_list: error . variable_declarationxx
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    variable_declarationxx  go to state 162
    type                    go to state 79
    struct_type             go to state 80
    enum_type               go to state 81
    simple_type             go to state 82
    complex_type            go to state 83


State 105

   70 struct: struct_header OPEN_S CLOSE_S . entity SEMI_COMA
   72       | struct_header OPEN_S CLOSE_S . SEMI_COMA
   74       | struct_header OPEN_S CLOSE_S . entity error SEMI_COMA
   76       | struct_header OPEN_S CLOSE_S . error SEMI_COMA
   78 entity: . IDENTIFIER COMMA entity
   79       | . IDENTIFIER
   80       | . error COMMA

    error       shift, and go to state 163
    IDENTIFIER  shift, and go to state 164
    SEMI_COMA   shift, and go to state 165

    entity  go to state 166


State 106

   71 struct: struct_header OPEN_S struct_variable_declaration . CLOSE_S entity SEMI_COMA
   73       | struct_header OPEN_S struct_variable_declaration . CLOSE_S SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration . CLOSE_S entity error SEMI_COMA
   77       | struct_header OPEN_S struct_variable_declaration . CLOSE_S error SEMI_COMA

    CLOSE_S  shift, and go to state 167


State 107

   67 struct_declaration_list: variable_declarationxx .

    $default  reduce using rule 67 (struct_declaration_list)


State 108

   55 struct_variable_declaration: struct_declaration_list .  [CLOSE_S]
   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   66 struct_declaration_list: struct_declaration_list . variable_declarationxx
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    $default  reduce using rule 55 (struct_variable_declaration)

    variable_declarationxx  go to state 168
    type                    go to state 79
    struct_type             go to state 80
    enum_type               go to state 81
    simple_type             go to state 82
    complex_type            go to state 83


State 109

  117 method_selectors: . selectors_list
  118                 | . IDENTIFIER
  119 selectors_list: . selectors_list selector_decleration
  120               | . selector_decleration
  121 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list
  137 class_implementation_definition_header: PLUS p_type . method_selectors

    IDENTIFIER  shift, and go to state 86

    method_selectors      go to state 169
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 110

  138 class_implementation_definition_header: PLUS method_selectors .

    $default  reduce using rule 138 (class_implementation_definition_header)


State 111

  117 method_selectors: . selectors_list
  118                 | . IDENTIFIER
  119 selectors_list: . selectors_list selector_decleration
  120               | . selector_decleration
  121 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list
  140 instance_implementation_definition_header: MINUS p_type . method_selectors

    IDENTIFIER  shift, and go to state 86

    method_selectors      go to state 170
    selectors_list        go to state 90
    selector_decleration  go to state 91


State 112

  141 instance_implementation_definition_header: MINUS method_selectors .

    $default  reduce using rule 141 (instance_implementation_definition_header)


State 113

  129 class_implementation_body: instance_variables AT_END .

    $default  reduce using rule 129 (class_implementation_body)


State 114

  128 class_implementation_body: instance_variables implementation_definition_list . AT_END
  132 implementation_definition_list: implementation_definition_list . implementation_definition
  134 implementation_definition: . class_implementation_definition
  135                          | . instance_implementation_definition
  136 class_implementation_definition: . class_implementation_definition_header block_body
  137 class_implementation_definition_header: . PLUS p_type method_selectors
  138                                       | . PLUS method_selectors
  139 instance_implementation_definition: . instance_implementation_definition_header block_body
  140 instance_implementation_definition_header: . MINUS p_type method_selectors
  141                                          | . MINUS method_selectors

    AT_END  shift, and go to state 171
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition                  go to state 116
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 115

  130 class_implementation_body: implementation_definition_list AT_END .

    $default  reduce using rule 130 (class_implementation_body)


State 116

  132 implementation_definition_list: implementation_definition_list implementation_definition .

    $default  reduce using rule 132 (implementation_definition_list)


State 117

  143 block_body_header: OPEN_S .

    $default  reduce using rule 143 (block_body_header)


State 118

  136 class_implementation_definition: class_implementation_definition_header block_body .

    $default  reduce using rule 136 (class_implementation_definition)


State 119

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  142 block_body: . block_body_header block_body_statements
  142           | block_body_header . block_body_statements
  143 block_body_header: . OPEN_S
  144 block_body_statements: . statement_list CLOSE_S
  145                      | . CLOSE_S
  146                      | . error CLOSE_S
  147 statement_list: . statement_list statement
  148               | . statement
  149 statement: . loop_statement
  150          | . conditional_statement
  151          | . assign_expr SEMI_COMA
  152          | . variable_declaration_block
  153          | . block_body
  154          | . return_statement
  155          | . try_catch
  156          | . asm
  157          | . message_call SEMI_COMA
  158          | . error SEMI_COMA
  159 asm: . AT_ASM STRING_VAL SEMI_COMA
  160 variable_declaration_block: . type variable_list SEMI_COMA
  161                           | . CONST type variable_list SEMI_COMA
  162                           | . enum
  169 return_statement: . RETURN expr SEMI_COMA
  170 loop_statement: . for_loop
  171               | . while_loop
  172               | . do_while
  173 do_while: . do_header statement while_loop_header SEMI_COMA
  174 do_header: . DO
  175 for_loop: . for_loop_header statement
  176 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  183                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR
  231 while_loop: . while_loop_header statement
  232 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  233 conditional_statement: . if_header statement
  234                      | . if_header statement ELSE statement
  235                      | . switch_header switch_body
  236 if_header: . IF OPEN_P logic_expr CLOSE_P
  237 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  257 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  258     | . ENUM IDENTIFIER SEMI_COMA
  263 try_catch: . TRY statement catch_list finally_statement
  264          | . TRY statement catch_list

    error       shift, and go to state 172
    IDENTIFIER  shift, and go to state 173
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CLOSE_S     shift, and go to state 174
    CONST       shift, and go to state 175
    VOID        shift, and go to state 71
    FOR         shift, and go to state 176
    WHILE       shift, and go to state 177
    IF          shift, and go to state 178
    DO          shift, and go to state 179
    SWITCH      shift, and go to state 180
    ENUM        shift, and go to state 181
    OPEN_ARR    shift, and go to state 182
    RETURN      shift, and go to state 183
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 184
    AT_ASM      shift, and go to state 185

    type                        go to state 186
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 187
    block_body_header           go to state 119
    block_body_statements       go to state 188
    statement_list              go to state 189
    statement                   go to state 190
    asm                         go to state 191
    variable_declaration_block  go to state 192
    return_statement            go to state 193
    loop_statement              go to state 194
    do_while                    go to state 195
    do_header                   go to state 196
    for_loop                    go to state 197
    for_loop_header             go to state 198
    assign_expr                 go to state 199
    long_id                     go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 120

  139 instance_implementation_definition: instance_implementation_definition_header block_body .

    $default  reduce using rule 139 (instance_implementation_definition)


State 121

  255 protocol_body: protocol_reference_list AT_END .

    $default  reduce using rule 255 (protocol_body)


State 122

  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  115                            | . MINUS method_selectors SEMI_COMA
  253 protocol_body: protocol_reference_list interface_declaration_list . AT_END

    AT_END  shift, and go to state 210
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 123

  254 protocol_body: interface_declaration_list AT_END .

    $default  reduce using rule 254 (protocol_body)


State 124

   14 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN error .

    $default  reduce using rule 14 (class_interface_header)


State 125

   10 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 10 (class_interface_header)


State 126

  126 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 126 (class_implementation_header)


State 127

  259 list_expr: IDENTIFIER . EQUAL expr COMMA list_expr
  260          | IDENTIFIER . EQUAL expr
  261          | IDENTIFIER .  [CLOSE_S]
  262          | IDENTIFIER . COMMA list_expr

    COMMA  shift, and go to state 211
    EQUAL  shift, and go to state 212

    $default  reduce using rule 261 (list_expr)


State 128

  257 enum: ENUM IDENTIFIER OPEN_S list_expr . CLOSE_S SEMI_COMA

    CLOSE_S  shift, and go to state 213


State 129

   95 complex_type: IDENTIFIER MULTI .

    $default  reduce using rule 95 (complex_type)


State 130

   57 variable_declarationxx: CONST type . ids_list SEMI_COMA
   59 ids_list: . ids_list COMMA data_member
   60         | . data_member
   61         | . error
   62 data_member: . IDENTIFIER array_tag
   63            | . IDENTIFIER
   64            | . error array_tag
   65            | . IDENTIFIER error

    error       shift, and go to state 137
    IDENTIFIER  shift, and go to state 214

    ids_list     go to state 215
    data_member  go to state 140


State 131

   87 enum_type: ENUM IDENTIFIER .  [error, IDENTIFIER, CLOSE_P]
   88          | ENUM IDENTIFIER . MULTI

    MULTI  shift, and go to state 216

    $default  reduce using rule 87 (enum_type)


State 132

   85 struct_type: STRUCT IDENTIFIER .  [error, IDENTIFIER, CLOSE_P]
   86            | STRUCT IDENTIFIER . MULTI

    MULTI  shift, and go to state 217

    $default  reduce using rule 85 (struct_type)


State 133

   44 instance_variables: OPEN_S instance_variable_declarations CLOSE_S .

    $default  reduce using rule 44 (instance_variables)


State 134

   46 instance_variable_declarations: instance_variable_declarations instance_variable_declaration .

    $default  reduce using rule 46 (instance_variable_declarations)


State 135

   50 variable_declaration_list: variable_declaration_list variable_declarationxx .

    $default  reduce using rule 50 (variable_declaration_list)


State 136

   49 instance_variable_declaration: visibility_specification variable_declaration_list .  [AT_PUBLIC, AT_PROTECTED, AT_PRIVATE, CLOSE_S]
   50 variable_declaration_list: variable_declaration_list . variable_declarationxx
   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    CONST       shift, and go to state 70
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    $default  reduce using rule 49 (instance_variable_declaration)

    variable_declarationxx  go to state 135
    type                    go to state 79
    struct_type             go to state 80
    enum_type               go to state 81
    simple_type             go to state 82
    complex_type            go to state 83


State 137

   61 ids_list: error .  [SEMI_COMA, COMMA]
   64 data_member: error . array_tag
   96 array_tag: . array_first_tag array_tag_list
  100 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  101                | . OPEN_ARR CLOSE_ARR

    OPEN_ARR  shift, and go to state 218

    $default  reduce using rule 61 (ids_list)

    array_tag        go to state 219
    array_first_tag  go to state 220


State 138

   58 variable_declarationxx: type IDENTIFIER . array_tag error
   62 data_member: IDENTIFIER . array_tag
   63            | IDENTIFIER .  [SEMI_COMA, COMMA]
   65            | IDENTIFIER . error
   96 array_tag: . array_first_tag array_tag_list
  100 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  101                | . OPEN_ARR CLOSE_ARR

    error     shift, and go to state 221
    OPEN_ARR  shift, and go to state 218

    SEMI_COMA  reduce using rule 63 (data_member)
    COMMA      reduce using rule 63 (data_member)

    array_tag        go to state 222
    array_first_tag  go to state 220


State 139

   56 variable_declarationxx: type ids_list . SEMI_COMA
   59 ids_list: ids_list . COMMA data_member

    SEMI_COMA  shift, and go to state 223
    COMMA      shift, and go to state 224


State 140

   60 ids_list: data_member .

    $default  reduce using rule 60 (ids_list)


State 141

   33 protocol_reference_list: LESS_THAN ids_list_identifier error .

    $default  reduce using rule 33 (protocol_reference_list)


State 142

   34 ids_list_identifier: ids_list_identifier COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 225


State 143

   32 protocol_reference_list: LESS_THAN ids_list_identifier MORE_THAN .

    $default  reduce using rule 32 (protocol_reference_list)


State 144

  116 p_type: . OPEN_P type CLOSE_P
  121 selector_decleration: IDENTIFIER SEMI_COLUMN . parameter_list
  122 parameter_list: . parameter_list SEMI_COLUMN parameter
  123               | . parameter
  124 parameter: . p_type IDENTIFIER

    OPEN_P  shift, and go to state 87

    p_type          go to state 226
    parameter_list  go to state 227
    parameter       go to state 228


State 145

  116 p_type: OPEN_P type . CLOSE_P

    CLOSE_P  shift, and go to state 229


State 146

  110 class_method_declaration: PLUS p_type method_selectors . SEMI_COMA
  112                         | PLUS p_type method_selectors . error

    error      shift, and go to state 230
    SEMI_COMA  shift, and go to state 231


State 147

  113 class_method_declaration: PLUS method_selectors error .

    $default  reduce using rule 113 (class_method_declaration)


State 148

  111 class_method_declaration: PLUS method_selectors SEMI_COMA .

    $default  reduce using rule 111 (class_method_declaration)


State 149

  121 selector_decleration: IDENTIFIER . SEMI_COLUMN parameter_list

    SEMI_COLUMN  shift, and go to state 144


State 150

  119 selectors_list: selectors_list selector_decleration .

    $default  reduce using rule 119 (selectors_list)


State 151

  114 instance_method_declaration: MINUS p_type method_selectors . SEMI_COMA

    SEMI_COMA  shift, and go to state 232


State 152

  115 instance_method_declaration: MINUS method_selectors SEMI_COMA .

    $default  reduce using rule 115 (instance_method_declaration)


State 153

   23 class_interface_body: protocol_reference_list error AT_END .

    $default  reduce using rule 23 (class_interface_body)


State 154

   24 class_interface_body: protocol_reference_list error interface_declaration_list . AT_END
  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  115                            | . MINUS method_selectors SEMI_COMA

    AT_END  shift, and go to state 233
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 155

   27 class_interface_body: protocol_reference_list instance_variables error .

    $default  reduce using rule 27 (class_interface_body)


State 156

   16 class_interface_body: protocol_reference_list instance_variables AT_END .

    $default  reduce using rule 16 (class_interface_body)


State 157

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list . AT_END
   26                     | protocol_reference_list instance_variables interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  115                            | . MINUS method_selectors SEMI_COMA

    error   shift, and go to state 234
    AT_END  shift, and go to state 235
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 103
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 158

   28 class_interface_body: protocol_reference_list interface_declaration_list error .

    $default  reduce using rule 28 (class_interface_body)


State 159

   17 class_interface_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 17 (class_interface_body)


State 160

   29 class_interface_body: instance_variables interface_declaration_list error .

    $default  reduce using rule 29 (class_interface_body)


State 161

   18 class_interface_body: instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 18 (class_interface_body)


State 162

   68 struct_declaration_list: error variable_declarationxx .

    $default  reduce using rule 68 (struct_declaration_list)


State 163

   76 struct: struct_header OPEN_S CLOSE_S error . SEMI_COMA
   80 entity: error . COMMA

    SEMI_COMA  shift, and go to state 236
    COMMA      shift, and go to state 237


State 164

   78 entity: IDENTIFIER . COMMA entity
   79       | IDENTIFIER .  [error, SEMI_COMA]

    COMMA  shift, and go to state 238

    $default  reduce using rule 79 (entity)


State 165

   72 struct: struct_header OPEN_S CLOSE_S SEMI_COMA .

    $default  reduce using rule 72 (struct)


State 166

   70 struct: struct_header OPEN_S CLOSE_S entity . SEMI_COMA
   74       | struct_header OPEN_S CLOSE_S entity . error SEMI_COMA

    error      shift, and go to state 239
    SEMI_COMA  shift, and go to state 240


State 167

   71 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S . entity SEMI_COMA
   73       | struct_header OPEN_S struct_variable_declaration CLOSE_S . SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration CLOSE_S . entity error SEMI_COMA
   77       | struct_header OPEN_S struct_variable_declaration CLOSE_S . error SEMI_COMA
   78 entity: . IDENTIFIER COMMA entity
   79       | . IDENTIFIER
   80       | . error COMMA

    error       shift, and go to state 241
    IDENTIFIER  shift, and go to state 164
    SEMI_COMA   shift, and go to state 242

    entity  go to state 243


State 168

   66 struct_declaration_list: struct_declaration_list variable_declarationxx .

    $default  reduce using rule 66 (struct_declaration_list)


State 169

  137 class_implementation_definition_header: PLUS p_type method_selectors .

    $default  reduce using rule 137 (class_implementation_definition_header)


State 170

  140 instance_implementation_definition_header: MINUS p_type method_selectors .

    $default  reduce using rule 140 (instance_implementation_definition_header)


State 171

  128 class_implementation_body: instance_variables implementation_definition_list AT_END .

    $default  reduce using rule 128 (class_implementation_body)


State 172

  146 block_body_statements: error . CLOSE_S
  158 statement: error . SEMI_COMA

    SEMI_COMA  shift, and go to state 244
    CLOSE_S    shift, and go to state 245


State 173

   95 complex_type: IDENTIFIER . MULTI
  203 long_id: IDENTIFIER .  [EQUAL, DOT]

    MULTI  shift, and go to state 129

    $default  reduce using rule 203 (long_id)


State 174

  145 block_body_statements: CLOSE_S .

    $default  reduce using rule 145 (block_body_statements)


State 175

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  161 variable_declaration_block: CONST . type variable_list SEMI_COMA

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    type          go to state 246
    struct_type   go to state 80
    enum_type     go to state 81
    simple_type   go to state 82
    complex_type  go to state 83


State 176

  176 for_loop_header: FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  177                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  178                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  180                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  181                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  182                | FOR . OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  183                | FOR . OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

    OPEN_P  shift, and go to state 247


State 177

  232 while_loop_header: WHILE . OPEN_P logic_expr CLOSE_P

    OPEN_P  shift, and go to state 248


State 178

  236 if_header: IF . OPEN_P logic_expr CLOSE_P

    OPEN_P  shift, and go to state 249


State 179

  174 do_header: DO .

    $default  reduce using rule 174 (do_header)


State 180

  237 switch_header: SWITCH . OPEN_P IDENTIFIER CLOSE_P switch_body_block

    OPEN_P  shift, and go to state 250


State 181

   87 enum_type: ENUM . IDENTIFIER
   88          | ENUM . IDENTIFIER MULTI
  257 enum: ENUM . IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  258     | ENUM . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 251


State 182

  219 message_call2: OPEN_ARR .

    $default  reduce using rule 219 (message_call2)


State 183

  116 p_type: . OPEN_P type CLOSE_P
  169 return_statement: RETURN . expr SEMI_COMA
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 261
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 184

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  142 block_body: . block_body_header block_body_statements
  143 block_body_header: . OPEN_S
  149 statement: . loop_statement
  150          | . conditional_statement
  151          | . assign_expr SEMI_COMA
  152          | . variable_declaration_block
  153          | . block_body
  154          | . return_statement
  155          | . try_catch
  156          | . asm
  157          | . message_call SEMI_COMA
  158          | . error SEMI_COMA
  159 asm: . AT_ASM STRING_VAL SEMI_COMA
  160 variable_declaration_block: . type variable_list SEMI_COMA
  161                           | . CONST type variable_list SEMI_COMA
  162                           | . enum
  169 return_statement: . RETURN expr SEMI_COMA
  170 loop_statement: . for_loop
  171               | . while_loop
  172               | . do_while
  173 do_while: . do_header statement while_loop_header SEMI_COMA
  174 do_header: . DO
  175 for_loop: . for_loop_header statement
  176 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  183                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR
  231 while_loop: . while_loop_header statement
  232 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  233 conditional_statement: . if_header statement
  234                      | . if_header statement ELSE statement
  235                      | . switch_header switch_body
  236 if_header: . IF OPEN_P logic_expr CLOSE_P
  237 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  257 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  258     | . ENUM IDENTIFIER SEMI_COMA
  263 try_catch: . TRY statement catch_list finally_statement
  263          | TRY . statement catch_list finally_statement
  264          | . TRY statement catch_list
  264          | TRY . statement catch_list

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 173
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 175
    VOID        shift, and go to state 71
    FOR         shift, and go to state 176
    WHILE       shift, and go to state 177
    IF          shift, and go to state 178
    DO          shift, and go to state 179
    SWITCH      shift, and go to state 180
    ENUM        shift, and go to state 181
    OPEN_ARR    shift, and go to state 182
    RETURN      shift, and go to state 183
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 184
    AT_ASM      shift, and go to state 185

    type                        go to state 186
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 187
    block_body_header           go to state 119
    statement                   go to state 267
    asm                         go to state 191
    variable_declaration_block  go to state 192
    return_statement            go to state 193
    loop_statement              go to state 194
    do_while                    go to state 195
    do_header                   go to state 196
    for_loop                    go to state 197
    for_loop_header             go to state 198
    assign_expr                 go to state 199
    long_id                     go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 185

  159 asm: AT_ASM . STRING_VAL SEMI_COMA

    STRING_VAL  shift, and go to state 268


State 186

  160 variable_declaration_block: type . variable_list SEMI_COMA
  163 variable_list: . variable_list COMMA variable
  164              | . variable
  165              | . variable_list error variable
  166 variable: . IDENTIFIER array_tag initializer
  167         | . IDENTIFIER main_initializer
  168         | . error array_tag initializer

    error       shift, and go to state 269
    IDENTIFIER  shift, and go to state 270

    variable_list  go to state 271
    variable       go to state 272


State 187

  153 statement: block_body .

    $default  reduce using rule 153 (statement)


State 188

  142 block_body: block_body_header block_body_statements .

    $default  reduce using rule 142 (block_body)


State 189

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  142 block_body: . block_body_header block_body_statements
  143 block_body_header: . OPEN_S
  144 block_body_statements: statement_list . CLOSE_S
  147 statement_list: statement_list . statement
  149 statement: . loop_statement
  150          | . conditional_statement
  151          | . assign_expr SEMI_COMA
  152          | . variable_declaration_block
  153          | . block_body
  154          | . return_statement
  155          | . try_catch
  156          | . asm
  157          | . message_call SEMI_COMA
  158          | . error SEMI_COMA
  159 asm: . AT_ASM STRING_VAL SEMI_COMA
  160 variable_declaration_block: . type variable_list SEMI_COMA
  161                           | . CONST type variable_list SEMI_COMA
  162                           | . enum
  169 return_statement: . RETURN expr SEMI_COMA
  170 loop_statement: . for_loop
  171               | . while_loop
  172               | . do_while
  173 do_while: . do_header statement while_loop_header SEMI_COMA
  174 do_header: . DO
  175 for_loop: . for_loop_header statement
  176 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  183                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR
  231 while_loop: . while_loop_header statement
  232 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  233 conditional_statement: . if_header statement
  234                      | . if_header statement ELSE statement
  235                      | . switch_header switch_body
  236 if_header: . IF OPEN_P logic_expr CLOSE_P
  237 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  257 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  258     | . ENUM IDENTIFIER SEMI_COMA
  263 try_catch: . TRY statement catch_list finally_statement
  264          | . TRY statement catch_list

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 173
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CLOSE_S     shift, and go to state 273
    CONST       shift, and go to state 175
    VOID        shift, and go to state 71
    FOR         shift, and go to state 176
    WHILE       shift, and go to state 177
    IF          shift, and go to state 178
    DO          shift, and go to state 179
    SWITCH      shift, and go to state 180
    ENUM        shift, and go to state 181
    OPEN_ARR    shift, and go to state 182
    RETURN      shift, and go to state 183
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 184
    AT_ASM      shift, and go to state 185

    type                        go to state 186
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 187
    block_body_header           go to state 119
    statement                   go to state 274
    asm                         go to state 191
    variable_declaration_block  go to state 192
    return_statement            go to state 193
    loop_statement              go to state 194
    do_while                    go to state 195
    do_header                   go to state 196
    for_loop                    go to state 197
    for_loop_header             go to state 198
    assign_expr                 go to state 199
    long_id                     go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 190

  148 statement_list: statement .

    $default  reduce using rule 148 (statement_list)


State 191

  156 statement: asm .

    $default  reduce using rule 156 (statement)


State 192

  152 statement: variable_declaration_block .

    $default  reduce using rule 152 (statement)


State 193

  154 statement: return_statement .

    $default  reduce using rule 154 (statement)


State 194

  149 statement: loop_statement .

    $default  reduce using rule 149 (statement)


State 195

  172 loop_statement: do_while .

    $default  reduce using rule 172 (loop_statement)


State 196

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  142 block_body: . block_body_header block_body_statements
  143 block_body_header: . OPEN_S
  149 statement: . loop_statement
  150          | . conditional_statement
  151          | . assign_expr SEMI_COMA
  152          | . variable_declaration_block
  153          | . block_body
  154          | . return_statement
  155          | . try_catch
  156          | . asm
  157          | . message_call SEMI_COMA
  158          | . error SEMI_COMA
  159 asm: . AT_ASM STRING_VAL SEMI_COMA
  160 variable_declaration_block: . type variable_list SEMI_COMA
  161                           | . CONST type variable_list SEMI_COMA
  162                           | . enum
  169 return_statement: . RETURN expr SEMI_COMA
  170 loop_statement: . for_loop
  171               | . while_loop
  172               | . do_while
  173 do_while: . do_header statement while_loop_header SEMI_COMA
  173         | do_header . statement while_loop_header SEMI_COMA
  174 do_header: . DO
  175 for_loop: . for_loop_header statement
  176 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  183                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR
  231 while_loop: . while_loop_header statement
  232 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  233 conditional_statement: . if_header statement
  234                      | . if_header statement ELSE statement
  235                      | . switch_header switch_body
  236 if_header: . IF OPEN_P logic_expr CLOSE_P
  237 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  257 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  258     | . ENUM IDENTIFIER SEMI_COMA
  263 try_catch: . TRY statement catch_list finally_statement
  264          | . TRY statement catch_list

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 173
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 175
    VOID        shift, and go to state 71
    FOR         shift, and go to state 176
    WHILE       shift, and go to state 177
    IF          shift, and go to state 178
    DO          shift, and go to state 179
    SWITCH      shift, and go to state 180
    ENUM        shift, and go to state 181
    OPEN_ARR    shift, and go to state 182
    RETURN      shift, and go to state 183
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 184
    AT_ASM      shift, and go to state 185

    type                        go to state 186
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 187
    block_body_header           go to state 119
    statement                   go to state 275
    asm                         go to state 191
    variable_declaration_block  go to state 192
    return_statement            go to state 193
    loop_statement              go to state 194
    do_while                    go to state 195
    do_header                   go to state 196
    for_loop                    go to state 197
    for_loop_header             go to state 198
    assign_expr                 go to state 199
    long_id                     go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 197

  170 loop_statement: for_loop .

    $default  reduce using rule 170 (loop_statement)


State 198

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  142 block_body: . block_body_header block_body_statements
  143 block_body_header: . OPEN_S
  149 statement: . loop_statement
  150          | . conditional_statement
  151          | . assign_expr SEMI_COMA
  152          | . variable_declaration_block
  153          | . block_body
  154          | . return_statement
  155          | . try_catch
  156          | . asm
  157          | . message_call SEMI_COMA
  158          | . error SEMI_COMA
  159 asm: . AT_ASM STRING_VAL SEMI_COMA
  160 variable_declaration_block: . type variable_list SEMI_COMA
  161                           | . CONST type variable_list SEMI_COMA
  162                           | . enum
  169 return_statement: . RETURN expr SEMI_COMA
  170 loop_statement: . for_loop
  171               | . while_loop
  172               | . do_while
  173 do_while: . do_header statement while_loop_header SEMI_COMA
  174 do_header: . DO
  175 for_loop: . for_loop_header statement
  175         | for_loop_header . statement
  176 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  183                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR
  231 while_loop: . while_loop_header statement
  232 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  233 conditional_statement: . if_header statement
  234                      | . if_header statement ELSE statement
  235                      | . switch_header switch_body
  236 if_header: . IF OPEN_P logic_expr CLOSE_P
  237 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  257 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  258     | . ENUM IDENTIFIER SEMI_COMA
  263 try_catch: . TRY statement catch_list finally_statement
  264          | . TRY statement catch_list

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 173
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 175
    VOID        shift, and go to state 71
    FOR         shift, and go to state 176
    WHILE       shift, and go to state 177
    IF          shift, and go to state 178
    DO          shift, and go to state 179
    SWITCH      shift, and go to state 180
    ENUM        shift, and go to state 181
    OPEN_ARR    shift, and go to state 182
    RETURN      shift, and go to state 183
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 184
    AT_ASM      shift, and go to state 185

    type                        go to state 186
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 187
    block_body_header           go to state 119
    statement                   go to state 276
    asm                         go to state 191
    variable_declaration_block  go to state 192
    return_statement            go to state 193
    loop_statement              go to state 194
    do_while                    go to state 195
    do_header                   go to state 196
    for_loop                    go to state 197
    for_loop_header             go to state 198
    assign_expr                 go to state 199
    long_id                     go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 199

  151 statement: assign_expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 277


State 200

  200 assign_expr: long_id . EQUAL simple_expr
  201 long_id: long_id . DOT IDENTIFIER

    EQUAL  shift, and go to state 278
    DOT    shift, and go to state 279


State 201

  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR
  220             | message_call2 . sender message CLOSE_ARR
  221 sender: . message_call
  222       | . IDENTIFIER

    IDENTIFIER  shift, and go to state 280
    OPEN_ARR    shift, and go to state 182

    message_call2  go to state 201
    message_call   go to state 281
    sender         go to state 282


State 202

  157 statement: message_call . SEMI_COMA
  202 long_id: message_call .  [EQUAL, DOT]

    SEMI_COMA  shift, and go to state 283

    $default  reduce using rule 202 (long_id)


State 203

  171 loop_statement: while_loop .

    $default  reduce using rule 171 (loop_statement)


State 204

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  142 block_body: . block_body_header block_body_statements
  143 block_body_header: . OPEN_S
  149 statement: . loop_statement
  150          | . conditional_statement
  151          | . assign_expr SEMI_COMA
  152          | . variable_declaration_block
  153          | . block_body
  154          | . return_statement
  155          | . try_catch
  156          | . asm
  157          | . message_call SEMI_COMA
  158          | . error SEMI_COMA
  159 asm: . AT_ASM STRING_VAL SEMI_COMA
  160 variable_declaration_block: . type variable_list SEMI_COMA
  161                           | . CONST type variable_list SEMI_COMA
  162                           | . enum
  169 return_statement: . RETURN expr SEMI_COMA
  170 loop_statement: . for_loop
  171               | . while_loop
  172               | . do_while
  173 do_while: . do_header statement while_loop_header SEMI_COMA
  174 do_header: . DO
  175 for_loop: . for_loop_header statement
  176 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  183                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR
  231 while_loop: . while_loop_header statement
  231           | while_loop_header . statement
  232 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  233 conditional_statement: . if_header statement
  234                      | . if_header statement ELSE statement
  235                      | . switch_header switch_body
  236 if_header: . IF OPEN_P logic_expr CLOSE_P
  237 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  257 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  258     | . ENUM IDENTIFIER SEMI_COMA
  263 try_catch: . TRY statement catch_list finally_statement
  264          | . TRY statement catch_list

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 173
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 175
    VOID        shift, and go to state 71
    FOR         shift, and go to state 176
    WHILE       shift, and go to state 177
    IF          shift, and go to state 178
    DO          shift, and go to state 179
    SWITCH      shift, and go to state 180
    ENUM        shift, and go to state 181
    OPEN_ARR    shift, and go to state 182
    RETURN      shift, and go to state 183
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 184
    AT_ASM      shift, and go to state 185

    type                        go to state 186
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 187
    block_body_header           go to state 119
    statement                   go to state 284
    asm                         go to state 191
    variable_declaration_block  go to state 192
    return_statement            go to state 193
    loop_statement              go to state 194
    do_while                    go to state 195
    do_header                   go to state 196
    for_loop                    go to state 197
    for_loop_header             go to state 198
    assign_expr                 go to state 199
    long_id                     go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 205

  150 statement: conditional_statement .

    $default  reduce using rule 150 (statement)


State 206

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  142 block_body: . block_body_header block_body_statements
  143 block_body_header: . OPEN_S
  149 statement: . loop_statement
  150          | . conditional_statement
  151          | . assign_expr SEMI_COMA
  152          | . variable_declaration_block
  153          | . block_body
  154          | . return_statement
  155          | . try_catch
  156          | . asm
  157          | . message_call SEMI_COMA
  158          | . error SEMI_COMA
  159 asm: . AT_ASM STRING_VAL SEMI_COMA
  160 variable_declaration_block: . type variable_list SEMI_COMA
  161                           | . CONST type variable_list SEMI_COMA
  162                           | . enum
  169 return_statement: . RETURN expr SEMI_COMA
  170 loop_statement: . for_loop
  171               | . while_loop
  172               | . do_while
  173 do_while: . do_header statement while_loop_header SEMI_COMA
  174 do_header: . DO
  175 for_loop: . for_loop_header statement
  176 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  183                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR
  231 while_loop: . while_loop_header statement
  232 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  233 conditional_statement: . if_header statement
  233                      | if_header . statement
  234                      | . if_header statement ELSE statement
  234                      | if_header . statement ELSE statement
  235                      | . switch_header switch_body
  236 if_header: . IF OPEN_P logic_expr CLOSE_P
  237 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  257 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  258     | . ENUM IDENTIFIER SEMI_COMA
  263 try_catch: . TRY statement catch_list finally_statement
  264          | . TRY statement catch_list

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 173
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 175
    VOID        shift, and go to state 71
    FOR         shift, and go to state 176
    WHILE       shift, and go to state 177
    IF          shift, and go to state 178
    DO          shift, and go to state 179
    SWITCH      shift, and go to state 180
    ENUM        shift, and go to state 181
    OPEN_ARR    shift, and go to state 182
    RETURN      shift, and go to state 183
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 184
    AT_ASM      shift, and go to state 185

    type                        go to state 186
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 187
    block_body_header           go to state 119
    statement                   go to state 285
    asm                         go to state 191
    variable_declaration_block  go to state 192
    return_statement            go to state 193
    loop_statement              go to state 194
    do_while                    go to state 195
    do_header                   go to state 196
    for_loop                    go to state 197
    for_loop_header             go to state 198
    assign_expr                 go to state 199
    long_id                     go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 207

  235 conditional_statement: switch_header . switch_body
  239 switch_body: . list_of_case default_case CLOSE_S
  240            | . list_of_case CLOSE_S
  241            | . default_case CLOSE_S
  242            | . CLOSE_S
  243 list_of_case: . list_of_case case_body
  244             | . case_body
  245 case_body: . CASE expr SEMI_COLUMN statement BREAK SEMI_COMA
  246          | . CASE expr SEMI_COLUMN statement
  247          | . CASE expr SEMI_COLUMN BREAK SEMI_COMA
  248 default_case: . DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  249             | . DEFAULT SEMI_COLUMN statement
  250             | . DEFAULT SEMI_COLUMN BREAK SEMI_COMA

    CLOSE_S  shift, and go to state 286
    CASE     shift, and go to state 287
    DEFAULT  shift, and go to state 288

    switch_body   go to state 289
    list_of_case  go to state 290
    case_body     go to state 291
    default_case  go to state 292


State 208

  162 variable_declaration_block: enum .

    $default  reduce using rule 162 (variable_declaration_block)


State 209

  155 statement: try_catch .

    $default  reduce using rule 155 (statement)


State 210

  253 protocol_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 253 (protocol_body)


State 211

  259 list_expr: . IDENTIFIER EQUAL expr COMMA list_expr
  260          | . IDENTIFIER EQUAL expr
  261          | . IDENTIFIER
  262          | . IDENTIFIER COMMA list_expr
  262          | IDENTIFIER COMMA . list_expr

    IDENTIFIER  shift, and go to state 127

    list_expr  go to state 293


State 212

  116 p_type: . OPEN_P type CLOSE_P
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR
  259 list_expr: IDENTIFIER EQUAL . expr COMMA list_expr
  260          | IDENTIFIER EQUAL . expr

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 294
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 213

  257 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 295


State 214

   62 data_member: IDENTIFIER . array_tag
   63            | IDENTIFIER .  [SEMI_COMA, COMMA]
   65            | IDENTIFIER . error
   96 array_tag: . array_first_tag array_tag_list
  100 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  101                | . OPEN_ARR CLOSE_ARR

    error     shift, and go to state 221
    OPEN_ARR  shift, and go to state 218

    SEMI_COMA  reduce using rule 63 (data_member)
    COMMA      reduce using rule 63 (data_member)

    array_tag        go to state 296
    array_first_tag  go to state 220


State 215

   57 variable_declarationxx: CONST type ids_list . SEMI_COMA
   59 ids_list: ids_list . COMMA data_member

    SEMI_COMA  shift, and go to state 297
    COMMA      shift, and go to state 224


State 216

   88 enum_type: ENUM IDENTIFIER MULTI .

    $default  reduce using rule 88 (enum_type)


State 217

   86 struct_type: STRUCT IDENTIFIER MULTI .

    $default  reduce using rule 86 (struct_type)


State 218

  100 array_first_tag: OPEN_ARR . INT_VAL CLOSE_ARR
  101                | OPEN_ARR . CLOSE_ARR

    INT_VAL    shift, and go to state 298
    CLOSE_ARR  shift, and go to state 299


State 219

   64 data_member: error array_tag .

    $default  reduce using rule 64 (data_member)


State 220

   96 array_tag: array_first_tag . array_tag_list
   97 array_tag_list: . array_tag_list OPEN_ARR INT_VAL CLOSE_ARR
   98               | .
   99               | . array_tag_list OPEN_ARR error CLOSE_ARR

    $default  reduce using rule 98 (array_tag_list)

    array_tag_list  go to state 300


State 221

   65 data_member: IDENTIFIER error .

    $default  reduce using rule 65 (data_member)


State 222

   58 variable_declarationxx: type IDENTIFIER array_tag . error
   62 data_member: IDENTIFIER array_tag .  [SEMI_COMA, COMMA]

    error  shift, and go to state 301

    SEMI_COMA  reduce using rule 62 (data_member)
    COMMA      reduce using rule 62 (data_member)


State 223

   56 variable_declarationxx: type ids_list SEMI_COMA .

    $default  reduce using rule 56 (variable_declarationxx)


State 224

   59 ids_list: ids_list COMMA . data_member
   62 data_member: . IDENTIFIER array_tag
   63            | . IDENTIFIER
   64            | . error array_tag
   65            | . IDENTIFIER error

    error       shift, and go to state 302
    IDENTIFIER  shift, and go to state 214

    data_member  go to state 303


State 225

   34 ids_list_identifier: ids_list_identifier COMMA IDENTIFIER .

    $default  reduce using rule 34 (ids_list_identifier)


State 226

  124 parameter: p_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 304


State 227

  121 selector_decleration: IDENTIFIER SEMI_COLUMN parameter_list .  [error, IDENTIFIER, SEMI_COMA, OPEN_S]
  122 parameter_list: parameter_list . SEMI_COLUMN parameter

    SEMI_COLUMN  shift, and go to state 305

    $default  reduce using rule 121 (selector_decleration)


State 228

  123 parameter_list: parameter .

    $default  reduce using rule 123 (parameter_list)


State 229

  116 p_type: OPEN_P type CLOSE_P .

    $default  reduce using rule 116 (p_type)


State 230

  112 class_method_declaration: PLUS p_type method_selectors error .

    $default  reduce using rule 112 (class_method_declaration)


State 231

  110 class_method_declaration: PLUS p_type method_selectors SEMI_COMA .

    $default  reduce using rule 110 (class_method_declaration)


State 232

  114 instance_method_declaration: MINUS p_type method_selectors SEMI_COMA .

    $default  reduce using rule 114 (instance_method_declaration)


State 233

   24 class_interface_body: protocol_reference_list error interface_declaration_list AT_END .

    $default  reduce using rule 24 (class_interface_body)


State 234

   26 class_interface_body: protocol_reference_list instance_variables interface_declaration_list error .

    $default  reduce using rule 26 (class_interface_body)


State 235

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 15 (class_interface_body)


State 236

   76 struct: struct_header OPEN_S CLOSE_S error SEMI_COMA .

    $default  reduce using rule 76 (struct)


State 237

   80 entity: error COMMA .

    $default  reduce using rule 80 (entity)


State 238

   78 entity: . IDENTIFIER COMMA entity
   78       | IDENTIFIER COMMA . entity
   79       | . IDENTIFIER
   80       | . error COMMA

    error       shift, and go to state 306
    IDENTIFIER  shift, and go to state 164

    entity  go to state 307


State 239

   74 struct: struct_header OPEN_S CLOSE_S entity error . SEMI_COMA

    SEMI_COMA  shift, and go to state 308


State 240

   70 struct: struct_header OPEN_S CLOSE_S entity SEMI_COMA .

    $default  reduce using rule 70 (struct)


State 241

   77 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S error . SEMI_COMA
   80 entity: error . COMMA

    SEMI_COMA  shift, and go to state 309
    COMMA      shift, and go to state 237


State 242

   73 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA .

    $default  reduce using rule 73 (struct)


State 243

   71 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity . SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity . error SEMI_COMA

    error      shift, and go to state 310
    SEMI_COMA  shift, and go to state 311


State 244

  158 statement: error SEMI_COMA .

    $default  reduce using rule 158 (statement)


State 245

  146 block_body_statements: error CLOSE_S .

    $default  reduce using rule 146 (block_body_statements)


State 246

  161 variable_declaration_block: CONST type . variable_list SEMI_COMA
  163 variable_list: . variable_list COMMA variable
  164              | . variable
  165              | . variable_list error variable
  166 variable: . IDENTIFIER array_tag initializer
  167         | . IDENTIFIER main_initializer
  168         | . error array_tag initializer

    error       shift, and go to state 269
    IDENTIFIER  shift, and go to state 270

    variable_list  go to state 312
    variable       go to state 272


State 247

  176 for_loop_header: FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  177                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  178                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  180                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  181                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  182                | FOR OPEN_P . SEMI_COMA SEMI_COMA expr CLOSE_P
  183                | FOR OPEN_P . SEMI_COMA SEMI_COMA CLOSE_P
  184 for_initializer: . INT IDENTIFIER EQUAL expr
  185                | . IDENTIFIER EQUAL expr
  186                | . IDENTIFIER

    IDENTIFIER  shift, and go to state 313
    INT         shift, and go to state 314
    SEMI_COMA   shift, and go to state 315

    for_initializer  go to state 316


State 248

  116 p_type: . OPEN_P type CLOSE_P
  187 logic_expr: . expr LESS_THAN expr
  188           | . expr MORE_THAN expr
  189           | . expr LESS_OR_EQUAL expr
  190           | . expr MORE_OR_EQUAL expr
  191           | . expr EQUAL_EQUAL expr
  192           | . NOT_EQUAL expr
  193           | . OPEN_P logic_expr CLOSE_P
  194           | . logic_expr AND_AND logic_expr
  195           | . logic_expr OR_OR logic_expr
  196           | . TRUE
  197           | . FALSE
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR
  232 while_loop_header: WHILE OPEN_P . logic_expr CLOSE_P

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 317
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 318
    OPEN_ARR     shift, and go to state 182
    TRUE         shift, and go to state 319
    FALSE        shift, and go to state 320
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    logic_expr     go to state 321
    expr           go to state 322
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 249

  116 p_type: . OPEN_P type CLOSE_P
  187 logic_expr: . expr LESS_THAN expr
  188           | . expr MORE_THAN expr
  189           | . expr LESS_OR_EQUAL expr
  190           | . expr MORE_OR_EQUAL expr
  191           | . expr EQUAL_EQUAL expr
  192           | . NOT_EQUAL expr
  193           | . OPEN_P logic_expr CLOSE_P
  194           | . logic_expr AND_AND logic_expr
  195           | . logic_expr OR_OR logic_expr
  196           | . TRUE
  197           | . FALSE
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR
  236 if_header: IF OPEN_P . logic_expr CLOSE_P

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 317
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 318
    OPEN_ARR     shift, and go to state 182
    TRUE         shift, and go to state 319
    FALSE        shift, and go to state 320
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    logic_expr     go to state 323
    expr           go to state 322
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 250

  237 switch_header: SWITCH OPEN_P . IDENTIFIER CLOSE_P switch_body_block

    IDENTIFIER  shift, and go to state 324


State 251

   87 enum_type: ENUM IDENTIFIER .  [error, IDENTIFIER]
   88          | ENUM IDENTIFIER . MULTI
  257 enum: ENUM IDENTIFIER . OPEN_S list_expr CLOSE_S SEMI_COMA
  258     | ENUM IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 58
    OPEN_S     shift, and go to state 59
    MULTI      shift, and go to state 216

    $default  reduce using rule 87 (enum_type)


State 252

  203 long_id: IDENTIFIER .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, EQUAL, DIV, CLOSE_ARR, DOT]
  214 simple_expr: IDENTIFIER . DOUBLEPLUS
  215            | IDENTIFIER . DOUBLEMINUS

    DOUBLEPLUS   shift, and go to state 325
    DOUBLEMINUS  shift, and go to state 326

    $default  reduce using rule 203 (long_id)


State 253

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  116 p_type: . OPEN_P type CLOSE_P
  116       | OPEN_P . type CLOSE_P
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  213            | OPEN_P . simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 327
    NSSTRING     shift, and go to state 61
    FLOAT        shift, and go to state 62
    CHAR         shift, and go to state 63
    BOOL         shift, and go to state 64
    INT          shift, and go to state 65
    VOID         shift, and go to state 71
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    ENUM         shift, and go to state 72
    OPEN_ARR     shift, and go to state 182
    STRUCT       shift, and go to state 73
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    type           go to state 145
    struct_type    go to state 80
    enum_type      go to state 81
    simple_type    go to state 82
    complex_type   go to state 83
    p_type         go to state 260
    long_id        go to state 328
    simple_expr    go to state 329
    message_call2  go to state 201
    message_call   go to state 265


State 254

  204 simple_expr: STRING_VAL .

    $default  reduce using rule 204 (simple_expr)


State 255

  206 simple_expr: FLOAT_VAL .

    $default  reduce using rule 206 (simple_expr)


State 256

  207 simple_expr: CHAR_VAL .

    $default  reduce using rule 207 (simple_expr)


State 257

  205 simple_expr: INT_VAL .

    $default  reduce using rule 205 (simple_expr)


State 258

  216 simple_expr: DOUBLEPLUS . IDENTIFIER

    IDENTIFIER  shift, and go to state 330


State 259

  217 simple_expr: DOUBLEMINUS . IDENTIFIER

    IDENTIFIER  shift, and go to state 331


State 260

  116 p_type: . OPEN_P type CLOSE_P
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  218            | p_type . simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    long_id        go to state 328
    simple_expr    go to state 332
    message_call2  go to state 201
    message_call   go to state 265


State 261

  169 return_statement: RETURN expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 333


State 262

  198 expr: assign_expr .

    $default  reduce using rule 198 (expr)


State 263

  200 assign_expr: long_id . EQUAL simple_expr
  201 long_id: long_id . DOT IDENTIFIER
  208 simple_expr: long_id .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, DIV, CLOSE_ARR]

    EQUAL  shift, and go to state 278
    DOT    shift, and go to state 279

    $default  reduce using rule 208 (simple_expr)


State 264

  199 expr: simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, CLOSE_ARR]
  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 334
    MINUS  shift, and go to state 335
    MULTI  shift, and go to state 336
    DIV    shift, and go to state 337

    $default  reduce using rule 199 (expr)


State 265

  202 long_id: message_call .

    $default  reduce using rule 202 (long_id)


State 266

  158 statement: error . SEMI_COMA

    SEMI_COMA  shift, and go to state 244


State 267

  263 try_catch: TRY statement . catch_list finally_statement
  264          | TRY statement . catch_list
  265 catch_list: . CATCH OPEN_S type IDENTIFIER CLOSE_S statement
  266           | . catch_list CATCH OPEN_S type IDENTIFIER CLOSE_S statement

    CATCH  shift, and go to state 338

    catch_list  go to state 339


State 268

  159 asm: AT_ASM STRING_VAL . SEMI_COMA

    SEMI_COMA  shift, and go to state 340


State 269

   96 array_tag: . array_first_tag array_tag_list
  100 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  101                | . OPEN_ARR CLOSE_ARR
  168 variable: error . array_tag initializer

    OPEN_ARR  shift, and go to state 218

    array_tag        go to state 341
    array_first_tag  go to state 220


State 270

   96 array_tag: . array_first_tag array_tag_list
  100 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  101                | . OPEN_ARR CLOSE_ARR
  104 main_initializer: . EQUAL expr
  105                 | .  [error, SEMI_COMA, COMMA]
  166 variable: IDENTIFIER . array_tag initializer
  167         | IDENTIFIER . main_initializer

    EQUAL     shift, and go to state 342
    OPEN_ARR  shift, and go to state 218

    $default  reduce using rule 105 (main_initializer)

    array_tag         go to state 343
    array_first_tag   go to state 220
    main_initializer  go to state 344


State 271

  160 variable_declaration_block: type variable_list . SEMI_COMA
  163 variable_list: variable_list . COMMA variable
  165              | variable_list . error variable

    error      shift, and go to state 345
    SEMI_COMA  shift, and go to state 346
    COMMA      shift, and go to state 347


State 272

  164 variable_list: variable .

    $default  reduce using rule 164 (variable_list)


State 273

  144 block_body_statements: statement_list CLOSE_S .

    $default  reduce using rule 144 (block_body_statements)


State 274

  147 statement_list: statement_list statement .

    $default  reduce using rule 147 (statement_list)


State 275

  173 do_while: do_header statement . while_loop_header SEMI_COMA
  232 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P

    WHILE  shift, and go to state 177

    while_loop_header  go to state 348


State 276

  175 for_loop: for_loop_header statement .

    $default  reduce using rule 175 (for_loop)


State 277

  151 statement: assign_expr SEMI_COMA .

    $default  reduce using rule 151 (statement)


State 278

  116 p_type: . OPEN_P type CLOSE_P
  200 assign_expr: long_id EQUAL . simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    long_id        go to state 328
    simple_expr    go to state 349
    message_call2  go to state 201
    message_call   go to state 265


State 279

  201 long_id: long_id DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 350


State 280

  222 sender: IDENTIFIER .

    $default  reduce using rule 222 (sender)


State 281

  221 sender: message_call .

    $default  reduce using rule 221 (sender)


State 282

  220 message_call: message_call2 sender . message CLOSE_ARR
  223 message: . IDENTIFIER
  224        | . message_selectors_list
  225 message_selectors_list: . message_selectors_list message_selector
  226                       | . message_selector
  227 message_selector: . IDENTIFIER SEMI_COLUMN argument_list

    IDENTIFIER  shift, and go to state 351

    message                 go to state 352
    message_selectors_list  go to state 353
    message_selector        go to state 354


State 283

  157 statement: message_call SEMI_COMA .

    $default  reduce using rule 157 (statement)


State 284

  231 while_loop: while_loop_header statement .

    $default  reduce using rule 231 (while_loop)


State 285

  233 conditional_statement: if_header statement .  [error, IDENTIFIER, NSSTRING, FLOAT, CHAR, BOOL, INT, OPEN_S, CLOSE_S, CONST, VOID, FOR, WHILE, IF, DO, SWITCH, CASE, DEFAULT, BREAK, ENUM, OPEN_ARR, RETURN, STRUCT, TRY, CATCH, FINALLY, AT_ASM]
  234                      | if_header statement . ELSE statement

    ELSE  shift, and go to state 355

    $default  reduce using rule 233 (conditional_statement)

    Conflict between rule 233 and token ELSE resolved as shift (if_h < ELSE).


State 286

  242 switch_body: CLOSE_S .

    $default  reduce using rule 242 (switch_body)


State 287

  116 p_type: . OPEN_P type CLOSE_P
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR
  245 case_body: CASE . expr SEMI_COLUMN statement BREAK SEMI_COMA
  246          | CASE . expr SEMI_COLUMN statement
  247          | CASE . expr SEMI_COLUMN BREAK SEMI_COMA

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 356
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 288

  248 default_case: DEFAULT . SEMI_COLUMN statement BREAK SEMI_COMA
  249             | DEFAULT . SEMI_COLUMN statement
  250             | DEFAULT . SEMI_COLUMN BREAK SEMI_COMA

    SEMI_COLUMN  shift, and go to state 357


State 289

  235 conditional_statement: switch_header switch_body .

    $default  reduce using rule 235 (conditional_statement)


State 290

  239 switch_body: list_of_case . default_case CLOSE_S
  240            | list_of_case . CLOSE_S
  243 list_of_case: list_of_case . case_body
  245 case_body: . CASE expr SEMI_COLUMN statement BREAK SEMI_COMA
  246          | . CASE expr SEMI_COLUMN statement
  247          | . CASE expr SEMI_COLUMN BREAK SEMI_COMA
  248 default_case: . DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  249             | . DEFAULT SEMI_COLUMN statement
  250             | . DEFAULT SEMI_COLUMN BREAK SEMI_COMA

    CLOSE_S  shift, and go to state 358
    CASE     shift, and go to state 287
    DEFAULT  shift, and go to state 288

    case_body     go to state 359
    default_case  go to state 360


State 291

  244 list_of_case: case_body .

    $default  reduce using rule 244 (list_of_case)


State 292

  241 switch_body: default_case . CLOSE_S

    CLOSE_S  shift, and go to state 361


State 293

  262 list_expr: IDENTIFIER COMMA list_expr .

    $default  reduce using rule 262 (list_expr)


State 294

  259 list_expr: IDENTIFIER EQUAL expr . COMMA list_expr
  260          | IDENTIFIER EQUAL expr .  [CLOSE_S]

    COMMA  shift, and go to state 362

    $default  reduce using rule 260 (list_expr)


State 295

  257 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA .

    $default  reduce using rule 257 (enum)


State 296

   62 data_member: IDENTIFIER array_tag .

    $default  reduce using rule 62 (data_member)


State 297

   57 variable_declarationxx: CONST type ids_list SEMI_COMA .

    $default  reduce using rule 57 (variable_declarationxx)


State 298

  100 array_first_tag: OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 363


State 299

  101 array_first_tag: OPEN_ARR CLOSE_ARR .

    $default  reduce using rule 101 (array_first_tag)


State 300

   96 array_tag: array_first_tag array_tag_list .  [error, SEMI_COMA, COMMA, EQUAL]
   97 array_tag_list: array_tag_list . OPEN_ARR INT_VAL CLOSE_ARR
   99               | array_tag_list . OPEN_ARR error CLOSE_ARR

    OPEN_ARR  shift, and go to state 364

    $default  reduce using rule 96 (array_tag)


State 301

   58 variable_declarationxx: type IDENTIFIER array_tag error .

    $default  reduce using rule 58 (variable_declarationxx)


State 302

   64 data_member: error . array_tag
   96 array_tag: . array_first_tag array_tag_list
  100 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  101                | . OPEN_ARR CLOSE_ARR

    OPEN_ARR  shift, and go to state 218

    array_tag        go to state 219
    array_first_tag  go to state 220


State 303

   59 ids_list: ids_list COMMA data_member .

    $default  reduce using rule 59 (ids_list)


State 304

  124 parameter: p_type IDENTIFIER .

    $default  reduce using rule 124 (parameter)


State 305

  116 p_type: . OPEN_P type CLOSE_P
  122 parameter_list: parameter_list SEMI_COLUMN . parameter
  124 parameter: . p_type IDENTIFIER

    OPEN_P  shift, and go to state 87

    p_type     go to state 226
    parameter  go to state 365


State 306

   80 entity: error . COMMA

    COMMA  shift, and go to state 237


State 307

   78 entity: IDENTIFIER COMMA entity .

    $default  reduce using rule 78 (entity)


State 308

   74 struct: struct_header OPEN_S CLOSE_S entity error SEMI_COMA .

    $default  reduce using rule 74 (struct)


State 309

   77 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA .

    $default  reduce using rule 77 (struct)


State 310

   75 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity error . SEMI_COMA

    SEMI_COMA  shift, and go to state 366


State 311

   71 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA .

    $default  reduce using rule 71 (struct)


State 312

  161 variable_declaration_block: CONST type variable_list . SEMI_COMA
  163 variable_list: variable_list . COMMA variable
  165              | variable_list . error variable

    error      shift, and go to state 345
    SEMI_COMA  shift, and go to state 367
    COMMA      shift, and go to state 347


State 313

  185 for_initializer: IDENTIFIER . EQUAL expr
  186                | IDENTIFIER .  [SEMI_COMA]

    EQUAL  shift, and go to state 368

    $default  reduce using rule 186 (for_initializer)


State 314

  184 for_initializer: INT . IDENTIFIER EQUAL expr

    IDENTIFIER  shift, and go to state 369


State 315

  116 p_type: . OPEN_P type CLOSE_P
  177 for_loop_header: FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P
  181                | FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA CLOSE_P
  182                | FOR OPEN_P SEMI_COMA . SEMI_COMA expr CLOSE_P
  183                | FOR OPEN_P SEMI_COMA . SEMI_COMA CLOSE_P
  187 logic_expr: . expr LESS_THAN expr
  188           | . expr MORE_THAN expr
  189           | . expr LESS_OR_EQUAL expr
  190           | . expr MORE_OR_EQUAL expr
  191           | . expr EQUAL_EQUAL expr
  192           | . NOT_EQUAL expr
  193           | . OPEN_P logic_expr CLOSE_P
  194           | . logic_expr AND_AND logic_expr
  195           | . logic_expr OR_OR logic_expr
  196           | . TRUE
  197           | . FALSE
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    SEMI_COMA    shift, and go to state 370
    OPEN_P       shift, and go to state 317
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 318
    OPEN_ARR     shift, and go to state 182
    TRUE         shift, and go to state 319
    FALSE        shift, and go to state 320
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    logic_expr     go to state 371
    expr           go to state 322
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 316

  176 for_loop_header: FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  178                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  180                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA CLOSE_P

    SEMI_COMA  shift, and go to state 372


State 317

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  116 p_type: . OPEN_P type CLOSE_P
  116       | OPEN_P . type CLOSE_P
  187 logic_expr: . expr LESS_THAN expr
  188           | . expr MORE_THAN expr
  189           | . expr LESS_OR_EQUAL expr
  190           | . expr MORE_OR_EQUAL expr
  191           | . expr EQUAL_EQUAL expr
  192           | . NOT_EQUAL expr
  193           | . OPEN_P logic_expr CLOSE_P
  193           | OPEN_P . logic_expr CLOSE_P
  194           | . logic_expr AND_AND logic_expr
  195           | . logic_expr OR_OR logic_expr
  196           | . TRUE
  197           | . FALSE
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  213            | OPEN_P . simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 327
    NSSTRING     shift, and go to state 61
    FLOAT        shift, and go to state 62
    CHAR         shift, and go to state 63
    BOOL         shift, and go to state 64
    INT          shift, and go to state 65
    VOID         shift, and go to state 71
    OPEN_P       shift, and go to state 317
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 318
    ENUM         shift, and go to state 72
    OPEN_ARR     shift, and go to state 182
    TRUE         shift, and go to state 319
    FALSE        shift, and go to state 320
    STRUCT       shift, and go to state 73
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    type           go to state 145
    struct_type    go to state 80
    enum_type      go to state 81
    simple_type    go to state 82
    complex_type   go to state 83
    p_type         go to state 260
    logic_expr     go to state 373
    expr           go to state 322
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 374
    message_call2  go to state 201
    message_call   go to state 265


State 318

  116 p_type: . OPEN_P type CLOSE_P
  192 logic_expr: NOT_EQUAL . expr
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 375
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 319

  196 logic_expr: TRUE .

    $default  reduce using rule 196 (logic_expr)


State 320

  197 logic_expr: FALSE .

    $default  reduce using rule 197 (logic_expr)


State 321

  194 logic_expr: logic_expr . AND_AND logic_expr
  195           | logic_expr . OR_OR logic_expr
  232 while_loop_header: WHILE OPEN_P logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 376
    AND_AND  shift, and go to state 377
    OR_OR    shift, and go to state 378


State 322

  187 logic_expr: expr . LESS_THAN expr
  188           | expr . MORE_THAN expr
  189           | expr . LESS_OR_EQUAL expr
  190           | expr . MORE_OR_EQUAL expr
  191           | expr . EQUAL_EQUAL expr

    LESS_THAN      shift, and go to state 379
    MORE_THAN      shift, and go to state 380
    LESS_OR_EQUAL  shift, and go to state 381
    MORE_OR_EQUAL  shift, and go to state 382
    EQUAL_EQUAL    shift, and go to state 383


State 323

  194 logic_expr: logic_expr . AND_AND logic_expr
  195           | logic_expr . OR_OR logic_expr
  236 if_header: IF OPEN_P logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 384
    AND_AND  shift, and go to state 377
    OR_OR    shift, and go to state 378


State 324

  237 switch_header: SWITCH OPEN_P IDENTIFIER . CLOSE_P switch_body_block

    CLOSE_P  shift, and go to state 385


State 325

  214 simple_expr: IDENTIFIER DOUBLEPLUS .

    $default  reduce using rule 214 (simple_expr)


State 326

  215 simple_expr: IDENTIFIER DOUBLEMINUS .

    $default  reduce using rule 215 (simple_expr)


State 327

   95 complex_type: IDENTIFIER . MULTI
  203 long_id: IDENTIFIER .  [LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, EQUAL, DIV, DOT]
  214 simple_expr: IDENTIFIER . DOUBLEPLUS
  215            | IDENTIFIER . DOUBLEMINUS

    DOUBLEPLUS   shift, and go to state 325
    DOUBLEMINUS  shift, and go to state 326

    $default  reduce using rule 203 (long_id)

    Conflict between rule 203 and token MULTI resolved as reduce (MULTI < long_id_prec).


State 328

  201 long_id: long_id . DOT IDENTIFIER
  208 simple_expr: long_id .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, DIV, CLOSE_ARR]

    DOT  shift, and go to state 279

    $default  reduce using rule 208 (simple_expr)


State 329

  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr
  213            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 334
    MINUS    shift, and go to state 335
    CLOSE_P  shift, and go to state 386
    MULTI    shift, and go to state 336
    DIV      shift, and go to state 337


State 330

  216 simple_expr: DOUBLEPLUS IDENTIFIER .

    $default  reduce using rule 216 (simple_expr)


State 331

  217 simple_expr: DOUBLEMINUS IDENTIFIER .

    $default  reduce using rule 217 (simple_expr)


State 332

  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr
  218            | p_type simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, CLOSE_ARR]

    PLUS   shift, and go to state 334
    MINUS  shift, and go to state 335
    MULTI  shift, and go to state 336
    DIV    shift, and go to state 337

    $default  reduce using rule 218 (simple_expr)

    Conflict between rule 218 and token PLUS resolved as shift (p_type_expr_prec < PLUS).
    Conflict between rule 218 and token MINUS resolved as shift (p_type_expr_prec < MINUS).
    Conflict between rule 218 and token MULTI resolved as shift (p_type_expr_prec < MULTI).
    Conflict between rule 218 and token DIV resolved as shift (p_type_expr_prec < DIV).


State 333

  169 return_statement: RETURN expr SEMI_COMA .

    $default  reduce using rule 169 (return_statement)


State 334

  116 p_type: . OPEN_P type CLOSE_P
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  209            | simple_expr PLUS . simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    long_id        go to state 328
    simple_expr    go to state 387
    message_call2  go to state 201
    message_call   go to state 265


State 335

  116 p_type: . OPEN_P type CLOSE_P
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  210            | simple_expr MINUS . simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    long_id        go to state 328
    simple_expr    go to state 388
    message_call2  go to state 201
    message_call   go to state 265


State 336

  116 p_type: . OPEN_P type CLOSE_P
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  211            | simple_expr MULTI . simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    long_id        go to state 328
    simple_expr    go to state 389
    message_call2  go to state 201
    message_call   go to state 265


State 337

  116 p_type: . OPEN_P type CLOSE_P
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  212            | simple_expr DIV . simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    long_id        go to state 328
    simple_expr    go to state 390
    message_call2  go to state 201
    message_call   go to state 265


State 338

  265 catch_list: CATCH . OPEN_S type IDENTIFIER CLOSE_S statement

    OPEN_S  shift, and go to state 391


State 339

  263 try_catch: TRY statement catch_list . finally_statement
  264          | TRY statement catch_list .  [error, IDENTIFIER, NSSTRING, FLOAT, CHAR, BOOL, INT, OPEN_S, CLOSE_S, CONST, VOID, FOR, WHILE, IF, DO, SWITCH, CASE, DEFAULT, BREAK, ENUM, OPEN_ARR, RETURN, ELSE, STRUCT, TRY, AT_ASM]
  266 catch_list: catch_list . CATCH OPEN_S type IDENTIFIER CLOSE_S statement
  267 finally_statement: . FINALLY statement

    CATCH    shift, and go to state 392
    FINALLY  shift, and go to state 393

    $default  reduce using rule 264 (try_catch)

    finally_statement  go to state 394

    Conflict between rule 264 and token CATCH resolved as shift (try_prec < CATCH).
    Conflict between rule 264 and token FINALLY resolved as shift (try_prec < FINALLY).


State 340

  159 asm: AT_ASM STRING_VAL SEMI_COMA .

    $default  reduce using rule 159 (asm)


State 341

  102 initializer: . EQUAL array_body
  103            | .  [error, SEMI_COMA, COMMA]
  168 variable: error array_tag . initializer

    EQUAL  shift, and go to state 395

    $default  reduce using rule 103 (initializer)

    initializer  go to state 396


State 342

  104 main_initializer: EQUAL . expr
  116 p_type: . OPEN_P type CLOSE_P
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 397
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 343

  102 initializer: . EQUAL array_body
  103            | .  [error, SEMI_COMA, COMMA]
  166 variable: IDENTIFIER array_tag . initializer

    EQUAL  shift, and go to state 395

    $default  reduce using rule 103 (initializer)

    initializer  go to state 398


State 344

  167 variable: IDENTIFIER main_initializer .

    $default  reduce using rule 167 (variable)


State 345

  165 variable_list: variable_list error . variable
  166 variable: . IDENTIFIER array_tag initializer
  167         | . IDENTIFIER main_initializer
  168         | . error array_tag initializer

    error       shift, and go to state 269
    IDENTIFIER  shift, and go to state 270

    variable  go to state 399


State 346

  160 variable_declaration_block: type variable_list SEMI_COMA .

    $default  reduce using rule 160 (variable_declaration_block)


State 347

  163 variable_list: variable_list COMMA . variable
  166 variable: . IDENTIFIER array_tag initializer
  167         | . IDENTIFIER main_initializer
  168         | . error array_tag initializer

    error       shift, and go to state 269
    IDENTIFIER  shift, and go to state 270

    variable  go to state 400


State 348

  173 do_while: do_header statement while_loop_header . SEMI_COMA

    SEMI_COMA  shift, and go to state 401


State 349

  200 assign_expr: long_id EQUAL simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, CLOSE_ARR]
  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 334
    MINUS  shift, and go to state 335
    MULTI  shift, and go to state 336
    DIV    shift, and go to state 337

    $default  reduce using rule 200 (assign_expr)


State 350

  201 long_id: long_id DOT IDENTIFIER .

    $default  reduce using rule 201 (long_id)


State 351

  223 message: IDENTIFIER .  [CLOSE_ARR]
  227 message_selector: IDENTIFIER . SEMI_COLUMN argument_list

    SEMI_COLUMN  shift, and go to state 402

    $default  reduce using rule 223 (message)


State 352

  220 message_call: message_call2 sender message . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 403


State 353

  224 message: message_selectors_list .  [CLOSE_ARR]
  225 message_selectors_list: message_selectors_list . message_selector
  227 message_selector: . IDENTIFIER SEMI_COLUMN argument_list

    IDENTIFIER  shift, and go to state 404

    $default  reduce using rule 224 (message)

    message_selector  go to state 405


State 354

  226 message_selectors_list: message_selector .

    $default  reduce using rule 226 (message_selectors_list)


State 355

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  142 block_body: . block_body_header block_body_statements
  143 block_body_header: . OPEN_S
  149 statement: . loop_statement
  150          | . conditional_statement
  151          | . assign_expr SEMI_COMA
  152          | . variable_declaration_block
  153          | . block_body
  154          | . return_statement
  155          | . try_catch
  156          | . asm
  157          | . message_call SEMI_COMA
  158          | . error SEMI_COMA
  159 asm: . AT_ASM STRING_VAL SEMI_COMA
  160 variable_declaration_block: . type variable_list SEMI_COMA
  161                           | . CONST type variable_list SEMI_COMA
  162                           | . enum
  169 return_statement: . RETURN expr SEMI_COMA
  170 loop_statement: . for_loop
  171               | . while_loop
  172               | . do_while
  173 do_while: . do_header statement while_loop_header SEMI_COMA
  174 do_header: . DO
  175 for_loop: . for_loop_header statement
  176 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  183                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR
  231 while_loop: . while_loop_header statement
  232 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  233 conditional_statement: . if_header statement
  234                      | . if_header statement ELSE statement
  234                      | if_header statement ELSE . statement
  235                      | . switch_header switch_body
  236 if_header: . IF OPEN_P logic_expr CLOSE_P
  237 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  257 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  258     | . ENUM IDENTIFIER SEMI_COMA
  263 try_catch: . TRY statement catch_list finally_statement
  264          | . TRY statement catch_list

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 173
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 175
    VOID        shift, and go to state 71
    FOR         shift, and go to state 176
    WHILE       shift, and go to state 177
    IF          shift, and go to state 178
    DO          shift, and go to state 179
    SWITCH      shift, and go to state 180
    ENUM        shift, and go to state 181
    OPEN_ARR    shift, and go to state 182
    RETURN      shift, and go to state 183
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 184
    AT_ASM      shift, and go to state 185

    type                        go to state 186
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 187
    block_body_header           go to state 119
    statement                   go to state 406
    asm                         go to state 191
    variable_declaration_block  go to state 192
    return_statement            go to state 193
    loop_statement              go to state 194
    do_while                    go to state 195
    do_header                   go to state 196
    for_loop                    go to state 197
    for_loop_header             go to state 198
    assign_expr                 go to state 199
    long_id                     go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 356

  245 case_body: CASE expr . SEMI_COLUMN statement BREAK SEMI_COMA
  246          | CASE expr . SEMI_COLUMN statement
  247          | CASE expr . SEMI_COLUMN BREAK SEMI_COMA

    SEMI_COLUMN  shift, and go to state 407


State 357

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  142 block_body: . block_body_header block_body_statements
  143 block_body_header: . OPEN_S
  149 statement: . loop_statement
  150          | . conditional_statement
  151          | . assign_expr SEMI_COMA
  152          | . variable_declaration_block
  153          | . block_body
  154          | . return_statement
  155          | . try_catch
  156          | . asm
  157          | . message_call SEMI_COMA
  158          | . error SEMI_COMA
  159 asm: . AT_ASM STRING_VAL SEMI_COMA
  160 variable_declaration_block: . type variable_list SEMI_COMA
  161                           | . CONST type variable_list SEMI_COMA
  162                           | . enum
  169 return_statement: . RETURN expr SEMI_COMA
  170 loop_statement: . for_loop
  171               | . while_loop
  172               | . do_while
  173 do_while: . do_header statement while_loop_header SEMI_COMA
  174 do_header: . DO
  175 for_loop: . for_loop_header statement
  176 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  183                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR
  231 while_loop: . while_loop_header statement
  232 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  233 conditional_statement: . if_header statement
  234                      | . if_header statement ELSE statement
  235                      | . switch_header switch_body
  236 if_header: . IF OPEN_P logic_expr CLOSE_P
  237 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  248 default_case: DEFAULT SEMI_COLUMN . statement BREAK SEMI_COMA
  249             | DEFAULT SEMI_COLUMN . statement
  250             | DEFAULT SEMI_COLUMN . BREAK SEMI_COMA
  257 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  258     | . ENUM IDENTIFIER SEMI_COMA
  263 try_catch: . TRY statement catch_list finally_statement
  264          | . TRY statement catch_list

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 173
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 175
    VOID        shift, and go to state 71
    FOR         shift, and go to state 176
    WHILE       shift, and go to state 177
    IF          shift, and go to state 178
    DO          shift, and go to state 179
    SWITCH      shift, and go to state 180
    BREAK       shift, and go to state 408
    ENUM        shift, and go to state 181
    OPEN_ARR    shift, and go to state 182
    RETURN      shift, and go to state 183
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 184
    AT_ASM      shift, and go to state 185

    type                        go to state 186
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 187
    block_body_header           go to state 119
    statement                   go to state 409
    asm                         go to state 191
    variable_declaration_block  go to state 192
    return_statement            go to state 193
    loop_statement              go to state 194
    do_while                    go to state 195
    do_header                   go to state 196
    for_loop                    go to state 197
    for_loop_header             go to state 198
    assign_expr                 go to state 199
    long_id                     go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 358

  240 switch_body: list_of_case CLOSE_S .

    $default  reduce using rule 240 (switch_body)


State 359

  243 list_of_case: list_of_case case_body .

    $default  reduce using rule 243 (list_of_case)


State 360

  239 switch_body: list_of_case default_case . CLOSE_S

    CLOSE_S  shift, and go to state 410


State 361

  241 switch_body: default_case CLOSE_S .

    $default  reduce using rule 241 (switch_body)


State 362

  259 list_expr: . IDENTIFIER EQUAL expr COMMA list_expr
  259          | IDENTIFIER EQUAL expr COMMA . list_expr
  260          | . IDENTIFIER EQUAL expr
  261          | . IDENTIFIER
  262          | . IDENTIFIER COMMA list_expr

    IDENTIFIER  shift, and go to state 127

    list_expr  go to state 411


State 363

  100 array_first_tag: OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 100 (array_first_tag)


State 364

   97 array_tag_list: array_tag_list OPEN_ARR . INT_VAL CLOSE_ARR
   99               | array_tag_list OPEN_ARR . error CLOSE_ARR

    error    shift, and go to state 412
    INT_VAL  shift, and go to state 413


State 365

  122 parameter_list: parameter_list SEMI_COLUMN parameter .

    $default  reduce using rule 122 (parameter_list)


State 366

   75 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA .

    $default  reduce using rule 75 (struct)


State 367

  161 variable_declaration_block: CONST type variable_list SEMI_COMA .

    $default  reduce using rule 161 (variable_declaration_block)


State 368

  116 p_type: . OPEN_P type CLOSE_P
  185 for_initializer: IDENTIFIER EQUAL . expr
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 414
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 369

  184 for_initializer: INT IDENTIFIER . EQUAL expr

    EQUAL  shift, and go to state 415


State 370

  116 p_type: . OPEN_P type CLOSE_P
  182 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA . expr CLOSE_P
  183                | FOR OPEN_P SEMI_COMA SEMI_COMA . CLOSE_P
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    CLOSE_P      shift, and go to state 416
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 417
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 371

  177 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  181                | FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA CLOSE_P
  194 logic_expr: logic_expr . AND_AND logic_expr
  195           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 418
    AND_AND    shift, and go to state 377
    OR_OR      shift, and go to state 378


State 372

  116 p_type: . OPEN_P type CLOSE_P
  176 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P
  178                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA expr CLOSE_P
  179                | FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA CLOSE_P
  180                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA CLOSE_P
  187 logic_expr: . expr LESS_THAN expr
  188           | . expr MORE_THAN expr
  189           | . expr LESS_OR_EQUAL expr
  190           | . expr MORE_OR_EQUAL expr
  191           | . expr EQUAL_EQUAL expr
  192           | . NOT_EQUAL expr
  193           | . OPEN_P logic_expr CLOSE_P
  194           | . logic_expr AND_AND logic_expr
  195           | . logic_expr OR_OR logic_expr
  196           | . TRUE
  197           | . FALSE
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    SEMI_COMA    shift, and go to state 419
    OPEN_P       shift, and go to state 317
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 318
    OPEN_ARR     shift, and go to state 182
    TRUE         shift, and go to state 319
    FALSE        shift, and go to state 320
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    logic_expr     go to state 420
    expr           go to state 322
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 373

  193 logic_expr: OPEN_P logic_expr . CLOSE_P
  194           | logic_expr . AND_AND logic_expr
  195           | logic_expr . OR_OR logic_expr

    CLOSE_P  shift, and go to state 421
    AND_AND  shift, and go to state 377
    OR_OR    shift, and go to state 378


State 374

  199 expr: simple_expr .  [LESS_THAN, MORE_THAN, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL]
  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr
  213            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 334
    MINUS    shift, and go to state 335
    CLOSE_P  shift, and go to state 386
    MULTI    shift, and go to state 336
    DIV      shift, and go to state 337

    $default  reduce using rule 199 (expr)


State 375

  192 logic_expr: NOT_EQUAL expr .

    $default  reduce using rule 192 (logic_expr)


State 376

  232 while_loop_header: WHILE OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 232 (while_loop_header)


State 377

  116 p_type: . OPEN_P type CLOSE_P
  187 logic_expr: . expr LESS_THAN expr
  188           | . expr MORE_THAN expr
  189           | . expr LESS_OR_EQUAL expr
  190           | . expr MORE_OR_EQUAL expr
  191           | . expr EQUAL_EQUAL expr
  192           | . NOT_EQUAL expr
  193           | . OPEN_P logic_expr CLOSE_P
  194           | . logic_expr AND_AND logic_expr
  194           | logic_expr AND_AND . logic_expr
  195           | . logic_expr OR_OR logic_expr
  196           | . TRUE
  197           | . FALSE
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 317
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 318
    OPEN_ARR     shift, and go to state 182
    TRUE         shift, and go to state 319
    FALSE        shift, and go to state 320
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    logic_expr     go to state 422
    expr           go to state 322
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 378

  116 p_type: . OPEN_P type CLOSE_P
  187 logic_expr: . expr LESS_THAN expr
  188           | . expr MORE_THAN expr
  189           | . expr LESS_OR_EQUAL expr
  190           | . expr MORE_OR_EQUAL expr
  191           | . expr EQUAL_EQUAL expr
  192           | . NOT_EQUAL expr
  193           | . OPEN_P logic_expr CLOSE_P
  194           | . logic_expr AND_AND logic_expr
  195           | . logic_expr OR_OR logic_expr
  195           | logic_expr OR_OR . logic_expr
  196           | . TRUE
  197           | . FALSE
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 317
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 318
    OPEN_ARR     shift, and go to state 182
    TRUE         shift, and go to state 319
    FALSE        shift, and go to state 320
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    logic_expr     go to state 423
    expr           go to state 322
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 379

  116 p_type: . OPEN_P type CLOSE_P
  187 logic_expr: expr LESS_THAN . expr
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 424
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 380

  116 p_type: . OPEN_P type CLOSE_P
  188 logic_expr: expr MORE_THAN . expr
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 425
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 381

  116 p_type: . OPEN_P type CLOSE_P
  189 logic_expr: expr LESS_OR_EQUAL . expr
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 426
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 382

  116 p_type: . OPEN_P type CLOSE_P
  190 logic_expr: expr MORE_OR_EQUAL . expr
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 427
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 383

  116 p_type: . OPEN_P type CLOSE_P
  191 logic_expr: expr EQUAL_EQUAL . expr
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 428
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 384

  236 if_header: IF OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 236 (if_header)


State 385

  237 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P . switch_body_block
  238 switch_body_block: . OPEN_S

    OPEN_S  shift, and go to state 429

    switch_body_block  go to state 430


State 386

  213 simple_expr: OPEN_P simple_expr CLOSE_P .

    $default  reduce using rule 213 (simple_expr)


State 387

  209 simple_expr: simple_expr . PLUS simple_expr
  209            | simple_expr PLUS simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, CLOSE_ARR]
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 336
    DIV    shift, and go to state 337

    $default  reduce using rule 209 (simple_expr)

    Conflict between rule 209 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 209 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 209 and token MULTI resolved as shift (PLUS < MULTI).
    Conflict between rule 209 and token DIV resolved as shift (PLUS < DIV).


State 388

  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  210            | simple_expr MINUS simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, CLOSE_ARR]
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 336
    DIV    shift, and go to state 337

    $default  reduce using rule 210 (simple_expr)

    Conflict between rule 210 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 210 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 210 and token MULTI resolved as shift (MINUS < MULTI).
    Conflict between rule 210 and token DIV resolved as shift (MINUS < DIV).


State 389

  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  211            | simple_expr MULTI simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, DIV, CLOSE_ARR]
  212            | simple_expr . DIV simple_expr

    $default  reduce using rule 211 (simple_expr)

    Conflict between rule 211 and token PLUS resolved as reduce (PLUS < MULTI).
    Conflict between rule 211 and token MINUS resolved as reduce (MINUS < MULTI).
    Conflict between rule 211 and token MULTI resolved as reduce (%left MULTI).
    Conflict between rule 211 and token DIV resolved as reduce (%left DIV).


State 390

  209 simple_expr: simple_expr . PLUS simple_expr
  210            | simple_expr . MINUS simple_expr
  211            | simple_expr . MULTI simple_expr
  212            | simple_expr . DIV simple_expr
  212            | simple_expr DIV simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, DIV, CLOSE_ARR]

    $default  reduce using rule 212 (simple_expr)

    Conflict between rule 212 and token PLUS resolved as reduce (PLUS < DIV).
    Conflict between rule 212 and token MINUS resolved as reduce (MINUS < DIV).
    Conflict between rule 212 and token MULTI resolved as reduce (%left MULTI).
    Conflict between rule 212 and token DIV resolved as reduce (%left DIV).


State 391

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  265 catch_list: CATCH OPEN_S . type IDENTIFIER CLOSE_S statement

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    type          go to state 431
    struct_type   go to state 80
    enum_type     go to state 81
    simple_type   go to state 82
    complex_type  go to state 83


State 392

  266 catch_list: catch_list CATCH . OPEN_S type IDENTIFIER CLOSE_S statement

    OPEN_S  shift, and go to state 432


State 393

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  142 block_body: . block_body_header block_body_statements
  143 block_body_header: . OPEN_S
  149 statement: . loop_statement
  150          | . conditional_statement
  151          | . assign_expr SEMI_COMA
  152          | . variable_declaration_block
  153          | . block_body
  154          | . return_statement
  155          | . try_catch
  156          | . asm
  157          | . message_call SEMI_COMA
  158          | . error SEMI_COMA
  159 asm: . AT_ASM STRING_VAL SEMI_COMA
  160 variable_declaration_block: . type variable_list SEMI_COMA
  161                           | . CONST type variable_list SEMI_COMA
  162                           | . enum
  169 return_statement: . RETURN expr SEMI_COMA
  170 loop_statement: . for_loop
  171               | . while_loop
  172               | . do_while
  173 do_while: . do_header statement while_loop_header SEMI_COMA
  174 do_header: . DO
  175 for_loop: . for_loop_header statement
  176 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  183                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR
  231 while_loop: . while_loop_header statement
  232 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  233 conditional_statement: . if_header statement
  234                      | . if_header statement ELSE statement
  235                      | . switch_header switch_body
  236 if_header: . IF OPEN_P logic_expr CLOSE_P
  237 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  257 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  258     | . ENUM IDENTIFIER SEMI_COMA
  263 try_catch: . TRY statement catch_list finally_statement
  264          | . TRY statement catch_list
  267 finally_statement: FINALLY . statement

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 173
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 175
    VOID        shift, and go to state 71
    FOR         shift, and go to state 176
    WHILE       shift, and go to state 177
    IF          shift, and go to state 178
    DO          shift, and go to state 179
    SWITCH      shift, and go to state 180
    ENUM        shift, and go to state 181
    OPEN_ARR    shift, and go to state 182
    RETURN      shift, and go to state 183
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 184
    AT_ASM      shift, and go to state 185

    type                        go to state 186
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 187
    block_body_header           go to state 119
    statement                   go to state 433
    asm                         go to state 191
    variable_declaration_block  go to state 192
    return_statement            go to state 193
    loop_statement              go to state 194
    do_while                    go to state 195
    do_header                   go to state 196
    for_loop                    go to state 197
    for_loop_header             go to state 198
    assign_expr                 go to state 199
    long_id                     go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 394

  263 try_catch: TRY statement catch_list finally_statement .

    $default  reduce using rule 263 (try_catch)


State 395

   36 array_body: . OPEN_S array_ele CLOSE_S
   37           | . OPEN_S CLOSE_S
  102 initializer: EQUAL . array_body

    OPEN_S  shift, and go to state 434

    array_body  go to state 435


State 396

  168 variable: error array_tag initializer .

    $default  reduce using rule 168 (variable)


State 397

  104 main_initializer: EQUAL expr .

    $default  reduce using rule 104 (main_initializer)


State 398

  166 variable: IDENTIFIER array_tag initializer .

    $default  reduce using rule 166 (variable)


State 399

  165 variable_list: variable_list error variable .

    $default  reduce using rule 165 (variable_list)


State 400

  163 variable_list: variable_list COMMA variable .

    $default  reduce using rule 163 (variable_list)


State 401

  173 do_while: do_header statement while_loop_header SEMI_COMA .

    $default  reduce using rule 173 (do_while)


State 402

  116 p_type: . OPEN_P type CLOSE_P
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR
  227 message_selector: IDENTIFIER SEMI_COLUMN . argument_list
  228 argument_list: . argument_list SEMI_COLUMN argument
  229              | . argument
  230 argument: . expr

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 436
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265
    argument_list  go to state 437
    argument       go to state 438


State 403

  220 message_call: message_call2 sender message CLOSE_ARR .

    $default  reduce using rule 220 (message_call)


State 404

  227 message_selector: IDENTIFIER . SEMI_COLUMN argument_list

    SEMI_COLUMN  shift, and go to state 402


State 405

  225 message_selectors_list: message_selectors_list message_selector .

    $default  reduce using rule 225 (message_selectors_list)


State 406

  234 conditional_statement: if_header statement ELSE statement .

    $default  reduce using rule 234 (conditional_statement)


State 407

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  142 block_body: . block_body_header block_body_statements
  143 block_body_header: . OPEN_S
  149 statement: . loop_statement
  150          | . conditional_statement
  151          | . assign_expr SEMI_COMA
  152          | . variable_declaration_block
  153          | . block_body
  154          | . return_statement
  155          | . try_catch
  156          | . asm
  157          | . message_call SEMI_COMA
  158          | . error SEMI_COMA
  159 asm: . AT_ASM STRING_VAL SEMI_COMA
  160 variable_declaration_block: . type variable_list SEMI_COMA
  161                           | . CONST type variable_list SEMI_COMA
  162                           | . enum
  169 return_statement: . RETURN expr SEMI_COMA
  170 loop_statement: . for_loop
  171               | . while_loop
  172               | . do_while
  173 do_while: . do_header statement while_loop_header SEMI_COMA
  174 do_header: . DO
  175 for_loop: . for_loop_header statement
  176 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  183                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR
  231 while_loop: . while_loop_header statement
  232 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  233 conditional_statement: . if_header statement
  234                      | . if_header statement ELSE statement
  235                      | . switch_header switch_body
  236 if_header: . IF OPEN_P logic_expr CLOSE_P
  237 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  245 case_body: CASE expr SEMI_COLUMN . statement BREAK SEMI_COMA
  246          | CASE expr SEMI_COLUMN . statement
  247          | CASE expr SEMI_COLUMN . BREAK SEMI_COMA
  257 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  258     | . ENUM IDENTIFIER SEMI_COMA
  263 try_catch: . TRY statement catch_list finally_statement
  264          | . TRY statement catch_list

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 173
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 175
    VOID        shift, and go to state 71
    FOR         shift, and go to state 176
    WHILE       shift, and go to state 177
    IF          shift, and go to state 178
    DO          shift, and go to state 179
    SWITCH      shift, and go to state 180
    BREAK       shift, and go to state 439
    ENUM        shift, and go to state 181
    OPEN_ARR    shift, and go to state 182
    RETURN      shift, and go to state 183
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 184
    AT_ASM      shift, and go to state 185

    type                        go to state 186
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 187
    block_body_header           go to state 119
    statement                   go to state 440
    asm                         go to state 191
    variable_declaration_block  go to state 192
    return_statement            go to state 193
    loop_statement              go to state 194
    do_while                    go to state 195
    do_header                   go to state 196
    for_loop                    go to state 197
    for_loop_header             go to state 198
    assign_expr                 go to state 199
    long_id                     go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 408

  250 default_case: DEFAULT SEMI_COLUMN BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 441


State 409

  248 default_case: DEFAULT SEMI_COLUMN statement . BREAK SEMI_COMA
  249             | DEFAULT SEMI_COLUMN statement .  [CLOSE_S]

    BREAK  shift, and go to state 442

    $default  reduce using rule 249 (default_case)


State 410

  239 switch_body: list_of_case default_case CLOSE_S .

    $default  reduce using rule 239 (switch_body)


State 411

  259 list_expr: IDENTIFIER EQUAL expr COMMA list_expr .

    $default  reduce using rule 259 (list_expr)


State 412

   99 array_tag_list: array_tag_list OPEN_ARR error . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 443


State 413

   97 array_tag_list: array_tag_list OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 444


State 414

  185 for_initializer: IDENTIFIER EQUAL expr .

    $default  reduce using rule 185 (for_initializer)


State 415

  116 p_type: . OPEN_P type CLOSE_P
  184 for_initializer: INT IDENTIFIER EQUAL . expr
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 445
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 416

  183 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 183 (for_loop_header)


State 417

  182 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 446


State 418

  116 p_type: . OPEN_P type CLOSE_P
  177 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P
  181                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . CLOSE_P
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    CLOSE_P      shift, and go to state 447
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 448
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 419

  116 p_type: . OPEN_P type CLOSE_P
  178 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . expr CLOSE_P
  180                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . CLOSE_P
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    CLOSE_P      shift, and go to state 449
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 450
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 420

  176 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  179                | FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA CLOSE_P
  194 logic_expr: logic_expr . AND_AND logic_expr
  195           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 451
    AND_AND    shift, and go to state 377
    OR_OR      shift, and go to state 378


State 421

  193 logic_expr: OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 193 (logic_expr)


State 422

  194 logic_expr: logic_expr . AND_AND logic_expr
  194           | logic_expr AND_AND logic_expr .  [SEMI_COMA, CLOSE_P]
  195           | logic_expr . OR_OR logic_expr

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 194 (logic_expr)

    Conflict between rule 194 and token AND_AND resolved as an error (%nonassoc AND_AND).
    Conflict between rule 194 and token OR_OR resolved as an error (%nonassoc OR_OR).


State 423

  194 logic_expr: logic_expr . AND_AND logic_expr
  195           | logic_expr . OR_OR logic_expr
  195           | logic_expr OR_OR logic_expr .  [SEMI_COMA, CLOSE_P]

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 195 (logic_expr)

    Conflict between rule 195 and token AND_AND resolved as an error (%nonassoc AND_AND).
    Conflict between rule 195 and token OR_OR resolved as an error (%nonassoc OR_OR).


State 424

  187 logic_expr: expr LESS_THAN expr .

    $default  reduce using rule 187 (logic_expr)


State 425

  188 logic_expr: expr MORE_THAN expr .

    $default  reduce using rule 188 (logic_expr)


State 426

  189 logic_expr: expr LESS_OR_EQUAL expr .

    $default  reduce using rule 189 (logic_expr)


State 427

  190 logic_expr: expr MORE_OR_EQUAL expr .

    $default  reduce using rule 190 (logic_expr)


State 428

  191 logic_expr: expr EQUAL_EQUAL expr .

    $default  reduce using rule 191 (logic_expr)


State 429

  238 switch_body_block: OPEN_S .

    $default  reduce using rule 238 (switch_body_block)


State 430

  237 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block .

    $default  reduce using rule 237 (switch_header)


State 431

  265 catch_list: CATCH OPEN_S type . IDENTIFIER CLOSE_S statement

    IDENTIFIER  shift, and go to state 452


State 432

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  266 catch_list: catch_list CATCH OPEN_S . type IDENTIFIER CLOSE_S statement

    IDENTIFIER  shift, and go to state 60
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    VOID        shift, and go to state 71
    ENUM        shift, and go to state 72
    STRUCT      shift, and go to state 73

    type          go to state 453
    struct_type   go to state 80
    enum_type     go to state 81
    simple_type   go to state 82
    complex_type  go to state 83


State 433

  267 finally_statement: FINALLY statement .

    $default  reduce using rule 267 (finally_statement)


State 434

   36 array_body: OPEN_S . array_ele CLOSE_S
   37           | OPEN_S . CLOSE_S
   38 array_ele: . expr COMMA array_ele
   39          | . expr
   40          | . OPEN_S CLOSE_S
   41          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | . OPEN_S array_ele CLOSE_S
   43          | . OPEN_S CLOSE_S COMMA array_ele
  116 p_type: . OPEN_P type CLOSE_P
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_S       shift, and go to state 454
    CLOSE_S      shift, and go to state 455
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    array_ele      go to state 456
    p_type         go to state 260
    expr           go to state 457
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 435

  102 initializer: EQUAL array_body .

    $default  reduce using rule 102 (initializer)


State 436

  230 argument: expr .

    $default  reduce using rule 230 (argument)


State 437

  227 message_selector: IDENTIFIER SEMI_COLUMN argument_list .  [IDENTIFIER, CLOSE_ARR]
  228 argument_list: argument_list . SEMI_COLUMN argument

    SEMI_COLUMN  shift, and go to state 458

    $default  reduce using rule 227 (message_selector)


State 438

  229 argument_list: argument .

    $default  reduce using rule 229 (argument_list)


State 439

  247 case_body: CASE expr SEMI_COLUMN BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 459


State 440

  245 case_body: CASE expr SEMI_COLUMN statement . BREAK SEMI_COMA
  246          | CASE expr SEMI_COLUMN statement .  [CLOSE_S, CASE, DEFAULT]

    BREAK  shift, and go to state 460

    $default  reduce using rule 246 (case_body)


State 441

  250 default_case: DEFAULT SEMI_COLUMN BREAK SEMI_COMA .

    $default  reduce using rule 250 (default_case)


State 442

  248 default_case: DEFAULT SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 461


State 443

   99 array_tag_list: array_tag_list OPEN_ARR error CLOSE_ARR .

    $default  reduce using rule 99 (array_tag_list)


State 444

   97 array_tag_list: array_tag_list OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 97 (array_tag_list)


State 445

  184 for_initializer: INT IDENTIFIER EQUAL expr .

    $default  reduce using rule 184 (for_initializer)


State 446

  182 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 182 (for_loop_header)


State 447

  181 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P .

    $default  reduce using rule 181 (for_loop_header)


State 448

  177 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 462


State 449

  180 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 180 (for_loop_header)


State 450

  178 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 463


State 451

  116 p_type: . OPEN_P type CLOSE_P
  176 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P
  179                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . CLOSE_P
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    CLOSE_P      shift, and go to state 464
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 465
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 452

  265 catch_list: CATCH OPEN_S type IDENTIFIER . CLOSE_S statement

    CLOSE_S  shift, and go to state 466


State 453

  266 catch_list: catch_list CATCH OPEN_S type . IDENTIFIER CLOSE_S statement

    IDENTIFIER  shift, and go to state 467


State 454

   38 array_ele: . expr COMMA array_ele
   39          | . expr
   40          | . OPEN_S CLOSE_S
   40          | OPEN_S . CLOSE_S
   41          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   41          | OPEN_S . array_ele CLOSE_S COMMA array_ele
   42          | . OPEN_S array_ele CLOSE_S
   42          | OPEN_S . array_ele CLOSE_S
   43          | . OPEN_S CLOSE_S COMMA array_ele
   43          | OPEN_S . CLOSE_S COMMA array_ele
  116 p_type: . OPEN_P type CLOSE_P
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_S       shift, and go to state 454
    CLOSE_S      shift, and go to state 468
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    array_ele      go to state 469
    p_type         go to state 260
    expr           go to state 457
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 455

   37 array_body: OPEN_S CLOSE_S .

    $default  reduce using rule 37 (array_body)


State 456

   36 array_body: OPEN_S array_ele . CLOSE_S

    CLOSE_S  shift, and go to state 470


State 457

   38 array_ele: expr . COMMA array_ele
   39          | expr .  [CLOSE_S]

    COMMA  shift, and go to state 471

    $default  reduce using rule 39 (array_ele)


State 458

  116 p_type: . OPEN_P type CLOSE_P
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR
  228 argument_list: argument_list SEMI_COLUMN . argument
  230 argument: . expr

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 436
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265
    argument       go to state 472


State 459

  247 case_body: CASE expr SEMI_COLUMN BREAK SEMI_COMA .

    $default  reduce using rule 247 (case_body)


State 460

  245 case_body: CASE expr SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 473


State 461

  248 default_case: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 248 (default_case)


State 462

  177 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 177 (for_loop_header)


State 463

  178 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 178 (for_loop_header)


State 464

  179 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P .

    $default  reduce using rule 179 (for_loop_header)


State 465

  176 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 474


State 466

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  142 block_body: . block_body_header block_body_statements
  143 block_body_header: . OPEN_S
  149 statement: . loop_statement
  150          | . conditional_statement
  151          | . assign_expr SEMI_COMA
  152          | . variable_declaration_block
  153          | . block_body
  154          | . return_statement
  155          | . try_catch
  156          | . asm
  157          | . message_call SEMI_COMA
  158          | . error SEMI_COMA
  159 asm: . AT_ASM STRING_VAL SEMI_COMA
  160 variable_declaration_block: . type variable_list SEMI_COMA
  161                           | . CONST type variable_list SEMI_COMA
  162                           | . enum
  169 return_statement: . RETURN expr SEMI_COMA
  170 loop_statement: . for_loop
  171               | . while_loop
  172               | . do_while
  173 do_while: . do_header statement while_loop_header SEMI_COMA
  174 do_header: . DO
  175 for_loop: . for_loop_header statement
  176 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  183                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR
  231 while_loop: . while_loop_header statement
  232 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  233 conditional_statement: . if_header statement
  234                      | . if_header statement ELSE statement
  235                      | . switch_header switch_body
  236 if_header: . IF OPEN_P logic_expr CLOSE_P
  237 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  257 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  258     | . ENUM IDENTIFIER SEMI_COMA
  263 try_catch: . TRY statement catch_list finally_statement
  264          | . TRY statement catch_list
  265 catch_list: CATCH OPEN_S type IDENTIFIER CLOSE_S . statement

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 173
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 175
    VOID        shift, and go to state 71
    FOR         shift, and go to state 176
    WHILE       shift, and go to state 177
    IF          shift, and go to state 178
    DO          shift, and go to state 179
    SWITCH      shift, and go to state 180
    ENUM        shift, and go to state 181
    OPEN_ARR    shift, and go to state 182
    RETURN      shift, and go to state 183
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 184
    AT_ASM      shift, and go to state 185

    type                        go to state 186
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 187
    block_body_header           go to state 119
    statement                   go to state 475
    asm                         go to state 191
    variable_declaration_block  go to state 192
    return_statement            go to state 193
    loop_statement              go to state 194
    do_while                    go to state 195
    do_header                   go to state 196
    for_loop                    go to state 197
    for_loop_header             go to state 198
    assign_expr                 go to state 199
    long_id                     go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 467

  266 catch_list: catch_list CATCH OPEN_S type IDENTIFIER . CLOSE_S statement

    CLOSE_S  shift, and go to state 476


State 468

   40 array_ele: OPEN_S CLOSE_S .  [CLOSE_S]
   43          | OPEN_S CLOSE_S . COMMA array_ele

    COMMA  shift, and go to state 477

    $default  reduce using rule 40 (array_ele)


State 469

   41 array_ele: OPEN_S array_ele . CLOSE_S COMMA array_ele
   42          | OPEN_S array_ele . CLOSE_S

    CLOSE_S  shift, and go to state 478


State 470

   36 array_body: OPEN_S array_ele CLOSE_S .

    $default  reduce using rule 36 (array_body)


State 471

   38 array_ele: . expr COMMA array_ele
   38          | expr COMMA . array_ele
   39          | . expr
   40          | . OPEN_S CLOSE_S
   41          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | . OPEN_S array_ele CLOSE_S
   43          | . OPEN_S CLOSE_S COMMA array_ele
  116 p_type: . OPEN_P type CLOSE_P
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_S       shift, and go to state 454
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    array_ele      go to state 479
    p_type         go to state 260
    expr           go to state 457
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 472

  228 argument_list: argument_list SEMI_COLUMN argument .

    $default  reduce using rule 228 (argument_list)


State 473

  245 case_body: CASE expr SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 245 (case_body)


State 474

  176 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 176 (for_loop_header)


State 475

  265 catch_list: CATCH OPEN_S type IDENTIFIER CLOSE_S statement .

    $default  reduce using rule 265 (catch_list)


State 476

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  142 block_body: . block_body_header block_body_statements
  143 block_body_header: . OPEN_S
  149 statement: . loop_statement
  150          | . conditional_statement
  151          | . assign_expr SEMI_COMA
  152          | . variable_declaration_block
  153          | . block_body
  154          | . return_statement
  155          | . try_catch
  156          | . asm
  157          | . message_call SEMI_COMA
  158          | . error SEMI_COMA
  159 asm: . AT_ASM STRING_VAL SEMI_COMA
  160 variable_declaration_block: . type variable_list SEMI_COMA
  161                           | . CONST type variable_list SEMI_COMA
  162                           | . enum
  169 return_statement: . RETURN expr SEMI_COMA
  170 loop_statement: . for_loop
  171               | . while_loop
  172               | . do_while
  173 do_while: . do_header statement while_loop_header SEMI_COMA
  174 do_header: . DO
  175 for_loop: . for_loop_header statement
  176 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  183                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR
  231 while_loop: . while_loop_header statement
  232 while_loop_header: . WHILE OPEN_P logic_expr CLOSE_P
  233 conditional_statement: . if_header statement
  234                      | . if_header statement ELSE statement
  235                      | . switch_header switch_body
  236 if_header: . IF OPEN_P logic_expr CLOSE_P
  237 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  257 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  258     | . ENUM IDENTIFIER SEMI_COMA
  263 try_catch: . TRY statement catch_list finally_statement
  264          | . TRY statement catch_list
  266 catch_list: catch_list CATCH OPEN_S type IDENTIFIER CLOSE_S . statement

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 173
    NSSTRING    shift, and go to state 61
    FLOAT       shift, and go to state 62
    CHAR        shift, and go to state 63
    BOOL        shift, and go to state 64
    INT         shift, and go to state 65
    OPEN_S      shift, and go to state 117
    CONST       shift, and go to state 175
    VOID        shift, and go to state 71
    FOR         shift, and go to state 176
    WHILE       shift, and go to state 177
    IF          shift, and go to state 178
    DO          shift, and go to state 179
    SWITCH      shift, and go to state 180
    ENUM        shift, and go to state 181
    OPEN_ARR    shift, and go to state 182
    RETURN      shift, and go to state 183
    STRUCT      shift, and go to state 73
    TRY         shift, and go to state 184
    AT_ASM      shift, and go to state 185

    type                        go to state 186
    struct_type                 go to state 80
    enum_type                   go to state 81
    simple_type                 go to state 82
    complex_type                go to state 83
    block_body                  go to state 187
    block_body_header           go to state 119
    statement                   go to state 480
    asm                         go to state 191
    variable_declaration_block  go to state 192
    return_statement            go to state 193
    loop_statement              go to state 194
    do_while                    go to state 195
    do_header                   go to state 196
    for_loop                    go to state 197
    for_loop_header             go to state 198
    assign_expr                 go to state 199
    long_id                     go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 477

   38 array_ele: . expr COMMA array_ele
   39          | . expr
   40          | . OPEN_S CLOSE_S
   41          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | . OPEN_S array_ele CLOSE_S
   43          | . OPEN_S CLOSE_S COMMA array_ele
   43          | OPEN_S CLOSE_S COMMA . array_ele
  116 p_type: . OPEN_P type CLOSE_P
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_S       shift, and go to state 454
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    array_ele      go to state 481
    p_type         go to state 260
    expr           go to state 457
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 478

   41 array_ele: OPEN_S array_ele CLOSE_S . COMMA array_ele
   42          | OPEN_S array_ele CLOSE_S .  [CLOSE_S]

    COMMA  shift, and go to state 482

    $default  reduce using rule 42 (array_ele)


State 479

   38 array_ele: expr COMMA array_ele .

    $default  reduce using rule 38 (array_ele)


State 480

  266 catch_list: catch_list CATCH OPEN_S type IDENTIFIER CLOSE_S statement .

    $default  reduce using rule 266 (catch_list)


State 481

   43 array_ele: OPEN_S CLOSE_S COMMA array_ele .

    $default  reduce using rule 43 (array_ele)


State 482

   38 array_ele: . expr COMMA array_ele
   39          | . expr
   40          | . OPEN_S CLOSE_S
   41          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   41          | OPEN_S array_ele CLOSE_S COMMA . array_ele
   42          | . OPEN_S array_ele CLOSE_S
   43          | . OPEN_S CLOSE_S COMMA array_ele
  116 p_type: . OPEN_P type CLOSE_P
  198 expr: . assign_expr
  199     | . simple_expr
  200 assign_expr: . long_id EQUAL simple_expr
  201 long_id: . long_id DOT IDENTIFIER
  202        | . message_call
  203        | . IDENTIFIER
  204 simple_expr: . STRING_VAL
  205            | . INT_VAL
  206            | . FLOAT_VAL
  207            | . CHAR_VAL
  208            | . long_id
  209            | . simple_expr PLUS simple_expr
  210            | . simple_expr MINUS simple_expr
  211            | . simple_expr MULTI simple_expr
  212            | . simple_expr DIV simple_expr
  213            | . OPEN_P simple_expr CLOSE_P
  214            | . IDENTIFIER DOUBLEPLUS
  215            | . IDENTIFIER DOUBLEMINUS
  216            | . DOUBLEPLUS IDENTIFIER
  217            | . DOUBLEMINUS IDENTIFIER
  218            | . p_type simple_expr
  219 message_call2: . OPEN_ARR
  220 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_S       shift, and go to state 454
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 182
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    array_ele      go to state 483
    p_type         go to state 260
    expr           go to state 457
    assign_expr    go to state 262
    long_id        go to state 263
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 265


State 483

   41 array_ele: OPEN_S array_ele CLOSE_S COMMA array_ele .

    $default  reduce using rule 41 (array_ele)
