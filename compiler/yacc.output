Terminals unused in grammar

   SELF
   expr_1


State 325 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: components

    2 components: components component
    3           | component
    4           | IMPORT STRING_VAL SEMI_COMA

    5 component: class_interface
    6          | class_implementation
    7          | protocol
    8          | struct
    9          | enum

   10 class_interface: class_interface_header class_interface_body

   11 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
   12                       | AT_INTERFACE IDENTIFIER
   13                       | AT_INTERFACE error
   14                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN error

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END
   16                     | protocol_reference_list instance_variables AT_END
   17                     | protocol_reference_list interface_declaration_list AT_END
   18                     | instance_variables interface_declaration_list AT_END
   19                     | protocol_reference_list AT_END
   20                     | instance_variables AT_END
   21                     | interface_declaration_list AT_END
   22                     | AT_END
   23                     | protocol_reference_list error AT_END
   24                     | protocol_reference_list error interface_declaration_list AT_END
   25                     | protocol_reference_list error
   26                     | protocol_reference_list instance_variables interface_declaration_list error
   27                     | protocol_reference_list instance_variables error
   28                     | protocol_reference_list interface_declaration_list error
   29                     | instance_variables interface_declaration_list error
   30                     | instance_variables error
   31                     | interface_declaration_list error

   32 protocol_reference_list: LESS_THAN ids_list_identifier MORE_THAN
   33                        | LESS_THAN ids_list_identifier error

   34 ids_list_identifier: ids_list_identifier COMMA IDENTIFIER
   35                    | IDENTIFIER

   36 array_body: OPEN_S array_ele CLOSE_S
   37           | OPEN_S CLOSE_S

   38 array_ele: expr COMMA array_ele
   39          | expr
   40          | OPEN_S CLOSE_S
   41          | OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | OPEN_S array_ele CLOSE_S
   43          | OPEN_S CLOSE_S COMMA array_ele

   44 instance_variables: OPEN_S instance_variable_declarations CLOSE_S
   45                   | OPEN_S CLOSE_S

   46 instance_variable_declarations: instance_variable_declarations instance_variable_declaration
   47                               | instance_variable_declaration
   48                               | variable_declaration_list

   49 instance_variable_declaration: visibility_specification variable_declaration_list

   50 variable_declaration_list: variable_declaration_list variable_declarationxx
   51                          | variable_declarationxx

   52 visibility_specification: AT_PRIVATE
   53                         | AT_PROTECTED
   54                         | AT_PUBLIC

   55 struct_variable_declaration: struct_declaration_list

   56 variable_declarationxx: type ids_list SEMI_COMA
   57                       | CONST type ids_list SEMI_COMA
   58                       | type IDENTIFIER array_tag error

   59 ids_list: ids_list COMMA data_member
   60         | data_member
   61         | error

   62 data_member: IDENTIFIER array_tag
   63            | IDENTIFIER
   64            | error array_tag
   65            | IDENTIFIER error

   66 struct_declaration_list: struct_declaration_list variable_declarationxx
   67                        | variable_declarationxx
   68                        | error variable_declarationxx

   69 struct_header: STRUCT IDENTIFIER

   70 struct: struct_header OPEN_S CLOSE_S entity SEMI_COMA
   71       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | struct_header OPEN_S CLOSE_S SEMI_COMA
   73       | struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   74       | struct_header OPEN_S CLOSE_S entity error SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | struct_header OPEN_S CLOSE_S error SEMI_COMA
   77       | struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA

   78 entity: IDENTIFIER COMMA entity
   79       | IDENTIFIER
   80       | error COMMA

   81 type: simple_type
   82     | complex_type
   83     | struct_type
   84     | enum_type

   85 struct_type: STRUCT IDENTIFIER
   86            | STRUCT IDENTIFIER MULTI

   87 enum_type: ENUM IDENTIFIER
   88          | ENUM IDENTIFIER MULTI

   89 simple_type: INT
   90            | CHAR
   91            | ID
   92            | FLOAT
   93            | NSSTRING
   94            | VOID
   95            | BOOL

   96 complex_type: IDENTIFIER MULTI

   97 array_tag: array_first_tag array_tag_list

   98 array_tag_list: array_tag_list OPEN_ARR INT_VAL CLOSE_ARR
   99               | %empty
  100               | array_tag_list OPEN_ARR error CLOSE_ARR

  101 array_first_tag: OPEN_ARR INT_VAL CLOSE_ARR
  102                | OPEN_ARR CLOSE_ARR

  103 initializer: EQUAL array_body
  104            | %empty

  105 main_initializer: EQUAL expr
  106                 | %empty

  107 interface_declaration_list: interface_declaration_list interface_declaration
  108                           | interface_declaration

  109 interface_declaration: class_method_declaration
  110                      | instance_method_declaration

  111 class_method_declaration: PLUS p_type method_selectors SEMI_COMA
  112                         | PLUS p_type method_selectors error
  113                         | PLUS method_selectors error

  114 instance_method_declaration: MINUS p_type method_selectors SEMI_COMA

  115 p_type: OPEN_P type CLOSE_P

  116 method_selectors: selectors_list
  117                 | IDENTIFIER

  118 selectors_list: selectors_list selector_decleration
  119               | selector_decleration

  120 selector_decleration: IDENTIFIER SEMI_COLUMN parameter_list

  121 parameter_list: parameter_list SEMI_COLUMN parameter
  122               | parameter

  123 parameter: p_type IDENTIFIER

  124 class_implementation: class_implementation_header class_implementation_body

  125 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  126                            | AT_IMPLEMENTATION IDENTIFIER

  127 class_implementation_body: instance_variables implementation_definition_list AT_END
  128                          | instance_variables AT_END
  129                          | implementation_definition_list AT_END
  130                          | AT_END

  131 implementation_definition_list: implementation_definition_list implementation_definition
  132                               | implementation_definition

  133 implementation_definition: class_implementation_definition
  134                          | instance_implementation_definition

  135 class_implementation_definition: class_implementation_definition_header block_body

  136 class_implementation_definition_header: PLUS p_type method_selectors

  137 instance_implementation_definition: instance_implementation_definition_header block_body

  138 instance_implementation_definition_header: MINUS p_type method_selectors

  139 block_body: block_body_header block_body_statements

  140 block_body_header: OPEN_S

  141 block_body_statements: statement_list CLOSE_S
  142                      | CLOSE_S
  143                      | error CLOSE_S

  144 statement_list: statement_list statement
  145               | statement

  146 statement: loop_statement
  147          | conditional_statement
  148          | assign_expr SEMI_COMA
  149          | variable_declaration_block
  150          | block_body
  151          | return_statement
  152          | try_catch
  153          | asm
  154          | long_id SEMI_COMA
  155          | throw_statement
  156          | error SEMI_COMA

  157 throw_statement: THROW OPEN_P message_call CLOSE_P SEMI_COMA

  158 asm: AT_ASM STRING_VAL SEMI_COMA

  159 variable_declaration_block: type variable_list SEMI_COMA
  160                           | CONST type variable_list SEMI_COMA
  161                           | enum

  162 variable_list: variable_list COMMA variable
  163              | variable
  164              | variable_list error variable

  165 variable: IDENTIFIER array_tag initializer
  166         | IDENTIFIER main_initializer
  167         | error array_tag initializer

  168 return_statement: RETURN expr SEMI_COMA

  169 loop_statement: for_loop
  170               | while_loop
  171               | do_while

  172 do_while: do_header statement while_loop_header SEMI_COMA

  173 do_header: DO

  174 for_loop: for_loop_header statement

  175 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  177                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  178                | FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  179                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  180                | FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  181                | FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  182                | FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

  183 for_initializer: INT IDENTIFIER EQUAL expr
  184                | IDENTIFIER EQUAL expr
  185                | IDENTIFIER

  186 logic_expr1: logic_expr1 AND_AND logic_expr
  187            | logic_expr1 OR_OR logic_expr
  188            | logic_expr

  189 logic_expr: expr LESS_THAN expr
  190           | expr MORE_THAN expr
  191           | expr LESS_OR_EQUAL expr
  192           | expr MORE_OR_EQUAL expr
  193           | expr EQUAL_EQUAL expr
  194           | expr NOT_EQUAL expr
  195           | NOT_EQUAL expr
  196           | OPEN_P logic_expr CLOSE_P
  197           | TRUE
  198           | FALSE
  199           | long_id

  200 expr: assign_expr
  201     | simple_expr

  202 assign_expr: long_id EQUAL simple_expr

  203 long_id: long_id DOT IDENTIFIER
  204        | message_call
  205        | IDENTIFIER
  206        | array_access

  207 array_access: long_id OPEN_ARR simple_expr CLOSE_ARR

  208 simple_expr: STRING_VAL
  209            | INT_VAL
  210            | FLOAT_VAL
  211            | CHAR_VAL
  212            | long_id
  213            | simple_expr PLUS simple_expr
  214            | simple_expr MINUS simple_expr
  215            | simple_expr MULTI simple_expr
  216            | simple_expr DIV simple_expr
  217            | simple_expr DIV_R simple_expr
  218            | OPEN_P simple_expr CLOSE_P
  219            | IDENTIFIER DOUBLEPLUS
  220            | IDENTIFIER DOUBLEMINUS
  221            | DOUBLEPLUS IDENTIFIER
  222            | DOUBLEMINUS IDENTIFIER
  223            | p_type simple_expr

  224 message_call2: OPEN_ARR

  225 message_call: message_call2 sender message CLOSE_ARR

  226 sender: message_call
  227       | IDENTIFIER

  228 message: IDENTIFIER
  229        | message_selectors_list

  230 message_selectors_list: message_selectors_list message_selector
  231                       | message_selector

  232 message_selector: IDENTIFIER SEMI_COLUMN argument_list

  233 argument_list: argument_list SEMI_COLUMN argument
  234              | argument

  235 argument: expr

  236 while_loop: while_loop_header statement

  237 while_loop_header: WHILE OPEN_P logic_expr1 CLOSE_P

  238 conditional_statement: if_header statement
  239                      | if_header statement ELSE statement
  240                      | switch_header switch_body

  241 if_header: IF OPEN_P logic_expr1 CLOSE_P

  242 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block

  243 switch_body_block: OPEN_S

  244 switch_body: list_of_case default_case CLOSE_S
  245            | list_of_case CLOSE_S
  246            | default_case CLOSE_S
  247            | CLOSE_S

  248 list_of_case: list_of_case case_body
  249             | case_body

  250 case_body: CASE expr SEMI_COLUMN statement BREAK SEMI_COMA
  251          | CASE expr SEMI_COLUMN statement
  252          | CASE expr SEMI_COLUMN BREAK SEMI_COMA

  253 default_case: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  254             | DEFAULT SEMI_COLUMN statement
  255             | DEFAULT SEMI_COLUMN BREAK SEMI_COMA

  256 protocol: protocol_header protocol_body

  257 protocol_header: AT_PROTOCOL IDENTIFIER

  258 protocol_body: protocol_reference_list interface_declaration_list AT_END
  259              | interface_declaration_list AT_END
  260              | protocol_reference_list AT_END
  261              | AT_END

  262 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  263     | ENUM IDENTIFIER SEMI_COMA

  264 list_expr: IDENTIFIER EQUAL expr COMMA list_expr
  265          | IDENTIFIER EQUAL expr
  266          | IDENTIFIER
  267          | IDENTIFIER COMMA list_expr

  268 try_catch: TRY statement catch_list finally_statement
  269          | TRY statement catch_list

  270 catch_list: one_catch
  271           | catch_list one_catch

  272 one_catch: one_catch_header statement

  273 one_catch_header: CATCH OPEN_P type IDENTIFIER CLOSE_P

  274 finally_statement: FINALLY statement


Terminals, with rules where they appear

$end (0) 0
error (256) 13 14 23 24 25 26 27 28 29 30 31 33 58 61 64 65 68 74 75
    76 77 80 100 112 113 143 156 164 167
AT_INTERFACE (258) 11 12 13 14
IDENTIFIER (259) 11 12 14 34 35 58 62 63 65 69 78 79 85 86 87 88 96
    117 120 123 125 126 165 166 183 184 185 203 205 219 220 221 222
    227 228 232 242 257 262 263 264 265 266 267 273
SEMI_COLUMN (260) 11 14 120 121 125 232 233 250 251 252 253 254 255
NSSTRING (261) 93
FLOAT (262) 92
CHAR (263) 90
BOOL (264) 95
INT (265) 89 183
SEMI_COMA (266) 4 56 57 70 71 72 73 74 75 76 77 111 114 148 154 156
    157 158 159 160 168 172 175 176 177 178 179 180 181 182 250 252
    253 255 262 263
ID (267) 91
AT_PUBLIC (268) 54
AT_PROTECTED (269) 53
AT_PRIVATE (270) 52
OPEN_S (271) 36 37 40 41 42 43 44 45 70 71 72 73 74 75 76 77 140 243
    262
CLOSE_S (272) 36 37 40 41 42 43 44 45 70 71 72 73 74 75 76 77 141 142
    143 244 245 246 247 262
COMMA (273) 34 38 41 43 59 78 80 162 264 267
LESS_THAN (274) 32 33 189
MORE_THAN (275) 32 190
AT_END (276) 15 16 17 18 19 20 21 22 23 24 127 128 129 130 258 259
    260 261
CONST (277) 57 160
VOID (278) 94
PLUS (279) 111 112 113 136 213
MINUS (280) 114 138 214
OPEN_P (281) 115 157 175 176 177 178 179 180 181 182 196 218 237 241
    242 273
CLOSE_P (282) 115 157 175 176 177 178 179 180 181 182 196 218 237 241
    242 273
AT_IMPLEMENTATION (283) 125 126
AND_AND (284) 186
OR_OR (285) 187
STRING_VAL (286) 4 158 208
FLOAT_VAL (287) 210
LESS_OR_EQUAL (288) 191
CHAR_VAL (289) 211
INT_VAL (290) 98 101 209
MORE_OR_EQUAL (291) 192
MULTI (292) 86 88 96 215
EQUAL_EQUAL (293) 193
NOT_EQUAL (294) 194 195
FOR (295) 175 176 177 178 179 180 181 182
EQUAL (296) 103 105 183 184 202 264 265
DIV (297) 216
DIV_R (298) 217
WHILE (299) 237
IF (300) 241
DO (301) 173
SWITCH (302) 242
CASE (303) 250 251 252
DEFAULT (304) 253 254 255
BREAK (305) 250 252 253 255
ENUM (306) 87 88 262 263
OPEN_ARR (307) 98 100 101 102 207 224
CLOSE_ARR (308) 98 100 101 102 207 225
TRUE (309) 197
FALSE (310) 198
RETURN (311) 168
AT_PROTOCOL (312) 257
ELSE (313) 239
STRUCT (314) 69 85 86
DOT (315) 203
DOUBLEPLUS (316) 219 221
DOUBLEMINUS (317) 220 222
TRY (318) 268 269
CATCH (319) 273
THROW (320) 157
FINALLY (321) 274
AT_ASM (322) 158
SELF (323)
IMPORT (324) 4
if_h (325)
expr_1 (326)
p_type_expr_prec (327)
long_id_prec (328)
try_prec (329)


Nonterminals, with rules where they appear

$accept (75)
    on left: 0
program (76)
    on left: 1, on right: 0
components (77)
    on left: 2 3 4, on right: 1 2
component (78)
    on left: 5 6 7 8 9, on right: 2 3
class_interface (79)
    on left: 10, on right: 5
class_interface_header (80)
    on left: 11 12 13 14, on right: 10
class_interface_body (81)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31, on right:
    10
protocol_reference_list (82)
    on left: 32 33, on right: 15 16 17 19 23 24 25 26 27 28 258 260
ids_list_identifier (83)
    on left: 34 35, on right: 32 33 34
array_body (84)
    on left: 36 37, on right: 103
array_ele (85)
    on left: 38 39 40 41 42 43, on right: 36 38 41 42 43
instance_variables (86)
    on left: 44 45, on right: 15 16 18 20 26 27 29 30 127 128
instance_variable_declarations (87)
    on left: 46 47 48, on right: 44 46
instance_variable_declaration (88)
    on left: 49, on right: 46 47
variable_declaration_list (89)
    on left: 50 51, on right: 48 49 50
visibility_specification (90)
    on left: 52 53 54, on right: 49
struct_variable_declaration (91)
    on left: 55, on right: 71 73 75 77
variable_declarationxx (92)
    on left: 56 57 58, on right: 50 51 66 67 68
ids_list (93)
    on left: 59 60 61, on right: 56 57 59
data_member (94)
    on left: 62 63 64 65, on right: 59 60
struct_declaration_list (95)
    on left: 66 67 68, on right: 55 66
struct_header (96)
    on left: 69, on right: 70 71 72 73 74 75 76 77
struct (97)
    on left: 70 71 72 73 74 75 76 77, on right: 8
entity (98)
    on left: 78 79 80, on right: 70 71 74 75 78
type (99)
    on left: 81 82 83 84, on right: 56 57 58 115 159 160 273
struct_type (100)
    on left: 85 86, on right: 83
enum_type (101)
    on left: 87 88, on right: 84
simple_type (102)
    on left: 89 90 91 92 93 94 95, on right: 81
complex_type (103)
    on left: 96, on right: 82
array_tag (104)
    on left: 97, on right: 58 62 64 165 167
array_tag_list (105)
    on left: 98 99 100, on right: 97 98 100
array_first_tag (106)
    on left: 101 102, on right: 97
initializer (107)
    on left: 103 104, on right: 165 167
main_initializer (108)
    on left: 105 106, on right: 166
interface_declaration_list (109)
    on left: 107 108, on right: 15 17 18 21 24 26 28 29 31 107 258
    259
interface_declaration (110)
    on left: 109 110, on right: 107 108
class_method_declaration (111)
    on left: 111 112 113, on right: 109
instance_method_declaration (112)
    on left: 114, on right: 110
p_type (113)
    on left: 115, on right: 111 112 114 123 136 138 223
method_selectors (114)
    on left: 116 117, on right: 111 112 113 114 136 138
selectors_list (115)
    on left: 118 119, on right: 116 118
selector_decleration (116)
    on left: 120, on right: 118 119
parameter_list (117)
    on left: 121 122, on right: 120 121
parameter (118)
    on left: 123, on right: 121 122
class_implementation (119)
    on left: 124, on right: 6
class_implementation_header (120)
    on left: 125 126, on right: 124
class_implementation_body (121)
    on left: 127 128 129 130, on right: 124
implementation_definition_list (122)
    on left: 131 132, on right: 127 129 131
implementation_definition (123)
    on left: 133 134, on right: 131 132
class_implementation_definition (124)
    on left: 135, on right: 133
class_implementation_definition_header (125)
    on left: 136, on right: 135
instance_implementation_definition (126)
    on left: 137, on right: 134
instance_implementation_definition_header (127)
    on left: 138, on right: 137
block_body (128)
    on left: 139, on right: 135 137 150
block_body_header (129)
    on left: 140, on right: 139
block_body_statements (130)
    on left: 141 142 143, on right: 139
statement_list (131)
    on left: 144 145, on right: 141 144
statement (132)
    on left: 146 147 148 149 150 151 152 153 154 155 156, on right:
    144 145 172 174 236 238 239 250 251 253 254 268 269 272 274
throw_statement (133)
    on left: 157, on right: 155
asm (134)
    on left: 158, on right: 153
variable_declaration_block (135)
    on left: 159 160 161, on right: 149
variable_list (136)
    on left: 162 163 164, on right: 159 160 162 164
variable (137)
    on left: 165 166 167, on right: 162 163 164
return_statement (138)
    on left: 168, on right: 151
loop_statement (139)
    on left: 169 170 171, on right: 146
do_while (140)
    on left: 172, on right: 171
do_header (141)
    on left: 173, on right: 172
for_loop (142)
    on left: 174, on right: 169
for_loop_header (143)
    on left: 175 176 177 178 179 180 181 182, on right: 174
for_initializer (144)
    on left: 183 184 185, on right: 175 177 178 179
logic_expr1 (145)
    on left: 186 187 188, on right: 175 176 178 180 186 187 237 241
logic_expr (146)
    on left: 189 190 191 192 193 194 195 196 197 198 199, on right:
    186 187 188 196
expr (147)
    on left: 200 201, on right: 38 39 105 168 175 176 177 181 183 184
    189 190 191 192 193 194 195 235 250 251 252 264 265
assign_expr (148)
    on left: 202, on right: 148 200
long_id (149)
    on left: 203 204 205 206, on right: 154 199 202 203 207 212
array_access (150)
    on left: 207, on right: 206
simple_expr (151)
    on left: 208 209 210 211 212 213 214 215 216 217 218 219 220 221
    222 223, on right: 201 202 207 213 214 215 216 217 218 223
message_call2 (152)
    on left: 224, on right: 225
message_call (153)
    on left: 225, on right: 157 204 226
sender (154)
    on left: 226 227, on right: 225
message (155)
    on left: 228 229, on right: 225
message_selectors_list (156)
    on left: 230 231, on right: 229 230
message_selector (157)
    on left: 232, on right: 230 231
argument_list (158)
    on left: 233 234, on right: 232 233
argument (159)
    on left: 235, on right: 233 234
while_loop (160)
    on left: 236, on right: 170
while_loop_header (161)
    on left: 237, on right: 172 236
conditional_statement (162)
    on left: 238 239 240, on right: 147
if_header (163)
    on left: 241, on right: 238 239
switch_header (164)
    on left: 242, on right: 240
switch_body_block (165)
    on left: 243, on right: 242
switch_body (166)
    on left: 244 245 246 247, on right: 240
list_of_case (167)
    on left: 248 249, on right: 244 245 248
case_body (168)
    on left: 250 251 252, on right: 248 249
default_case (169)
    on left: 253 254 255, on right: 244 246
protocol (170)
    on left: 256, on right: 7
protocol_header (171)
    on left: 257, on right: 256
protocol_body (172)
    on left: 258 259 260 261, on right: 256
enum (173)
    on left: 262 263, on right: 9 161
list_expr (174)
    on left: 264 265 266 267, on right: 262 264 267
try_catch (175)
    on left: 268 269, on right: 152
catch_list (176)
    on left: 270 271, on right: 268 269 271
one_catch (177)
    on left: 272, on right: 270 271
one_catch_header (178)
    on left: 273, on right: 272
finally_statement (179)
    on left: 274, on right: 268


State 0

    0 $accept: . program $end
    1 program: . components
    2 components: . components component
    3           | . component
    4           | . IMPORT STRING_VAL SEMI_COMA
    5 component: . class_interface
    6          | . class_implementation
    7          | . protocol
    8          | . struct
    9          | . enum
   10 class_interface: . class_interface_header class_interface_body
   11 class_interface_header: . AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
   12                       | . AT_INTERFACE IDENTIFIER
   13                       | . AT_INTERFACE error
   14                       | . AT_INTERFACE IDENTIFIER SEMI_COLUMN error
   69 struct_header: . STRUCT IDENTIFIER
   70 struct: . struct_header OPEN_S CLOSE_S entity SEMI_COMA
   71       | . struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | . struct_header OPEN_S CLOSE_S SEMI_COMA
   73       | . struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   74       | . struct_header OPEN_S CLOSE_S entity error SEMI_COMA
   75       | . struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | . struct_header OPEN_S CLOSE_S error SEMI_COMA
   77       | . struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA
  124 class_implementation: . class_implementation_header class_implementation_body
  125 class_implementation_header: . AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  126                            | . AT_IMPLEMENTATION IDENTIFIER
  256 protocol: . protocol_header protocol_body
  257 protocol_header: . AT_PROTOCOL IDENTIFIER
  262 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  263     | . ENUM IDENTIFIER SEMI_COMA

    AT_INTERFACE       shift, and go to state 1
    AT_IMPLEMENTATION  shift, and go to state 2
    ENUM               shift, and go to state 3
    AT_PROTOCOL        shift, and go to state 4
    STRUCT             shift, and go to state 5
    IMPORT             shift, and go to state 6

    program                      go to state 7
    components                   go to state 8
    component                    go to state 9
    class_interface              go to state 10
    class_interface_header       go to state 11
    struct_header                go to state 12
    struct                       go to state 13
    class_implementation         go to state 14
    class_implementation_header  go to state 15
    protocol                     go to state 16
    protocol_header              go to state 17
    enum                         go to state 18


State 1

   11 class_interface_header: AT_INTERFACE . IDENTIFIER SEMI_COLUMN IDENTIFIER
   12                       | AT_INTERFACE . IDENTIFIER
   13                       | AT_INTERFACE . error
   14                       | AT_INTERFACE . IDENTIFIER SEMI_COLUMN error

    error       shift, and go to state 19
    IDENTIFIER  shift, and go to state 20


State 2

  125 class_implementation_header: AT_IMPLEMENTATION . IDENTIFIER SEMI_COLUMN IDENTIFIER
  126                            | AT_IMPLEMENTATION . IDENTIFIER

    IDENTIFIER  shift, and go to state 21


State 3

  262 enum: ENUM . IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  263     | ENUM . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 22


State 4

  257 protocol_header: AT_PROTOCOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 23


State 5

   69 struct_header: STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 24


State 6

    4 components: IMPORT . STRING_VAL SEMI_COMA

    STRING_VAL  shift, and go to state 25


State 7

    0 $accept: program . $end

    $end  shift, and go to state 26


State 8

    1 program: components .  [$end]
    2 components: components . component
    5 component: . class_interface
    6          | . class_implementation
    7          | . protocol
    8          | . struct
    9          | . enum
   10 class_interface: . class_interface_header class_interface_body
   11 class_interface_header: . AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
   12                       | . AT_INTERFACE IDENTIFIER
   13                       | . AT_INTERFACE error
   14                       | . AT_INTERFACE IDENTIFIER SEMI_COLUMN error
   69 struct_header: . STRUCT IDENTIFIER
   70 struct: . struct_header OPEN_S CLOSE_S entity SEMI_COMA
   71       | . struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | . struct_header OPEN_S CLOSE_S SEMI_COMA
   73       | . struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   74       | . struct_header OPEN_S CLOSE_S entity error SEMI_COMA
   75       | . struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | . struct_header OPEN_S CLOSE_S error SEMI_COMA
   77       | . struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA
  124 class_implementation: . class_implementation_header class_implementation_body
  125 class_implementation_header: . AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  126                            | . AT_IMPLEMENTATION IDENTIFIER
  256 protocol: . protocol_header protocol_body
  257 protocol_header: . AT_PROTOCOL IDENTIFIER
  262 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  263     | . ENUM IDENTIFIER SEMI_COMA

    AT_INTERFACE       shift, and go to state 1
    AT_IMPLEMENTATION  shift, and go to state 2
    ENUM               shift, and go to state 3
    AT_PROTOCOL        shift, and go to state 4
    STRUCT             shift, and go to state 5

    $default  reduce using rule 1 (program)

    component                    go to state 27
    class_interface              go to state 10
    class_interface_header       go to state 11
    struct_header                go to state 12
    struct                       go to state 13
    class_implementation         go to state 14
    class_implementation_header  go to state 15
    protocol                     go to state 16
    protocol_header              go to state 17
    enum                         go to state 18


State 9

    3 components: component .

    $default  reduce using rule 3 (components)


State 10

    5 component: class_interface .

    $default  reduce using rule 5 (component)


State 11

   10 class_interface: class_interface_header . class_interface_body
   15 class_interface_body: . protocol_reference_list instance_variables interface_declaration_list AT_END
   16                     | . protocol_reference_list instance_variables AT_END
   17                     | . protocol_reference_list interface_declaration_list AT_END
   18                     | . instance_variables interface_declaration_list AT_END
   19                     | . protocol_reference_list AT_END
   20                     | . instance_variables AT_END
   21                     | . interface_declaration_list AT_END
   22                     | . AT_END
   23                     | . protocol_reference_list error AT_END
   24                     | . protocol_reference_list error interface_declaration_list AT_END
   25                     | . protocol_reference_list error
   26                     | . protocol_reference_list instance_variables interface_declaration_list error
   27                     | . protocol_reference_list instance_variables error
   28                     | . protocol_reference_list interface_declaration_list error
   29                     | . instance_variables interface_declaration_list error
   30                     | . instance_variables error
   31                     | . interface_declaration_list error
   32 protocol_reference_list: . LESS_THAN ids_list_identifier MORE_THAN
   33                        | . LESS_THAN ids_list_identifier error
   44 instance_variables: . OPEN_S instance_variable_declarations CLOSE_S
   45                   | . OPEN_S CLOSE_S
  107 interface_declaration_list: . interface_declaration_list interface_declaration
  108                           | . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    OPEN_S     shift, and go to state 28
    LESS_THAN  shift, and go to state 29
    AT_END     shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32

    class_interface_body         go to state 33
    protocol_reference_list      go to state 34
    instance_variables           go to state 35
    interface_declaration_list   go to state 36
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 12

   70 struct: struct_header . OPEN_S CLOSE_S entity SEMI_COMA
   71       | struct_header . OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | struct_header . OPEN_S CLOSE_S SEMI_COMA
   73       | struct_header . OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   74       | struct_header . OPEN_S CLOSE_S entity error SEMI_COMA
   75       | struct_header . OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | struct_header . OPEN_S CLOSE_S error SEMI_COMA
   77       | struct_header . OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA

    OPEN_S  shift, and go to state 40


State 13

    8 component: struct .

    $default  reduce using rule 8 (component)


State 14

    6 component: class_implementation .

    $default  reduce using rule 6 (component)


State 15

   44 instance_variables: . OPEN_S instance_variable_declarations CLOSE_S
   45                   | . OPEN_S CLOSE_S
  124 class_implementation: class_implementation_header . class_implementation_body
  127 class_implementation_body: . instance_variables implementation_definition_list AT_END
  128                          | . instance_variables AT_END
  129                          | . implementation_definition_list AT_END
  130                          | . AT_END
  131 implementation_definition_list: . implementation_definition_list implementation_definition
  132                               | . implementation_definition
  133 implementation_definition: . class_implementation_definition
  134                          | . instance_implementation_definition
  135 class_implementation_definition: . class_implementation_definition_header block_body
  136 class_implementation_definition_header: . PLUS p_type method_selectors
  137 instance_implementation_definition: . instance_implementation_definition_header block_body
  138 instance_implementation_definition_header: . MINUS p_type method_selectors

    OPEN_S  shift, and go to state 28
    AT_END  shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    instance_variables                         go to state 44
    class_implementation_body                  go to state 45
    implementation_definition_list             go to state 46
    implementation_definition                  go to state 47
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 16

    7 component: protocol .

    $default  reduce using rule 7 (component)


State 17

   32 protocol_reference_list: . LESS_THAN ids_list_identifier MORE_THAN
   33                        | . LESS_THAN ids_list_identifier error
  107 interface_declaration_list: . interface_declaration_list interface_declaration
  108                           | . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  256 protocol: protocol_header . protocol_body
  258 protocol_body: . protocol_reference_list interface_declaration_list AT_END
  259              | . interface_declaration_list AT_END
  260              | . protocol_reference_list AT_END
  261              | . AT_END

    LESS_THAN  shift, and go to state 29
    AT_END     shift, and go to state 52
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32

    protocol_reference_list      go to state 53
    interface_declaration_list   go to state 54
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39
    protocol_body                go to state 55


State 18

    9 component: enum .

    $default  reduce using rule 9 (component)


State 19

   13 class_interface_header: AT_INTERFACE error .

    $default  reduce using rule 13 (class_interface_header)


State 20

   11 class_interface_header: AT_INTERFACE IDENTIFIER . SEMI_COLUMN IDENTIFIER
   12                       | AT_INTERFACE IDENTIFIER .  [OPEN_S, LESS_THAN, AT_END, PLUS, MINUS]
   14                       | AT_INTERFACE IDENTIFIER . SEMI_COLUMN error

    SEMI_COLUMN  shift, and go to state 56

    $default  reduce using rule 12 (class_interface_header)


State 21

  125 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER . SEMI_COLUMN IDENTIFIER
  126                            | AT_IMPLEMENTATION IDENTIFIER .  [OPEN_S, AT_END, PLUS, MINUS]

    SEMI_COLUMN  shift, and go to state 57

    $default  reduce using rule 126 (class_implementation_header)


State 22

  262 enum: ENUM IDENTIFIER . OPEN_S list_expr CLOSE_S SEMI_COMA
  263     | ENUM IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 58
    OPEN_S     shift, and go to state 59


State 23

  257 protocol_header: AT_PROTOCOL IDENTIFIER .

    $default  reduce using rule 257 (protocol_header)


State 24

   69 struct_header: STRUCT IDENTIFIER .

    $default  reduce using rule 69 (struct_header)


State 25

    4 components: IMPORT STRING_VAL . SEMI_COMA

    SEMI_COMA  shift, and go to state 60


State 26

    0 $accept: program $end .

    $default  accept


State 27

    2 components: components component .

    $default  reduce using rule 2 (components)


State 28

   44 instance_variables: OPEN_S . instance_variable_declarations CLOSE_S
   45                   | OPEN_S . CLOSE_S
   46 instance_variable_declarations: . instance_variable_declarations instance_variable_declaration
   47                               | . instance_variable_declaration
   48                               | . variable_declaration_list
   49 instance_variable_declaration: . visibility_specification variable_declaration_list
   50 variable_declaration_list: . variable_declaration_list variable_declarationxx
   51                          | . variable_declarationxx
   52 visibility_specification: . AT_PRIVATE
   53                         | . AT_PROTECTED
   54                         | . AT_PUBLIC
   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI

    IDENTIFIER    shift, and go to state 61
    NSSTRING      shift, and go to state 62
    FLOAT         shift, and go to state 63
    CHAR          shift, and go to state 64
    BOOL          shift, and go to state 65
    INT           shift, and go to state 66
    ID            shift, and go to state 67
    AT_PUBLIC     shift, and go to state 68
    AT_PROTECTED  shift, and go to state 69
    AT_PRIVATE    shift, and go to state 70
    CLOSE_S       shift, and go to state 71
    CONST         shift, and go to state 72
    VOID          shift, and go to state 73
    ENUM          shift, and go to state 74
    STRUCT        shift, and go to state 75

    instance_variable_declarations  go to state 76
    instance_variable_declaration   go to state 77
    variable_declaration_list       go to state 78
    visibility_specification        go to state 79
    variable_declarationxx          go to state 80
    type                            go to state 81
    struct_type                     go to state 82
    enum_type                       go to state 83
    simple_type                     go to state 84
    complex_type                    go to state 85


State 29

   32 protocol_reference_list: LESS_THAN . ids_list_identifier MORE_THAN
   33                        | LESS_THAN . ids_list_identifier error
   34 ids_list_identifier: . ids_list_identifier COMMA IDENTIFIER
   35                    | . IDENTIFIER

    IDENTIFIER  shift, and go to state 86

    ids_list_identifier  go to state 87


State 30

   22 class_interface_body: AT_END .

    $default  reduce using rule 22 (class_interface_body)


State 31

  111 class_method_declaration: PLUS . p_type method_selectors SEMI_COMA
  112                         | PLUS . p_type method_selectors error
  113                         | PLUS . method_selectors error
  115 p_type: . OPEN_P type CLOSE_P
  116 method_selectors: . selectors_list
  117                 | . IDENTIFIER
  118 selectors_list: . selectors_list selector_decleration
  119               | . selector_decleration
  120 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 88
    OPEN_P      shift, and go to state 89

    p_type                go to state 90
    method_selectors      go to state 91
    selectors_list        go to state 92
    selector_decleration  go to state 93


State 32

  114 instance_method_declaration: MINUS . p_type method_selectors SEMI_COMA
  115 p_type: . OPEN_P type CLOSE_P

    OPEN_P  shift, and go to state 89

    p_type  go to state 94


State 33

   10 class_interface: class_interface_header class_interface_body .

    $default  reduce using rule 10 (class_interface)


State 34

   15 class_interface_body: protocol_reference_list . instance_variables interface_declaration_list AT_END
   16                     | protocol_reference_list . instance_variables AT_END
   17                     | protocol_reference_list . interface_declaration_list AT_END
   19                     | protocol_reference_list . AT_END
   23                     | protocol_reference_list . error AT_END
   24                     | protocol_reference_list . error interface_declaration_list AT_END
   25                     | protocol_reference_list . error
   26                     | protocol_reference_list . instance_variables interface_declaration_list error
   27                     | protocol_reference_list . instance_variables error
   28                     | protocol_reference_list . interface_declaration_list error
   44 instance_variables: . OPEN_S instance_variable_declarations CLOSE_S
   45                   | . OPEN_S CLOSE_S
  107 interface_declaration_list: . interface_declaration_list interface_declaration
  108                           | . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 95
    OPEN_S  shift, and go to state 28
    AT_END  shift, and go to state 96
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    instance_variables           go to state 97
    interface_declaration_list   go to state 98
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 35

   18 class_interface_body: instance_variables . interface_declaration_list AT_END
   20                     | instance_variables . AT_END
   29                     | instance_variables . interface_declaration_list error
   30                     | instance_variables . error
  107 interface_declaration_list: . interface_declaration_list interface_declaration
  108                           | . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 99
    AT_END  shift, and go to state 100
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 101
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 36

   21 class_interface_body: interface_declaration_list . AT_END
   31                     | interface_declaration_list . error
  107 interface_declaration_list: interface_declaration_list . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 102
    AT_END  shift, and go to state 103
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 104
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 37

  108 interface_declaration_list: interface_declaration .

    $default  reduce using rule 108 (interface_declaration_list)


State 38

  109 interface_declaration: class_method_declaration .

    $default  reduce using rule 109 (interface_declaration)


State 39

  110 interface_declaration: instance_method_declaration .

    $default  reduce using rule 110 (interface_declaration)


State 40

   55 struct_variable_declaration: . struct_declaration_list
   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   66 struct_declaration_list: . struct_declaration_list variable_declarationxx
   67                        | . variable_declarationxx
   68                        | . error variable_declarationxx
   70 struct: struct_header OPEN_S . CLOSE_S entity SEMI_COMA
   71       | struct_header OPEN_S . struct_variable_declaration CLOSE_S entity SEMI_COMA
   72       | struct_header OPEN_S . CLOSE_S SEMI_COMA
   73       | struct_header OPEN_S . struct_variable_declaration CLOSE_S SEMI_COMA
   74       | struct_header OPEN_S . CLOSE_S entity error SEMI_COMA
   75       | struct_header OPEN_S . struct_variable_declaration CLOSE_S entity error SEMI_COMA
   76       | struct_header OPEN_S . CLOSE_S error SEMI_COMA
   77       | struct_header OPEN_S . struct_variable_declaration CLOSE_S error SEMI_COMA
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI

    error       shift, and go to state 105
    IDENTIFIER  shift, and go to state 61
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    CLOSE_S     shift, and go to state 106
    CONST       shift, and go to state 72
    VOID        shift, and go to state 73
    ENUM        shift, and go to state 74
    STRUCT      shift, and go to state 75

    struct_variable_declaration  go to state 107
    variable_declarationxx       go to state 108
    struct_declaration_list      go to state 109
    type                         go to state 81
    struct_type                  go to state 82
    enum_type                    go to state 83
    simple_type                  go to state 84
    complex_type                 go to state 85


State 41

  130 class_implementation_body: AT_END .

    $default  reduce using rule 130 (class_implementation_body)


State 42

  115 p_type: . OPEN_P type CLOSE_P
  136 class_implementation_definition_header: PLUS . p_type method_selectors

    OPEN_P  shift, and go to state 89

    p_type  go to state 110


State 43

  115 p_type: . OPEN_P type CLOSE_P
  138 instance_implementation_definition_header: MINUS . p_type method_selectors

    OPEN_P  shift, and go to state 89

    p_type  go to state 111


State 44

  127 class_implementation_body: instance_variables . implementation_definition_list AT_END
  128                          | instance_variables . AT_END
  131 implementation_definition_list: . implementation_definition_list implementation_definition
  132                               | . implementation_definition
  133 implementation_definition: . class_implementation_definition
  134                          | . instance_implementation_definition
  135 class_implementation_definition: . class_implementation_definition_header block_body
  136 class_implementation_definition_header: . PLUS p_type method_selectors
  137 instance_implementation_definition: . instance_implementation_definition_header block_body
  138 instance_implementation_definition_header: . MINUS p_type method_selectors

    AT_END  shift, and go to state 112
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition_list             go to state 113
    implementation_definition                  go to state 47
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 45

  124 class_implementation: class_implementation_header class_implementation_body .

    $default  reduce using rule 124 (class_implementation)


State 46

  129 class_implementation_body: implementation_definition_list . AT_END
  131 implementation_definition_list: implementation_definition_list . implementation_definition
  133 implementation_definition: . class_implementation_definition
  134                          | . instance_implementation_definition
  135 class_implementation_definition: . class_implementation_definition_header block_body
  136 class_implementation_definition_header: . PLUS p_type method_selectors
  137 instance_implementation_definition: . instance_implementation_definition_header block_body
  138 instance_implementation_definition_header: . MINUS p_type method_selectors

    AT_END  shift, and go to state 114
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition                  go to state 115
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 47

  132 implementation_definition_list: implementation_definition .

    $default  reduce using rule 132 (implementation_definition_list)


State 48

  133 implementation_definition: class_implementation_definition .

    $default  reduce using rule 133 (implementation_definition)


State 49

  135 class_implementation_definition: class_implementation_definition_header . block_body
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S

    OPEN_S  shift, and go to state 116

    block_body         go to state 117
    block_body_header  go to state 118


State 50

  134 implementation_definition: instance_implementation_definition .

    $default  reduce using rule 134 (implementation_definition)


State 51

  137 instance_implementation_definition: instance_implementation_definition_header . block_body
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S

    OPEN_S  shift, and go to state 116

    block_body         go to state 119
    block_body_header  go to state 118


State 52

  261 protocol_body: AT_END .

    $default  reduce using rule 261 (protocol_body)


State 53

  107 interface_declaration_list: . interface_declaration_list interface_declaration
  108                           | . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  258 protocol_body: protocol_reference_list . interface_declaration_list AT_END
  260              | protocol_reference_list . AT_END

    AT_END  shift, and go to state 120
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 121
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 54

  107 interface_declaration_list: interface_declaration_list . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  259 protocol_body: interface_declaration_list . AT_END

    AT_END  shift, and go to state 122
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 104
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 55

  256 protocol: protocol_header protocol_body .

    $default  reduce using rule 256 (protocol)


State 56

   11 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN . IDENTIFIER
   14                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN . error

    error       shift, and go to state 123
    IDENTIFIER  shift, and go to state 124


State 57

  125 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN . IDENTIFIER

    IDENTIFIER  shift, and go to state 125


State 58

  263 enum: ENUM IDENTIFIER SEMI_COMA .

    $default  reduce using rule 263 (enum)


State 59

  262 enum: ENUM IDENTIFIER OPEN_S . list_expr CLOSE_S SEMI_COMA
  264 list_expr: . IDENTIFIER EQUAL expr COMMA list_expr
  265          | . IDENTIFIER EQUAL expr
  266          | . IDENTIFIER
  267          | . IDENTIFIER COMMA list_expr

    IDENTIFIER  shift, and go to state 126

    list_expr  go to state 127


State 60

    4 components: IMPORT STRING_VAL SEMI_COMA .

    $default  reduce using rule 4 (components)


State 61

   96 complex_type: IDENTIFIER . MULTI

    MULTI  shift, and go to state 128


State 62

   93 simple_type: NSSTRING .

    $default  reduce using rule 93 (simple_type)


State 63

   92 simple_type: FLOAT .

    $default  reduce using rule 92 (simple_type)


State 64

   90 simple_type: CHAR .

    $default  reduce using rule 90 (simple_type)


State 65

   95 simple_type: BOOL .

    $default  reduce using rule 95 (simple_type)


State 66

   89 simple_type: INT .

    $default  reduce using rule 89 (simple_type)


State 67

   91 simple_type: ID .

    $default  reduce using rule 91 (simple_type)


State 68

   54 visibility_specification: AT_PUBLIC .

    $default  reduce using rule 54 (visibility_specification)


State 69

   53 visibility_specification: AT_PROTECTED .

    $default  reduce using rule 53 (visibility_specification)


State 70

   52 visibility_specification: AT_PRIVATE .

    $default  reduce using rule 52 (visibility_specification)


State 71

   45 instance_variables: OPEN_S CLOSE_S .

    $default  reduce using rule 45 (instance_variables)


State 72

   57 variable_declarationxx: CONST . type ids_list SEMI_COMA
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 61
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    VOID        shift, and go to state 73
    ENUM        shift, and go to state 74
    STRUCT      shift, and go to state 75

    type          go to state 129
    struct_type   go to state 82
    enum_type     go to state 83
    simple_type   go to state 84
    complex_type  go to state 85


State 73

   94 simple_type: VOID .

    $default  reduce using rule 94 (simple_type)


State 74

   87 enum_type: ENUM . IDENTIFIER
   88          | ENUM . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 130


State 75

   85 struct_type: STRUCT . IDENTIFIER
   86            | STRUCT . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 131


State 76

   44 instance_variables: OPEN_S instance_variable_declarations . CLOSE_S
   46 instance_variable_declarations: instance_variable_declarations . instance_variable_declaration
   49 instance_variable_declaration: . visibility_specification variable_declaration_list
   52 visibility_specification: . AT_PRIVATE
   53                         | . AT_PROTECTED
   54                         | . AT_PUBLIC

    AT_PUBLIC     shift, and go to state 68
    AT_PROTECTED  shift, and go to state 69
    AT_PRIVATE    shift, and go to state 70
    CLOSE_S       shift, and go to state 132

    instance_variable_declaration  go to state 133
    visibility_specification       go to state 79


State 77

   47 instance_variable_declarations: instance_variable_declaration .

    $default  reduce using rule 47 (instance_variable_declarations)


State 78

   48 instance_variable_declarations: variable_declaration_list .  [AT_PUBLIC, AT_PROTECTED, AT_PRIVATE, CLOSE_S]
   50 variable_declaration_list: variable_declaration_list . variable_declarationxx
   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 61
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    CONST       shift, and go to state 72
    VOID        shift, and go to state 73
    ENUM        shift, and go to state 74
    STRUCT      shift, and go to state 75

    $default  reduce using rule 48 (instance_variable_declarations)

    variable_declarationxx  go to state 134
    type                    go to state 81
    struct_type             go to state 82
    enum_type               go to state 83
    simple_type             go to state 84
    complex_type            go to state 85


State 79

   49 instance_variable_declaration: visibility_specification . variable_declaration_list
   50 variable_declaration_list: . variable_declaration_list variable_declarationxx
   51                          | . variable_declarationxx
   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 61
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    CONST       shift, and go to state 72
    VOID        shift, and go to state 73
    ENUM        shift, and go to state 74
    STRUCT      shift, and go to state 75

    variable_declaration_list  go to state 135
    variable_declarationxx     go to state 80
    type                       go to state 81
    struct_type                go to state 82
    enum_type                  go to state 83
    simple_type                go to state 84
    complex_type               go to state 85


State 80

   51 variable_declaration_list: variable_declarationxx .

    $default  reduce using rule 51 (variable_declaration_list)


State 81

   56 variable_declarationxx: type . ids_list SEMI_COMA
   58                       | type . IDENTIFIER array_tag error
   59 ids_list: . ids_list COMMA data_member
   60         | . data_member
   61         | . error
   62 data_member: . IDENTIFIER array_tag
   63            | . IDENTIFIER
   64            | . error array_tag
   65            | . IDENTIFIER error

    error       shift, and go to state 136
    IDENTIFIER  shift, and go to state 137

    ids_list     go to state 138
    data_member  go to state 139


State 82

   83 type: struct_type .

    $default  reduce using rule 83 (type)


State 83

   84 type: enum_type .

    $default  reduce using rule 84 (type)


State 84

   81 type: simple_type .

    $default  reduce using rule 81 (type)


State 85

   82 type: complex_type .

    $default  reduce using rule 82 (type)


State 86

   35 ids_list_identifier: IDENTIFIER .

    $default  reduce using rule 35 (ids_list_identifier)


State 87

   32 protocol_reference_list: LESS_THAN ids_list_identifier . MORE_THAN
   33                        | LESS_THAN ids_list_identifier . error
   34 ids_list_identifier: ids_list_identifier . COMMA IDENTIFIER

    error      shift, and go to state 140
    COMMA      shift, and go to state 141
    MORE_THAN  shift, and go to state 142


State 88

  117 method_selectors: IDENTIFIER .  [error, SEMI_COMA, OPEN_S]
  120 selector_decleration: IDENTIFIER . SEMI_COLUMN parameter_list

    SEMI_COLUMN  shift, and go to state 143

    $default  reduce using rule 117 (method_selectors)


State 89

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  115 p_type: OPEN_P . type CLOSE_P

    IDENTIFIER  shift, and go to state 61
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    VOID        shift, and go to state 73
    ENUM        shift, and go to state 74
    STRUCT      shift, and go to state 75

    type          go to state 144
    struct_type   go to state 82
    enum_type     go to state 83
    simple_type   go to state 84
    complex_type  go to state 85


State 90

  111 class_method_declaration: PLUS p_type . method_selectors SEMI_COMA
  112                         | PLUS p_type . method_selectors error
  116 method_selectors: . selectors_list
  117                 | . IDENTIFIER
  118 selectors_list: . selectors_list selector_decleration
  119               | . selector_decleration
  120 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 88

    method_selectors      go to state 145
    selectors_list        go to state 92
    selector_decleration  go to state 93


State 91

  113 class_method_declaration: PLUS method_selectors . error

    error  shift, and go to state 146


State 92

  116 method_selectors: selectors_list .  [error, SEMI_COMA, OPEN_S]
  118 selectors_list: selectors_list . selector_decleration
  120 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 147

    $default  reduce using rule 116 (method_selectors)

    selector_decleration  go to state 148


State 93

  119 selectors_list: selector_decleration .

    $default  reduce using rule 119 (selectors_list)


State 94

  114 instance_method_declaration: MINUS p_type . method_selectors SEMI_COMA
  116 method_selectors: . selectors_list
  117                 | . IDENTIFIER
  118 selectors_list: . selectors_list selector_decleration
  119               | . selector_decleration
  120 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 88

    method_selectors      go to state 149
    selectors_list        go to state 92
    selector_decleration  go to state 93


State 95

   23 class_interface_body: protocol_reference_list error . AT_END
   24                     | protocol_reference_list error . interface_declaration_list AT_END
   25                     | protocol_reference_list error .  [$end, AT_INTERFACE, AT_IMPLEMENTATION, ENUM, AT_PROTOCOL, STRUCT]
  107 interface_declaration_list: . interface_declaration_list interface_declaration
  108                           | . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    AT_END  shift, and go to state 150
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    $default  reduce using rule 25 (class_interface_body)

    interface_declaration_list   go to state 151
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 96

   19 class_interface_body: protocol_reference_list AT_END .

    $default  reduce using rule 19 (class_interface_body)


State 97

   15 class_interface_body: protocol_reference_list instance_variables . interface_declaration_list AT_END
   16                     | protocol_reference_list instance_variables . AT_END
   26                     | protocol_reference_list instance_variables . interface_declaration_list error
   27                     | protocol_reference_list instance_variables . error
  107 interface_declaration_list: . interface_declaration_list interface_declaration
  108                           | . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 152
    AT_END  shift, and go to state 153
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 154
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 98

   17 class_interface_body: protocol_reference_list interface_declaration_list . AT_END
   28                     | protocol_reference_list interface_declaration_list . error
  107 interface_declaration_list: interface_declaration_list . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 155
    AT_END  shift, and go to state 156
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 104
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 99

   30 class_interface_body: instance_variables error .

    $default  reduce using rule 30 (class_interface_body)


State 100

   20 class_interface_body: instance_variables AT_END .

    $default  reduce using rule 20 (class_interface_body)


State 101

   18 class_interface_body: instance_variables interface_declaration_list . AT_END
   29                     | instance_variables interface_declaration_list . error
  107 interface_declaration_list: interface_declaration_list . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 157
    AT_END  shift, and go to state 158
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 104
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 102

   31 class_interface_body: interface_declaration_list error .

    $default  reduce using rule 31 (class_interface_body)


State 103

   21 class_interface_body: interface_declaration_list AT_END .

    $default  reduce using rule 21 (class_interface_body)


State 104

  107 interface_declaration_list: interface_declaration_list interface_declaration .

    $default  reduce using rule 107 (interface_declaration_list)


State 105

   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   68 struct_declaration_list: error . variable_declarationxx
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 61
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    CONST       shift, and go to state 72
    VOID        shift, and go to state 73
    ENUM        shift, and go to state 74
    STRUCT      shift, and go to state 75

    variable_declarationxx  go to state 159
    type                    go to state 81
    struct_type             go to state 82
    enum_type               go to state 83
    simple_type             go to state 84
    complex_type            go to state 85


State 106

   70 struct: struct_header OPEN_S CLOSE_S . entity SEMI_COMA
   72       | struct_header OPEN_S CLOSE_S . SEMI_COMA
   74       | struct_header OPEN_S CLOSE_S . entity error SEMI_COMA
   76       | struct_header OPEN_S CLOSE_S . error SEMI_COMA
   78 entity: . IDENTIFIER COMMA entity
   79       | . IDENTIFIER
   80       | . error COMMA

    error       shift, and go to state 160
    IDENTIFIER  shift, and go to state 161
    SEMI_COMA   shift, and go to state 162

    entity  go to state 163


State 107

   71 struct: struct_header OPEN_S struct_variable_declaration . CLOSE_S entity SEMI_COMA
   73       | struct_header OPEN_S struct_variable_declaration . CLOSE_S SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration . CLOSE_S entity error SEMI_COMA
   77       | struct_header OPEN_S struct_variable_declaration . CLOSE_S error SEMI_COMA

    CLOSE_S  shift, and go to state 164


State 108

   67 struct_declaration_list: variable_declarationxx .

    $default  reduce using rule 67 (struct_declaration_list)


State 109

   55 struct_variable_declaration: struct_declaration_list .  [CLOSE_S]
   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   66 struct_declaration_list: struct_declaration_list . variable_declarationxx
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 61
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    CONST       shift, and go to state 72
    VOID        shift, and go to state 73
    ENUM        shift, and go to state 74
    STRUCT      shift, and go to state 75

    $default  reduce using rule 55 (struct_variable_declaration)

    variable_declarationxx  go to state 165
    type                    go to state 81
    struct_type             go to state 82
    enum_type               go to state 83
    simple_type             go to state 84
    complex_type            go to state 85


State 110

  116 method_selectors: . selectors_list
  117                 | . IDENTIFIER
  118 selectors_list: . selectors_list selector_decleration
  119               | . selector_decleration
  120 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list
  136 class_implementation_definition_header: PLUS p_type . method_selectors

    IDENTIFIER  shift, and go to state 88

    method_selectors      go to state 166
    selectors_list        go to state 92
    selector_decleration  go to state 93


State 111

  116 method_selectors: . selectors_list
  117                 | . IDENTIFIER
  118 selectors_list: . selectors_list selector_decleration
  119               | . selector_decleration
  120 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list
  138 instance_implementation_definition_header: MINUS p_type . method_selectors

    IDENTIFIER  shift, and go to state 88

    method_selectors      go to state 167
    selectors_list        go to state 92
    selector_decleration  go to state 93


State 112

  128 class_implementation_body: instance_variables AT_END .

    $default  reduce using rule 128 (class_implementation_body)


State 113

  127 class_implementation_body: instance_variables implementation_definition_list . AT_END
  131 implementation_definition_list: implementation_definition_list . implementation_definition
  133 implementation_definition: . class_implementation_definition
  134                          | . instance_implementation_definition
  135 class_implementation_definition: . class_implementation_definition_header block_body
  136 class_implementation_definition_header: . PLUS p_type method_selectors
  137 instance_implementation_definition: . instance_implementation_definition_header block_body
  138 instance_implementation_definition_header: . MINUS p_type method_selectors

    AT_END  shift, and go to state 168
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition                  go to state 115
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 114

  129 class_implementation_body: implementation_definition_list AT_END .

    $default  reduce using rule 129 (class_implementation_body)


State 115

  131 implementation_definition_list: implementation_definition_list implementation_definition .

    $default  reduce using rule 131 (implementation_definition_list)


State 116

  140 block_body_header: OPEN_S .

    $default  reduce using rule 140 (block_body_header)


State 117

  135 class_implementation_definition: class_implementation_definition_header block_body .

    $default  reduce using rule 135 (class_implementation_definition)


State 118

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  139           | block_body_header . block_body_statements
  140 block_body_header: . OPEN_S
  141 block_body_statements: . statement_list CLOSE_S
  142                      | . CLOSE_S
  143                      | . error CLOSE_S
  144 statement_list: . statement_list statement
  145               | . statement
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . long_id SEMI_COMA
  155          | . throw_statement
  156          | . error SEMI_COMA
  157 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  158 asm: . AT_ASM STRING_VAL SEMI_COMA
  159 variable_declaration_block: . type variable_list SEMI_COMA
  160                           | . CONST type variable_list SEMI_COMA
  161                           | . enum
  168 return_statement: . RETURN expr SEMI_COMA
  169 loop_statement: . for_loop
  170               | . while_loop
  171               | . do_while
  172 do_while: . do_header statement while_loop_header SEMI_COMA
  173 do_header: . DO
  174 for_loop: . for_loop_header statement
  175 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR
  236 while_loop: . while_loop_header statement
  237 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  238 conditional_statement: . if_header statement
  239                      | . if_header statement ELSE statement
  240                      | . switch_header switch_body
  241 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  242 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  262 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  263     | . ENUM IDENTIFIER SEMI_COMA
  268 try_catch: . TRY statement catch_list finally_statement
  269          | . TRY statement catch_list

    error       shift, and go to state 169
    IDENTIFIER  shift, and go to state 170
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    OPEN_S      shift, and go to state 116
    CLOSE_S     shift, and go to state 171
    CONST       shift, and go to state 172
    VOID        shift, and go to state 73
    FOR         shift, and go to state 173
    WHILE       shift, and go to state 174
    IF          shift, and go to state 175
    DO          shift, and go to state 176
    SWITCH      shift, and go to state 177
    ENUM        shift, and go to state 178
    OPEN_ARR    shift, and go to state 179
    RETURN      shift, and go to state 180
    STRUCT      shift, and go to state 75
    TRY         shift, and go to state 181
    THROW       shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 82
    enum_type                   go to state 83
    simple_type                 go to state 84
    complex_type                go to state 85
    block_body                  go to state 185
    block_body_header           go to state 118
    block_body_statements       go to state 186
    statement_list              go to state 187
    statement                   go to state 188
    throw_statement             go to state 189
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    array_access                go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 119

  137 instance_implementation_definition: instance_implementation_definition_header block_body .

    $default  reduce using rule 137 (instance_implementation_definition)


State 120

  260 protocol_body: protocol_reference_list AT_END .

    $default  reduce using rule 260 (protocol_body)


State 121

  107 interface_declaration_list: interface_declaration_list . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  258 protocol_body: protocol_reference_list interface_declaration_list . AT_END

    AT_END  shift, and go to state 210
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 104
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 122

  259 protocol_body: interface_declaration_list AT_END .

    $default  reduce using rule 259 (protocol_body)


State 123

   14 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN error .

    $default  reduce using rule 14 (class_interface_header)


State 124

   11 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 11 (class_interface_header)


State 125

  125 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 125 (class_implementation_header)


State 126

  264 list_expr: IDENTIFIER . EQUAL expr COMMA list_expr
  265          | IDENTIFIER . EQUAL expr
  266          | IDENTIFIER .  [CLOSE_S]
  267          | IDENTIFIER . COMMA list_expr

    COMMA  shift, and go to state 211
    EQUAL  shift, and go to state 212

    $default  reduce using rule 266 (list_expr)


State 127

  262 enum: ENUM IDENTIFIER OPEN_S list_expr . CLOSE_S SEMI_COMA

    CLOSE_S  shift, and go to state 213


State 128

   96 complex_type: IDENTIFIER MULTI .

    $default  reduce using rule 96 (complex_type)


State 129

   57 variable_declarationxx: CONST type . ids_list SEMI_COMA
   59 ids_list: . ids_list COMMA data_member
   60         | . data_member
   61         | . error
   62 data_member: . IDENTIFIER array_tag
   63            | . IDENTIFIER
   64            | . error array_tag
   65            | . IDENTIFIER error

    error       shift, and go to state 136
    IDENTIFIER  shift, and go to state 214

    ids_list     go to state 215
    data_member  go to state 139


State 130

   87 enum_type: ENUM IDENTIFIER .  [error, IDENTIFIER, CLOSE_P]
   88          | ENUM IDENTIFIER . MULTI

    MULTI  shift, and go to state 216

    $default  reduce using rule 87 (enum_type)


State 131

   85 struct_type: STRUCT IDENTIFIER .  [error, IDENTIFIER, CLOSE_P]
   86            | STRUCT IDENTIFIER . MULTI

    MULTI  shift, and go to state 217

    $default  reduce using rule 85 (struct_type)


State 132

   44 instance_variables: OPEN_S instance_variable_declarations CLOSE_S .

    $default  reduce using rule 44 (instance_variables)


State 133

   46 instance_variable_declarations: instance_variable_declarations instance_variable_declaration .

    $default  reduce using rule 46 (instance_variable_declarations)


State 134

   50 variable_declaration_list: variable_declaration_list variable_declarationxx .

    $default  reduce using rule 50 (variable_declaration_list)


State 135

   49 instance_variable_declaration: visibility_specification variable_declaration_list .  [AT_PUBLIC, AT_PROTECTED, AT_PRIVATE, CLOSE_S]
   50 variable_declaration_list: variable_declaration_list . variable_declarationxx
   56 variable_declarationxx: . type ids_list SEMI_COMA
   57                       | . CONST type ids_list SEMI_COMA
   58                       | . type IDENTIFIER array_tag error
   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 61
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    CONST       shift, and go to state 72
    VOID        shift, and go to state 73
    ENUM        shift, and go to state 74
    STRUCT      shift, and go to state 75

    $default  reduce using rule 49 (instance_variable_declaration)

    variable_declarationxx  go to state 134
    type                    go to state 81
    struct_type             go to state 82
    enum_type               go to state 83
    simple_type             go to state 84
    complex_type            go to state 85


State 136

   61 ids_list: error .  [SEMI_COMA, COMMA]
   64 data_member: error . array_tag
   97 array_tag: . array_first_tag array_tag_list
  101 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  102                | . OPEN_ARR CLOSE_ARR

    OPEN_ARR  shift, and go to state 218

    $default  reduce using rule 61 (ids_list)

    array_tag        go to state 219
    array_first_tag  go to state 220


State 137

   58 variable_declarationxx: type IDENTIFIER . array_tag error
   62 data_member: IDENTIFIER . array_tag
   63            | IDENTIFIER .  [SEMI_COMA, COMMA]
   65            | IDENTIFIER . error
   97 array_tag: . array_first_tag array_tag_list
  101 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  102                | . OPEN_ARR CLOSE_ARR

    error     shift, and go to state 221
    OPEN_ARR  shift, and go to state 218

    SEMI_COMA  reduce using rule 63 (data_member)
    COMMA      reduce using rule 63 (data_member)

    array_tag        go to state 222
    array_first_tag  go to state 220


State 138

   56 variable_declarationxx: type ids_list . SEMI_COMA
   59 ids_list: ids_list . COMMA data_member

    SEMI_COMA  shift, and go to state 223
    COMMA      shift, and go to state 224


State 139

   60 ids_list: data_member .

    $default  reduce using rule 60 (ids_list)


State 140

   33 protocol_reference_list: LESS_THAN ids_list_identifier error .

    $default  reduce using rule 33 (protocol_reference_list)


State 141

   34 ids_list_identifier: ids_list_identifier COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 225


State 142

   32 protocol_reference_list: LESS_THAN ids_list_identifier MORE_THAN .

    $default  reduce using rule 32 (protocol_reference_list)


State 143

  115 p_type: . OPEN_P type CLOSE_P
  120 selector_decleration: IDENTIFIER SEMI_COLUMN . parameter_list
  121 parameter_list: . parameter_list SEMI_COLUMN parameter
  122               | . parameter
  123 parameter: . p_type IDENTIFIER

    OPEN_P  shift, and go to state 89

    p_type          go to state 226
    parameter_list  go to state 227
    parameter       go to state 228


State 144

  115 p_type: OPEN_P type . CLOSE_P

    CLOSE_P  shift, and go to state 229


State 145

  111 class_method_declaration: PLUS p_type method_selectors . SEMI_COMA
  112                         | PLUS p_type method_selectors . error

    error      shift, and go to state 230
    SEMI_COMA  shift, and go to state 231


State 146

  113 class_method_declaration: PLUS method_selectors error .

    $default  reduce using rule 113 (class_method_declaration)


State 147

  120 selector_decleration: IDENTIFIER . SEMI_COLUMN parameter_list

    SEMI_COLUMN  shift, and go to state 143


State 148

  118 selectors_list: selectors_list selector_decleration .

    $default  reduce using rule 118 (selectors_list)


State 149

  114 instance_method_declaration: MINUS p_type method_selectors . SEMI_COMA

    SEMI_COMA  shift, and go to state 232


State 150

   23 class_interface_body: protocol_reference_list error AT_END .

    $default  reduce using rule 23 (class_interface_body)


State 151

   24 class_interface_body: protocol_reference_list error interface_declaration_list . AT_END
  107 interface_declaration_list: interface_declaration_list . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    AT_END  shift, and go to state 233
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 104
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 152

   27 class_interface_body: protocol_reference_list instance_variables error .

    $default  reduce using rule 27 (class_interface_body)


State 153

   16 class_interface_body: protocol_reference_list instance_variables AT_END .

    $default  reduce using rule 16 (class_interface_body)


State 154

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list . AT_END
   26                     | protocol_reference_list instance_variables interface_declaration_list . error
  107 interface_declaration_list: interface_declaration_list . interface_declaration
  109 interface_declaration: . class_method_declaration
  110                      | . instance_method_declaration
  111 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  112                         | . PLUS p_type method_selectors error
  113                         | . PLUS method_selectors error
  114 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 234
    AT_END  shift, and go to state 235
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 104
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 155

   28 class_interface_body: protocol_reference_list interface_declaration_list error .

    $default  reduce using rule 28 (class_interface_body)


State 156

   17 class_interface_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 17 (class_interface_body)


State 157

   29 class_interface_body: instance_variables interface_declaration_list error .

    $default  reduce using rule 29 (class_interface_body)


State 158

   18 class_interface_body: instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 18 (class_interface_body)


State 159

   68 struct_declaration_list: error variable_declarationxx .

    $default  reduce using rule 68 (struct_declaration_list)


State 160

   76 struct: struct_header OPEN_S CLOSE_S error . SEMI_COMA
   80 entity: error . COMMA

    SEMI_COMA  shift, and go to state 236
    COMMA      shift, and go to state 237


State 161

   78 entity: IDENTIFIER . COMMA entity
   79       | IDENTIFIER .  [error, SEMI_COMA]

    COMMA  shift, and go to state 238

    $default  reduce using rule 79 (entity)


State 162

   72 struct: struct_header OPEN_S CLOSE_S SEMI_COMA .

    $default  reduce using rule 72 (struct)


State 163

   70 struct: struct_header OPEN_S CLOSE_S entity . SEMI_COMA
   74       | struct_header OPEN_S CLOSE_S entity . error SEMI_COMA

    error      shift, and go to state 239
    SEMI_COMA  shift, and go to state 240


State 164

   71 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S . entity SEMI_COMA
   73       | struct_header OPEN_S struct_variable_declaration CLOSE_S . SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration CLOSE_S . entity error SEMI_COMA
   77       | struct_header OPEN_S struct_variable_declaration CLOSE_S . error SEMI_COMA
   78 entity: . IDENTIFIER COMMA entity
   79       | . IDENTIFIER
   80       | . error COMMA

    error       shift, and go to state 241
    IDENTIFIER  shift, and go to state 161
    SEMI_COMA   shift, and go to state 242

    entity  go to state 243


State 165

   66 struct_declaration_list: struct_declaration_list variable_declarationxx .

    $default  reduce using rule 66 (struct_declaration_list)


State 166

  136 class_implementation_definition_header: PLUS p_type method_selectors .

    $default  reduce using rule 136 (class_implementation_definition_header)


State 167

  138 instance_implementation_definition_header: MINUS p_type method_selectors .

    $default  reduce using rule 138 (instance_implementation_definition_header)


State 168

  127 class_implementation_body: instance_variables implementation_definition_list AT_END .

    $default  reduce using rule 127 (class_implementation_body)


State 169

  143 block_body_statements: error . CLOSE_S
  156 statement: error . SEMI_COMA

    SEMI_COMA  shift, and go to state 244
    CLOSE_S    shift, and go to state 245


State 170

   96 complex_type: IDENTIFIER . MULTI
  205 long_id: IDENTIFIER .  [SEMI_COMA, EQUAL, OPEN_ARR, DOT]

    MULTI  shift, and go to state 128

    $default  reduce using rule 205 (long_id)


State 171

  142 block_body_statements: CLOSE_S .

    $default  reduce using rule 142 (block_body_statements)


State 172

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  160 variable_declaration_block: CONST . type variable_list SEMI_COMA

    IDENTIFIER  shift, and go to state 61
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    VOID        shift, and go to state 73
    ENUM        shift, and go to state 74
    STRUCT      shift, and go to state 75

    type          go to state 246
    struct_type   go to state 82
    enum_type     go to state 83
    simple_type   go to state 84
    complex_type  go to state 85


State 173

  175 for_loop_header: FOR . OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | FOR . OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  177                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  178                | FOR . OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  179                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  180                | FOR . OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  181                | FOR . OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  182                | FOR . OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

    OPEN_P  shift, and go to state 247


State 174

  237 while_loop_header: WHILE . OPEN_P logic_expr1 CLOSE_P

    OPEN_P  shift, and go to state 248


State 175

  241 if_header: IF . OPEN_P logic_expr1 CLOSE_P

    OPEN_P  shift, and go to state 249


State 176

  173 do_header: DO .

    $default  reduce using rule 173 (do_header)


State 177

  242 switch_header: SWITCH . OPEN_P IDENTIFIER CLOSE_P switch_body_block

    OPEN_P  shift, and go to state 250


State 178

   87 enum_type: ENUM . IDENTIFIER
   88          | ENUM . IDENTIFIER MULTI
  262 enum: ENUM . IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  263     | ENUM . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 251


State 179

  224 message_call2: OPEN_ARR .

    $default  reduce using rule 224 (message_call2)


State 180

  115 p_type: . OPEN_P type CLOSE_P
  168 return_statement: RETURN . expr SEMI_COMA
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 261
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 181

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . long_id SEMI_COMA
  155          | . throw_statement
  156          | . error SEMI_COMA
  157 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  158 asm: . AT_ASM STRING_VAL SEMI_COMA
  159 variable_declaration_block: . type variable_list SEMI_COMA
  160                           | . CONST type variable_list SEMI_COMA
  161                           | . enum
  168 return_statement: . RETURN expr SEMI_COMA
  169 loop_statement: . for_loop
  170               | . while_loop
  171               | . do_while
  172 do_while: . do_header statement while_loop_header SEMI_COMA
  173 do_header: . DO
  174 for_loop: . for_loop_header statement
  175 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR
  236 while_loop: . while_loop_header statement
  237 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  238 conditional_statement: . if_header statement
  239                      | . if_header statement ELSE statement
  240                      | . switch_header switch_body
  241 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  242 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  262 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  263     | . ENUM IDENTIFIER SEMI_COMA
  268 try_catch: . TRY statement catch_list finally_statement
  268          | TRY . statement catch_list finally_statement
  269          | . TRY statement catch_list
  269          | TRY . statement catch_list

    error       shift, and go to state 265
    IDENTIFIER  shift, and go to state 170
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    OPEN_S      shift, and go to state 116
    CONST       shift, and go to state 172
    VOID        shift, and go to state 73
    FOR         shift, and go to state 173
    WHILE       shift, and go to state 174
    IF          shift, and go to state 175
    DO          shift, and go to state 176
    SWITCH      shift, and go to state 177
    ENUM        shift, and go to state 178
    OPEN_ARR    shift, and go to state 179
    RETURN      shift, and go to state 180
    STRUCT      shift, and go to state 75
    TRY         shift, and go to state 181
    THROW       shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 82
    enum_type                   go to state 83
    simple_type                 go to state 84
    complex_type                go to state 85
    block_body                  go to state 185
    block_body_header           go to state 118
    statement                   go to state 266
    throw_statement             go to state 189
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    array_access                go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 182

  157 throw_statement: THROW . OPEN_P message_call CLOSE_P SEMI_COMA

    OPEN_P  shift, and go to state 267


State 183

  158 asm: AT_ASM . STRING_VAL SEMI_COMA

    STRING_VAL  shift, and go to state 268


State 184

  159 variable_declaration_block: type . variable_list SEMI_COMA
  162 variable_list: . variable_list COMMA variable
  163              | . variable
  164              | . variable_list error variable
  165 variable: . IDENTIFIER array_tag initializer
  166         | . IDENTIFIER main_initializer
  167         | . error array_tag initializer

    error       shift, and go to state 269
    IDENTIFIER  shift, and go to state 270

    variable_list  go to state 271
    variable       go to state 272


State 185

  150 statement: block_body .

    $default  reduce using rule 150 (statement)


State 186

  139 block_body: block_body_header block_body_statements .

    $default  reduce using rule 139 (block_body)


State 187

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  141 block_body_statements: statement_list . CLOSE_S
  144 statement_list: statement_list . statement
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . long_id SEMI_COMA
  155          | . throw_statement
  156          | . error SEMI_COMA
  157 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  158 asm: . AT_ASM STRING_VAL SEMI_COMA
  159 variable_declaration_block: . type variable_list SEMI_COMA
  160                           | . CONST type variable_list SEMI_COMA
  161                           | . enum
  168 return_statement: . RETURN expr SEMI_COMA
  169 loop_statement: . for_loop
  170               | . while_loop
  171               | . do_while
  172 do_while: . do_header statement while_loop_header SEMI_COMA
  173 do_header: . DO
  174 for_loop: . for_loop_header statement
  175 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR
  236 while_loop: . while_loop_header statement
  237 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  238 conditional_statement: . if_header statement
  239                      | . if_header statement ELSE statement
  240                      | . switch_header switch_body
  241 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  242 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  262 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  263     | . ENUM IDENTIFIER SEMI_COMA
  268 try_catch: . TRY statement catch_list finally_statement
  269          | . TRY statement catch_list

    error       shift, and go to state 265
    IDENTIFIER  shift, and go to state 170
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    OPEN_S      shift, and go to state 116
    CLOSE_S     shift, and go to state 273
    CONST       shift, and go to state 172
    VOID        shift, and go to state 73
    FOR         shift, and go to state 173
    WHILE       shift, and go to state 174
    IF          shift, and go to state 175
    DO          shift, and go to state 176
    SWITCH      shift, and go to state 177
    ENUM        shift, and go to state 178
    OPEN_ARR    shift, and go to state 179
    RETURN      shift, and go to state 180
    STRUCT      shift, and go to state 75
    TRY         shift, and go to state 181
    THROW       shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 82
    enum_type                   go to state 83
    simple_type                 go to state 84
    complex_type                go to state 85
    block_body                  go to state 185
    block_body_header           go to state 118
    statement                   go to state 274
    throw_statement             go to state 189
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    array_access                go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 188

  145 statement_list: statement .

    $default  reduce using rule 145 (statement_list)


State 189

  155 statement: throw_statement .

    $default  reduce using rule 155 (statement)


State 190

  153 statement: asm .

    $default  reduce using rule 153 (statement)


State 191

  149 statement: variable_declaration_block .

    $default  reduce using rule 149 (statement)


State 192

  151 statement: return_statement .

    $default  reduce using rule 151 (statement)


State 193

  146 statement: loop_statement .

    $default  reduce using rule 146 (statement)


State 194

  171 loop_statement: do_while .

    $default  reduce using rule 171 (loop_statement)


State 195

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . long_id SEMI_COMA
  155          | . throw_statement
  156          | . error SEMI_COMA
  157 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  158 asm: . AT_ASM STRING_VAL SEMI_COMA
  159 variable_declaration_block: . type variable_list SEMI_COMA
  160                           | . CONST type variable_list SEMI_COMA
  161                           | . enum
  168 return_statement: . RETURN expr SEMI_COMA
  169 loop_statement: . for_loop
  170               | . while_loop
  171               | . do_while
  172 do_while: . do_header statement while_loop_header SEMI_COMA
  172         | do_header . statement while_loop_header SEMI_COMA
  173 do_header: . DO
  174 for_loop: . for_loop_header statement
  175 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR
  236 while_loop: . while_loop_header statement
  237 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  238 conditional_statement: . if_header statement
  239                      | . if_header statement ELSE statement
  240                      | . switch_header switch_body
  241 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  242 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  262 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  263     | . ENUM IDENTIFIER SEMI_COMA
  268 try_catch: . TRY statement catch_list finally_statement
  269          | . TRY statement catch_list

    error       shift, and go to state 265
    IDENTIFIER  shift, and go to state 170
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    OPEN_S      shift, and go to state 116
    CONST       shift, and go to state 172
    VOID        shift, and go to state 73
    FOR         shift, and go to state 173
    WHILE       shift, and go to state 174
    IF          shift, and go to state 175
    DO          shift, and go to state 176
    SWITCH      shift, and go to state 177
    ENUM        shift, and go to state 178
    OPEN_ARR    shift, and go to state 179
    RETURN      shift, and go to state 180
    STRUCT      shift, and go to state 75
    TRY         shift, and go to state 181
    THROW       shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 82
    enum_type                   go to state 83
    simple_type                 go to state 84
    complex_type                go to state 85
    block_body                  go to state 185
    block_body_header           go to state 118
    statement                   go to state 275
    throw_statement             go to state 189
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    array_access                go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 196

  169 loop_statement: for_loop .

    $default  reduce using rule 169 (loop_statement)


State 197

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . long_id SEMI_COMA
  155          | . throw_statement
  156          | . error SEMI_COMA
  157 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  158 asm: . AT_ASM STRING_VAL SEMI_COMA
  159 variable_declaration_block: . type variable_list SEMI_COMA
  160                           | . CONST type variable_list SEMI_COMA
  161                           | . enum
  168 return_statement: . RETURN expr SEMI_COMA
  169 loop_statement: . for_loop
  170               | . while_loop
  171               | . do_while
  172 do_while: . do_header statement while_loop_header SEMI_COMA
  173 do_header: . DO
  174 for_loop: . for_loop_header statement
  174         | for_loop_header . statement
  175 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR
  236 while_loop: . while_loop_header statement
  237 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  238 conditional_statement: . if_header statement
  239                      | . if_header statement ELSE statement
  240                      | . switch_header switch_body
  241 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  242 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  262 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  263     | . ENUM IDENTIFIER SEMI_COMA
  268 try_catch: . TRY statement catch_list finally_statement
  269          | . TRY statement catch_list

    error       shift, and go to state 265
    IDENTIFIER  shift, and go to state 170
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    OPEN_S      shift, and go to state 116
    CONST       shift, and go to state 172
    VOID        shift, and go to state 73
    FOR         shift, and go to state 173
    WHILE       shift, and go to state 174
    IF          shift, and go to state 175
    DO          shift, and go to state 176
    SWITCH      shift, and go to state 177
    ENUM        shift, and go to state 178
    OPEN_ARR    shift, and go to state 179
    RETURN      shift, and go to state 180
    STRUCT      shift, and go to state 75
    TRY         shift, and go to state 181
    THROW       shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 82
    enum_type                   go to state 83
    simple_type                 go to state 84
    complex_type                go to state 85
    block_body                  go to state 185
    block_body_header           go to state 118
    statement                   go to state 276
    throw_statement             go to state 189
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    array_access                go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 198

  148 statement: assign_expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 277


State 199

  154 statement: long_id . SEMI_COMA
  202 assign_expr: long_id . EQUAL simple_expr
  203 long_id: long_id . DOT IDENTIFIER
  207 array_access: long_id . OPEN_ARR simple_expr CLOSE_ARR

    SEMI_COMA  shift, and go to state 278
    EQUAL      shift, and go to state 279
    OPEN_ARR   shift, and go to state 280
    DOT        shift, and go to state 281


State 200

  206 long_id: array_access .

    $default  reduce using rule 206 (long_id)


State 201

  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR
  225             | message_call2 . sender message CLOSE_ARR
  226 sender: . message_call
  227       | . IDENTIFIER

    IDENTIFIER  shift, and go to state 282
    OPEN_ARR    shift, and go to state 179

    message_call2  go to state 201
    message_call   go to state 283
    sender         go to state 284


State 202

  204 long_id: message_call .

    $default  reduce using rule 204 (long_id)


State 203

  170 loop_statement: while_loop .

    $default  reduce using rule 170 (loop_statement)


State 204

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . long_id SEMI_COMA
  155          | . throw_statement
  156          | . error SEMI_COMA
  157 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  158 asm: . AT_ASM STRING_VAL SEMI_COMA
  159 variable_declaration_block: . type variable_list SEMI_COMA
  160                           | . CONST type variable_list SEMI_COMA
  161                           | . enum
  168 return_statement: . RETURN expr SEMI_COMA
  169 loop_statement: . for_loop
  170               | . while_loop
  171               | . do_while
  172 do_while: . do_header statement while_loop_header SEMI_COMA
  173 do_header: . DO
  174 for_loop: . for_loop_header statement
  175 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR
  236 while_loop: . while_loop_header statement
  236           | while_loop_header . statement
  237 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  238 conditional_statement: . if_header statement
  239                      | . if_header statement ELSE statement
  240                      | . switch_header switch_body
  241 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  242 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  262 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  263     | . ENUM IDENTIFIER SEMI_COMA
  268 try_catch: . TRY statement catch_list finally_statement
  269          | . TRY statement catch_list

    error       shift, and go to state 265
    IDENTIFIER  shift, and go to state 170
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    OPEN_S      shift, and go to state 116
    CONST       shift, and go to state 172
    VOID        shift, and go to state 73
    FOR         shift, and go to state 173
    WHILE       shift, and go to state 174
    IF          shift, and go to state 175
    DO          shift, and go to state 176
    SWITCH      shift, and go to state 177
    ENUM        shift, and go to state 178
    OPEN_ARR    shift, and go to state 179
    RETURN      shift, and go to state 180
    STRUCT      shift, and go to state 75
    TRY         shift, and go to state 181
    THROW       shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 82
    enum_type                   go to state 83
    simple_type                 go to state 84
    complex_type                go to state 85
    block_body                  go to state 185
    block_body_header           go to state 118
    statement                   go to state 285
    throw_statement             go to state 189
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    array_access                go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 205

  147 statement: conditional_statement .

    $default  reduce using rule 147 (statement)


State 206

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . long_id SEMI_COMA
  155          | . throw_statement
  156          | . error SEMI_COMA
  157 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  158 asm: . AT_ASM STRING_VAL SEMI_COMA
  159 variable_declaration_block: . type variable_list SEMI_COMA
  160                           | . CONST type variable_list SEMI_COMA
  161                           | . enum
  168 return_statement: . RETURN expr SEMI_COMA
  169 loop_statement: . for_loop
  170               | . while_loop
  171               | . do_while
  172 do_while: . do_header statement while_loop_header SEMI_COMA
  173 do_header: . DO
  174 for_loop: . for_loop_header statement
  175 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR
  236 while_loop: . while_loop_header statement
  237 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  238 conditional_statement: . if_header statement
  238                      | if_header . statement
  239                      | . if_header statement ELSE statement
  239                      | if_header . statement ELSE statement
  240                      | . switch_header switch_body
  241 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  242 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  262 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  263     | . ENUM IDENTIFIER SEMI_COMA
  268 try_catch: . TRY statement catch_list finally_statement
  269          | . TRY statement catch_list

    error       shift, and go to state 265
    IDENTIFIER  shift, and go to state 170
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    OPEN_S      shift, and go to state 116
    CONST       shift, and go to state 172
    VOID        shift, and go to state 73
    FOR         shift, and go to state 173
    WHILE       shift, and go to state 174
    IF          shift, and go to state 175
    DO          shift, and go to state 176
    SWITCH      shift, and go to state 177
    ENUM        shift, and go to state 178
    OPEN_ARR    shift, and go to state 179
    RETURN      shift, and go to state 180
    STRUCT      shift, and go to state 75
    TRY         shift, and go to state 181
    THROW       shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 82
    enum_type                   go to state 83
    simple_type                 go to state 84
    complex_type                go to state 85
    block_body                  go to state 185
    block_body_header           go to state 118
    statement                   go to state 286
    throw_statement             go to state 189
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    array_access                go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 207

  240 conditional_statement: switch_header . switch_body
  244 switch_body: . list_of_case default_case CLOSE_S
  245            | . list_of_case CLOSE_S
  246            | . default_case CLOSE_S
  247            | . CLOSE_S
  248 list_of_case: . list_of_case case_body
  249             | . case_body
  250 case_body: . CASE expr SEMI_COLUMN statement BREAK SEMI_COMA
  251          | . CASE expr SEMI_COLUMN statement
  252          | . CASE expr SEMI_COLUMN BREAK SEMI_COMA
  253 default_case: . DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  254             | . DEFAULT SEMI_COLUMN statement
  255             | . DEFAULT SEMI_COLUMN BREAK SEMI_COMA

    CLOSE_S  shift, and go to state 287
    CASE     shift, and go to state 288
    DEFAULT  shift, and go to state 289

    switch_body   go to state 290
    list_of_case  go to state 291
    case_body     go to state 292
    default_case  go to state 293


State 208

  161 variable_declaration_block: enum .

    $default  reduce using rule 161 (variable_declaration_block)


State 209

  152 statement: try_catch .

    $default  reduce using rule 152 (statement)


State 210

  258 protocol_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 258 (protocol_body)


State 211

  264 list_expr: . IDENTIFIER EQUAL expr COMMA list_expr
  265          | . IDENTIFIER EQUAL expr
  266          | . IDENTIFIER
  267          | . IDENTIFIER COMMA list_expr
  267          | IDENTIFIER COMMA . list_expr

    IDENTIFIER  shift, and go to state 126

    list_expr  go to state 294


State 212

  115 p_type: . OPEN_P type CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR
  264 list_expr: IDENTIFIER EQUAL . expr COMMA list_expr
  265          | IDENTIFIER EQUAL . expr

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 295
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 213

  262 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 296


State 214

   62 data_member: IDENTIFIER . array_tag
   63            | IDENTIFIER .  [SEMI_COMA, COMMA]
   65            | IDENTIFIER . error
   97 array_tag: . array_first_tag array_tag_list
  101 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  102                | . OPEN_ARR CLOSE_ARR

    error     shift, and go to state 221
    OPEN_ARR  shift, and go to state 218

    SEMI_COMA  reduce using rule 63 (data_member)
    COMMA      reduce using rule 63 (data_member)

    array_tag        go to state 297
    array_first_tag  go to state 220


State 215

   57 variable_declarationxx: CONST type ids_list . SEMI_COMA
   59 ids_list: ids_list . COMMA data_member

    SEMI_COMA  shift, and go to state 298
    COMMA      shift, and go to state 224


State 216

   88 enum_type: ENUM IDENTIFIER MULTI .

    $default  reduce using rule 88 (enum_type)


State 217

   86 struct_type: STRUCT IDENTIFIER MULTI .

    $default  reduce using rule 86 (struct_type)


State 218

  101 array_first_tag: OPEN_ARR . INT_VAL CLOSE_ARR
  102                | OPEN_ARR . CLOSE_ARR

    INT_VAL    shift, and go to state 299
    CLOSE_ARR  shift, and go to state 300


State 219

   64 data_member: error array_tag .

    $default  reduce using rule 64 (data_member)


State 220

   97 array_tag: array_first_tag . array_tag_list
   98 array_tag_list: . array_tag_list OPEN_ARR INT_VAL CLOSE_ARR
   99               | .
  100               | . array_tag_list OPEN_ARR error CLOSE_ARR

    $default  reduce using rule 99 (array_tag_list)

    array_tag_list  go to state 301


State 221

   65 data_member: IDENTIFIER error .

    $default  reduce using rule 65 (data_member)


State 222

   58 variable_declarationxx: type IDENTIFIER array_tag . error
   62 data_member: IDENTIFIER array_tag .  [SEMI_COMA, COMMA]

    error  shift, and go to state 302

    SEMI_COMA  reduce using rule 62 (data_member)
    COMMA      reduce using rule 62 (data_member)


State 223

   56 variable_declarationxx: type ids_list SEMI_COMA .

    $default  reduce using rule 56 (variable_declarationxx)


State 224

   59 ids_list: ids_list COMMA . data_member
   62 data_member: . IDENTIFIER array_tag
   63            | . IDENTIFIER
   64            | . error array_tag
   65            | . IDENTIFIER error

    error       shift, and go to state 303
    IDENTIFIER  shift, and go to state 214

    data_member  go to state 304


State 225

   34 ids_list_identifier: ids_list_identifier COMMA IDENTIFIER .

    $default  reduce using rule 34 (ids_list_identifier)


State 226

  123 parameter: p_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 305


State 227

  120 selector_decleration: IDENTIFIER SEMI_COLUMN parameter_list .  [error, IDENTIFIER, SEMI_COMA, OPEN_S]
  121 parameter_list: parameter_list . SEMI_COLUMN parameter

    SEMI_COLUMN  shift, and go to state 306

    $default  reduce using rule 120 (selector_decleration)


State 228

  122 parameter_list: parameter .

    $default  reduce using rule 122 (parameter_list)


State 229

  115 p_type: OPEN_P type CLOSE_P .

    $default  reduce using rule 115 (p_type)


State 230

  112 class_method_declaration: PLUS p_type method_selectors error .

    $default  reduce using rule 112 (class_method_declaration)


State 231

  111 class_method_declaration: PLUS p_type method_selectors SEMI_COMA .

    $default  reduce using rule 111 (class_method_declaration)


State 232

  114 instance_method_declaration: MINUS p_type method_selectors SEMI_COMA .

    $default  reduce using rule 114 (instance_method_declaration)


State 233

   24 class_interface_body: protocol_reference_list error interface_declaration_list AT_END .

    $default  reduce using rule 24 (class_interface_body)


State 234

   26 class_interface_body: protocol_reference_list instance_variables interface_declaration_list error .

    $default  reduce using rule 26 (class_interface_body)


State 235

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 15 (class_interface_body)


State 236

   76 struct: struct_header OPEN_S CLOSE_S error SEMI_COMA .

    $default  reduce using rule 76 (struct)


State 237

   80 entity: error COMMA .

    $default  reduce using rule 80 (entity)


State 238

   78 entity: . IDENTIFIER COMMA entity
   78       | IDENTIFIER COMMA . entity
   79       | . IDENTIFIER
   80       | . error COMMA

    error       shift, and go to state 307
    IDENTIFIER  shift, and go to state 161

    entity  go to state 308


State 239

   74 struct: struct_header OPEN_S CLOSE_S entity error . SEMI_COMA

    SEMI_COMA  shift, and go to state 309


State 240

   70 struct: struct_header OPEN_S CLOSE_S entity SEMI_COMA .

    $default  reduce using rule 70 (struct)


State 241

   77 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S error . SEMI_COMA
   80 entity: error . COMMA

    SEMI_COMA  shift, and go to state 310
    COMMA      shift, and go to state 237


State 242

   73 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA .

    $default  reduce using rule 73 (struct)


State 243

   71 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity . SEMI_COMA
   75       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity . error SEMI_COMA

    error      shift, and go to state 311
    SEMI_COMA  shift, and go to state 312


State 244

  156 statement: error SEMI_COMA .

    $default  reduce using rule 156 (statement)


State 245

  143 block_body_statements: error CLOSE_S .

    $default  reduce using rule 143 (block_body_statements)


State 246

  160 variable_declaration_block: CONST type . variable_list SEMI_COMA
  162 variable_list: . variable_list COMMA variable
  163              | . variable
  164              | . variable_list error variable
  165 variable: . IDENTIFIER array_tag initializer
  166         | . IDENTIFIER main_initializer
  167         | . error array_tag initializer

    error       shift, and go to state 269
    IDENTIFIER  shift, and go to state 270

    variable_list  go to state 313
    variable       go to state 272


State 247

  175 for_loop_header: FOR OPEN_P . for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | FOR OPEN_P . SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  177                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  178                | FOR OPEN_P . for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  179                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  180                | FOR OPEN_P . SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  181                | FOR OPEN_P . SEMI_COMA SEMI_COMA expr CLOSE_P
  182                | FOR OPEN_P . SEMI_COMA SEMI_COMA CLOSE_P
  183 for_initializer: . INT IDENTIFIER EQUAL expr
  184                | . IDENTIFIER EQUAL expr
  185                | . IDENTIFIER

    IDENTIFIER  shift, and go to state 314
    INT         shift, and go to state 315
    SEMI_COMA   shift, and go to state 316

    for_initializer  go to state 317


State 248

  115 p_type: . OPEN_P type CLOSE_P
  186 logic_expr1: . logic_expr1 AND_AND logic_expr
  187            | . logic_expr1 OR_OR logic_expr
  188            | . logic_expr
  189 logic_expr: . expr LESS_THAN expr
  190           | . expr MORE_THAN expr
  191           | . expr LESS_OR_EQUAL expr
  192           | . expr MORE_OR_EQUAL expr
  193           | . expr EQUAL_EQUAL expr
  194           | . expr NOT_EQUAL expr
  195           | . NOT_EQUAL expr
  196           | . OPEN_P logic_expr CLOSE_P
  197           | . TRUE
  198           | . FALSE
  199           | . long_id
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR
  237 while_loop_header: WHILE OPEN_P . logic_expr1 CLOSE_P

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 318
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 319
    OPEN_ARR     shift, and go to state 179
    TRUE         shift, and go to state 320
    FALSE        shift, and go to state 321
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    logic_expr1    go to state 322
    logic_expr     go to state 323
    expr           go to state 324
    assign_expr    go to state 262
    long_id        go to state 325
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 249

  115 p_type: . OPEN_P type CLOSE_P
  186 logic_expr1: . logic_expr1 AND_AND logic_expr
  187            | . logic_expr1 OR_OR logic_expr
  188            | . logic_expr
  189 logic_expr: . expr LESS_THAN expr
  190           | . expr MORE_THAN expr
  191           | . expr LESS_OR_EQUAL expr
  192           | . expr MORE_OR_EQUAL expr
  193           | . expr EQUAL_EQUAL expr
  194           | . expr NOT_EQUAL expr
  195           | . NOT_EQUAL expr
  196           | . OPEN_P logic_expr CLOSE_P
  197           | . TRUE
  198           | . FALSE
  199           | . long_id
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR
  241 if_header: IF OPEN_P . logic_expr1 CLOSE_P

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 318
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 319
    OPEN_ARR     shift, and go to state 179
    TRUE         shift, and go to state 320
    FALSE        shift, and go to state 321
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    logic_expr1    go to state 326
    logic_expr     go to state 323
    expr           go to state 324
    assign_expr    go to state 262
    long_id        go to state 325
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 250

  242 switch_header: SWITCH OPEN_P . IDENTIFIER CLOSE_P switch_body_block

    IDENTIFIER  shift, and go to state 327


State 251

   87 enum_type: ENUM IDENTIFIER .  [error, IDENTIFIER]
   88          | ENUM IDENTIFIER . MULTI
  262 enum: ENUM IDENTIFIER . OPEN_S list_expr CLOSE_S SEMI_COMA
  263     | ENUM IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 58
    OPEN_S     shift, and go to state 59
    MULTI      shift, and go to state 216

    $default  reduce using rule 87 (enum_type)


State 252

  205 long_id: IDENTIFIER .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, EQUAL, DIV, DIV_R, OPEN_ARR, CLOSE_ARR, DOT]
  219 simple_expr: IDENTIFIER . DOUBLEPLUS
  220            | IDENTIFIER . DOUBLEMINUS

    DOUBLEPLUS   shift, and go to state 328
    DOUBLEMINUS  shift, and go to state 329

    $default  reduce using rule 205 (long_id)


State 253

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  115 p_type: . OPEN_P type CLOSE_P
  115       | OPEN_P . type CLOSE_P
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  218            | OPEN_P . simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 330
    NSSTRING     shift, and go to state 62
    FLOAT        shift, and go to state 63
    CHAR         shift, and go to state 64
    BOOL         shift, and go to state 65
    INT          shift, and go to state 66
    ID           shift, and go to state 67
    VOID         shift, and go to state 73
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    ENUM         shift, and go to state 74
    OPEN_ARR     shift, and go to state 179
    STRUCT       shift, and go to state 75
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    type           go to state 144
    struct_type    go to state 82
    enum_type      go to state 83
    simple_type    go to state 84
    complex_type   go to state 85
    p_type         go to state 260
    long_id        go to state 331
    array_access   go to state 200
    simple_expr    go to state 332
    message_call2  go to state 201
    message_call   go to state 202


State 254

  208 simple_expr: STRING_VAL .

    $default  reduce using rule 208 (simple_expr)


State 255

  210 simple_expr: FLOAT_VAL .

    $default  reduce using rule 210 (simple_expr)


State 256

  211 simple_expr: CHAR_VAL .

    $default  reduce using rule 211 (simple_expr)


State 257

  209 simple_expr: INT_VAL .

    $default  reduce using rule 209 (simple_expr)


State 258

  221 simple_expr: DOUBLEPLUS . IDENTIFIER

    IDENTIFIER  shift, and go to state 333


State 259

  222 simple_expr: DOUBLEMINUS . IDENTIFIER

    IDENTIFIER  shift, and go to state 334


State 260

  115 p_type: . OPEN_P type CLOSE_P
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  223            | p_type . simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    long_id        go to state 331
    array_access   go to state 200
    simple_expr    go to state 335
    message_call2  go to state 201
    message_call   go to state 202


State 261

  168 return_statement: RETURN expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 336


State 262

  200 expr: assign_expr .

    $default  reduce using rule 200 (expr)


State 263

  202 assign_expr: long_id . EQUAL simple_expr
  203 long_id: long_id . DOT IDENTIFIER
  207 array_access: long_id . OPEN_ARR simple_expr CLOSE_ARR
  212 simple_expr: long_id .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, MULTI, DIV, DIV_R, CLOSE_ARR]

    EQUAL     shift, and go to state 279
    OPEN_ARR  shift, and go to state 280
    DOT       shift, and go to state 281

    $default  reduce using rule 212 (simple_expr)


State 264

  201 expr: simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL, CLOSE_ARR]
  213 simple_expr: simple_expr . PLUS simple_expr
  214            | simple_expr . MINUS simple_expr
  215            | simple_expr . MULTI simple_expr
  216            | simple_expr . DIV simple_expr
  217            | simple_expr . DIV_R simple_expr

    PLUS   shift, and go to state 337
    MINUS  shift, and go to state 338
    MULTI  shift, and go to state 339
    DIV    shift, and go to state 340
    DIV_R  shift, and go to state 341

    $default  reduce using rule 201 (expr)


State 265

  156 statement: error . SEMI_COMA

    SEMI_COMA  shift, and go to state 244


State 266

  268 try_catch: TRY statement . catch_list finally_statement
  269          | TRY statement . catch_list
  270 catch_list: . one_catch
  271           | . catch_list one_catch
  272 one_catch: . one_catch_header statement
  273 one_catch_header: . CATCH OPEN_P type IDENTIFIER CLOSE_P

    CATCH  shift, and go to state 342

    catch_list        go to state 343
    one_catch         go to state 344
    one_catch_header  go to state 345


State 267

  157 throw_statement: THROW OPEN_P . message_call CLOSE_P SEMI_COMA
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    OPEN_ARR  shift, and go to state 179

    message_call2  go to state 201
    message_call   go to state 346


State 268

  158 asm: AT_ASM STRING_VAL . SEMI_COMA

    SEMI_COMA  shift, and go to state 347


State 269

   97 array_tag: . array_first_tag array_tag_list
  101 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  102                | . OPEN_ARR CLOSE_ARR
  167 variable: error . array_tag initializer

    OPEN_ARR  shift, and go to state 218

    array_tag        go to state 348
    array_first_tag  go to state 220


State 270

   97 array_tag: . array_first_tag array_tag_list
  101 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  102                | . OPEN_ARR CLOSE_ARR
  105 main_initializer: . EQUAL expr
  106                 | .  [error, SEMI_COMA, COMMA]
  165 variable: IDENTIFIER . array_tag initializer
  166         | IDENTIFIER . main_initializer

    EQUAL     shift, and go to state 349
    OPEN_ARR  shift, and go to state 218

    $default  reduce using rule 106 (main_initializer)

    array_tag         go to state 350
    array_first_tag   go to state 220
    main_initializer  go to state 351


State 271

  159 variable_declaration_block: type variable_list . SEMI_COMA
  162 variable_list: variable_list . COMMA variable
  164              | variable_list . error variable

    error      shift, and go to state 352
    SEMI_COMA  shift, and go to state 353
    COMMA      shift, and go to state 354


State 272

  163 variable_list: variable .

    $default  reduce using rule 163 (variable_list)


State 273

  141 block_body_statements: statement_list CLOSE_S .

    $default  reduce using rule 141 (block_body_statements)


State 274

  144 statement_list: statement_list statement .

    $default  reduce using rule 144 (statement_list)


State 275

  172 do_while: do_header statement . while_loop_header SEMI_COMA
  237 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P

    WHILE  shift, and go to state 174

    while_loop_header  go to state 355


State 276

  174 for_loop: for_loop_header statement .

    $default  reduce using rule 174 (for_loop)


State 277

  148 statement: assign_expr SEMI_COMA .

    $default  reduce using rule 148 (statement)


State 278

  154 statement: long_id SEMI_COMA .

    $default  reduce using rule 154 (statement)


State 279

  115 p_type: . OPEN_P type CLOSE_P
  202 assign_expr: long_id EQUAL . simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    long_id        go to state 331
    array_access   go to state 200
    simple_expr    go to state 356
    message_call2  go to state 201
    message_call   go to state 202


State 280

  115 p_type: . OPEN_P type CLOSE_P
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  207             | long_id OPEN_ARR . simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    long_id        go to state 331
    array_access   go to state 200
    simple_expr    go to state 357
    message_call2  go to state 201
    message_call   go to state 202


State 281

  203 long_id: long_id DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 358


State 282

  227 sender: IDENTIFIER .

    $default  reduce using rule 227 (sender)


State 283

  226 sender: message_call .

    $default  reduce using rule 226 (sender)


State 284

  225 message_call: message_call2 sender . message CLOSE_ARR
  228 message: . IDENTIFIER
  229        | . message_selectors_list
  230 message_selectors_list: . message_selectors_list message_selector
  231                       | . message_selector
  232 message_selector: . IDENTIFIER SEMI_COLUMN argument_list

    IDENTIFIER  shift, and go to state 359

    message                 go to state 360
    message_selectors_list  go to state 361
    message_selector        go to state 362


State 285

  236 while_loop: while_loop_header statement .

    $default  reduce using rule 236 (while_loop)


State 286

  238 conditional_statement: if_header statement .  [error, IDENTIFIER, NSSTRING, FLOAT, CHAR, BOOL, INT, ID, OPEN_S, CLOSE_S, CONST, VOID, FOR, WHILE, IF, DO, SWITCH, CASE, DEFAULT, BREAK, ENUM, OPEN_ARR, RETURN, STRUCT, TRY, CATCH, THROW, FINALLY, AT_ASM]
  239                      | if_header statement . ELSE statement

    ELSE  shift, and go to state 363

    $default  reduce using rule 238 (conditional_statement)

    Conflict between rule 238 and token ELSE resolved as shift (if_h < ELSE).


State 287

  247 switch_body: CLOSE_S .

    $default  reduce using rule 247 (switch_body)


State 288

  115 p_type: . OPEN_P type CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR
  250 case_body: CASE . expr SEMI_COLUMN statement BREAK SEMI_COMA
  251          | CASE . expr SEMI_COLUMN statement
  252          | CASE . expr SEMI_COLUMN BREAK SEMI_COMA

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 364
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 289

  253 default_case: DEFAULT . SEMI_COLUMN statement BREAK SEMI_COMA
  254             | DEFAULT . SEMI_COLUMN statement
  255             | DEFAULT . SEMI_COLUMN BREAK SEMI_COMA

    SEMI_COLUMN  shift, and go to state 365


State 290

  240 conditional_statement: switch_header switch_body .

    $default  reduce using rule 240 (conditional_statement)


State 291

  244 switch_body: list_of_case . default_case CLOSE_S
  245            | list_of_case . CLOSE_S
  248 list_of_case: list_of_case . case_body
  250 case_body: . CASE expr SEMI_COLUMN statement BREAK SEMI_COMA
  251          | . CASE expr SEMI_COLUMN statement
  252          | . CASE expr SEMI_COLUMN BREAK SEMI_COMA
  253 default_case: . DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  254             | . DEFAULT SEMI_COLUMN statement
  255             | . DEFAULT SEMI_COLUMN BREAK SEMI_COMA

    CLOSE_S  shift, and go to state 366
    CASE     shift, and go to state 288
    DEFAULT  shift, and go to state 289

    case_body     go to state 367
    default_case  go to state 368


State 292

  249 list_of_case: case_body .

    $default  reduce using rule 249 (list_of_case)


State 293

  246 switch_body: default_case . CLOSE_S

    CLOSE_S  shift, and go to state 369


State 294

  267 list_expr: IDENTIFIER COMMA list_expr .

    $default  reduce using rule 267 (list_expr)


State 295

  264 list_expr: IDENTIFIER EQUAL expr . COMMA list_expr
  265          | IDENTIFIER EQUAL expr .  [CLOSE_S]

    COMMA  shift, and go to state 370

    $default  reduce using rule 265 (list_expr)


State 296

  262 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA .

    $default  reduce using rule 262 (enum)


State 297

   62 data_member: IDENTIFIER array_tag .

    $default  reduce using rule 62 (data_member)


State 298

   57 variable_declarationxx: CONST type ids_list SEMI_COMA .

    $default  reduce using rule 57 (variable_declarationxx)


State 299

  101 array_first_tag: OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 371


State 300

  102 array_first_tag: OPEN_ARR CLOSE_ARR .

    $default  reduce using rule 102 (array_first_tag)


State 301

   97 array_tag: array_first_tag array_tag_list .  [error, SEMI_COMA, COMMA, EQUAL]
   98 array_tag_list: array_tag_list . OPEN_ARR INT_VAL CLOSE_ARR
  100               | array_tag_list . OPEN_ARR error CLOSE_ARR

    OPEN_ARR  shift, and go to state 372

    $default  reduce using rule 97 (array_tag)


State 302

   58 variable_declarationxx: type IDENTIFIER array_tag error .

    $default  reduce using rule 58 (variable_declarationxx)


State 303

   64 data_member: error . array_tag
   97 array_tag: . array_first_tag array_tag_list
  101 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  102                | . OPEN_ARR CLOSE_ARR

    OPEN_ARR  shift, and go to state 218

    array_tag        go to state 219
    array_first_tag  go to state 220


State 304

   59 ids_list: ids_list COMMA data_member .

    $default  reduce using rule 59 (ids_list)


State 305

  123 parameter: p_type IDENTIFIER .

    $default  reduce using rule 123 (parameter)


State 306

  115 p_type: . OPEN_P type CLOSE_P
  121 parameter_list: parameter_list SEMI_COLUMN . parameter
  123 parameter: . p_type IDENTIFIER

    OPEN_P  shift, and go to state 89

    p_type     go to state 226
    parameter  go to state 373


State 307

   80 entity: error . COMMA

    COMMA  shift, and go to state 237


State 308

   78 entity: IDENTIFIER COMMA entity .

    $default  reduce using rule 78 (entity)


State 309

   74 struct: struct_header OPEN_S CLOSE_S entity error SEMI_COMA .

    $default  reduce using rule 74 (struct)


State 310

   77 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA .

    $default  reduce using rule 77 (struct)


State 311

   75 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity error . SEMI_COMA

    SEMI_COMA  shift, and go to state 374


State 312

   71 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA .

    $default  reduce using rule 71 (struct)


State 313

  160 variable_declaration_block: CONST type variable_list . SEMI_COMA
  162 variable_list: variable_list . COMMA variable
  164              | variable_list . error variable

    error      shift, and go to state 352
    SEMI_COMA  shift, and go to state 375
    COMMA      shift, and go to state 354


State 314

  184 for_initializer: IDENTIFIER . EQUAL expr
  185                | IDENTIFIER .  [SEMI_COMA]

    EQUAL  shift, and go to state 376

    $default  reduce using rule 185 (for_initializer)


State 315

  183 for_initializer: INT . IDENTIFIER EQUAL expr

    IDENTIFIER  shift, and go to state 377


State 316

  115 p_type: . OPEN_P type CLOSE_P
  176 for_loop_header: FOR OPEN_P SEMI_COMA . logic_expr1 SEMI_COMA expr CLOSE_P
  180                | FOR OPEN_P SEMI_COMA . logic_expr1 SEMI_COMA CLOSE_P
  181                | FOR OPEN_P SEMI_COMA . SEMI_COMA expr CLOSE_P
  182                | FOR OPEN_P SEMI_COMA . SEMI_COMA CLOSE_P
  186 logic_expr1: . logic_expr1 AND_AND logic_expr
  187            | . logic_expr1 OR_OR logic_expr
  188            | . logic_expr
  189 logic_expr: . expr LESS_THAN expr
  190           | . expr MORE_THAN expr
  191           | . expr LESS_OR_EQUAL expr
  192           | . expr MORE_OR_EQUAL expr
  193           | . expr EQUAL_EQUAL expr
  194           | . expr NOT_EQUAL expr
  195           | . NOT_EQUAL expr
  196           | . OPEN_P logic_expr CLOSE_P
  197           | . TRUE
  198           | . FALSE
  199           | . long_id
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    SEMI_COMA    shift, and go to state 378
    OPEN_P       shift, and go to state 318
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 319
    OPEN_ARR     shift, and go to state 179
    TRUE         shift, and go to state 320
    FALSE        shift, and go to state 321
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    logic_expr1    go to state 379
    logic_expr     go to state 323
    expr           go to state 324
    assign_expr    go to state 262
    long_id        go to state 325
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 317

  175 for_loop_header: FOR OPEN_P for_initializer . SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  177                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA expr CLOSE_P
  178                | FOR OPEN_P for_initializer . SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  179                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA CLOSE_P

    SEMI_COMA  shift, and go to state 380


State 318

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  115 p_type: . OPEN_P type CLOSE_P
  115       | OPEN_P . type CLOSE_P
  189 logic_expr: . expr LESS_THAN expr
  190           | . expr MORE_THAN expr
  191           | . expr LESS_OR_EQUAL expr
  192           | . expr MORE_OR_EQUAL expr
  193           | . expr EQUAL_EQUAL expr
  194           | . expr NOT_EQUAL expr
  195           | . NOT_EQUAL expr
  196           | . OPEN_P logic_expr CLOSE_P
  196           | OPEN_P . logic_expr CLOSE_P
  197           | . TRUE
  198           | . FALSE
  199           | . long_id
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  218            | OPEN_P . simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 330
    NSSTRING     shift, and go to state 62
    FLOAT        shift, and go to state 63
    CHAR         shift, and go to state 64
    BOOL         shift, and go to state 65
    INT          shift, and go to state 66
    ID           shift, and go to state 67
    VOID         shift, and go to state 73
    OPEN_P       shift, and go to state 318
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 319
    ENUM         shift, and go to state 74
    OPEN_ARR     shift, and go to state 179
    TRUE         shift, and go to state 320
    FALSE        shift, and go to state 321
    STRUCT       shift, and go to state 75
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    type           go to state 144
    struct_type    go to state 82
    enum_type      go to state 83
    simple_type    go to state 84
    complex_type   go to state 85
    p_type         go to state 260
    logic_expr     go to state 381
    expr           go to state 324
    assign_expr    go to state 262
    long_id        go to state 325
    array_access   go to state 200
    simple_expr    go to state 382
    message_call2  go to state 201
    message_call   go to state 202


State 319

  115 p_type: . OPEN_P type CLOSE_P
  195 logic_expr: NOT_EQUAL . expr
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 383
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 320

  197 logic_expr: TRUE .

    $default  reduce using rule 197 (logic_expr)


State 321

  198 logic_expr: FALSE .

    $default  reduce using rule 198 (logic_expr)


State 322

  186 logic_expr1: logic_expr1 . AND_AND logic_expr
  187            | logic_expr1 . OR_OR logic_expr
  237 while_loop_header: WHILE OPEN_P logic_expr1 . CLOSE_P

    CLOSE_P  shift, and go to state 384
    AND_AND  shift, and go to state 385
    OR_OR    shift, and go to state 386


State 323

  188 logic_expr1: logic_expr .

    $default  reduce using rule 188 (logic_expr1)


State 324

  189 logic_expr: expr . LESS_THAN expr
  190           | expr . MORE_THAN expr
  191           | expr . LESS_OR_EQUAL expr
  192           | expr . MORE_OR_EQUAL expr
  193           | expr . EQUAL_EQUAL expr
  194           | expr . NOT_EQUAL expr

    LESS_THAN      shift, and go to state 387
    MORE_THAN      shift, and go to state 388
    LESS_OR_EQUAL  shift, and go to state 389
    MORE_OR_EQUAL  shift, and go to state 390
    EQUAL_EQUAL    shift, and go to state 391
    NOT_EQUAL      shift, and go to state 392


State 325

  199 logic_expr: long_id .  [SEMI_COMA, CLOSE_P, AND_AND, OR_OR]
  202 assign_expr: long_id . EQUAL simple_expr
  203 long_id: long_id . DOT IDENTIFIER
  207 array_access: long_id . OPEN_ARR simple_expr CLOSE_ARR
  212 simple_expr: long_id .  [LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, DIV, DIV_R]

    EQUAL     shift, and go to state 279
    OPEN_ARR  shift, and go to state 280
    DOT       shift, and go to state 281

    SEMI_COMA  reduce using rule 199 (logic_expr)
    CLOSE_P    reduce using rule 199 (logic_expr)
    CLOSE_P    [reduce using rule 212 (simple_expr)]
    AND_AND    reduce using rule 199 (logic_expr)
    OR_OR      reduce using rule 199 (logic_expr)
    $default   reduce using rule 212 (simple_expr)


State 326

  186 logic_expr1: logic_expr1 . AND_AND logic_expr
  187            | logic_expr1 . OR_OR logic_expr
  241 if_header: IF OPEN_P logic_expr1 . CLOSE_P

    CLOSE_P  shift, and go to state 393
    AND_AND  shift, and go to state 385
    OR_OR    shift, and go to state 386


State 327

  242 switch_header: SWITCH OPEN_P IDENTIFIER . CLOSE_P switch_body_block

    CLOSE_P  shift, and go to state 394


State 328

  219 simple_expr: IDENTIFIER DOUBLEPLUS .

    $default  reduce using rule 219 (simple_expr)


State 329

  220 simple_expr: IDENTIFIER DOUBLEMINUS .

    $default  reduce using rule 220 (simple_expr)


State 330

   96 complex_type: IDENTIFIER . MULTI
  205 long_id: IDENTIFIER .  [LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, EQUAL, DIV, DIV_R, OPEN_ARR, DOT]
  219 simple_expr: IDENTIFIER . DOUBLEPLUS
  220            | IDENTIFIER . DOUBLEMINUS

    DOUBLEPLUS   shift, and go to state 328
    DOUBLEMINUS  shift, and go to state 329

    $default  reduce using rule 205 (long_id)

    Conflict between rule 205 and token MULTI resolved as reduce (MULTI < long_id_prec).


State 331

  203 long_id: long_id . DOT IDENTIFIER
  207 array_access: long_id . OPEN_ARR simple_expr CLOSE_ARR
  212 simple_expr: long_id .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, DIV, DIV_R, CLOSE_ARR]

    OPEN_ARR  shift, and go to state 280
    DOT       shift, and go to state 281

    $default  reduce using rule 212 (simple_expr)


State 332

  213 simple_expr: simple_expr . PLUS simple_expr
  214            | simple_expr . MINUS simple_expr
  215            | simple_expr . MULTI simple_expr
  216            | simple_expr . DIV simple_expr
  217            | simple_expr . DIV_R simple_expr
  218            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 337
    MINUS    shift, and go to state 338
    CLOSE_P  shift, and go to state 395
    MULTI    shift, and go to state 339
    DIV      shift, and go to state 340
    DIV_R    shift, and go to state 341


State 333

  221 simple_expr: DOUBLEPLUS IDENTIFIER .

    $default  reduce using rule 221 (simple_expr)


State 334

  222 simple_expr: DOUBLEMINUS IDENTIFIER .

    $default  reduce using rule 222 (simple_expr)


State 335

  213 simple_expr: simple_expr . PLUS simple_expr
  214            | simple_expr . MINUS simple_expr
  215            | simple_expr . MULTI simple_expr
  216            | simple_expr . DIV simple_expr
  217            | simple_expr . DIV_R simple_expr
  223            | p_type simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL, CLOSE_ARR]

    PLUS   shift, and go to state 337
    MINUS  shift, and go to state 338
    MULTI  shift, and go to state 339
    DIV    shift, and go to state 340
    DIV_R  shift, and go to state 341

    $default  reduce using rule 223 (simple_expr)

    Conflict between rule 223 and token PLUS resolved as shift (p_type_expr_prec < PLUS).
    Conflict between rule 223 and token MINUS resolved as shift (p_type_expr_prec < MINUS).
    Conflict between rule 223 and token MULTI resolved as shift (p_type_expr_prec < MULTI).
    Conflict between rule 223 and token DIV resolved as shift (p_type_expr_prec < DIV).
    Conflict between rule 223 and token DIV_R resolved as shift (p_type_expr_prec < DIV_R).


State 336

  168 return_statement: RETURN expr SEMI_COMA .

    $default  reduce using rule 168 (return_statement)


State 337

  115 p_type: . OPEN_P type CLOSE_P
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  213            | simple_expr PLUS . simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    long_id        go to state 331
    array_access   go to state 200
    simple_expr    go to state 396
    message_call2  go to state 201
    message_call   go to state 202


State 338

  115 p_type: . OPEN_P type CLOSE_P
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  214            | simple_expr MINUS . simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    long_id        go to state 331
    array_access   go to state 200
    simple_expr    go to state 397
    message_call2  go to state 201
    message_call   go to state 202


State 339

  115 p_type: . OPEN_P type CLOSE_P
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  215            | simple_expr MULTI . simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    long_id        go to state 331
    array_access   go to state 200
    simple_expr    go to state 398
    message_call2  go to state 201
    message_call   go to state 202


State 340

  115 p_type: . OPEN_P type CLOSE_P
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  216            | simple_expr DIV . simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    long_id        go to state 331
    array_access   go to state 200
    simple_expr    go to state 399
    message_call2  go to state 201
    message_call   go to state 202


State 341

  115 p_type: . OPEN_P type CLOSE_P
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  217            | simple_expr DIV_R . simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    long_id        go to state 331
    array_access   go to state 200
    simple_expr    go to state 400
    message_call2  go to state 201
    message_call   go to state 202


State 342

  273 one_catch_header: CATCH . OPEN_P type IDENTIFIER CLOSE_P

    OPEN_P  shift, and go to state 401


State 343

  268 try_catch: TRY statement catch_list . finally_statement
  269          | TRY statement catch_list .  [error, IDENTIFIER, NSSTRING, FLOAT, CHAR, BOOL, INT, ID, OPEN_S, CLOSE_S, CONST, VOID, FOR, WHILE, IF, DO, SWITCH, CASE, DEFAULT, BREAK, ENUM, OPEN_ARR, RETURN, ELSE, STRUCT, TRY, THROW, AT_ASM]
  271 catch_list: catch_list . one_catch
  272 one_catch: . one_catch_header statement
  273 one_catch_header: . CATCH OPEN_P type IDENTIFIER CLOSE_P
  274 finally_statement: . FINALLY statement

    CATCH    shift, and go to state 342
    FINALLY  shift, and go to state 402

    $default  reduce using rule 269 (try_catch)

    one_catch          go to state 403
    one_catch_header   go to state 345
    finally_statement  go to state 404

    Conflict between rule 269 and token CATCH resolved as shift (try_prec < CATCH).
    Conflict between rule 269 and token FINALLY resolved as shift (try_prec < FINALLY).


State 344

  270 catch_list: one_catch .

    $default  reduce using rule 270 (catch_list)


State 345

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . long_id SEMI_COMA
  155          | . throw_statement
  156          | . error SEMI_COMA
  157 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  158 asm: . AT_ASM STRING_VAL SEMI_COMA
  159 variable_declaration_block: . type variable_list SEMI_COMA
  160                           | . CONST type variable_list SEMI_COMA
  161                           | . enum
  168 return_statement: . RETURN expr SEMI_COMA
  169 loop_statement: . for_loop
  170               | . while_loop
  171               | . do_while
  172 do_while: . do_header statement while_loop_header SEMI_COMA
  173 do_header: . DO
  174 for_loop: . for_loop_header statement
  175 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR
  236 while_loop: . while_loop_header statement
  237 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  238 conditional_statement: . if_header statement
  239                      | . if_header statement ELSE statement
  240                      | . switch_header switch_body
  241 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  242 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  262 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  263     | . ENUM IDENTIFIER SEMI_COMA
  268 try_catch: . TRY statement catch_list finally_statement
  269          | . TRY statement catch_list
  272 one_catch: one_catch_header . statement

    error       shift, and go to state 265
    IDENTIFIER  shift, and go to state 170
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    OPEN_S      shift, and go to state 116
    CONST       shift, and go to state 172
    VOID        shift, and go to state 73
    FOR         shift, and go to state 173
    WHILE       shift, and go to state 174
    IF          shift, and go to state 175
    DO          shift, and go to state 176
    SWITCH      shift, and go to state 177
    ENUM        shift, and go to state 178
    OPEN_ARR    shift, and go to state 179
    RETURN      shift, and go to state 180
    STRUCT      shift, and go to state 75
    TRY         shift, and go to state 181
    THROW       shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 82
    enum_type                   go to state 83
    simple_type                 go to state 84
    complex_type                go to state 85
    block_body                  go to state 185
    block_body_header           go to state 118
    statement                   go to state 405
    throw_statement             go to state 189
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    array_access                go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 346

  157 throw_statement: THROW OPEN_P message_call . CLOSE_P SEMI_COMA

    CLOSE_P  shift, and go to state 406


State 347

  158 asm: AT_ASM STRING_VAL SEMI_COMA .

    $default  reduce using rule 158 (asm)


State 348

  103 initializer: . EQUAL array_body
  104            | .  [error, SEMI_COMA, COMMA]
  167 variable: error array_tag . initializer

    EQUAL  shift, and go to state 407

    $default  reduce using rule 104 (initializer)

    initializer  go to state 408


State 349

  105 main_initializer: EQUAL . expr
  115 p_type: . OPEN_P type CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 409
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 350

  103 initializer: . EQUAL array_body
  104            | .  [error, SEMI_COMA, COMMA]
  165 variable: IDENTIFIER array_tag . initializer

    EQUAL  shift, and go to state 407

    $default  reduce using rule 104 (initializer)

    initializer  go to state 410


State 351

  166 variable: IDENTIFIER main_initializer .

    $default  reduce using rule 166 (variable)


State 352

  164 variable_list: variable_list error . variable
  165 variable: . IDENTIFIER array_tag initializer
  166         | . IDENTIFIER main_initializer
  167         | . error array_tag initializer

    error       shift, and go to state 269
    IDENTIFIER  shift, and go to state 270

    variable  go to state 411


State 353

  159 variable_declaration_block: type variable_list SEMI_COMA .

    $default  reduce using rule 159 (variable_declaration_block)


State 354

  162 variable_list: variable_list COMMA . variable
  165 variable: . IDENTIFIER array_tag initializer
  166         | . IDENTIFIER main_initializer
  167         | . error array_tag initializer

    error       shift, and go to state 269
    IDENTIFIER  shift, and go to state 270

    variable  go to state 412


State 355

  172 do_while: do_header statement while_loop_header . SEMI_COMA

    SEMI_COMA  shift, and go to state 413


State 356

  202 assign_expr: long_id EQUAL simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL, CLOSE_ARR]
  213 simple_expr: simple_expr . PLUS simple_expr
  214            | simple_expr . MINUS simple_expr
  215            | simple_expr . MULTI simple_expr
  216            | simple_expr . DIV simple_expr
  217            | simple_expr . DIV_R simple_expr

    PLUS   shift, and go to state 337
    MINUS  shift, and go to state 338
    MULTI  shift, and go to state 339
    DIV    shift, and go to state 340
    DIV_R  shift, and go to state 341

    $default  reduce using rule 202 (assign_expr)


State 357

  207 array_access: long_id OPEN_ARR simple_expr . CLOSE_ARR
  213 simple_expr: simple_expr . PLUS simple_expr
  214            | simple_expr . MINUS simple_expr
  215            | simple_expr . MULTI simple_expr
  216            | simple_expr . DIV simple_expr
  217            | simple_expr . DIV_R simple_expr

    PLUS       shift, and go to state 337
    MINUS      shift, and go to state 338
    MULTI      shift, and go to state 339
    DIV        shift, and go to state 340
    DIV_R      shift, and go to state 341
    CLOSE_ARR  shift, and go to state 414


State 358

  203 long_id: long_id DOT IDENTIFIER .

    $default  reduce using rule 203 (long_id)


State 359

  228 message: IDENTIFIER .  [CLOSE_ARR]
  232 message_selector: IDENTIFIER . SEMI_COLUMN argument_list

    SEMI_COLUMN  shift, and go to state 415

    $default  reduce using rule 228 (message)


State 360

  225 message_call: message_call2 sender message . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 416


State 361

  229 message: message_selectors_list .  [CLOSE_ARR]
  230 message_selectors_list: message_selectors_list . message_selector
  232 message_selector: . IDENTIFIER SEMI_COLUMN argument_list

    IDENTIFIER  shift, and go to state 417

    $default  reduce using rule 229 (message)

    message_selector  go to state 418


State 362

  231 message_selectors_list: message_selector .

    $default  reduce using rule 231 (message_selectors_list)


State 363

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . long_id SEMI_COMA
  155          | . throw_statement
  156          | . error SEMI_COMA
  157 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  158 asm: . AT_ASM STRING_VAL SEMI_COMA
  159 variable_declaration_block: . type variable_list SEMI_COMA
  160                           | . CONST type variable_list SEMI_COMA
  161                           | . enum
  168 return_statement: . RETURN expr SEMI_COMA
  169 loop_statement: . for_loop
  170               | . while_loop
  171               | . do_while
  172 do_while: . do_header statement while_loop_header SEMI_COMA
  173 do_header: . DO
  174 for_loop: . for_loop_header statement
  175 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR
  236 while_loop: . while_loop_header statement
  237 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  238 conditional_statement: . if_header statement
  239                      | . if_header statement ELSE statement
  239                      | if_header statement ELSE . statement
  240                      | . switch_header switch_body
  241 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  242 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  262 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  263     | . ENUM IDENTIFIER SEMI_COMA
  268 try_catch: . TRY statement catch_list finally_statement
  269          | . TRY statement catch_list

    error       shift, and go to state 265
    IDENTIFIER  shift, and go to state 170
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    OPEN_S      shift, and go to state 116
    CONST       shift, and go to state 172
    VOID        shift, and go to state 73
    FOR         shift, and go to state 173
    WHILE       shift, and go to state 174
    IF          shift, and go to state 175
    DO          shift, and go to state 176
    SWITCH      shift, and go to state 177
    ENUM        shift, and go to state 178
    OPEN_ARR    shift, and go to state 179
    RETURN      shift, and go to state 180
    STRUCT      shift, and go to state 75
    TRY         shift, and go to state 181
    THROW       shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 82
    enum_type                   go to state 83
    simple_type                 go to state 84
    complex_type                go to state 85
    block_body                  go to state 185
    block_body_header           go to state 118
    statement                   go to state 419
    throw_statement             go to state 189
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    array_access                go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 364

  250 case_body: CASE expr . SEMI_COLUMN statement BREAK SEMI_COMA
  251          | CASE expr . SEMI_COLUMN statement
  252          | CASE expr . SEMI_COLUMN BREAK SEMI_COMA

    SEMI_COLUMN  shift, and go to state 420


State 365

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . long_id SEMI_COMA
  155          | . throw_statement
  156          | . error SEMI_COMA
  157 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  158 asm: . AT_ASM STRING_VAL SEMI_COMA
  159 variable_declaration_block: . type variable_list SEMI_COMA
  160                           | . CONST type variable_list SEMI_COMA
  161                           | . enum
  168 return_statement: . RETURN expr SEMI_COMA
  169 loop_statement: . for_loop
  170               | . while_loop
  171               | . do_while
  172 do_while: . do_header statement while_loop_header SEMI_COMA
  173 do_header: . DO
  174 for_loop: . for_loop_header statement
  175 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR
  236 while_loop: . while_loop_header statement
  237 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  238 conditional_statement: . if_header statement
  239                      | . if_header statement ELSE statement
  240                      | . switch_header switch_body
  241 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  242 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  253 default_case: DEFAULT SEMI_COLUMN . statement BREAK SEMI_COMA
  254             | DEFAULT SEMI_COLUMN . statement
  255             | DEFAULT SEMI_COLUMN . BREAK SEMI_COMA
  262 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  263     | . ENUM IDENTIFIER SEMI_COMA
  268 try_catch: . TRY statement catch_list finally_statement
  269          | . TRY statement catch_list

    error       shift, and go to state 265
    IDENTIFIER  shift, and go to state 170
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    OPEN_S      shift, and go to state 116
    CONST       shift, and go to state 172
    VOID        shift, and go to state 73
    FOR         shift, and go to state 173
    WHILE       shift, and go to state 174
    IF          shift, and go to state 175
    DO          shift, and go to state 176
    SWITCH      shift, and go to state 177
    BREAK       shift, and go to state 421
    ENUM        shift, and go to state 178
    OPEN_ARR    shift, and go to state 179
    RETURN      shift, and go to state 180
    STRUCT      shift, and go to state 75
    TRY         shift, and go to state 181
    THROW       shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 82
    enum_type                   go to state 83
    simple_type                 go to state 84
    complex_type                go to state 85
    block_body                  go to state 185
    block_body_header           go to state 118
    statement                   go to state 422
    throw_statement             go to state 189
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    array_access                go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 366

  245 switch_body: list_of_case CLOSE_S .

    $default  reduce using rule 245 (switch_body)


State 367

  248 list_of_case: list_of_case case_body .

    $default  reduce using rule 248 (list_of_case)


State 368

  244 switch_body: list_of_case default_case . CLOSE_S

    CLOSE_S  shift, and go to state 423


State 369

  246 switch_body: default_case CLOSE_S .

    $default  reduce using rule 246 (switch_body)


State 370

  264 list_expr: . IDENTIFIER EQUAL expr COMMA list_expr
  264          | IDENTIFIER EQUAL expr COMMA . list_expr
  265          | . IDENTIFIER EQUAL expr
  266          | . IDENTIFIER
  267          | . IDENTIFIER COMMA list_expr

    IDENTIFIER  shift, and go to state 126

    list_expr  go to state 424


State 371

  101 array_first_tag: OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 101 (array_first_tag)


State 372

   98 array_tag_list: array_tag_list OPEN_ARR . INT_VAL CLOSE_ARR
  100               | array_tag_list OPEN_ARR . error CLOSE_ARR

    error    shift, and go to state 425
    INT_VAL  shift, and go to state 426


State 373

  121 parameter_list: parameter_list SEMI_COLUMN parameter .

    $default  reduce using rule 121 (parameter_list)


State 374

   75 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA .

    $default  reduce using rule 75 (struct)


State 375

  160 variable_declaration_block: CONST type variable_list SEMI_COMA .

    $default  reduce using rule 160 (variable_declaration_block)


State 376

  115 p_type: . OPEN_P type CLOSE_P
  184 for_initializer: IDENTIFIER EQUAL . expr
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 427
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 377

  183 for_initializer: INT IDENTIFIER . EQUAL expr

    EQUAL  shift, and go to state 428


State 378

  115 p_type: . OPEN_P type CLOSE_P
  181 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA . expr CLOSE_P
  182                | FOR OPEN_P SEMI_COMA SEMI_COMA . CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    CLOSE_P      shift, and go to state 429
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 430
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 379

  176 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr1 . SEMI_COMA expr CLOSE_P
  180                | FOR OPEN_P SEMI_COMA logic_expr1 . SEMI_COMA CLOSE_P
  186 logic_expr1: logic_expr1 . AND_AND logic_expr
  187            | logic_expr1 . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 431
    AND_AND    shift, and go to state 385
    OR_OR      shift, and go to state 386


State 380

  115 p_type: . OPEN_P type CLOSE_P
  175 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA . logic_expr1 SEMI_COMA expr CLOSE_P
  177                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA expr CLOSE_P
  178                | FOR OPEN_P for_initializer SEMI_COMA . logic_expr1 SEMI_COMA CLOSE_P
  179                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA CLOSE_P
  186 logic_expr1: . logic_expr1 AND_AND logic_expr
  187            | . logic_expr1 OR_OR logic_expr
  188            | . logic_expr
  189 logic_expr: . expr LESS_THAN expr
  190           | . expr MORE_THAN expr
  191           | . expr LESS_OR_EQUAL expr
  192           | . expr MORE_OR_EQUAL expr
  193           | . expr EQUAL_EQUAL expr
  194           | . expr NOT_EQUAL expr
  195           | . NOT_EQUAL expr
  196           | . OPEN_P logic_expr CLOSE_P
  197           | . TRUE
  198           | . FALSE
  199           | . long_id
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    SEMI_COMA    shift, and go to state 432
    OPEN_P       shift, and go to state 318
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 319
    OPEN_ARR     shift, and go to state 179
    TRUE         shift, and go to state 320
    FALSE        shift, and go to state 321
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    logic_expr1    go to state 433
    logic_expr     go to state 323
    expr           go to state 324
    assign_expr    go to state 262
    long_id        go to state 325
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 381

  196 logic_expr: OPEN_P logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 434


State 382

  201 expr: simple_expr .  [LESS_THAN, MORE_THAN, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL]
  213 simple_expr: simple_expr . PLUS simple_expr
  214            | simple_expr . MINUS simple_expr
  215            | simple_expr . MULTI simple_expr
  216            | simple_expr . DIV simple_expr
  217            | simple_expr . DIV_R simple_expr
  218            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 337
    MINUS    shift, and go to state 338
    CLOSE_P  shift, and go to state 395
    MULTI    shift, and go to state 339
    DIV      shift, and go to state 340
    DIV_R    shift, and go to state 341

    $default  reduce using rule 201 (expr)


State 383

  195 logic_expr: NOT_EQUAL expr .

    $default  reduce using rule 195 (logic_expr)


State 384

  237 while_loop_header: WHILE OPEN_P logic_expr1 CLOSE_P .

    $default  reduce using rule 237 (while_loop_header)


State 385

  115 p_type: . OPEN_P type CLOSE_P
  186 logic_expr1: logic_expr1 AND_AND . logic_expr
  189 logic_expr: . expr LESS_THAN expr
  190           | . expr MORE_THAN expr
  191           | . expr LESS_OR_EQUAL expr
  192           | . expr MORE_OR_EQUAL expr
  193           | . expr EQUAL_EQUAL expr
  194           | . expr NOT_EQUAL expr
  195           | . NOT_EQUAL expr
  196           | . OPEN_P logic_expr CLOSE_P
  197           | . TRUE
  198           | . FALSE
  199           | . long_id
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 318
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 319
    OPEN_ARR     shift, and go to state 179
    TRUE         shift, and go to state 320
    FALSE        shift, and go to state 321
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    logic_expr     go to state 435
    expr           go to state 324
    assign_expr    go to state 262
    long_id        go to state 325
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 386

  115 p_type: . OPEN_P type CLOSE_P
  187 logic_expr1: logic_expr1 OR_OR . logic_expr
  189 logic_expr: . expr LESS_THAN expr
  190           | . expr MORE_THAN expr
  191           | . expr LESS_OR_EQUAL expr
  192           | . expr MORE_OR_EQUAL expr
  193           | . expr EQUAL_EQUAL expr
  194           | . expr NOT_EQUAL expr
  195           | . NOT_EQUAL expr
  196           | . OPEN_P logic_expr CLOSE_P
  197           | . TRUE
  198           | . FALSE
  199           | . long_id
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 318
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 319
    OPEN_ARR     shift, and go to state 179
    TRUE         shift, and go to state 320
    FALSE        shift, and go to state 321
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    logic_expr     go to state 436
    expr           go to state 324
    assign_expr    go to state 262
    long_id        go to state 325
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 387

  115 p_type: . OPEN_P type CLOSE_P
  189 logic_expr: expr LESS_THAN . expr
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 437
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 388

  115 p_type: . OPEN_P type CLOSE_P
  190 logic_expr: expr MORE_THAN . expr
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 438
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 389

  115 p_type: . OPEN_P type CLOSE_P
  191 logic_expr: expr LESS_OR_EQUAL . expr
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 439
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 390

  115 p_type: . OPEN_P type CLOSE_P
  192 logic_expr: expr MORE_OR_EQUAL . expr
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 440
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 391

  115 p_type: . OPEN_P type CLOSE_P
  193 logic_expr: expr EQUAL_EQUAL . expr
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 441
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 392

  115 p_type: . OPEN_P type CLOSE_P
  194 logic_expr: expr NOT_EQUAL . expr
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 442
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 393

  241 if_header: IF OPEN_P logic_expr1 CLOSE_P .

    $default  reduce using rule 241 (if_header)


State 394

  242 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P . switch_body_block
  243 switch_body_block: . OPEN_S

    OPEN_S  shift, and go to state 443

    switch_body_block  go to state 444


State 395

  218 simple_expr: OPEN_P simple_expr CLOSE_P .

    $default  reduce using rule 218 (simple_expr)


State 396

  213 simple_expr: simple_expr . PLUS simple_expr
  213            | simple_expr PLUS simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL, CLOSE_ARR]
  214            | simple_expr . MINUS simple_expr
  215            | simple_expr . MULTI simple_expr
  216            | simple_expr . DIV simple_expr
  217            | simple_expr . DIV_R simple_expr

    MULTI  shift, and go to state 339
    DIV    shift, and go to state 340
    DIV_R  shift, and go to state 341

    $default  reduce using rule 213 (simple_expr)

    Conflict between rule 213 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 213 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 213 and token MULTI resolved as shift (PLUS < MULTI).
    Conflict between rule 213 and token DIV resolved as shift (PLUS < DIV).
    Conflict between rule 213 and token DIV_R resolved as shift (PLUS < DIV_R).


State 397

  213 simple_expr: simple_expr . PLUS simple_expr
  214            | simple_expr . MINUS simple_expr
  214            | simple_expr MINUS simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL, CLOSE_ARR]
  215            | simple_expr . MULTI simple_expr
  216            | simple_expr . DIV simple_expr
  217            | simple_expr . DIV_R simple_expr

    MULTI  shift, and go to state 339
    DIV    shift, and go to state 340
    DIV_R  shift, and go to state 341

    $default  reduce using rule 214 (simple_expr)

    Conflict between rule 214 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 214 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 214 and token MULTI resolved as shift (MINUS < MULTI).
    Conflict between rule 214 and token DIV resolved as shift (MINUS < DIV).
    Conflict between rule 214 and token DIV_R resolved as shift (MINUS < DIV_R).


State 398

  213 simple_expr: simple_expr . PLUS simple_expr
  214            | simple_expr . MINUS simple_expr
  215            | simple_expr . MULTI simple_expr
  215            | simple_expr MULTI simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, DIV, DIV_R, CLOSE_ARR]
  216            | simple_expr . DIV simple_expr
  217            | simple_expr . DIV_R simple_expr

    $default  reduce using rule 215 (simple_expr)

    Conflict between rule 215 and token PLUS resolved as reduce (PLUS < MULTI).
    Conflict between rule 215 and token MINUS resolved as reduce (MINUS < MULTI).
    Conflict between rule 215 and token MULTI resolved as reduce (%left MULTI).
    Conflict between rule 215 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 215 and token DIV_R resolved as reduce (%left DIV_R).


State 399

  213 simple_expr: simple_expr . PLUS simple_expr
  214            | simple_expr . MINUS simple_expr
  215            | simple_expr . MULTI simple_expr
  216            | simple_expr . DIV simple_expr
  216            | simple_expr DIV simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, DIV, DIV_R, CLOSE_ARR]
  217            | simple_expr . DIV_R simple_expr

    $default  reduce using rule 216 (simple_expr)

    Conflict between rule 216 and token PLUS resolved as reduce (PLUS < DIV).
    Conflict between rule 216 and token MINUS resolved as reduce (MINUS < DIV).
    Conflict between rule 216 and token MULTI resolved as reduce (%left MULTI).
    Conflict between rule 216 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 216 and token DIV_R resolved as reduce (%left DIV_R).


State 400

  213 simple_expr: simple_expr . PLUS simple_expr
  214            | simple_expr . MINUS simple_expr
  215            | simple_expr . MULTI simple_expr
  216            | simple_expr . DIV simple_expr
  217            | simple_expr . DIV_R simple_expr
  217            | simple_expr DIV_R simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, DIV, DIV_R, CLOSE_ARR]

    $default  reduce using rule 217 (simple_expr)

    Conflict between rule 217 and token PLUS resolved as reduce (PLUS < DIV_R).
    Conflict between rule 217 and token MINUS resolved as reduce (MINUS < DIV_R).
    Conflict between rule 217 and token MULTI resolved as reduce (%left MULTI).
    Conflict between rule 217 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 217 and token DIV_R resolved as reduce (%left DIV_R).


State 401

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  273 one_catch_header: CATCH OPEN_P . type IDENTIFIER CLOSE_P

    IDENTIFIER  shift, and go to state 61
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    VOID        shift, and go to state 73
    ENUM        shift, and go to state 74
    STRUCT      shift, and go to state 75

    type          go to state 445
    struct_type   go to state 82
    enum_type     go to state 83
    simple_type   go to state 84
    complex_type  go to state 85


State 402

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . long_id SEMI_COMA
  155          | . throw_statement
  156          | . error SEMI_COMA
  157 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  158 asm: . AT_ASM STRING_VAL SEMI_COMA
  159 variable_declaration_block: . type variable_list SEMI_COMA
  160                           | . CONST type variable_list SEMI_COMA
  161                           | . enum
  168 return_statement: . RETURN expr SEMI_COMA
  169 loop_statement: . for_loop
  170               | . while_loop
  171               | . do_while
  172 do_while: . do_header statement while_loop_header SEMI_COMA
  173 do_header: . DO
  174 for_loop: . for_loop_header statement
  175 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR
  236 while_loop: . while_loop_header statement
  237 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  238 conditional_statement: . if_header statement
  239                      | . if_header statement ELSE statement
  240                      | . switch_header switch_body
  241 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  242 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  262 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  263     | . ENUM IDENTIFIER SEMI_COMA
  268 try_catch: . TRY statement catch_list finally_statement
  269          | . TRY statement catch_list
  274 finally_statement: FINALLY . statement

    error       shift, and go to state 265
    IDENTIFIER  shift, and go to state 170
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    OPEN_S      shift, and go to state 116
    CONST       shift, and go to state 172
    VOID        shift, and go to state 73
    FOR         shift, and go to state 173
    WHILE       shift, and go to state 174
    IF          shift, and go to state 175
    DO          shift, and go to state 176
    SWITCH      shift, and go to state 177
    ENUM        shift, and go to state 178
    OPEN_ARR    shift, and go to state 179
    RETURN      shift, and go to state 180
    STRUCT      shift, and go to state 75
    TRY         shift, and go to state 181
    THROW       shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 82
    enum_type                   go to state 83
    simple_type                 go to state 84
    complex_type                go to state 85
    block_body                  go to state 185
    block_body_header           go to state 118
    statement                   go to state 446
    throw_statement             go to state 189
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    array_access                go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 403

  271 catch_list: catch_list one_catch .

    $default  reduce using rule 271 (catch_list)


State 404

  268 try_catch: TRY statement catch_list finally_statement .

    $default  reduce using rule 268 (try_catch)


State 405

  272 one_catch: one_catch_header statement .

    $default  reduce using rule 272 (one_catch)


State 406

  157 throw_statement: THROW OPEN_P message_call CLOSE_P . SEMI_COMA

    SEMI_COMA  shift, and go to state 447


State 407

   36 array_body: . OPEN_S array_ele CLOSE_S
   37           | . OPEN_S CLOSE_S
  103 initializer: EQUAL . array_body

    OPEN_S  shift, and go to state 448

    array_body  go to state 449


State 408

  167 variable: error array_tag initializer .

    $default  reduce using rule 167 (variable)


State 409

  105 main_initializer: EQUAL expr .

    $default  reduce using rule 105 (main_initializer)


State 410

  165 variable: IDENTIFIER array_tag initializer .

    $default  reduce using rule 165 (variable)


State 411

  164 variable_list: variable_list error variable .

    $default  reduce using rule 164 (variable_list)


State 412

  162 variable_list: variable_list COMMA variable .

    $default  reduce using rule 162 (variable_list)


State 413

  172 do_while: do_header statement while_loop_header SEMI_COMA .

    $default  reduce using rule 172 (do_while)


State 414

  207 array_access: long_id OPEN_ARR simple_expr CLOSE_ARR .

    $default  reduce using rule 207 (array_access)


State 415

  115 p_type: . OPEN_P type CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR
  232 message_selector: IDENTIFIER SEMI_COLUMN . argument_list
  233 argument_list: . argument_list SEMI_COLUMN argument
  234              | . argument
  235 argument: . expr

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 450
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202
    argument_list  go to state 451
    argument       go to state 452


State 416

  225 message_call: message_call2 sender message CLOSE_ARR .

    $default  reduce using rule 225 (message_call)


State 417

  232 message_selector: IDENTIFIER . SEMI_COLUMN argument_list

    SEMI_COLUMN  shift, and go to state 415


State 418

  230 message_selectors_list: message_selectors_list message_selector .

    $default  reduce using rule 230 (message_selectors_list)


State 419

  239 conditional_statement: if_header statement ELSE statement .

    $default  reduce using rule 239 (conditional_statement)


State 420

   81 type: . simple_type
   82     | . complex_type
   83     | . struct_type
   84     | . enum_type
   85 struct_type: . STRUCT IDENTIFIER
   86            | . STRUCT IDENTIFIER MULTI
   87 enum_type: . ENUM IDENTIFIER
   88          | . ENUM IDENTIFIER MULTI
   89 simple_type: . INT
   90            | . CHAR
   91            | . ID
   92            | . FLOAT
   93            | . NSSTRING
   94            | . VOID
   95            | . BOOL
   96 complex_type: . IDENTIFIER MULTI
  139 block_body: . block_body_header block_body_statements
  140 block_body_header: . OPEN_S
  146 statement: . loop_statement
  147          | . conditional_statement
  148          | . assign_expr SEMI_COMA
  149          | . variable_declaration_block
  150          | . block_body
  151          | . return_statement
  152          | . try_catch
  153          | . asm
  154          | . long_id SEMI_COMA
  155          | . throw_statement
  156          | . error SEMI_COMA
  157 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  158 asm: . AT_ASM STRING_VAL SEMI_COMA
  159 variable_declaration_block: . type variable_list SEMI_COMA
  160                           | . CONST type variable_list SEMI_COMA
  161                           | . enum
  168 return_statement: . RETURN expr SEMI_COMA
  169 loop_statement: . for_loop
  170               | . while_loop
  171               | . do_while
  172 do_while: . do_header statement while_loop_header SEMI_COMA
  173 do_header: . DO
  174 for_loop: . for_loop_header statement
  175 for_loop_header: . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  177                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  178                | . FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  179                | . FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  180                | . FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  181                | . FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  182                | . FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR
  236 while_loop: . while_loop_header statement
  237 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  238 conditional_statement: . if_header statement
  239                      | . if_header statement ELSE statement
  240                      | . switch_header switch_body
  241 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  242 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  250 case_body: CASE expr SEMI_COLUMN . statement BREAK SEMI_COMA
  251          | CASE expr SEMI_COLUMN . statement
  252          | CASE expr SEMI_COLUMN . BREAK SEMI_COMA
  262 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  263     | . ENUM IDENTIFIER SEMI_COMA
  268 try_catch: . TRY statement catch_list finally_statement
  269          | . TRY statement catch_list

    error       shift, and go to state 265
    IDENTIFIER  shift, and go to state 170
    NSSTRING    shift, and go to state 62
    FLOAT       shift, and go to state 63
    CHAR        shift, and go to state 64
    BOOL        shift, and go to state 65
    INT         shift, and go to state 66
    ID          shift, and go to state 67
    OPEN_S      shift, and go to state 116
    CONST       shift, and go to state 172
    VOID        shift, and go to state 73
    FOR         shift, and go to state 173
    WHILE       shift, and go to state 174
    IF          shift, and go to state 175
    DO          shift, and go to state 176
    SWITCH      shift, and go to state 177
    BREAK       shift, and go to state 453
    ENUM        shift, and go to state 178
    OPEN_ARR    shift, and go to state 179
    RETURN      shift, and go to state 180
    STRUCT      shift, and go to state 75
    TRY         shift, and go to state 181
    THROW       shift, and go to state 182
    AT_ASM      shift, and go to state 183

    type                        go to state 184
    struct_type                 go to state 82
    enum_type                   go to state 83
    simple_type                 go to state 84
    complex_type                go to state 85
    block_body                  go to state 185
    block_body_header           go to state 118
    statement                   go to state 454
    throw_statement             go to state 189
    asm                         go to state 190
    variable_declaration_block  go to state 191
    return_statement            go to state 192
    loop_statement              go to state 193
    do_while                    go to state 194
    do_header                   go to state 195
    for_loop                    go to state 196
    for_loop_header             go to state 197
    assign_expr                 go to state 198
    long_id                     go to state 199
    array_access                go to state 200
    message_call2               go to state 201
    message_call                go to state 202
    while_loop                  go to state 203
    while_loop_header           go to state 204
    conditional_statement       go to state 205
    if_header                   go to state 206
    switch_header               go to state 207
    enum                        go to state 208
    try_catch                   go to state 209


State 421

  255 default_case: DEFAULT SEMI_COLUMN BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 455


State 422

  253 default_case: DEFAULT SEMI_COLUMN statement . BREAK SEMI_COMA
  254             | DEFAULT SEMI_COLUMN statement .  [CLOSE_S]

    BREAK  shift, and go to state 456

    $default  reduce using rule 254 (default_case)


State 423

  244 switch_body: list_of_case default_case CLOSE_S .

    $default  reduce using rule 244 (switch_body)


State 424

  264 list_expr: IDENTIFIER EQUAL expr COMMA list_expr .

    $default  reduce using rule 264 (list_expr)


State 425

  100 array_tag_list: array_tag_list OPEN_ARR error . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 457


State 426

   98 array_tag_list: array_tag_list OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 458


State 427

  184 for_initializer: IDENTIFIER EQUAL expr .

    $default  reduce using rule 184 (for_initializer)


State 428

  115 p_type: . OPEN_P type CLOSE_P
  183 for_initializer: INT IDENTIFIER EQUAL . expr
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 459
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 429

  182 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 182 (for_loop_header)


State 430

  181 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 460


State 431

  115 p_type: . OPEN_P type CLOSE_P
  176 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA . expr CLOSE_P
  180                | FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA . CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    CLOSE_P      shift, and go to state 461
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 462
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 432

  115 p_type: . OPEN_P type CLOSE_P
  177 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . expr CLOSE_P
  179                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    CLOSE_P      shift, and go to state 463
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 464
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 433

  175 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr1 . SEMI_COMA expr CLOSE_P
  178                | FOR OPEN_P for_initializer SEMI_COMA logic_expr1 . SEMI_COMA CLOSE_P
  186 logic_expr1: logic_expr1 . AND_AND logic_expr
  187            | logic_expr1 . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 465
    AND_AND    shift, and go to state 385
    OR_OR      shift, and go to state 386


State 434

  196 logic_expr: OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 196 (logic_expr)


State 435

  186 logic_expr1: logic_expr1 AND_AND logic_expr .

    $default  reduce using rule 186 (logic_expr1)


State 436

  187 logic_expr1: logic_expr1 OR_OR logic_expr .

    $default  reduce using rule 187 (logic_expr1)


State 437

  189 logic_expr: expr LESS_THAN expr .

    $default  reduce using rule 189 (logic_expr)


State 438

  190 logic_expr: expr MORE_THAN expr .

    $default  reduce using rule 190 (logic_expr)


State 439

  191 logic_expr: expr LESS_OR_EQUAL expr .

    $default  reduce using rule 191 (logic_expr)


State 440

  192 logic_expr: expr MORE_OR_EQUAL expr .

    $default  reduce using rule 192 (logic_expr)


State 441

  193 logic_expr: expr EQUAL_EQUAL expr .

    $default  reduce using rule 193 (logic_expr)


State 442

  194 logic_expr: expr NOT_EQUAL expr .

    $default  reduce using rule 194 (logic_expr)


State 443

  243 switch_body_block: OPEN_S .

    $default  reduce using rule 243 (switch_body_block)


State 444

  242 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block .

    $default  reduce using rule 242 (switch_header)


State 445

  273 one_catch_header: CATCH OPEN_P type . IDENTIFIER CLOSE_P

    IDENTIFIER  shift, and go to state 466


State 446

  274 finally_statement: FINALLY statement .

    $default  reduce using rule 274 (finally_statement)


State 447

  157 throw_statement: THROW OPEN_P message_call CLOSE_P SEMI_COMA .

    $default  reduce using rule 157 (throw_statement)


State 448

   36 array_body: OPEN_S . array_ele CLOSE_S
   37           | OPEN_S . CLOSE_S
   38 array_ele: . expr COMMA array_ele
   39          | . expr
   40          | . OPEN_S CLOSE_S
   41          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | . OPEN_S array_ele CLOSE_S
   43          | . OPEN_S CLOSE_S COMMA array_ele
  115 p_type: . OPEN_P type CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_S       shift, and go to state 467
    CLOSE_S      shift, and go to state 468
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    array_ele      go to state 469
    p_type         go to state 260
    expr           go to state 470
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 449

  103 initializer: EQUAL array_body .

    $default  reduce using rule 103 (initializer)


State 450

  235 argument: expr .

    $default  reduce using rule 235 (argument)


State 451

  232 message_selector: IDENTIFIER SEMI_COLUMN argument_list .  [IDENTIFIER, CLOSE_ARR]
  233 argument_list: argument_list . SEMI_COLUMN argument

    SEMI_COLUMN  shift, and go to state 471

    $default  reduce using rule 232 (message_selector)


State 452

  234 argument_list: argument .

    $default  reduce using rule 234 (argument_list)


State 453

  252 case_body: CASE expr SEMI_COLUMN BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 472


State 454

  250 case_body: CASE expr SEMI_COLUMN statement . BREAK SEMI_COMA
  251          | CASE expr SEMI_COLUMN statement .  [CLOSE_S, CASE, DEFAULT]

    BREAK  shift, and go to state 473

    $default  reduce using rule 251 (case_body)


State 455

  255 default_case: DEFAULT SEMI_COLUMN BREAK SEMI_COMA .

    $default  reduce using rule 255 (default_case)


State 456

  253 default_case: DEFAULT SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 474


State 457

  100 array_tag_list: array_tag_list OPEN_ARR error CLOSE_ARR .

    $default  reduce using rule 100 (array_tag_list)


State 458

   98 array_tag_list: array_tag_list OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 98 (array_tag_list)


State 459

  183 for_initializer: INT IDENTIFIER EQUAL expr .

    $default  reduce using rule 183 (for_initializer)


State 460

  181 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 181 (for_loop_header)


State 461

  180 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P .

    $default  reduce using rule 180 (for_loop_header)


State 462

  176 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 475


State 463

  179 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 179 (for_loop_header)


State 464

  177 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 476


State 465

  115 p_type: . OPEN_P type CLOSE_P
  175 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA . expr CLOSE_P
  178                | FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA . CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    CLOSE_P      shift, and go to state 477
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 478
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 466

  273 one_catch_header: CATCH OPEN_P type IDENTIFIER . CLOSE_P

    CLOSE_P  shift, and go to state 479


State 467

   38 array_ele: . expr COMMA array_ele
   39          | . expr
   40          | . OPEN_S CLOSE_S
   40          | OPEN_S . CLOSE_S
   41          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   41          | OPEN_S . array_ele CLOSE_S COMMA array_ele
   42          | . OPEN_S array_ele CLOSE_S
   42          | OPEN_S . array_ele CLOSE_S
   43          | . OPEN_S CLOSE_S COMMA array_ele
   43          | OPEN_S . CLOSE_S COMMA array_ele
  115 p_type: . OPEN_P type CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_S       shift, and go to state 467
    CLOSE_S      shift, and go to state 480
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    array_ele      go to state 481
    p_type         go to state 260
    expr           go to state 470
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 468

   37 array_body: OPEN_S CLOSE_S .

    $default  reduce using rule 37 (array_body)


State 469

   36 array_body: OPEN_S array_ele . CLOSE_S

    CLOSE_S  shift, and go to state 482


State 470

   38 array_ele: expr . COMMA array_ele
   39          | expr .  [CLOSE_S]

    COMMA  shift, and go to state 483

    $default  reduce using rule 39 (array_ele)


State 471

  115 p_type: . OPEN_P type CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR
  233 argument_list: argument_list SEMI_COLUMN . argument
  235 argument: . expr

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    p_type         go to state 260
    expr           go to state 450
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202
    argument       go to state 484


State 472

  252 case_body: CASE expr SEMI_COLUMN BREAK SEMI_COMA .

    $default  reduce using rule 252 (case_body)


State 473

  250 case_body: CASE expr SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 485


State 474

  253 default_case: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 253 (default_case)


State 475

  176 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 176 (for_loop_header)


State 476

  177 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 177 (for_loop_header)


State 477

  178 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P .

    $default  reduce using rule 178 (for_loop_header)


State 478

  175 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 486


State 479

  273 one_catch_header: CATCH OPEN_P type IDENTIFIER CLOSE_P .

    $default  reduce using rule 273 (one_catch_header)


State 480

   40 array_ele: OPEN_S CLOSE_S .  [CLOSE_S]
   43          | OPEN_S CLOSE_S . COMMA array_ele

    COMMA  shift, and go to state 487

    $default  reduce using rule 40 (array_ele)


State 481

   41 array_ele: OPEN_S array_ele . CLOSE_S COMMA array_ele
   42          | OPEN_S array_ele . CLOSE_S

    CLOSE_S  shift, and go to state 488


State 482

   36 array_body: OPEN_S array_ele CLOSE_S .

    $default  reduce using rule 36 (array_body)


State 483

   38 array_ele: . expr COMMA array_ele
   38          | expr COMMA . array_ele
   39          | . expr
   40          | . OPEN_S CLOSE_S
   41          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | . OPEN_S array_ele CLOSE_S
   43          | . OPEN_S CLOSE_S COMMA array_ele
  115 p_type: . OPEN_P type CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_S       shift, and go to state 467
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    array_ele      go to state 489
    p_type         go to state 260
    expr           go to state 470
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 484

  233 argument_list: argument_list SEMI_COLUMN argument .

    $default  reduce using rule 233 (argument_list)


State 485

  250 case_body: CASE expr SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 250 (case_body)


State 486

  175 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 175 (for_loop_header)


State 487

   38 array_ele: . expr COMMA array_ele
   39          | . expr
   40          | . OPEN_S CLOSE_S
   41          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | . OPEN_S array_ele CLOSE_S
   43          | . OPEN_S CLOSE_S COMMA array_ele
   43          | OPEN_S CLOSE_S COMMA . array_ele
  115 p_type: . OPEN_P type CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_S       shift, and go to state 467
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    array_ele      go to state 490
    p_type         go to state 260
    expr           go to state 470
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 488

   41 array_ele: OPEN_S array_ele CLOSE_S . COMMA array_ele
   42          | OPEN_S array_ele CLOSE_S .  [CLOSE_S]

    COMMA  shift, and go to state 491

    $default  reduce using rule 42 (array_ele)


State 489

   38 array_ele: expr COMMA array_ele .

    $default  reduce using rule 38 (array_ele)


State 490

   43 array_ele: OPEN_S CLOSE_S COMMA array_ele .

    $default  reduce using rule 43 (array_ele)


State 491

   38 array_ele: . expr COMMA array_ele
   39          | . expr
   40          | . OPEN_S CLOSE_S
   41          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   41          | OPEN_S array_ele CLOSE_S COMMA . array_ele
   42          | . OPEN_S array_ele CLOSE_S
   43          | . OPEN_S CLOSE_S COMMA array_ele
  115 p_type: . OPEN_P type CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . FLOAT_VAL
  211            | . CHAR_VAL
  212            | . long_id
  213            | . simple_expr PLUS simple_expr
  214            | . simple_expr MINUS simple_expr
  215            | . simple_expr MULTI simple_expr
  216            | . simple_expr DIV simple_expr
  217            | . simple_expr DIV_R simple_expr
  218            | . OPEN_P simple_expr CLOSE_P
  219            | . IDENTIFIER DOUBLEPLUS
  220            | . IDENTIFIER DOUBLEMINUS
  221            | . DOUBLEPLUS IDENTIFIER
  222            | . DOUBLEMINUS IDENTIFIER
  223            | . p_type simple_expr
  224 message_call2: . OPEN_ARR
  225 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_S       shift, and go to state 467
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 179
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259

    array_ele      go to state 492
    p_type         go to state 260
    expr           go to state 470
    assign_expr    go to state 262
    long_id        go to state 263
    array_access   go to state 200
    simple_expr    go to state 264
    message_call2  go to state 201
    message_call   go to state 202


State 492

   41 array_ele: OPEN_S array_ele CLOSE_S COMMA array_ele .

    $default  reduce using rule 41 (array_ele)
