Terminals unused in grammar

   SELF
   expr_1


State 326 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: components

    2 components: components component
    3           | component
    4           | IMPORT STRING_VAL SEMI_COMA

    5 component: class_interface
    6          | class_implementation
    7          | protocol
    8          | struct
    9          | enum

   10 class_interface: class_interface_header class_interface_body

   11 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
   12                       | AT_INTERFACE IDENTIFIER
   13                       | AT_INTERFACE error
   14                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN error

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END
   16                     | protocol_reference_list instance_variables AT_END
   17                     | protocol_reference_list interface_declaration_list AT_END
   18                     | instance_variables interface_declaration_list AT_END
   19                     | protocol_reference_list AT_END
   20                     | instance_variables AT_END
   21                     | interface_declaration_list AT_END
   22                     | AT_END
   23                     | protocol_reference_list error AT_END
   24                     | protocol_reference_list error interface_declaration_list AT_END
   25                     | protocol_reference_list error
   26                     | protocol_reference_list instance_variables interface_declaration_list error
   27                     | protocol_reference_list instance_variables error
   28                     | protocol_reference_list interface_declaration_list error
   29                     | instance_variables interface_declaration_list error
   30                     | instance_variables error
   31                     | interface_declaration_list error

   32 protocol_reference_list: LESS_THAN ids_list_identifier MORE_THAN
   33                        | LESS_THAN ids_list_identifier error

   34 ids_list_identifier: ids_list_identifier COMMA IDENTIFIER
   35                    | IDENTIFIER

   36 array_body: OPEN_S array_ele CLOSE_S
   37           | OPEN_S CLOSE_S

   38 array_ele: expr COMMA array_ele
   39          | expr
   40          | OPEN_S CLOSE_S
   41          | OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | OPEN_S array_ele CLOSE_S
   43          | OPEN_S CLOSE_S COMMA array_ele

   44 instance_variables: OPEN_S instance_variable_declarations CLOSE_S
   45                   | OPEN_S CLOSE_S

   46 instance_variable_declarations: instance_variable_declarations instance_variable_declaration
   47                               | instance_variable_declaration

   48 instance_variable_declaration: visibility_specification variable_declaration_list

   49 variable_declaration_list: variable_declaration_list variable_declarationxx
   50                          | variable_declarationxx

   51 visibility_specification: AT_PRIVATE
   52                         | AT_PROTECTED
   53                         | AT_PUBLIC

   54 struct_variable_declaration: struct_declaration_list

   55 variable_declarationxx: type ids_list SEMI_COMA
   56                       | CONST type ids_list SEMI_COMA
   57                       | type IDENTIFIER array_tag error

   58 ids_list: ids_list COMMA data_member
   59         | data_member
   60         | error

   61 data_member: IDENTIFIER array_tag
   62            | IDENTIFIER
   63            | error array_tag
   64            | IDENTIFIER error

   65 struct_declaration_list: struct_declaration_list variable_declarationxx
   66                        | variable_declarationxx
   67                        | error variable_declarationxx

   68 struct_header: STRUCT IDENTIFIER

   69 struct: struct_header OPEN_S CLOSE_S entity SEMI_COMA
   70       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   71       | struct_header OPEN_S CLOSE_S SEMI_COMA
   72       | struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   73       | struct_header OPEN_S CLOSE_S entity error SEMI_COMA
   74       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   75       | struct_header OPEN_S CLOSE_S error SEMI_COMA
   76       | struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA

   77 entity: IDENTIFIER COMMA entity
   78       | IDENTIFIER
   79       | error COMMA

   80 type: simple_type
   81     | complex_type
   82     | struct_type
   83     | enum_type

   84 struct_type: STRUCT IDENTIFIER
   85            | STRUCT IDENTIFIER MULTI

   86 enum_type: ENUM IDENTIFIER
   87          | ENUM IDENTIFIER MULTI

   88 simple_type: INT
   89            | CHAR
   90            | ID
   91            | FLOAT
   92            | NSSTRING
   93            | VOID
   94            | BOOL

   95 complex_type: IDENTIFIER MULTI

   96 array_tag: array_first_tag array_tag_list

   97 array_tag_list: array_tag_list OPEN_ARR INT_VAL CLOSE_ARR
   98               | %empty
   99               | array_tag_list OPEN_ARR error CLOSE_ARR

  100 array_first_tag: OPEN_ARR INT_VAL CLOSE_ARR
  101                | OPEN_ARR CLOSE_ARR

  102 initializer: EQUAL array_body
  103            | %empty

  104 main_initializer: EQUAL expr
  105                 | %empty

  106 interface_declaration_list: interface_declaration_list interface_declaration
  107                           | interface_declaration

  108 interface_declaration: class_method_declaration
  109                      | instance_method_declaration

  110 class_method_declaration: PLUS p_type method_selectors SEMI_COMA
  111                         | PLUS p_type method_selectors error
  112                         | PLUS method_selectors error

  113 instance_method_declaration: MINUS p_type method_selectors SEMI_COMA

  114 p_type: OPEN_P type CLOSE_P

  115 method_selectors: selectors_list
  116                 | IDENTIFIER

  117 selectors_list: selectors_list selector_decleration
  118               | selector_decleration

  119 selector_decleration: IDENTIFIER SEMI_COLUMN parameter_list

  120 parameter_list: parameter_list SEMI_COLUMN parameter
  121               | parameter

  122 parameter: p_type IDENTIFIER

  123 class_implementation: class_implementation_header class_implementation_body

  124 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  125                            | AT_IMPLEMENTATION IDENTIFIER

  126 class_implementation_body: instance_variables implementation_definition_list AT_END
  127                          | instance_variables AT_END
  128                          | implementation_definition_list AT_END
  129                          | AT_END

  130 implementation_definition_list: implementation_definition_list implementation_definition
  131                               | implementation_definition

  132 implementation_definition: class_implementation_definition
  133                          | instance_implementation_definition

  134 class_implementation_definition: class_implementation_definition_header block_body

  135 class_implementation_definition_header: PLUS p_type method_selectors

  136 instance_implementation_definition: instance_implementation_definition_header block_body

  137 instance_implementation_definition_header: MINUS p_type method_selectors

  138 block_body: block_body_header block_body_statements

  139 block_body_header: OPEN_S

  140 block_body_statements: statement_list CLOSE_S
  141                      | CLOSE_S
  142                      | error CLOSE_S

  143 statement_list: statement_list statement
  144               | statement

  145 statement: loop_statement
  146          | conditional_statement
  147          | assign_expr SEMI_COMA
  148          | variable_declaration_block
  149          | block_body
  150          | return_statement
  151          | try_catch
  152          | asm
  153          | long_id SEMI_COMA
  154          | throw_statement
  155          | error SEMI_COMA

  156 throw_statement: THROW OPEN_P message_call CLOSE_P SEMI_COMA

  157 asm: AT_ASM STRING_VAL SEMI_COMA

  158 variable_declaration_block: type variable_list SEMI_COMA
  159                           | CONST type variable_list SEMI_COMA
  160                           | enum

  161 variable_list: variable_list COMMA variable
  162              | variable
  163              | variable_list error variable

  164 variable: IDENTIFIER array_tag initializer
  165         | IDENTIFIER main_initializer
  166         | error array_tag initializer

  167 return_statement: RETURN expr SEMI_COMA

  168 loop_statement: for_loop
  169               | while_loop
  170               | do_while

  171 do_while: do_header statement while_loop_header SEMI_COMA

  172 do_header: DO

  173 for_loop: for_loop_header statement

  174 for_loop_header: fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  175                | fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  178                | fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  179                | fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  180                | fOR_OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  181                | fOR_OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

  182 fOR_OPEN_P: FOR OPEN_P

  183 for_initializer: INT IDENTIFIER EQUAL expr
  184                | IDENTIFIER EQUAL expr
  185                | IDENTIFIER

  186 logic_expr1: logic_expr1 AND_AND logic_expr
  187            | logic_expr1 OR_OR logic_expr
  188            | logic_expr

  189 logic_expr: expr LESS_THAN expr
  190           | expr MORE_THAN expr
  191           | expr LESS_OR_EQUAL expr
  192           | expr MORE_OR_EQUAL expr
  193           | expr EQUAL_EQUAL expr
  194           | expr NOT_EQUAL expr
  195           | NOT_EQUAL expr
  196           | OPEN_P logic_expr CLOSE_P
  197           | TRUE
  198           | FALSE
  199           | long_id

  200 expr: assign_expr
  201     | simple_expr

  202 assign_expr: long_id EQUAL simple_expr

  203 long_id: long_id DOT IDENTIFIER
  204        | message_call
  205        | IDENTIFIER
  206        | array_access

  207 array_access: long_id OPEN_ARR simple_expr CLOSE_ARR

  208 simple_expr: STRING_VAL
  209            | INT_VAL
  210            | NULL_TOK
  211            | FLOAT_VAL
  212            | CHAR_VAL
  213            | long_id
  214            | simple_expr PLUS simple_expr
  215            | simple_expr MINUS simple_expr
  216            | simple_expr MULTI simple_expr
  217            | simple_expr DIV simple_expr
  218            | simple_expr DIV_R simple_expr
  219            | OPEN_P simple_expr CLOSE_P
  220            | IDENTIFIER DOUBLEPLUS
  221            | IDENTIFIER DOUBLEMINUS
  222            | DOUBLEPLUS IDENTIFIER
  223            | DOUBLEMINUS IDENTIFIER
  224            | p_type simple_expr

  225 message_call2: OPEN_ARR

  226 message_call: message_call2 sender message CLOSE_ARR

  227 sender: message_call
  228       | IDENTIFIER

  229 message: IDENTIFIER
  230        | message_selectors_list

  231 message_selectors_list: message_selectors_list message_selector
  232                       | message_selector

  233 message_selector: IDENTIFIER SEMI_COLUMN argument_list

  234 argument_list: argument_list SEMI_COLUMN argument
  235              | argument

  236 argument: expr

  237 while_loop: while_loop_header statement

  238 while_loop_header: WHILE OPEN_P logic_expr1 CLOSE_P

  239 conditional_statement: if_header statement
  240                      | if_header statement ELSE statement
  241                      | switch_header switch_body

  242 if_header: IF OPEN_P logic_expr1 CLOSE_P

  243 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block

  244 switch_body_block: OPEN_S

  245 switch_body: list_of_case default_case CLOSE_S
  246            | list_of_case CLOSE_S
  247            | default_case CLOSE_S
  248            | CLOSE_S

  249 list_of_case: list_of_case case_body
  250             | case_body

  251 case_body: CASE expr SEMI_COLUMN statement BREAK SEMI_COMA
  252          | CASE expr SEMI_COLUMN statement
  253          | CASE expr SEMI_COLUMN BREAK SEMI_COMA

  254 default_case: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  255             | DEFAULT SEMI_COLUMN statement
  256             | DEFAULT SEMI_COLUMN BREAK SEMI_COMA

  257 protocol: protocol_header protocol_body

  258 protocol_header: AT_PROTOCOL IDENTIFIER

  259 protocol_body: protocol_reference_list interface_declaration_list AT_END
  260              | interface_declaration_list AT_END
  261              | protocol_reference_list AT_END
  262              | AT_END

  263 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  264     | ENUM IDENTIFIER SEMI_COMA

  265 list_expr: IDENTIFIER EQUAL expr COMMA list_expr
  266          | IDENTIFIER EQUAL expr
  267          | IDENTIFIER
  268          | IDENTIFIER COMMA list_expr

  269 try_catch: TRY statement catch_list finally_statement
  270          | TRY statement catch_list

  271 catch_list: one_catch
  272           | catch_list one_catch

  273 one_catch: one_catch_header statement

  274 one_catch_header: CATCH OPEN_P type IDENTIFIER CLOSE_P

  275 finally_statement: FINALLY statement


Terminals, with rules where they appear

$end (0) 0
error (256) 13 14 23 24 25 26 27 28 29 30 31 33 57 60 63 64 67 73 74
    75 76 79 99 111 112 142 155 163 166
AT_INTERFACE (258) 11 12 13 14
IDENTIFIER (259) 11 12 14 34 35 57 61 62 64 68 77 78 84 85 86 87 95
    116 119 122 124 125 164 165 183 184 185 203 205 220 221 222 223
    228 229 233 243 258 263 264 265 266 267 268 274
SEMI_COLUMN (260) 11 14 119 120 124 233 234 251 252 253 254 255 256
NSSTRING (261) 92
FLOAT (262) 91
CHAR (263) 89
BOOL (264) 94
INT (265) 88 183
SEMI_COMA (266) 4 55 56 69 70 71 72 73 74 75 76 110 113 147 153 155
    156 157 158 159 167 171 174 175 176 177 178 179 180 181 251 253
    254 256 263 264
ID (267) 90
AT_PUBLIC (268) 53
AT_PROTECTED (269) 52
AT_PRIVATE (270) 51
OPEN_S (271) 36 37 40 41 42 43 44 45 69 70 71 72 73 74 75 76 139 244
    263
CLOSE_S (272) 36 37 40 41 42 43 44 45 69 70 71 72 73 74 75 76 140 141
    142 245 246 247 248 263
COMMA (273) 34 38 41 43 58 77 79 161 265 268
LESS_THAN (274) 32 33 189
MORE_THAN (275) 32 190
AT_END (276) 15 16 17 18 19 20 21 22 23 24 126 127 128 129 259 260
    261 262
CONST (277) 56 159
VOID (278) 93
PLUS (279) 110 111 112 135 214
MINUS (280) 113 137 215
OPEN_P (281) 114 156 182 196 219 238 242 243 274
CLOSE_P (282) 114 156 174 175 176 177 178 179 180 181 196 219 238 242
    243 274
AT_IMPLEMENTATION (283) 124 125
AND_AND (284) 186
OR_OR (285) 187
STRING_VAL (286) 4 157 208
FLOAT_VAL (287) 211
LESS_OR_EQUAL (288) 191
CHAR_VAL (289) 212
INT_VAL (290) 97 100 209
MORE_OR_EQUAL (291) 192
MULTI (292) 85 87 95 216
EQUAL_EQUAL (293) 193
NOT_EQUAL (294) 194 195
FOR (295) 182
EQUAL (296) 102 104 183 184 202 265 266
DIV (297) 217
DIV_R (298) 218
WHILE (299) 238
IF (300) 242
DO (301) 172
SWITCH (302) 243
CASE (303) 251 252 253
DEFAULT (304) 254 255 256
BREAK (305) 251 253 254 256
ENUM (306) 86 87 263 264
OPEN_ARR (307) 97 99 100 101 207 225
CLOSE_ARR (308) 97 99 100 101 207 226
TRUE (309) 197
FALSE (310) 198
RETURN (311) 167
AT_PROTOCOL (312) 258
ELSE (313) 240
STRUCT (314) 68 84 85
DOT (315) 203
DOUBLEPLUS (316) 220 222
DOUBLEMINUS (317) 221 223
TRY (318) 269 270
CATCH (319) 274
THROW (320) 156
FINALLY (321) 275
AT_ASM (322) 157
SELF (323)
IMPORT (324) 4
NULL_TOK (325) 210
if_h (326)
expr_1 (327)
p_type_expr_prec (328)
long_id_prec (329)
try_prec (330)


Nonterminals, with rules where they appear

$accept (76)
    on left: 0
program (77)
    on left: 1, on right: 0
components (78)
    on left: 2 3 4, on right: 1 2
component (79)
    on left: 5 6 7 8 9, on right: 2 3
class_interface (80)
    on left: 10, on right: 5
class_interface_header (81)
    on left: 11 12 13 14, on right: 10
class_interface_body (82)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31, on right:
    10
protocol_reference_list (83)
    on left: 32 33, on right: 15 16 17 19 23 24 25 26 27 28 259 261
ids_list_identifier (84)
    on left: 34 35, on right: 32 33 34
array_body (85)
    on left: 36 37, on right: 102
array_ele (86)
    on left: 38 39 40 41 42 43, on right: 36 38 41 42 43
instance_variables (87)
    on left: 44 45, on right: 15 16 18 20 26 27 29 30 126 127
instance_variable_declarations (88)
    on left: 46 47, on right: 44 46
instance_variable_declaration (89)
    on left: 48, on right: 46 47
variable_declaration_list (90)
    on left: 49 50, on right: 48 49
visibility_specification (91)
    on left: 51 52 53, on right: 48
struct_variable_declaration (92)
    on left: 54, on right: 70 72 74 76
variable_declarationxx (93)
    on left: 55 56 57, on right: 49 50 65 66 67
ids_list (94)
    on left: 58 59 60, on right: 55 56 58
data_member (95)
    on left: 61 62 63 64, on right: 58 59
struct_declaration_list (96)
    on left: 65 66 67, on right: 54 65
struct_header (97)
    on left: 68, on right: 69 70 71 72 73 74 75 76
struct (98)
    on left: 69 70 71 72 73 74 75 76, on right: 8
entity (99)
    on left: 77 78 79, on right: 69 70 73 74 77
type (100)
    on left: 80 81 82 83, on right: 55 56 57 114 158 159 274
struct_type (101)
    on left: 84 85, on right: 82
enum_type (102)
    on left: 86 87, on right: 83
simple_type (103)
    on left: 88 89 90 91 92 93 94, on right: 80
complex_type (104)
    on left: 95, on right: 81
array_tag (105)
    on left: 96, on right: 57 61 63 164 166
array_tag_list (106)
    on left: 97 98 99, on right: 96 97 99
array_first_tag (107)
    on left: 100 101, on right: 96
initializer (108)
    on left: 102 103, on right: 164 166
main_initializer (109)
    on left: 104 105, on right: 165
interface_declaration_list (110)
    on left: 106 107, on right: 15 17 18 21 24 26 28 29 31 106 259
    260
interface_declaration (111)
    on left: 108 109, on right: 106 107
class_method_declaration (112)
    on left: 110 111 112, on right: 108
instance_method_declaration (113)
    on left: 113, on right: 109
p_type (114)
    on left: 114, on right: 110 111 113 122 135 137 224
method_selectors (115)
    on left: 115 116, on right: 110 111 112 113 135 137
selectors_list (116)
    on left: 117 118, on right: 115 117
selector_decleration (117)
    on left: 119, on right: 117 118
parameter_list (118)
    on left: 120 121, on right: 119 120
parameter (119)
    on left: 122, on right: 120 121
class_implementation (120)
    on left: 123, on right: 6
class_implementation_header (121)
    on left: 124 125, on right: 123
class_implementation_body (122)
    on left: 126 127 128 129, on right: 123
implementation_definition_list (123)
    on left: 130 131, on right: 126 128 130
implementation_definition (124)
    on left: 132 133, on right: 130 131
class_implementation_definition (125)
    on left: 134, on right: 132
class_implementation_definition_header (126)
    on left: 135, on right: 134
instance_implementation_definition (127)
    on left: 136, on right: 133
instance_implementation_definition_header (128)
    on left: 137, on right: 136
block_body (129)
    on left: 138, on right: 134 136 149
block_body_header (130)
    on left: 139, on right: 138
block_body_statements (131)
    on left: 140 141 142, on right: 138
statement_list (132)
    on left: 143 144, on right: 140 143
statement (133)
    on left: 145 146 147 148 149 150 151 152 153 154 155, on right:
    143 144 171 173 237 239 240 251 252 254 255 269 270 273 275
throw_statement (134)
    on left: 156, on right: 154
asm (135)
    on left: 157, on right: 152
variable_declaration_block (136)
    on left: 158 159 160, on right: 148
variable_list (137)
    on left: 161 162 163, on right: 158 159 161 163
variable (138)
    on left: 164 165 166, on right: 161 162 163
return_statement (139)
    on left: 167, on right: 150
loop_statement (140)
    on left: 168 169 170, on right: 145
do_while (141)
    on left: 171, on right: 170
do_header (142)
    on left: 172, on right: 171
for_loop (143)
    on left: 173, on right: 168
for_loop_header (144)
    on left: 174 175 176 177 178 179 180 181, on right: 173
fOR_OPEN_P (145)
    on left: 182, on right: 174 175 176 177 178 179 180 181
for_initializer (146)
    on left: 183 184 185, on right: 174 176 177 178
logic_expr1 (147)
    on left: 186 187 188, on right: 174 175 177 179 186 187 238 242
logic_expr (148)
    on left: 189 190 191 192 193 194 195 196 197 198 199, on right:
    186 187 188 196
expr (149)
    on left: 200 201, on right: 38 39 104 167 174 175 176 180 183 184
    189 190 191 192 193 194 195 236 251 252 253 265 266
assign_expr (150)
    on left: 202, on right: 147 200
long_id (151)
    on left: 203 204 205 206, on right: 153 199 202 203 207 213
array_access (152)
    on left: 207, on right: 206
simple_expr (153)
    on left: 208 209 210 211 212 213 214 215 216 217 218 219 220 221
    222 223 224, on right: 201 202 207 214 215 216 217 218 219 224
message_call2 (154)
    on left: 225, on right: 226
message_call (155)
    on left: 226, on right: 156 204 227
sender (156)
    on left: 227 228, on right: 226
message (157)
    on left: 229 230, on right: 226
message_selectors_list (158)
    on left: 231 232, on right: 230 231
message_selector (159)
    on left: 233, on right: 231 232
argument_list (160)
    on left: 234 235, on right: 233 234
argument (161)
    on left: 236, on right: 234 235
while_loop (162)
    on left: 237, on right: 169
while_loop_header (163)
    on left: 238, on right: 171 237
conditional_statement (164)
    on left: 239 240 241, on right: 146
if_header (165)
    on left: 242, on right: 239 240
switch_header (166)
    on left: 243, on right: 241
switch_body_block (167)
    on left: 244, on right: 243
switch_body (168)
    on left: 245 246 247 248, on right: 241
list_of_case (169)
    on left: 249 250, on right: 245 246 249
case_body (170)
    on left: 251 252 253, on right: 249 250
default_case (171)
    on left: 254 255 256, on right: 245 247
protocol (172)
    on left: 257, on right: 7
protocol_header (173)
    on left: 258, on right: 257
protocol_body (174)
    on left: 259 260 261 262, on right: 257
enum (175)
    on left: 263 264, on right: 9 160
list_expr (176)
    on left: 265 266 267 268, on right: 263 265 268
try_catch (177)
    on left: 269 270, on right: 151
catch_list (178)
    on left: 271 272, on right: 269 270 272
one_catch (179)
    on left: 273, on right: 271 272
one_catch_header (180)
    on left: 274, on right: 273
finally_statement (181)
    on left: 275, on right: 269


State 0

    0 $accept: . program $end
    1 program: . components
    2 components: . components component
    3           | . component
    4           | . IMPORT STRING_VAL SEMI_COMA
    5 component: . class_interface
    6          | . class_implementation
    7          | . protocol
    8          | . struct
    9          | . enum
   10 class_interface: . class_interface_header class_interface_body
   11 class_interface_header: . AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
   12                       | . AT_INTERFACE IDENTIFIER
   13                       | . AT_INTERFACE error
   14                       | . AT_INTERFACE IDENTIFIER SEMI_COLUMN error
   68 struct_header: . STRUCT IDENTIFIER
   69 struct: . struct_header OPEN_S CLOSE_S entity SEMI_COMA
   70       | . struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   71       | . struct_header OPEN_S CLOSE_S SEMI_COMA
   72       | . struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   73       | . struct_header OPEN_S CLOSE_S entity error SEMI_COMA
   74       | . struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   75       | . struct_header OPEN_S CLOSE_S error SEMI_COMA
   76       | . struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA
  123 class_implementation: . class_implementation_header class_implementation_body
  124 class_implementation_header: . AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  125                            | . AT_IMPLEMENTATION IDENTIFIER
  257 protocol: . protocol_header protocol_body
  258 protocol_header: . AT_PROTOCOL IDENTIFIER
  263 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  264     | . ENUM IDENTIFIER SEMI_COMA

    AT_INTERFACE       shift, and go to state 1
    AT_IMPLEMENTATION  shift, and go to state 2
    ENUM               shift, and go to state 3
    AT_PROTOCOL        shift, and go to state 4
    STRUCT             shift, and go to state 5
    IMPORT             shift, and go to state 6

    program                      go to state 7
    components                   go to state 8
    component                    go to state 9
    class_interface              go to state 10
    class_interface_header       go to state 11
    struct_header                go to state 12
    struct                       go to state 13
    class_implementation         go to state 14
    class_implementation_header  go to state 15
    protocol                     go to state 16
    protocol_header              go to state 17
    enum                         go to state 18


State 1

   11 class_interface_header: AT_INTERFACE . IDENTIFIER SEMI_COLUMN IDENTIFIER
   12                       | AT_INTERFACE . IDENTIFIER
   13                       | AT_INTERFACE . error
   14                       | AT_INTERFACE . IDENTIFIER SEMI_COLUMN error

    error       shift, and go to state 19
    IDENTIFIER  shift, and go to state 20


State 2

  124 class_implementation_header: AT_IMPLEMENTATION . IDENTIFIER SEMI_COLUMN IDENTIFIER
  125                            | AT_IMPLEMENTATION . IDENTIFIER

    IDENTIFIER  shift, and go to state 21


State 3

  263 enum: ENUM . IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  264     | ENUM . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 22


State 4

  258 protocol_header: AT_PROTOCOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 23


State 5

   68 struct_header: STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 24


State 6

    4 components: IMPORT . STRING_VAL SEMI_COMA

    STRING_VAL  shift, and go to state 25


State 7

    0 $accept: program . $end

    $end  shift, and go to state 26


State 8

    1 program: components .  [$end]
    2 components: components . component
    5 component: . class_interface
    6          | . class_implementation
    7          | . protocol
    8          | . struct
    9          | . enum
   10 class_interface: . class_interface_header class_interface_body
   11 class_interface_header: . AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
   12                       | . AT_INTERFACE IDENTIFIER
   13                       | . AT_INTERFACE error
   14                       | . AT_INTERFACE IDENTIFIER SEMI_COLUMN error
   68 struct_header: . STRUCT IDENTIFIER
   69 struct: . struct_header OPEN_S CLOSE_S entity SEMI_COMA
   70       | . struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   71       | . struct_header OPEN_S CLOSE_S SEMI_COMA
   72       | . struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   73       | . struct_header OPEN_S CLOSE_S entity error SEMI_COMA
   74       | . struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   75       | . struct_header OPEN_S CLOSE_S error SEMI_COMA
   76       | . struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA
  123 class_implementation: . class_implementation_header class_implementation_body
  124 class_implementation_header: . AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  125                            | . AT_IMPLEMENTATION IDENTIFIER
  257 protocol: . protocol_header protocol_body
  258 protocol_header: . AT_PROTOCOL IDENTIFIER
  263 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  264     | . ENUM IDENTIFIER SEMI_COMA

    AT_INTERFACE       shift, and go to state 1
    AT_IMPLEMENTATION  shift, and go to state 2
    ENUM               shift, and go to state 3
    AT_PROTOCOL        shift, and go to state 4
    STRUCT             shift, and go to state 5

    $default  reduce using rule 1 (program)

    component                    go to state 27
    class_interface              go to state 10
    class_interface_header       go to state 11
    struct_header                go to state 12
    struct                       go to state 13
    class_implementation         go to state 14
    class_implementation_header  go to state 15
    protocol                     go to state 16
    protocol_header              go to state 17
    enum                         go to state 18


State 9

    3 components: component .

    $default  reduce using rule 3 (components)


State 10

    5 component: class_interface .

    $default  reduce using rule 5 (component)


State 11

   10 class_interface: class_interface_header . class_interface_body
   15 class_interface_body: . protocol_reference_list instance_variables interface_declaration_list AT_END
   16                     | . protocol_reference_list instance_variables AT_END
   17                     | . protocol_reference_list interface_declaration_list AT_END
   18                     | . instance_variables interface_declaration_list AT_END
   19                     | . protocol_reference_list AT_END
   20                     | . instance_variables AT_END
   21                     | . interface_declaration_list AT_END
   22                     | . AT_END
   23                     | . protocol_reference_list error AT_END
   24                     | . protocol_reference_list error interface_declaration_list AT_END
   25                     | . protocol_reference_list error
   26                     | . protocol_reference_list instance_variables interface_declaration_list error
   27                     | . protocol_reference_list instance_variables error
   28                     | . protocol_reference_list interface_declaration_list error
   29                     | . instance_variables interface_declaration_list error
   30                     | . instance_variables error
   31                     | . interface_declaration_list error
   32 protocol_reference_list: . LESS_THAN ids_list_identifier MORE_THAN
   33                        | . LESS_THAN ids_list_identifier error
   44 instance_variables: . OPEN_S instance_variable_declarations CLOSE_S
   45                   | . OPEN_S CLOSE_S
  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    OPEN_S     shift, and go to state 28
    LESS_THAN  shift, and go to state 29
    AT_END     shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32

    class_interface_body         go to state 33
    protocol_reference_list      go to state 34
    instance_variables           go to state 35
    interface_declaration_list   go to state 36
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 12

   69 struct: struct_header . OPEN_S CLOSE_S entity SEMI_COMA
   70       | struct_header . OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA
   71       | struct_header . OPEN_S CLOSE_S SEMI_COMA
   72       | struct_header . OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA
   73       | struct_header . OPEN_S CLOSE_S entity error SEMI_COMA
   74       | struct_header . OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA
   75       | struct_header . OPEN_S CLOSE_S error SEMI_COMA
   76       | struct_header . OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA

    OPEN_S  shift, and go to state 40


State 13

    8 component: struct .

    $default  reduce using rule 8 (component)


State 14

    6 component: class_implementation .

    $default  reduce using rule 6 (component)


State 15

   44 instance_variables: . OPEN_S instance_variable_declarations CLOSE_S
   45                   | . OPEN_S CLOSE_S
  123 class_implementation: class_implementation_header . class_implementation_body
  126 class_implementation_body: . instance_variables implementation_definition_list AT_END
  127                          | . instance_variables AT_END
  128                          | . implementation_definition_list AT_END
  129                          | . AT_END
  130 implementation_definition_list: . implementation_definition_list implementation_definition
  131                               | . implementation_definition
  132 implementation_definition: . class_implementation_definition
  133                          | . instance_implementation_definition
  134 class_implementation_definition: . class_implementation_definition_header block_body
  135 class_implementation_definition_header: . PLUS p_type method_selectors
  136 instance_implementation_definition: . instance_implementation_definition_header block_body
  137 instance_implementation_definition_header: . MINUS p_type method_selectors

    OPEN_S  shift, and go to state 28
    AT_END  shift, and go to state 41
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    instance_variables                         go to state 44
    class_implementation_body                  go to state 45
    implementation_definition_list             go to state 46
    implementation_definition                  go to state 47
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 16

    7 component: protocol .

    $default  reduce using rule 7 (component)


State 17

   32 protocol_reference_list: . LESS_THAN ids_list_identifier MORE_THAN
   33                        | . LESS_THAN ids_list_identifier error
  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  257 protocol: protocol_header . protocol_body
  259 protocol_body: . protocol_reference_list interface_declaration_list AT_END
  260              | . interface_declaration_list AT_END
  261              | . protocol_reference_list AT_END
  262              | . AT_END

    LESS_THAN  shift, and go to state 29
    AT_END     shift, and go to state 52
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32

    protocol_reference_list      go to state 53
    interface_declaration_list   go to state 54
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39
    protocol_body                go to state 55


State 18

    9 component: enum .

    $default  reduce using rule 9 (component)


State 19

   13 class_interface_header: AT_INTERFACE error .

    $default  reduce using rule 13 (class_interface_header)


State 20

   11 class_interface_header: AT_INTERFACE IDENTIFIER . SEMI_COLUMN IDENTIFIER
   12                       | AT_INTERFACE IDENTIFIER .  [OPEN_S, LESS_THAN, AT_END, PLUS, MINUS]
   14                       | AT_INTERFACE IDENTIFIER . SEMI_COLUMN error

    SEMI_COLUMN  shift, and go to state 56

    $default  reduce using rule 12 (class_interface_header)


State 21

  124 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER . SEMI_COLUMN IDENTIFIER
  125                            | AT_IMPLEMENTATION IDENTIFIER .  [OPEN_S, AT_END, PLUS, MINUS]

    SEMI_COLUMN  shift, and go to state 57

    $default  reduce using rule 125 (class_implementation_header)


State 22

  263 enum: ENUM IDENTIFIER . OPEN_S list_expr CLOSE_S SEMI_COMA
  264     | ENUM IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 58
    OPEN_S     shift, and go to state 59


State 23

  258 protocol_header: AT_PROTOCOL IDENTIFIER .

    $default  reduce using rule 258 (protocol_header)


State 24

   68 struct_header: STRUCT IDENTIFIER .

    $default  reduce using rule 68 (struct_header)


State 25

    4 components: IMPORT STRING_VAL . SEMI_COMA

    SEMI_COMA  shift, and go to state 60


State 26

    0 $accept: program $end .

    $default  accept


State 27

    2 components: components component .

    $default  reduce using rule 2 (components)


State 28

   44 instance_variables: OPEN_S . instance_variable_declarations CLOSE_S
   45                   | OPEN_S . CLOSE_S
   46 instance_variable_declarations: . instance_variable_declarations instance_variable_declaration
   47                               | . instance_variable_declaration
   48 instance_variable_declaration: . visibility_specification variable_declaration_list
   51 visibility_specification: . AT_PRIVATE
   52                         | . AT_PROTECTED
   53                         | . AT_PUBLIC

    AT_PUBLIC     shift, and go to state 61
    AT_PROTECTED  shift, and go to state 62
    AT_PRIVATE    shift, and go to state 63
    CLOSE_S       shift, and go to state 64

    instance_variable_declarations  go to state 65
    instance_variable_declaration   go to state 66
    visibility_specification        go to state 67


State 29

   32 protocol_reference_list: LESS_THAN . ids_list_identifier MORE_THAN
   33                        | LESS_THAN . ids_list_identifier error
   34 ids_list_identifier: . ids_list_identifier COMMA IDENTIFIER
   35                    | . IDENTIFIER

    IDENTIFIER  shift, and go to state 68

    ids_list_identifier  go to state 69


State 30

   22 class_interface_body: AT_END .

    $default  reduce using rule 22 (class_interface_body)


State 31

  110 class_method_declaration: PLUS . p_type method_selectors SEMI_COMA
  111                         | PLUS . p_type method_selectors error
  112                         | PLUS . method_selectors error
  114 p_type: . OPEN_P type CLOSE_P
  115 method_selectors: . selectors_list
  116                 | . IDENTIFIER
  117 selectors_list: . selectors_list selector_decleration
  118               | . selector_decleration
  119 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 70
    OPEN_P      shift, and go to state 71

    p_type                go to state 72
    method_selectors      go to state 73
    selectors_list        go to state 74
    selector_decleration  go to state 75


State 32

  113 instance_method_declaration: MINUS . p_type method_selectors SEMI_COMA
  114 p_type: . OPEN_P type CLOSE_P

    OPEN_P  shift, and go to state 71

    p_type  go to state 76


State 33

   10 class_interface: class_interface_header class_interface_body .

    $default  reduce using rule 10 (class_interface)


State 34

   15 class_interface_body: protocol_reference_list . instance_variables interface_declaration_list AT_END
   16                     | protocol_reference_list . instance_variables AT_END
   17                     | protocol_reference_list . interface_declaration_list AT_END
   19                     | protocol_reference_list . AT_END
   23                     | protocol_reference_list . error AT_END
   24                     | protocol_reference_list . error interface_declaration_list AT_END
   25                     | protocol_reference_list . error
   26                     | protocol_reference_list . instance_variables interface_declaration_list error
   27                     | protocol_reference_list . instance_variables error
   28                     | protocol_reference_list . interface_declaration_list error
   44 instance_variables: . OPEN_S instance_variable_declarations CLOSE_S
   45                   | . OPEN_S CLOSE_S
  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 77
    OPEN_S  shift, and go to state 28
    AT_END  shift, and go to state 78
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    instance_variables           go to state 79
    interface_declaration_list   go to state 80
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 35

   18 class_interface_body: instance_variables . interface_declaration_list AT_END
   20                     | instance_variables . AT_END
   29                     | instance_variables . interface_declaration_list error
   30                     | instance_variables . error
  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 81
    AT_END  shift, and go to state 82
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 83
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 36

   21 class_interface_body: interface_declaration_list . AT_END
   31                     | interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 84
    AT_END  shift, and go to state 85
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 86
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 37

  107 interface_declaration_list: interface_declaration .

    $default  reduce using rule 107 (interface_declaration_list)


State 38

  108 interface_declaration: class_method_declaration .

    $default  reduce using rule 108 (interface_declaration)


State 39

  109 interface_declaration: instance_method_declaration .

    $default  reduce using rule 109 (interface_declaration)


State 40

   54 struct_variable_declaration: . struct_declaration_list
   55 variable_declarationxx: . type ids_list SEMI_COMA
   56                       | . CONST type ids_list SEMI_COMA
   57                       | . type IDENTIFIER array_tag error
   65 struct_declaration_list: . struct_declaration_list variable_declarationxx
   66                        | . variable_declarationxx
   67                        | . error variable_declarationxx
   69 struct: struct_header OPEN_S . CLOSE_S entity SEMI_COMA
   70       | struct_header OPEN_S . struct_variable_declaration CLOSE_S entity SEMI_COMA
   71       | struct_header OPEN_S . CLOSE_S SEMI_COMA
   72       | struct_header OPEN_S . struct_variable_declaration CLOSE_S SEMI_COMA
   73       | struct_header OPEN_S . CLOSE_S entity error SEMI_COMA
   74       | struct_header OPEN_S . struct_variable_declaration CLOSE_S entity error SEMI_COMA
   75       | struct_header OPEN_S . CLOSE_S error SEMI_COMA
   76       | struct_header OPEN_S . struct_variable_declaration CLOSE_S error SEMI_COMA
   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    error       shift, and go to state 87
    IDENTIFIER  shift, and go to state 88
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    CLOSE_S     shift, and go to state 95
    CONST       shift, and go to state 96
    VOID        shift, and go to state 97
    ENUM        shift, and go to state 98
    STRUCT      shift, and go to state 99

    struct_variable_declaration  go to state 100
    variable_declarationxx       go to state 101
    struct_declaration_list      go to state 102
    type                         go to state 103
    struct_type                  go to state 104
    enum_type                    go to state 105
    simple_type                  go to state 106
    complex_type                 go to state 107


State 41

  129 class_implementation_body: AT_END .

    $default  reduce using rule 129 (class_implementation_body)


State 42

  114 p_type: . OPEN_P type CLOSE_P
  135 class_implementation_definition_header: PLUS . p_type method_selectors

    OPEN_P  shift, and go to state 71

    p_type  go to state 108


State 43

  114 p_type: . OPEN_P type CLOSE_P
  137 instance_implementation_definition_header: MINUS . p_type method_selectors

    OPEN_P  shift, and go to state 71

    p_type  go to state 109


State 44

  126 class_implementation_body: instance_variables . implementation_definition_list AT_END
  127                          | instance_variables . AT_END
  130 implementation_definition_list: . implementation_definition_list implementation_definition
  131                               | . implementation_definition
  132 implementation_definition: . class_implementation_definition
  133                          | . instance_implementation_definition
  134 class_implementation_definition: . class_implementation_definition_header block_body
  135 class_implementation_definition_header: . PLUS p_type method_selectors
  136 instance_implementation_definition: . instance_implementation_definition_header block_body
  137 instance_implementation_definition_header: . MINUS p_type method_selectors

    AT_END  shift, and go to state 110
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition_list             go to state 111
    implementation_definition                  go to state 47
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 45

  123 class_implementation: class_implementation_header class_implementation_body .

    $default  reduce using rule 123 (class_implementation)


State 46

  128 class_implementation_body: implementation_definition_list . AT_END
  130 implementation_definition_list: implementation_definition_list . implementation_definition
  132 implementation_definition: . class_implementation_definition
  133                          | . instance_implementation_definition
  134 class_implementation_definition: . class_implementation_definition_header block_body
  135 class_implementation_definition_header: . PLUS p_type method_selectors
  136 instance_implementation_definition: . instance_implementation_definition_header block_body
  137 instance_implementation_definition_header: . MINUS p_type method_selectors

    AT_END  shift, and go to state 112
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition                  go to state 113
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 47

  131 implementation_definition_list: implementation_definition .

    $default  reduce using rule 131 (implementation_definition_list)


State 48

  132 implementation_definition: class_implementation_definition .

    $default  reduce using rule 132 (implementation_definition)


State 49

  134 class_implementation_definition: class_implementation_definition_header . block_body
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S

    OPEN_S  shift, and go to state 114

    block_body         go to state 115
    block_body_header  go to state 116


State 50

  133 implementation_definition: instance_implementation_definition .

    $default  reduce using rule 133 (implementation_definition)


State 51

  136 instance_implementation_definition: instance_implementation_definition_header . block_body
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S

    OPEN_S  shift, and go to state 114

    block_body         go to state 117
    block_body_header  go to state 116


State 52

  262 protocol_body: AT_END .

    $default  reduce using rule 262 (protocol_body)


State 53

  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  259 protocol_body: protocol_reference_list . interface_declaration_list AT_END
  261              | protocol_reference_list . AT_END

    AT_END  shift, and go to state 118
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 119
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 54

  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  260 protocol_body: interface_declaration_list . AT_END

    AT_END  shift, and go to state 120
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 86
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 55

  257 protocol: protocol_header protocol_body .

    $default  reduce using rule 257 (protocol)


State 56

   11 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN . IDENTIFIER
   14                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN . error

    error       shift, and go to state 121
    IDENTIFIER  shift, and go to state 122


State 57

  124 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN . IDENTIFIER

    IDENTIFIER  shift, and go to state 123


State 58

  264 enum: ENUM IDENTIFIER SEMI_COMA .

    $default  reduce using rule 264 (enum)


State 59

  263 enum: ENUM IDENTIFIER OPEN_S . list_expr CLOSE_S SEMI_COMA
  265 list_expr: . IDENTIFIER EQUAL expr COMMA list_expr
  266          | . IDENTIFIER EQUAL expr
  267          | . IDENTIFIER
  268          | . IDENTIFIER COMMA list_expr

    IDENTIFIER  shift, and go to state 124

    list_expr  go to state 125


State 60

    4 components: IMPORT STRING_VAL SEMI_COMA .

    $default  reduce using rule 4 (components)


State 61

   53 visibility_specification: AT_PUBLIC .

    $default  reduce using rule 53 (visibility_specification)


State 62

   52 visibility_specification: AT_PROTECTED .

    $default  reduce using rule 52 (visibility_specification)


State 63

   51 visibility_specification: AT_PRIVATE .

    $default  reduce using rule 51 (visibility_specification)


State 64

   45 instance_variables: OPEN_S CLOSE_S .

    $default  reduce using rule 45 (instance_variables)


State 65

   44 instance_variables: OPEN_S instance_variable_declarations . CLOSE_S
   46 instance_variable_declarations: instance_variable_declarations . instance_variable_declaration
   48 instance_variable_declaration: . visibility_specification variable_declaration_list
   51 visibility_specification: . AT_PRIVATE
   52                         | . AT_PROTECTED
   53                         | . AT_PUBLIC

    AT_PUBLIC     shift, and go to state 61
    AT_PROTECTED  shift, and go to state 62
    AT_PRIVATE    shift, and go to state 63
    CLOSE_S       shift, and go to state 126

    instance_variable_declaration  go to state 127
    visibility_specification       go to state 67


State 66

   47 instance_variable_declarations: instance_variable_declaration .

    $default  reduce using rule 47 (instance_variable_declarations)


State 67

   48 instance_variable_declaration: visibility_specification . variable_declaration_list
   49 variable_declaration_list: . variable_declaration_list variable_declarationxx
   50                          | . variable_declarationxx
   55 variable_declarationxx: . type ids_list SEMI_COMA
   56                       | . CONST type ids_list SEMI_COMA
   57                       | . type IDENTIFIER array_tag error
   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 88
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    CONST       shift, and go to state 96
    VOID        shift, and go to state 97
    ENUM        shift, and go to state 98
    STRUCT      shift, and go to state 99

    variable_declaration_list  go to state 128
    variable_declarationxx     go to state 129
    type                       go to state 103
    struct_type                go to state 104
    enum_type                  go to state 105
    simple_type                go to state 106
    complex_type               go to state 107


State 68

   35 ids_list_identifier: IDENTIFIER .

    $default  reduce using rule 35 (ids_list_identifier)


State 69

   32 protocol_reference_list: LESS_THAN ids_list_identifier . MORE_THAN
   33                        | LESS_THAN ids_list_identifier . error
   34 ids_list_identifier: ids_list_identifier . COMMA IDENTIFIER

    error      shift, and go to state 130
    COMMA      shift, and go to state 131
    MORE_THAN  shift, and go to state 132


State 70

  116 method_selectors: IDENTIFIER .  [error, SEMI_COMA, OPEN_S]
  119 selector_decleration: IDENTIFIER . SEMI_COLUMN parameter_list

    SEMI_COLUMN  shift, and go to state 133

    $default  reduce using rule 116 (method_selectors)


State 71

   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  114 p_type: OPEN_P . type CLOSE_P

    IDENTIFIER  shift, and go to state 88
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    VOID        shift, and go to state 97
    ENUM        shift, and go to state 98
    STRUCT      shift, and go to state 99

    type          go to state 134
    struct_type   go to state 104
    enum_type     go to state 105
    simple_type   go to state 106
    complex_type  go to state 107


State 72

  110 class_method_declaration: PLUS p_type . method_selectors SEMI_COMA
  111                         | PLUS p_type . method_selectors error
  115 method_selectors: . selectors_list
  116                 | . IDENTIFIER
  117 selectors_list: . selectors_list selector_decleration
  118               | . selector_decleration
  119 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 70

    method_selectors      go to state 135
    selectors_list        go to state 74
    selector_decleration  go to state 75


State 73

  112 class_method_declaration: PLUS method_selectors . error

    error  shift, and go to state 136


State 74

  115 method_selectors: selectors_list .  [error, SEMI_COMA, OPEN_S]
  117 selectors_list: selectors_list . selector_decleration
  119 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 137

    $default  reduce using rule 115 (method_selectors)

    selector_decleration  go to state 138


State 75

  118 selectors_list: selector_decleration .

    $default  reduce using rule 118 (selectors_list)


State 76

  113 instance_method_declaration: MINUS p_type . method_selectors SEMI_COMA
  115 method_selectors: . selectors_list
  116                 | . IDENTIFIER
  117 selectors_list: . selectors_list selector_decleration
  118               | . selector_decleration
  119 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list

    IDENTIFIER  shift, and go to state 70

    method_selectors      go to state 139
    selectors_list        go to state 74
    selector_decleration  go to state 75


State 77

   23 class_interface_body: protocol_reference_list error . AT_END
   24                     | protocol_reference_list error . interface_declaration_list AT_END
   25                     | protocol_reference_list error .  [$end, AT_INTERFACE, AT_IMPLEMENTATION, ENUM, AT_PROTOCOL, STRUCT]
  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    AT_END  shift, and go to state 140
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    $default  reduce using rule 25 (class_interface_body)

    interface_declaration_list   go to state 141
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 78

   19 class_interface_body: protocol_reference_list AT_END .

    $default  reduce using rule 19 (class_interface_body)


State 79

   15 class_interface_body: protocol_reference_list instance_variables . interface_declaration_list AT_END
   16                     | protocol_reference_list instance_variables . AT_END
   26                     | protocol_reference_list instance_variables . interface_declaration_list error
   27                     | protocol_reference_list instance_variables . error
  106 interface_declaration_list: . interface_declaration_list interface_declaration
  107                           | . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 142
    AT_END  shift, and go to state 143
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration_list   go to state 144
    interface_declaration        go to state 37
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 80

   17 class_interface_body: protocol_reference_list interface_declaration_list . AT_END
   28                     | protocol_reference_list interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 145
    AT_END  shift, and go to state 146
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 86
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 81

   30 class_interface_body: instance_variables error .

    $default  reduce using rule 30 (class_interface_body)


State 82

   20 class_interface_body: instance_variables AT_END .

    $default  reduce using rule 20 (class_interface_body)


State 83

   18 class_interface_body: instance_variables interface_declaration_list . AT_END
   29                     | instance_variables interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 147
    AT_END  shift, and go to state 148
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 86
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 84

   31 class_interface_body: interface_declaration_list error .

    $default  reduce using rule 31 (class_interface_body)


State 85

   21 class_interface_body: interface_declaration_list AT_END .

    $default  reduce using rule 21 (class_interface_body)


State 86

  106 interface_declaration_list: interface_declaration_list interface_declaration .

    $default  reduce using rule 106 (interface_declaration_list)


State 87

   55 variable_declarationxx: . type ids_list SEMI_COMA
   56                       | . CONST type ids_list SEMI_COMA
   57                       | . type IDENTIFIER array_tag error
   67 struct_declaration_list: error . variable_declarationxx
   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 88
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    CONST       shift, and go to state 96
    VOID        shift, and go to state 97
    ENUM        shift, and go to state 98
    STRUCT      shift, and go to state 99

    variable_declarationxx  go to state 149
    type                    go to state 103
    struct_type             go to state 104
    enum_type               go to state 105
    simple_type             go to state 106
    complex_type            go to state 107


State 88

   95 complex_type: IDENTIFIER . MULTI

    MULTI  shift, and go to state 150


State 89

   92 simple_type: NSSTRING .

    $default  reduce using rule 92 (simple_type)


State 90

   91 simple_type: FLOAT .

    $default  reduce using rule 91 (simple_type)


State 91

   89 simple_type: CHAR .

    $default  reduce using rule 89 (simple_type)


State 92

   94 simple_type: BOOL .

    $default  reduce using rule 94 (simple_type)


State 93

   88 simple_type: INT .

    $default  reduce using rule 88 (simple_type)


State 94

   90 simple_type: ID .

    $default  reduce using rule 90 (simple_type)


State 95

   69 struct: struct_header OPEN_S CLOSE_S . entity SEMI_COMA
   71       | struct_header OPEN_S CLOSE_S . SEMI_COMA
   73       | struct_header OPEN_S CLOSE_S . entity error SEMI_COMA
   75       | struct_header OPEN_S CLOSE_S . error SEMI_COMA
   77 entity: . IDENTIFIER COMMA entity
   78       | . IDENTIFIER
   79       | . error COMMA

    error       shift, and go to state 151
    IDENTIFIER  shift, and go to state 152
    SEMI_COMA   shift, and go to state 153

    entity  go to state 154


State 96

   56 variable_declarationxx: CONST . type ids_list SEMI_COMA
   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 88
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    VOID        shift, and go to state 97
    ENUM        shift, and go to state 98
    STRUCT      shift, and go to state 99

    type          go to state 155
    struct_type   go to state 104
    enum_type     go to state 105
    simple_type   go to state 106
    complex_type  go to state 107


State 97

   93 simple_type: VOID .

    $default  reduce using rule 93 (simple_type)


State 98

   86 enum_type: ENUM . IDENTIFIER
   87          | ENUM . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 156


State 99

   84 struct_type: STRUCT . IDENTIFIER
   85            | STRUCT . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 157


State 100

   70 struct: struct_header OPEN_S struct_variable_declaration . CLOSE_S entity SEMI_COMA
   72       | struct_header OPEN_S struct_variable_declaration . CLOSE_S SEMI_COMA
   74       | struct_header OPEN_S struct_variable_declaration . CLOSE_S entity error SEMI_COMA
   76       | struct_header OPEN_S struct_variable_declaration . CLOSE_S error SEMI_COMA

    CLOSE_S  shift, and go to state 158


State 101

   66 struct_declaration_list: variable_declarationxx .

    $default  reduce using rule 66 (struct_declaration_list)


State 102

   54 struct_variable_declaration: struct_declaration_list .  [CLOSE_S]
   55 variable_declarationxx: . type ids_list SEMI_COMA
   56                       | . CONST type ids_list SEMI_COMA
   57                       | . type IDENTIFIER array_tag error
   65 struct_declaration_list: struct_declaration_list . variable_declarationxx
   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 88
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    CONST       shift, and go to state 96
    VOID        shift, and go to state 97
    ENUM        shift, and go to state 98
    STRUCT      shift, and go to state 99

    $default  reduce using rule 54 (struct_variable_declaration)

    variable_declarationxx  go to state 159
    type                    go to state 103
    struct_type             go to state 104
    enum_type               go to state 105
    simple_type             go to state 106
    complex_type            go to state 107


State 103

   55 variable_declarationxx: type . ids_list SEMI_COMA
   57                       | type . IDENTIFIER array_tag error
   58 ids_list: . ids_list COMMA data_member
   59         | . data_member
   60         | . error
   61 data_member: . IDENTIFIER array_tag
   62            | . IDENTIFIER
   63            | . error array_tag
   64            | . IDENTIFIER error

    error       shift, and go to state 160
    IDENTIFIER  shift, and go to state 161

    ids_list     go to state 162
    data_member  go to state 163


State 104

   82 type: struct_type .

    $default  reduce using rule 82 (type)


State 105

   83 type: enum_type .

    $default  reduce using rule 83 (type)


State 106

   80 type: simple_type .

    $default  reduce using rule 80 (type)


State 107

   81 type: complex_type .

    $default  reduce using rule 81 (type)


State 108

  115 method_selectors: . selectors_list
  116                 | . IDENTIFIER
  117 selectors_list: . selectors_list selector_decleration
  118               | . selector_decleration
  119 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list
  135 class_implementation_definition_header: PLUS p_type . method_selectors

    IDENTIFIER  shift, and go to state 70

    method_selectors      go to state 164
    selectors_list        go to state 74
    selector_decleration  go to state 75


State 109

  115 method_selectors: . selectors_list
  116                 | . IDENTIFIER
  117 selectors_list: . selectors_list selector_decleration
  118               | . selector_decleration
  119 selector_decleration: . IDENTIFIER SEMI_COLUMN parameter_list
  137 instance_implementation_definition_header: MINUS p_type . method_selectors

    IDENTIFIER  shift, and go to state 70

    method_selectors      go to state 165
    selectors_list        go to state 74
    selector_decleration  go to state 75


State 110

  127 class_implementation_body: instance_variables AT_END .

    $default  reduce using rule 127 (class_implementation_body)


State 111

  126 class_implementation_body: instance_variables implementation_definition_list . AT_END
  130 implementation_definition_list: implementation_definition_list . implementation_definition
  132 implementation_definition: . class_implementation_definition
  133                          | . instance_implementation_definition
  134 class_implementation_definition: . class_implementation_definition_header block_body
  135 class_implementation_definition_header: . PLUS p_type method_selectors
  136 instance_implementation_definition: . instance_implementation_definition_header block_body
  137 instance_implementation_definition_header: . MINUS p_type method_selectors

    AT_END  shift, and go to state 166
    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43

    implementation_definition                  go to state 113
    class_implementation_definition            go to state 48
    class_implementation_definition_header     go to state 49
    instance_implementation_definition         go to state 50
    instance_implementation_definition_header  go to state 51


State 112

  128 class_implementation_body: implementation_definition_list AT_END .

    $default  reduce using rule 128 (class_implementation_body)


State 113

  130 implementation_definition_list: implementation_definition_list implementation_definition .

    $default  reduce using rule 130 (implementation_definition_list)


State 114

  139 block_body_header: OPEN_S .

    $default  reduce using rule 139 (block_body_header)


State 115

  134 class_implementation_definition: class_implementation_definition_header block_body .

    $default  reduce using rule 134 (class_implementation_definition)


State 116

   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  138           | block_body_header . block_body_statements
  139 block_body_header: . OPEN_S
  140 block_body_statements: . statement_list CLOSE_S
  141                      | . CLOSE_S
  142                      | . error CLOSE_S
  143 statement_list: . statement_list statement
  144               | . statement
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . long_id SEMI_COMA
  154          | . throw_statement
  155          | . error SEMI_COMA
  156 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  157 asm: . AT_ASM STRING_VAL SEMI_COMA
  158 variable_declaration_block: . type variable_list SEMI_COMA
  159                           | . CONST type variable_list SEMI_COMA
  160                           | . enum
  167 return_statement: . RETURN expr SEMI_COMA
  168 loop_statement: . for_loop
  169               | . while_loop
  170               | . do_while
  171 do_while: . do_header statement while_loop_header SEMI_COMA
  172 do_header: . DO
  173 for_loop: . for_loop_header statement
  174 for_loop_header: . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  175                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  178                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  179                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  180                | . fOR_OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  181                | . fOR_OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  182 fOR_OPEN_P: . FOR OPEN_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR
  237 while_loop: . while_loop_header statement
  238 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  239 conditional_statement: . if_header statement
  240                      | . if_header statement ELSE statement
  241                      | . switch_header switch_body
  242 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  243 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  263 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  264     | . ENUM IDENTIFIER SEMI_COMA
  269 try_catch: . TRY statement catch_list finally_statement
  270          | . TRY statement catch_list

    error       shift, and go to state 167
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    OPEN_S      shift, and go to state 114
    CLOSE_S     shift, and go to state 169
    CONST       shift, and go to state 170
    VOID        shift, and go to state 97
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 99
    TRY         shift, and go to state 179
    THROW       shift, and go to state 180
    AT_ASM      shift, and go to state 181

    type                        go to state 182
    struct_type                 go to state 104
    enum_type                   go to state 105
    simple_type                 go to state 106
    complex_type                go to state 107
    block_body                  go to state 183
    block_body_header           go to state 116
    block_body_statements       go to state 184
    statement_list              go to state 185
    statement                   go to state 186
    throw_statement             go to state 187
    asm                         go to state 188
    variable_declaration_block  go to state 189
    return_statement            go to state 190
    loop_statement              go to state 191
    do_while                    go to state 192
    do_header                   go to state 193
    for_loop                    go to state 194
    for_loop_header             go to state 195
    fOR_OPEN_P                  go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 117

  136 instance_implementation_definition: instance_implementation_definition_header block_body .

    $default  reduce using rule 136 (instance_implementation_definition)


State 118

  261 protocol_body: protocol_reference_list AT_END .

    $default  reduce using rule 261 (protocol_body)


State 119

  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA
  259 protocol_body: protocol_reference_list interface_declaration_list . AT_END

    AT_END  shift, and go to state 209
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 86
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 120

  260 protocol_body: interface_declaration_list AT_END .

    $default  reduce using rule 260 (protocol_body)


State 121

   14 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN error .

    $default  reduce using rule 14 (class_interface_header)


State 122

   11 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 11 (class_interface_header)


State 123

  124 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 124 (class_implementation_header)


State 124

  265 list_expr: IDENTIFIER . EQUAL expr COMMA list_expr
  266          | IDENTIFIER . EQUAL expr
  267          | IDENTIFIER .  [CLOSE_S]
  268          | IDENTIFIER . COMMA list_expr

    COMMA  shift, and go to state 210
    EQUAL  shift, and go to state 211

    $default  reduce using rule 267 (list_expr)


State 125

  263 enum: ENUM IDENTIFIER OPEN_S list_expr . CLOSE_S SEMI_COMA

    CLOSE_S  shift, and go to state 212


State 126

   44 instance_variables: OPEN_S instance_variable_declarations CLOSE_S .

    $default  reduce using rule 44 (instance_variables)


State 127

   46 instance_variable_declarations: instance_variable_declarations instance_variable_declaration .

    $default  reduce using rule 46 (instance_variable_declarations)


State 128

   48 instance_variable_declaration: visibility_specification variable_declaration_list .  [AT_PUBLIC, AT_PROTECTED, AT_PRIVATE, CLOSE_S]
   49 variable_declaration_list: variable_declaration_list . variable_declarationxx
   55 variable_declarationxx: . type ids_list SEMI_COMA
   56                       | . CONST type ids_list SEMI_COMA
   57                       | . type IDENTIFIER array_tag error
   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI

    IDENTIFIER  shift, and go to state 88
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    CONST       shift, and go to state 96
    VOID        shift, and go to state 97
    ENUM        shift, and go to state 98
    STRUCT      shift, and go to state 99

    $default  reduce using rule 48 (instance_variable_declaration)

    variable_declarationxx  go to state 213
    type                    go to state 103
    struct_type             go to state 104
    enum_type               go to state 105
    simple_type             go to state 106
    complex_type            go to state 107


State 129

   50 variable_declaration_list: variable_declarationxx .

    $default  reduce using rule 50 (variable_declaration_list)


State 130

   33 protocol_reference_list: LESS_THAN ids_list_identifier error .

    $default  reduce using rule 33 (protocol_reference_list)


State 131

   34 ids_list_identifier: ids_list_identifier COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 214


State 132

   32 protocol_reference_list: LESS_THAN ids_list_identifier MORE_THAN .

    $default  reduce using rule 32 (protocol_reference_list)


State 133

  114 p_type: . OPEN_P type CLOSE_P
  119 selector_decleration: IDENTIFIER SEMI_COLUMN . parameter_list
  120 parameter_list: . parameter_list SEMI_COLUMN parameter
  121               | . parameter
  122 parameter: . p_type IDENTIFIER

    OPEN_P  shift, and go to state 71

    p_type          go to state 215
    parameter_list  go to state 216
    parameter       go to state 217


State 134

  114 p_type: OPEN_P type . CLOSE_P

    CLOSE_P  shift, and go to state 218


State 135

  110 class_method_declaration: PLUS p_type method_selectors . SEMI_COMA
  111                         | PLUS p_type method_selectors . error

    error      shift, and go to state 219
    SEMI_COMA  shift, and go to state 220


State 136

  112 class_method_declaration: PLUS method_selectors error .

    $default  reduce using rule 112 (class_method_declaration)


State 137

  119 selector_decleration: IDENTIFIER . SEMI_COLUMN parameter_list

    SEMI_COLUMN  shift, and go to state 133


State 138

  117 selectors_list: selectors_list selector_decleration .

    $default  reduce using rule 117 (selectors_list)


State 139

  113 instance_method_declaration: MINUS p_type method_selectors . SEMI_COMA

    SEMI_COMA  shift, and go to state 221


State 140

   23 class_interface_body: protocol_reference_list error AT_END .

    $default  reduce using rule 23 (class_interface_body)


State 141

   24 class_interface_body: protocol_reference_list error interface_declaration_list . AT_END
  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    AT_END  shift, and go to state 222
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 86
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 142

   27 class_interface_body: protocol_reference_list instance_variables error .

    $default  reduce using rule 27 (class_interface_body)


State 143

   16 class_interface_body: protocol_reference_list instance_variables AT_END .

    $default  reduce using rule 16 (class_interface_body)


State 144

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list . AT_END
   26                     | protocol_reference_list instance_variables interface_declaration_list . error
  106 interface_declaration_list: interface_declaration_list . interface_declaration
  108 interface_declaration: . class_method_declaration
  109                      | . instance_method_declaration
  110 class_method_declaration: . PLUS p_type method_selectors SEMI_COMA
  111                         | . PLUS p_type method_selectors error
  112                         | . PLUS method_selectors error
  113 instance_method_declaration: . MINUS p_type method_selectors SEMI_COMA

    error   shift, and go to state 223
    AT_END  shift, and go to state 224
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32

    interface_declaration        go to state 86
    class_method_declaration     go to state 38
    instance_method_declaration  go to state 39


State 145

   28 class_interface_body: protocol_reference_list interface_declaration_list error .

    $default  reduce using rule 28 (class_interface_body)


State 146

   17 class_interface_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 17 (class_interface_body)


State 147

   29 class_interface_body: instance_variables interface_declaration_list error .

    $default  reduce using rule 29 (class_interface_body)


State 148

   18 class_interface_body: instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 18 (class_interface_body)


State 149

   67 struct_declaration_list: error variable_declarationxx .

    $default  reduce using rule 67 (struct_declaration_list)


State 150

   95 complex_type: IDENTIFIER MULTI .

    $default  reduce using rule 95 (complex_type)


State 151

   75 struct: struct_header OPEN_S CLOSE_S error . SEMI_COMA
   79 entity: error . COMMA

    SEMI_COMA  shift, and go to state 225
    COMMA      shift, and go to state 226


State 152

   77 entity: IDENTIFIER . COMMA entity
   78       | IDENTIFIER .  [error, SEMI_COMA]

    COMMA  shift, and go to state 227

    $default  reduce using rule 78 (entity)


State 153

   71 struct: struct_header OPEN_S CLOSE_S SEMI_COMA .

    $default  reduce using rule 71 (struct)


State 154

   69 struct: struct_header OPEN_S CLOSE_S entity . SEMI_COMA
   73       | struct_header OPEN_S CLOSE_S entity . error SEMI_COMA

    error      shift, and go to state 228
    SEMI_COMA  shift, and go to state 229


State 155

   56 variable_declarationxx: CONST type . ids_list SEMI_COMA
   58 ids_list: . ids_list COMMA data_member
   59         | . data_member
   60         | . error
   61 data_member: . IDENTIFIER array_tag
   62            | . IDENTIFIER
   63            | . error array_tag
   64            | . IDENTIFIER error

    error       shift, and go to state 160
    IDENTIFIER  shift, and go to state 230

    ids_list     go to state 231
    data_member  go to state 163


State 156

   86 enum_type: ENUM IDENTIFIER .  [error, IDENTIFIER, CLOSE_P]
   87          | ENUM IDENTIFIER . MULTI

    MULTI  shift, and go to state 232

    $default  reduce using rule 86 (enum_type)


State 157

   84 struct_type: STRUCT IDENTIFIER .  [error, IDENTIFIER, CLOSE_P]
   85            | STRUCT IDENTIFIER . MULTI

    MULTI  shift, and go to state 233

    $default  reduce using rule 84 (struct_type)


State 158

   70 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S . entity SEMI_COMA
   72       | struct_header OPEN_S struct_variable_declaration CLOSE_S . SEMI_COMA
   74       | struct_header OPEN_S struct_variable_declaration CLOSE_S . entity error SEMI_COMA
   76       | struct_header OPEN_S struct_variable_declaration CLOSE_S . error SEMI_COMA
   77 entity: . IDENTIFIER COMMA entity
   78       | . IDENTIFIER
   79       | . error COMMA

    error       shift, and go to state 234
    IDENTIFIER  shift, and go to state 152
    SEMI_COMA   shift, and go to state 235

    entity  go to state 236


State 159

   65 struct_declaration_list: struct_declaration_list variable_declarationxx .

    $default  reduce using rule 65 (struct_declaration_list)


State 160

   60 ids_list: error .  [SEMI_COMA, COMMA]
   63 data_member: error . array_tag
   96 array_tag: . array_first_tag array_tag_list
  100 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  101                | . OPEN_ARR CLOSE_ARR

    OPEN_ARR  shift, and go to state 237

    $default  reduce using rule 60 (ids_list)

    array_tag        go to state 238
    array_first_tag  go to state 239


State 161

   57 variable_declarationxx: type IDENTIFIER . array_tag error
   61 data_member: IDENTIFIER . array_tag
   62            | IDENTIFIER .  [SEMI_COMA, COMMA]
   64            | IDENTIFIER . error
   96 array_tag: . array_first_tag array_tag_list
  100 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  101                | . OPEN_ARR CLOSE_ARR

    error     shift, and go to state 240
    OPEN_ARR  shift, and go to state 237

    SEMI_COMA  reduce using rule 62 (data_member)
    COMMA      reduce using rule 62 (data_member)

    array_tag        go to state 241
    array_first_tag  go to state 239


State 162

   55 variable_declarationxx: type ids_list . SEMI_COMA
   58 ids_list: ids_list . COMMA data_member

    SEMI_COMA  shift, and go to state 242
    COMMA      shift, and go to state 243


State 163

   59 ids_list: data_member .

    $default  reduce using rule 59 (ids_list)


State 164

  135 class_implementation_definition_header: PLUS p_type method_selectors .

    $default  reduce using rule 135 (class_implementation_definition_header)


State 165

  137 instance_implementation_definition_header: MINUS p_type method_selectors .

    $default  reduce using rule 137 (instance_implementation_definition_header)


State 166

  126 class_implementation_body: instance_variables implementation_definition_list AT_END .

    $default  reduce using rule 126 (class_implementation_body)


State 167

  142 block_body_statements: error . CLOSE_S
  155 statement: error . SEMI_COMA

    SEMI_COMA  shift, and go to state 244
    CLOSE_S    shift, and go to state 245


State 168

   95 complex_type: IDENTIFIER . MULTI
  205 long_id: IDENTIFIER .  [SEMI_COMA, EQUAL, OPEN_ARR, DOT]

    MULTI  shift, and go to state 150

    $default  reduce using rule 205 (long_id)


State 169

  141 block_body_statements: CLOSE_S .

    $default  reduce using rule 141 (block_body_statements)


State 170

   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  159 variable_declaration_block: CONST . type variable_list SEMI_COMA

    IDENTIFIER  shift, and go to state 88
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    VOID        shift, and go to state 97
    ENUM        shift, and go to state 98
    STRUCT      shift, and go to state 99

    type          go to state 246
    struct_type   go to state 104
    enum_type     go to state 105
    simple_type   go to state 106
    complex_type  go to state 107


State 171

  182 fOR_OPEN_P: FOR . OPEN_P

    OPEN_P  shift, and go to state 247


State 172

  238 while_loop_header: WHILE . OPEN_P logic_expr1 CLOSE_P

    OPEN_P  shift, and go to state 248


State 173

  242 if_header: IF . OPEN_P logic_expr1 CLOSE_P

    OPEN_P  shift, and go to state 249


State 174

  172 do_header: DO .

    $default  reduce using rule 172 (do_header)


State 175

  243 switch_header: SWITCH . OPEN_P IDENTIFIER CLOSE_P switch_body_block

    OPEN_P  shift, and go to state 250


State 176

   86 enum_type: ENUM . IDENTIFIER
   87          | ENUM . IDENTIFIER MULTI
  263 enum: ENUM . IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  264     | ENUM . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 251


State 177

  225 message_call2: OPEN_ARR .

    $default  reduce using rule 225 (message_call2)


State 178

  114 p_type: . OPEN_P type CLOSE_P
  167 return_statement: RETURN . expr SEMI_COMA
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    expr           go to state 262
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 179

   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . long_id SEMI_COMA
  154          | . throw_statement
  155          | . error SEMI_COMA
  156 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  157 asm: . AT_ASM STRING_VAL SEMI_COMA
  158 variable_declaration_block: . type variable_list SEMI_COMA
  159                           | . CONST type variable_list SEMI_COMA
  160                           | . enum
  167 return_statement: . RETURN expr SEMI_COMA
  168 loop_statement: . for_loop
  169               | . while_loop
  170               | . do_while
  171 do_while: . do_header statement while_loop_header SEMI_COMA
  172 do_header: . DO
  173 for_loop: . for_loop_header statement
  174 for_loop_header: . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  175                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  178                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  179                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  180                | . fOR_OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  181                | . fOR_OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  182 fOR_OPEN_P: . FOR OPEN_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR
  237 while_loop: . while_loop_header statement
  238 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  239 conditional_statement: . if_header statement
  240                      | . if_header statement ELSE statement
  241                      | . switch_header switch_body
  242 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  243 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  263 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  264     | . ENUM IDENTIFIER SEMI_COMA
  269 try_catch: . TRY statement catch_list finally_statement
  269          | TRY . statement catch_list finally_statement
  270          | . TRY statement catch_list
  270          | TRY . statement catch_list

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 97
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 99
    TRY         shift, and go to state 179
    THROW       shift, and go to state 180
    AT_ASM      shift, and go to state 181

    type                        go to state 182
    struct_type                 go to state 104
    enum_type                   go to state 105
    simple_type                 go to state 106
    complex_type                go to state 107
    block_body                  go to state 183
    block_body_header           go to state 116
    statement                   go to state 267
    throw_statement             go to state 187
    asm                         go to state 188
    variable_declaration_block  go to state 189
    return_statement            go to state 190
    loop_statement              go to state 191
    do_while                    go to state 192
    do_header                   go to state 193
    for_loop                    go to state 194
    for_loop_header             go to state 195
    fOR_OPEN_P                  go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 180

  156 throw_statement: THROW . OPEN_P message_call CLOSE_P SEMI_COMA

    OPEN_P  shift, and go to state 268


State 181

  157 asm: AT_ASM . STRING_VAL SEMI_COMA

    STRING_VAL  shift, and go to state 269


State 182

  158 variable_declaration_block: type . variable_list SEMI_COMA
  161 variable_list: . variable_list COMMA variable
  162              | . variable
  163              | . variable_list error variable
  164 variable: . IDENTIFIER array_tag initializer
  165         | . IDENTIFIER main_initializer
  166         | . error array_tag initializer

    error       shift, and go to state 270
    IDENTIFIER  shift, and go to state 271

    variable_list  go to state 272
    variable       go to state 273


State 183

  149 statement: block_body .

    $default  reduce using rule 149 (statement)


State 184

  138 block_body: block_body_header block_body_statements .

    $default  reduce using rule 138 (block_body)


State 185

   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  140 block_body_statements: statement_list . CLOSE_S
  143 statement_list: statement_list . statement
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . long_id SEMI_COMA
  154          | . throw_statement
  155          | . error SEMI_COMA
  156 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  157 asm: . AT_ASM STRING_VAL SEMI_COMA
  158 variable_declaration_block: . type variable_list SEMI_COMA
  159                           | . CONST type variable_list SEMI_COMA
  160                           | . enum
  167 return_statement: . RETURN expr SEMI_COMA
  168 loop_statement: . for_loop
  169               | . while_loop
  170               | . do_while
  171 do_while: . do_header statement while_loop_header SEMI_COMA
  172 do_header: . DO
  173 for_loop: . for_loop_header statement
  174 for_loop_header: . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  175                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  178                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  179                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  180                | . fOR_OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  181                | . fOR_OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  182 fOR_OPEN_P: . FOR OPEN_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR
  237 while_loop: . while_loop_header statement
  238 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  239 conditional_statement: . if_header statement
  240                      | . if_header statement ELSE statement
  241                      | . switch_header switch_body
  242 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  243 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  263 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  264     | . ENUM IDENTIFIER SEMI_COMA
  269 try_catch: . TRY statement catch_list finally_statement
  270          | . TRY statement catch_list

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    OPEN_S      shift, and go to state 114
    CLOSE_S     shift, and go to state 274
    CONST       shift, and go to state 170
    VOID        shift, and go to state 97
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 99
    TRY         shift, and go to state 179
    THROW       shift, and go to state 180
    AT_ASM      shift, and go to state 181

    type                        go to state 182
    struct_type                 go to state 104
    enum_type                   go to state 105
    simple_type                 go to state 106
    complex_type                go to state 107
    block_body                  go to state 183
    block_body_header           go to state 116
    statement                   go to state 275
    throw_statement             go to state 187
    asm                         go to state 188
    variable_declaration_block  go to state 189
    return_statement            go to state 190
    loop_statement              go to state 191
    do_while                    go to state 192
    do_header                   go to state 193
    for_loop                    go to state 194
    for_loop_header             go to state 195
    fOR_OPEN_P                  go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 186

  144 statement_list: statement .

    $default  reduce using rule 144 (statement_list)


State 187

  154 statement: throw_statement .

    $default  reduce using rule 154 (statement)


State 188

  152 statement: asm .

    $default  reduce using rule 152 (statement)


State 189

  148 statement: variable_declaration_block .

    $default  reduce using rule 148 (statement)


State 190

  150 statement: return_statement .

    $default  reduce using rule 150 (statement)


State 191

  145 statement: loop_statement .

    $default  reduce using rule 145 (statement)


State 192

  170 loop_statement: do_while .

    $default  reduce using rule 170 (loop_statement)


State 193

   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . long_id SEMI_COMA
  154          | . throw_statement
  155          | . error SEMI_COMA
  156 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  157 asm: . AT_ASM STRING_VAL SEMI_COMA
  158 variable_declaration_block: . type variable_list SEMI_COMA
  159                           | . CONST type variable_list SEMI_COMA
  160                           | . enum
  167 return_statement: . RETURN expr SEMI_COMA
  168 loop_statement: . for_loop
  169               | . while_loop
  170               | . do_while
  171 do_while: . do_header statement while_loop_header SEMI_COMA
  171         | do_header . statement while_loop_header SEMI_COMA
  172 do_header: . DO
  173 for_loop: . for_loop_header statement
  174 for_loop_header: . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  175                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  178                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  179                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  180                | . fOR_OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  181                | . fOR_OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  182 fOR_OPEN_P: . FOR OPEN_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR
  237 while_loop: . while_loop_header statement
  238 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  239 conditional_statement: . if_header statement
  240                      | . if_header statement ELSE statement
  241                      | . switch_header switch_body
  242 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  243 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  263 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  264     | . ENUM IDENTIFIER SEMI_COMA
  269 try_catch: . TRY statement catch_list finally_statement
  270          | . TRY statement catch_list

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 97
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 99
    TRY         shift, and go to state 179
    THROW       shift, and go to state 180
    AT_ASM      shift, and go to state 181

    type                        go to state 182
    struct_type                 go to state 104
    enum_type                   go to state 105
    simple_type                 go to state 106
    complex_type                go to state 107
    block_body                  go to state 183
    block_body_header           go to state 116
    statement                   go to state 276
    throw_statement             go to state 187
    asm                         go to state 188
    variable_declaration_block  go to state 189
    return_statement            go to state 190
    loop_statement              go to state 191
    do_while                    go to state 192
    do_header                   go to state 193
    for_loop                    go to state 194
    for_loop_header             go to state 195
    fOR_OPEN_P                  go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 194

  168 loop_statement: for_loop .

    $default  reduce using rule 168 (loop_statement)


State 195

   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . long_id SEMI_COMA
  154          | . throw_statement
  155          | . error SEMI_COMA
  156 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  157 asm: . AT_ASM STRING_VAL SEMI_COMA
  158 variable_declaration_block: . type variable_list SEMI_COMA
  159                           | . CONST type variable_list SEMI_COMA
  160                           | . enum
  167 return_statement: . RETURN expr SEMI_COMA
  168 loop_statement: . for_loop
  169               | . while_loop
  170               | . do_while
  171 do_while: . do_header statement while_loop_header SEMI_COMA
  172 do_header: . DO
  173 for_loop: . for_loop_header statement
  173         | for_loop_header . statement
  174 for_loop_header: . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  175                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  178                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  179                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  180                | . fOR_OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  181                | . fOR_OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  182 fOR_OPEN_P: . FOR OPEN_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR
  237 while_loop: . while_loop_header statement
  238 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  239 conditional_statement: . if_header statement
  240                      | . if_header statement ELSE statement
  241                      | . switch_header switch_body
  242 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  243 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  263 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  264     | . ENUM IDENTIFIER SEMI_COMA
  269 try_catch: . TRY statement catch_list finally_statement
  270          | . TRY statement catch_list

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 97
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 99
    TRY         shift, and go to state 179
    THROW       shift, and go to state 180
    AT_ASM      shift, and go to state 181

    type                        go to state 182
    struct_type                 go to state 104
    enum_type                   go to state 105
    simple_type                 go to state 106
    complex_type                go to state 107
    block_body                  go to state 183
    block_body_header           go to state 116
    statement                   go to state 277
    throw_statement             go to state 187
    asm                         go to state 188
    variable_declaration_block  go to state 189
    return_statement            go to state 190
    loop_statement              go to state 191
    do_while                    go to state 192
    do_header                   go to state 193
    for_loop                    go to state 194
    for_loop_header             go to state 195
    fOR_OPEN_P                  go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 196

  174 for_loop_header: fOR_OPEN_P . for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  175                | fOR_OPEN_P . SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | fOR_OPEN_P . for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | fOR_OPEN_P . for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  178                | fOR_OPEN_P . for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  179                | fOR_OPEN_P . SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  180                | fOR_OPEN_P . SEMI_COMA SEMI_COMA expr CLOSE_P
  181                | fOR_OPEN_P . SEMI_COMA SEMI_COMA CLOSE_P
  183 for_initializer: . INT IDENTIFIER EQUAL expr
  184                | . IDENTIFIER EQUAL expr
  185                | . IDENTIFIER

    IDENTIFIER  shift, and go to state 278
    INT         shift, and go to state 279
    SEMI_COMA   shift, and go to state 280

    for_initializer  go to state 281


State 197

  147 statement: assign_expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 282


State 198

  153 statement: long_id . SEMI_COMA
  202 assign_expr: long_id . EQUAL simple_expr
  203 long_id: long_id . DOT IDENTIFIER
  207 array_access: long_id . OPEN_ARR simple_expr CLOSE_ARR

    SEMI_COMA  shift, and go to state 283
    EQUAL      shift, and go to state 284
    OPEN_ARR   shift, and go to state 285
    DOT        shift, and go to state 286


State 199

  206 long_id: array_access .

    $default  reduce using rule 206 (long_id)


State 200

  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR
  226             | message_call2 . sender message CLOSE_ARR
  227 sender: . message_call
  228       | . IDENTIFIER

    IDENTIFIER  shift, and go to state 287
    OPEN_ARR    shift, and go to state 177

    message_call2  go to state 200
    message_call   go to state 288
    sender         go to state 289


State 201

  204 long_id: message_call .

    $default  reduce using rule 204 (long_id)


State 202

  169 loop_statement: while_loop .

    $default  reduce using rule 169 (loop_statement)


State 203

   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . long_id SEMI_COMA
  154          | . throw_statement
  155          | . error SEMI_COMA
  156 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  157 asm: . AT_ASM STRING_VAL SEMI_COMA
  158 variable_declaration_block: . type variable_list SEMI_COMA
  159                           | . CONST type variable_list SEMI_COMA
  160                           | . enum
  167 return_statement: . RETURN expr SEMI_COMA
  168 loop_statement: . for_loop
  169               | . while_loop
  170               | . do_while
  171 do_while: . do_header statement while_loop_header SEMI_COMA
  172 do_header: . DO
  173 for_loop: . for_loop_header statement
  174 for_loop_header: . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  175                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  178                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  179                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  180                | . fOR_OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  181                | . fOR_OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  182 fOR_OPEN_P: . FOR OPEN_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR
  237 while_loop: . while_loop_header statement
  237           | while_loop_header . statement
  238 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  239 conditional_statement: . if_header statement
  240                      | . if_header statement ELSE statement
  241                      | . switch_header switch_body
  242 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  243 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  263 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  264     | . ENUM IDENTIFIER SEMI_COMA
  269 try_catch: . TRY statement catch_list finally_statement
  270          | . TRY statement catch_list

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 97
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 99
    TRY         shift, and go to state 179
    THROW       shift, and go to state 180
    AT_ASM      shift, and go to state 181

    type                        go to state 182
    struct_type                 go to state 104
    enum_type                   go to state 105
    simple_type                 go to state 106
    complex_type                go to state 107
    block_body                  go to state 183
    block_body_header           go to state 116
    statement                   go to state 290
    throw_statement             go to state 187
    asm                         go to state 188
    variable_declaration_block  go to state 189
    return_statement            go to state 190
    loop_statement              go to state 191
    do_while                    go to state 192
    do_header                   go to state 193
    for_loop                    go to state 194
    for_loop_header             go to state 195
    fOR_OPEN_P                  go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 204

  146 statement: conditional_statement .

    $default  reduce using rule 146 (statement)


State 205

   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . long_id SEMI_COMA
  154          | . throw_statement
  155          | . error SEMI_COMA
  156 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  157 asm: . AT_ASM STRING_VAL SEMI_COMA
  158 variable_declaration_block: . type variable_list SEMI_COMA
  159                           | . CONST type variable_list SEMI_COMA
  160                           | . enum
  167 return_statement: . RETURN expr SEMI_COMA
  168 loop_statement: . for_loop
  169               | . while_loop
  170               | . do_while
  171 do_while: . do_header statement while_loop_header SEMI_COMA
  172 do_header: . DO
  173 for_loop: . for_loop_header statement
  174 for_loop_header: . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  175                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  178                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  179                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  180                | . fOR_OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  181                | . fOR_OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  182 fOR_OPEN_P: . FOR OPEN_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR
  237 while_loop: . while_loop_header statement
  238 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  239 conditional_statement: . if_header statement
  239                      | if_header . statement
  240                      | . if_header statement ELSE statement
  240                      | if_header . statement ELSE statement
  241                      | . switch_header switch_body
  242 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  243 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  263 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  264     | . ENUM IDENTIFIER SEMI_COMA
  269 try_catch: . TRY statement catch_list finally_statement
  270          | . TRY statement catch_list

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 97
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 99
    TRY         shift, and go to state 179
    THROW       shift, and go to state 180
    AT_ASM      shift, and go to state 181

    type                        go to state 182
    struct_type                 go to state 104
    enum_type                   go to state 105
    simple_type                 go to state 106
    complex_type                go to state 107
    block_body                  go to state 183
    block_body_header           go to state 116
    statement                   go to state 291
    throw_statement             go to state 187
    asm                         go to state 188
    variable_declaration_block  go to state 189
    return_statement            go to state 190
    loop_statement              go to state 191
    do_while                    go to state 192
    do_header                   go to state 193
    for_loop                    go to state 194
    for_loop_header             go to state 195
    fOR_OPEN_P                  go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 206

  241 conditional_statement: switch_header . switch_body
  245 switch_body: . list_of_case default_case CLOSE_S
  246            | . list_of_case CLOSE_S
  247            | . default_case CLOSE_S
  248            | . CLOSE_S
  249 list_of_case: . list_of_case case_body
  250             | . case_body
  251 case_body: . CASE expr SEMI_COLUMN statement BREAK SEMI_COMA
  252          | . CASE expr SEMI_COLUMN statement
  253          | . CASE expr SEMI_COLUMN BREAK SEMI_COMA
  254 default_case: . DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  255             | . DEFAULT SEMI_COLUMN statement
  256             | . DEFAULT SEMI_COLUMN BREAK SEMI_COMA

    CLOSE_S  shift, and go to state 292
    CASE     shift, and go to state 293
    DEFAULT  shift, and go to state 294

    switch_body   go to state 295
    list_of_case  go to state 296
    case_body     go to state 297
    default_case  go to state 298


State 207

  160 variable_declaration_block: enum .

    $default  reduce using rule 160 (variable_declaration_block)


State 208

  151 statement: try_catch .

    $default  reduce using rule 151 (statement)


State 209

  259 protocol_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 259 (protocol_body)


State 210

  265 list_expr: . IDENTIFIER EQUAL expr COMMA list_expr
  266          | . IDENTIFIER EQUAL expr
  267          | . IDENTIFIER
  268          | . IDENTIFIER COMMA list_expr
  268          | IDENTIFIER COMMA . list_expr

    IDENTIFIER  shift, and go to state 124

    list_expr  go to state 299


State 211

  114 p_type: . OPEN_P type CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR
  265 list_expr: IDENTIFIER EQUAL . expr COMMA list_expr
  266          | IDENTIFIER EQUAL . expr

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    expr           go to state 300
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 212

  263 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 301


State 213

   49 variable_declaration_list: variable_declaration_list variable_declarationxx .

    $default  reduce using rule 49 (variable_declaration_list)


State 214

   34 ids_list_identifier: ids_list_identifier COMMA IDENTIFIER .

    $default  reduce using rule 34 (ids_list_identifier)


State 215

  122 parameter: p_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 302


State 216

  119 selector_decleration: IDENTIFIER SEMI_COLUMN parameter_list .  [error, IDENTIFIER, SEMI_COMA, OPEN_S]
  120 parameter_list: parameter_list . SEMI_COLUMN parameter

    SEMI_COLUMN  shift, and go to state 303

    $default  reduce using rule 119 (selector_decleration)


State 217

  121 parameter_list: parameter .

    $default  reduce using rule 121 (parameter_list)


State 218

  114 p_type: OPEN_P type CLOSE_P .

    $default  reduce using rule 114 (p_type)


State 219

  111 class_method_declaration: PLUS p_type method_selectors error .

    $default  reduce using rule 111 (class_method_declaration)


State 220

  110 class_method_declaration: PLUS p_type method_selectors SEMI_COMA .

    $default  reduce using rule 110 (class_method_declaration)


State 221

  113 instance_method_declaration: MINUS p_type method_selectors SEMI_COMA .

    $default  reduce using rule 113 (instance_method_declaration)


State 222

   24 class_interface_body: protocol_reference_list error interface_declaration_list AT_END .

    $default  reduce using rule 24 (class_interface_body)


State 223

   26 class_interface_body: protocol_reference_list instance_variables interface_declaration_list error .

    $default  reduce using rule 26 (class_interface_body)


State 224

   15 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 15 (class_interface_body)


State 225

   75 struct: struct_header OPEN_S CLOSE_S error SEMI_COMA .

    $default  reduce using rule 75 (struct)


State 226

   79 entity: error COMMA .

    $default  reduce using rule 79 (entity)


State 227

   77 entity: . IDENTIFIER COMMA entity
   77       | IDENTIFIER COMMA . entity
   78       | . IDENTIFIER
   79       | . error COMMA

    error       shift, and go to state 304
    IDENTIFIER  shift, and go to state 152

    entity  go to state 305


State 228

   73 struct: struct_header OPEN_S CLOSE_S entity error . SEMI_COMA

    SEMI_COMA  shift, and go to state 306


State 229

   69 struct: struct_header OPEN_S CLOSE_S entity SEMI_COMA .

    $default  reduce using rule 69 (struct)


State 230

   61 data_member: IDENTIFIER . array_tag
   62            | IDENTIFIER .  [SEMI_COMA, COMMA]
   64            | IDENTIFIER . error
   96 array_tag: . array_first_tag array_tag_list
  100 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  101                | . OPEN_ARR CLOSE_ARR

    error     shift, and go to state 240
    OPEN_ARR  shift, and go to state 237

    SEMI_COMA  reduce using rule 62 (data_member)
    COMMA      reduce using rule 62 (data_member)

    array_tag        go to state 307
    array_first_tag  go to state 239


State 231

   56 variable_declarationxx: CONST type ids_list . SEMI_COMA
   58 ids_list: ids_list . COMMA data_member

    SEMI_COMA  shift, and go to state 308
    COMMA      shift, and go to state 243


State 232

   87 enum_type: ENUM IDENTIFIER MULTI .

    $default  reduce using rule 87 (enum_type)


State 233

   85 struct_type: STRUCT IDENTIFIER MULTI .

    $default  reduce using rule 85 (struct_type)


State 234

   76 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S error . SEMI_COMA
   79 entity: error . COMMA

    SEMI_COMA  shift, and go to state 309
    COMMA      shift, and go to state 226


State 235

   72 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S SEMI_COMA .

    $default  reduce using rule 72 (struct)


State 236

   70 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity . SEMI_COMA
   74       | struct_header OPEN_S struct_variable_declaration CLOSE_S entity . error SEMI_COMA

    error      shift, and go to state 310
    SEMI_COMA  shift, and go to state 311


State 237

  100 array_first_tag: OPEN_ARR . INT_VAL CLOSE_ARR
  101                | OPEN_ARR . CLOSE_ARR

    INT_VAL    shift, and go to state 312
    CLOSE_ARR  shift, and go to state 313


State 238

   63 data_member: error array_tag .

    $default  reduce using rule 63 (data_member)


State 239

   96 array_tag: array_first_tag . array_tag_list
   97 array_tag_list: . array_tag_list OPEN_ARR INT_VAL CLOSE_ARR
   98               | .
   99               | . array_tag_list OPEN_ARR error CLOSE_ARR

    $default  reduce using rule 98 (array_tag_list)

    array_tag_list  go to state 314


State 240

   64 data_member: IDENTIFIER error .

    $default  reduce using rule 64 (data_member)


State 241

   57 variable_declarationxx: type IDENTIFIER array_tag . error
   61 data_member: IDENTIFIER array_tag .  [SEMI_COMA, COMMA]

    error  shift, and go to state 315

    SEMI_COMA  reduce using rule 61 (data_member)
    COMMA      reduce using rule 61 (data_member)


State 242

   55 variable_declarationxx: type ids_list SEMI_COMA .

    $default  reduce using rule 55 (variable_declarationxx)


State 243

   58 ids_list: ids_list COMMA . data_member
   61 data_member: . IDENTIFIER array_tag
   62            | . IDENTIFIER
   63            | . error array_tag
   64            | . IDENTIFIER error

    error       shift, and go to state 316
    IDENTIFIER  shift, and go to state 230

    data_member  go to state 317


State 244

  155 statement: error SEMI_COMA .

    $default  reduce using rule 155 (statement)


State 245

  142 block_body_statements: error CLOSE_S .

    $default  reduce using rule 142 (block_body_statements)


State 246

  159 variable_declaration_block: CONST type . variable_list SEMI_COMA
  161 variable_list: . variable_list COMMA variable
  162              | . variable
  163              | . variable_list error variable
  164 variable: . IDENTIFIER array_tag initializer
  165         | . IDENTIFIER main_initializer
  166         | . error array_tag initializer

    error       shift, and go to state 270
    IDENTIFIER  shift, and go to state 271

    variable_list  go to state 318
    variable       go to state 273


State 247

  182 fOR_OPEN_P: FOR OPEN_P .

    $default  reduce using rule 182 (fOR_OPEN_P)


State 248

  114 p_type: . OPEN_P type CLOSE_P
  186 logic_expr1: . logic_expr1 AND_AND logic_expr
  187            | . logic_expr1 OR_OR logic_expr
  188            | . logic_expr
  189 logic_expr: . expr LESS_THAN expr
  190           | . expr MORE_THAN expr
  191           | . expr LESS_OR_EQUAL expr
  192           | . expr MORE_OR_EQUAL expr
  193           | . expr EQUAL_EQUAL expr
  194           | . expr NOT_EQUAL expr
  195           | . NOT_EQUAL expr
  196           | . OPEN_P logic_expr CLOSE_P
  197           | . TRUE
  198           | . FALSE
  199           | . long_id
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR
  238 while_loop_header: WHILE OPEN_P . logic_expr1 CLOSE_P

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 319
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 320
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 321
    FALSE        shift, and go to state 322
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    logic_expr1    go to state 323
    logic_expr     go to state 324
    expr           go to state 325
    assign_expr    go to state 263
    long_id        go to state 326
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 249

  114 p_type: . OPEN_P type CLOSE_P
  186 logic_expr1: . logic_expr1 AND_AND logic_expr
  187            | . logic_expr1 OR_OR logic_expr
  188            | . logic_expr
  189 logic_expr: . expr LESS_THAN expr
  190           | . expr MORE_THAN expr
  191           | . expr LESS_OR_EQUAL expr
  192           | . expr MORE_OR_EQUAL expr
  193           | . expr EQUAL_EQUAL expr
  194           | . expr NOT_EQUAL expr
  195           | . NOT_EQUAL expr
  196           | . OPEN_P logic_expr CLOSE_P
  197           | . TRUE
  198           | . FALSE
  199           | . long_id
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR
  242 if_header: IF OPEN_P . logic_expr1 CLOSE_P

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 319
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 320
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 321
    FALSE        shift, and go to state 322
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    logic_expr1    go to state 327
    logic_expr     go to state 324
    expr           go to state 325
    assign_expr    go to state 263
    long_id        go to state 326
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 250

  243 switch_header: SWITCH OPEN_P . IDENTIFIER CLOSE_P switch_body_block

    IDENTIFIER  shift, and go to state 328


State 251

   86 enum_type: ENUM IDENTIFIER .  [error, IDENTIFIER]
   87          | ENUM IDENTIFIER . MULTI
  263 enum: ENUM IDENTIFIER . OPEN_S list_expr CLOSE_S SEMI_COMA
  264     | ENUM IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 58
    OPEN_S     shift, and go to state 59
    MULTI      shift, and go to state 232

    $default  reduce using rule 86 (enum_type)


State 252

  205 long_id: IDENTIFIER .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, EQUAL, DIV, DIV_R, OPEN_ARR, CLOSE_ARR, DOT]
  220 simple_expr: IDENTIFIER . DOUBLEPLUS
  221            | IDENTIFIER . DOUBLEMINUS

    DOUBLEPLUS   shift, and go to state 329
    DOUBLEMINUS  shift, and go to state 330

    $default  reduce using rule 205 (long_id)


State 253

   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  114 p_type: . OPEN_P type CLOSE_P
  114       | OPEN_P . type CLOSE_P
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  219            | OPEN_P . simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 331
    NSSTRING     shift, and go to state 89
    FLOAT        shift, and go to state 90
    CHAR         shift, and go to state 91
    BOOL         shift, and go to state 92
    INT          shift, and go to state 93
    ID           shift, and go to state 94
    VOID         shift, and go to state 97
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    ENUM         shift, and go to state 98
    OPEN_ARR     shift, and go to state 177
    STRUCT       shift, and go to state 99
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    type           go to state 134
    struct_type    go to state 104
    enum_type      go to state 105
    simple_type    go to state 106
    complex_type   go to state 107
    p_type         go to state 261
    long_id        go to state 332
    array_access   go to state 199
    simple_expr    go to state 333
    message_call2  go to state 200
    message_call   go to state 201


State 254

  208 simple_expr: STRING_VAL .

    $default  reduce using rule 208 (simple_expr)


State 255

  211 simple_expr: FLOAT_VAL .

    $default  reduce using rule 211 (simple_expr)


State 256

  212 simple_expr: CHAR_VAL .

    $default  reduce using rule 212 (simple_expr)


State 257

  209 simple_expr: INT_VAL .

    $default  reduce using rule 209 (simple_expr)


State 258

  222 simple_expr: DOUBLEPLUS . IDENTIFIER

    IDENTIFIER  shift, and go to state 334


State 259

  223 simple_expr: DOUBLEMINUS . IDENTIFIER

    IDENTIFIER  shift, and go to state 335


State 260

  210 simple_expr: NULL_TOK .

    $default  reduce using rule 210 (simple_expr)


State 261

  114 p_type: . OPEN_P type CLOSE_P
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  224            | p_type . simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    long_id        go to state 332
    array_access   go to state 199
    simple_expr    go to state 336
    message_call2  go to state 200
    message_call   go to state 201


State 262

  167 return_statement: RETURN expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 337


State 263

  200 expr: assign_expr .

    $default  reduce using rule 200 (expr)


State 264

  202 assign_expr: long_id . EQUAL simple_expr
  203 long_id: long_id . DOT IDENTIFIER
  207 array_access: long_id . OPEN_ARR simple_expr CLOSE_ARR
  213 simple_expr: long_id .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, MULTI, DIV, DIV_R, CLOSE_ARR]

    EQUAL     shift, and go to state 284
    OPEN_ARR  shift, and go to state 285
    DOT       shift, and go to state 286

    $default  reduce using rule 213 (simple_expr)


State 265

  201 expr: simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL, CLOSE_ARR]
  214 simple_expr: simple_expr . PLUS simple_expr
  215            | simple_expr . MINUS simple_expr
  216            | simple_expr . MULTI simple_expr
  217            | simple_expr . DIV simple_expr
  218            | simple_expr . DIV_R simple_expr

    PLUS   shift, and go to state 338
    MINUS  shift, and go to state 339
    MULTI  shift, and go to state 340
    DIV    shift, and go to state 341
    DIV_R  shift, and go to state 342

    $default  reduce using rule 201 (expr)


State 266

  155 statement: error . SEMI_COMA

    SEMI_COMA  shift, and go to state 244


State 267

  269 try_catch: TRY statement . catch_list finally_statement
  270          | TRY statement . catch_list
  271 catch_list: . one_catch
  272           | . catch_list one_catch
  273 one_catch: . one_catch_header statement
  274 one_catch_header: . CATCH OPEN_P type IDENTIFIER CLOSE_P

    CATCH  shift, and go to state 343

    catch_list        go to state 344
    one_catch         go to state 345
    one_catch_header  go to state 346


State 268

  156 throw_statement: THROW OPEN_P . message_call CLOSE_P SEMI_COMA
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    OPEN_ARR  shift, and go to state 177

    message_call2  go to state 200
    message_call   go to state 347


State 269

  157 asm: AT_ASM STRING_VAL . SEMI_COMA

    SEMI_COMA  shift, and go to state 348


State 270

   96 array_tag: . array_first_tag array_tag_list
  100 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  101                | . OPEN_ARR CLOSE_ARR
  166 variable: error . array_tag initializer

    OPEN_ARR  shift, and go to state 237

    array_tag        go to state 349
    array_first_tag  go to state 239


State 271

   96 array_tag: . array_first_tag array_tag_list
  100 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  101                | . OPEN_ARR CLOSE_ARR
  104 main_initializer: . EQUAL expr
  105                 | .  [error, SEMI_COMA, COMMA]
  164 variable: IDENTIFIER . array_tag initializer
  165         | IDENTIFIER . main_initializer

    EQUAL     shift, and go to state 350
    OPEN_ARR  shift, and go to state 237

    $default  reduce using rule 105 (main_initializer)

    array_tag         go to state 351
    array_first_tag   go to state 239
    main_initializer  go to state 352


State 272

  158 variable_declaration_block: type variable_list . SEMI_COMA
  161 variable_list: variable_list . COMMA variable
  163              | variable_list . error variable

    error      shift, and go to state 353
    SEMI_COMA  shift, and go to state 354
    COMMA      shift, and go to state 355


State 273

  162 variable_list: variable .

    $default  reduce using rule 162 (variable_list)


State 274

  140 block_body_statements: statement_list CLOSE_S .

    $default  reduce using rule 140 (block_body_statements)


State 275

  143 statement_list: statement_list statement .

    $default  reduce using rule 143 (statement_list)


State 276

  171 do_while: do_header statement . while_loop_header SEMI_COMA
  238 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P

    WHILE  shift, and go to state 172

    while_loop_header  go to state 356


State 277

  173 for_loop: for_loop_header statement .

    $default  reduce using rule 173 (for_loop)


State 278

  184 for_initializer: IDENTIFIER . EQUAL expr
  185                | IDENTIFIER .  [SEMI_COMA]

    EQUAL  shift, and go to state 357

    $default  reduce using rule 185 (for_initializer)


State 279

  183 for_initializer: INT . IDENTIFIER EQUAL expr

    IDENTIFIER  shift, and go to state 358


State 280

  114 p_type: . OPEN_P type CLOSE_P
  175 for_loop_header: fOR_OPEN_P SEMI_COMA . logic_expr1 SEMI_COMA expr CLOSE_P
  179                | fOR_OPEN_P SEMI_COMA . logic_expr1 SEMI_COMA CLOSE_P
  180                | fOR_OPEN_P SEMI_COMA . SEMI_COMA expr CLOSE_P
  181                | fOR_OPEN_P SEMI_COMA . SEMI_COMA CLOSE_P
  186 logic_expr1: . logic_expr1 AND_AND logic_expr
  187            | . logic_expr1 OR_OR logic_expr
  188            | . logic_expr
  189 logic_expr: . expr LESS_THAN expr
  190           | . expr MORE_THAN expr
  191           | . expr LESS_OR_EQUAL expr
  192           | . expr MORE_OR_EQUAL expr
  193           | . expr EQUAL_EQUAL expr
  194           | . expr NOT_EQUAL expr
  195           | . NOT_EQUAL expr
  196           | . OPEN_P logic_expr CLOSE_P
  197           | . TRUE
  198           | . FALSE
  199           | . long_id
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    SEMI_COMA    shift, and go to state 359
    OPEN_P       shift, and go to state 319
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 320
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 321
    FALSE        shift, and go to state 322
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    logic_expr1    go to state 360
    logic_expr     go to state 324
    expr           go to state 325
    assign_expr    go to state 263
    long_id        go to state 326
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 281

  174 for_loop_header: fOR_OPEN_P for_initializer . SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | fOR_OPEN_P for_initializer . SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | fOR_OPEN_P for_initializer . SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  178                | fOR_OPEN_P for_initializer . SEMI_COMA SEMI_COMA CLOSE_P

    SEMI_COMA  shift, and go to state 361


State 282

  147 statement: assign_expr SEMI_COMA .

    $default  reduce using rule 147 (statement)


State 283

  153 statement: long_id SEMI_COMA .

    $default  reduce using rule 153 (statement)


State 284

  114 p_type: . OPEN_P type CLOSE_P
  202 assign_expr: long_id EQUAL . simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    long_id        go to state 332
    array_access   go to state 199
    simple_expr    go to state 362
    message_call2  go to state 200
    message_call   go to state 201


State 285

  114 p_type: . OPEN_P type CLOSE_P
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  207             | long_id OPEN_ARR . simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    long_id        go to state 332
    array_access   go to state 199
    simple_expr    go to state 363
    message_call2  go to state 200
    message_call   go to state 201


State 286

  203 long_id: long_id DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 364


State 287

  228 sender: IDENTIFIER .

    $default  reduce using rule 228 (sender)


State 288

  227 sender: message_call .

    $default  reduce using rule 227 (sender)


State 289

  226 message_call: message_call2 sender . message CLOSE_ARR
  229 message: . IDENTIFIER
  230        | . message_selectors_list
  231 message_selectors_list: . message_selectors_list message_selector
  232                       | . message_selector
  233 message_selector: . IDENTIFIER SEMI_COLUMN argument_list

    IDENTIFIER  shift, and go to state 365

    message                 go to state 366
    message_selectors_list  go to state 367
    message_selector        go to state 368


State 290

  237 while_loop: while_loop_header statement .

    $default  reduce using rule 237 (while_loop)


State 291

  239 conditional_statement: if_header statement .  [error, IDENTIFIER, NSSTRING, FLOAT, CHAR, BOOL, INT, ID, OPEN_S, CLOSE_S, CONST, VOID, FOR, WHILE, IF, DO, SWITCH, CASE, DEFAULT, BREAK, ENUM, OPEN_ARR, RETURN, STRUCT, TRY, CATCH, THROW, FINALLY, AT_ASM]
  240                      | if_header statement . ELSE statement

    ELSE  shift, and go to state 369

    $default  reduce using rule 239 (conditional_statement)

    Conflict between rule 239 and token ELSE resolved as shift (if_h < ELSE).


State 292

  248 switch_body: CLOSE_S .

    $default  reduce using rule 248 (switch_body)


State 293

  114 p_type: . OPEN_P type CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR
  251 case_body: CASE . expr SEMI_COLUMN statement BREAK SEMI_COMA
  252          | CASE . expr SEMI_COLUMN statement
  253          | CASE . expr SEMI_COLUMN BREAK SEMI_COMA

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    expr           go to state 370
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 294

  254 default_case: DEFAULT . SEMI_COLUMN statement BREAK SEMI_COMA
  255             | DEFAULT . SEMI_COLUMN statement
  256             | DEFAULT . SEMI_COLUMN BREAK SEMI_COMA

    SEMI_COLUMN  shift, and go to state 371


State 295

  241 conditional_statement: switch_header switch_body .

    $default  reduce using rule 241 (conditional_statement)


State 296

  245 switch_body: list_of_case . default_case CLOSE_S
  246            | list_of_case . CLOSE_S
  249 list_of_case: list_of_case . case_body
  251 case_body: . CASE expr SEMI_COLUMN statement BREAK SEMI_COMA
  252          | . CASE expr SEMI_COLUMN statement
  253          | . CASE expr SEMI_COLUMN BREAK SEMI_COMA
  254 default_case: . DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  255             | . DEFAULT SEMI_COLUMN statement
  256             | . DEFAULT SEMI_COLUMN BREAK SEMI_COMA

    CLOSE_S  shift, and go to state 372
    CASE     shift, and go to state 293
    DEFAULT  shift, and go to state 294

    case_body     go to state 373
    default_case  go to state 374


State 297

  250 list_of_case: case_body .

    $default  reduce using rule 250 (list_of_case)


State 298

  247 switch_body: default_case . CLOSE_S

    CLOSE_S  shift, and go to state 375


State 299

  268 list_expr: IDENTIFIER COMMA list_expr .

    $default  reduce using rule 268 (list_expr)


State 300

  265 list_expr: IDENTIFIER EQUAL expr . COMMA list_expr
  266          | IDENTIFIER EQUAL expr .  [CLOSE_S]

    COMMA  shift, and go to state 376

    $default  reduce using rule 266 (list_expr)


State 301

  263 enum: ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA .

    $default  reduce using rule 263 (enum)


State 302

  122 parameter: p_type IDENTIFIER .

    $default  reduce using rule 122 (parameter)


State 303

  114 p_type: . OPEN_P type CLOSE_P
  120 parameter_list: parameter_list SEMI_COLUMN . parameter
  122 parameter: . p_type IDENTIFIER

    OPEN_P  shift, and go to state 71

    p_type     go to state 215
    parameter  go to state 377


State 304

   79 entity: error . COMMA

    COMMA  shift, and go to state 226


State 305

   77 entity: IDENTIFIER COMMA entity .

    $default  reduce using rule 77 (entity)


State 306

   73 struct: struct_header OPEN_S CLOSE_S entity error SEMI_COMA .

    $default  reduce using rule 73 (struct)


State 307

   61 data_member: IDENTIFIER array_tag .

    $default  reduce using rule 61 (data_member)


State 308

   56 variable_declarationxx: CONST type ids_list SEMI_COMA .

    $default  reduce using rule 56 (variable_declarationxx)


State 309

   76 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S error SEMI_COMA .

    $default  reduce using rule 76 (struct)


State 310

   74 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity error . SEMI_COMA

    SEMI_COMA  shift, and go to state 378


State 311

   70 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity SEMI_COMA .

    $default  reduce using rule 70 (struct)


State 312

  100 array_first_tag: OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 379


State 313

  101 array_first_tag: OPEN_ARR CLOSE_ARR .

    $default  reduce using rule 101 (array_first_tag)


State 314

   96 array_tag: array_first_tag array_tag_list .  [error, SEMI_COMA, COMMA, EQUAL]
   97 array_tag_list: array_tag_list . OPEN_ARR INT_VAL CLOSE_ARR
   99               | array_tag_list . OPEN_ARR error CLOSE_ARR

    OPEN_ARR  shift, and go to state 380

    $default  reduce using rule 96 (array_tag)


State 315

   57 variable_declarationxx: type IDENTIFIER array_tag error .

    $default  reduce using rule 57 (variable_declarationxx)


State 316

   63 data_member: error . array_tag
   96 array_tag: . array_first_tag array_tag_list
  100 array_first_tag: . OPEN_ARR INT_VAL CLOSE_ARR
  101                | . OPEN_ARR CLOSE_ARR

    OPEN_ARR  shift, and go to state 237

    array_tag        go to state 238
    array_first_tag  go to state 239


State 317

   58 ids_list: ids_list COMMA data_member .

    $default  reduce using rule 58 (ids_list)


State 318

  159 variable_declaration_block: CONST type variable_list . SEMI_COMA
  161 variable_list: variable_list . COMMA variable
  163              | variable_list . error variable

    error      shift, and go to state 353
    SEMI_COMA  shift, and go to state 381
    COMMA      shift, and go to state 355


State 319

   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  114 p_type: . OPEN_P type CLOSE_P
  114       | OPEN_P . type CLOSE_P
  189 logic_expr: . expr LESS_THAN expr
  190           | . expr MORE_THAN expr
  191           | . expr LESS_OR_EQUAL expr
  192           | . expr MORE_OR_EQUAL expr
  193           | . expr EQUAL_EQUAL expr
  194           | . expr NOT_EQUAL expr
  195           | . NOT_EQUAL expr
  196           | . OPEN_P logic_expr CLOSE_P
  196           | OPEN_P . logic_expr CLOSE_P
  197           | . TRUE
  198           | . FALSE
  199           | . long_id
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  219            | OPEN_P . simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 331
    NSSTRING     shift, and go to state 89
    FLOAT        shift, and go to state 90
    CHAR         shift, and go to state 91
    BOOL         shift, and go to state 92
    INT          shift, and go to state 93
    ID           shift, and go to state 94
    VOID         shift, and go to state 97
    OPEN_P       shift, and go to state 319
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 320
    ENUM         shift, and go to state 98
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 321
    FALSE        shift, and go to state 322
    STRUCT       shift, and go to state 99
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    type           go to state 134
    struct_type    go to state 104
    enum_type      go to state 105
    simple_type    go to state 106
    complex_type   go to state 107
    p_type         go to state 261
    logic_expr     go to state 382
    expr           go to state 325
    assign_expr    go to state 263
    long_id        go to state 326
    array_access   go to state 199
    simple_expr    go to state 383
    message_call2  go to state 200
    message_call   go to state 201


State 320

  114 p_type: . OPEN_P type CLOSE_P
  195 logic_expr: NOT_EQUAL . expr
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    expr           go to state 384
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 321

  197 logic_expr: TRUE .

    $default  reduce using rule 197 (logic_expr)


State 322

  198 logic_expr: FALSE .

    $default  reduce using rule 198 (logic_expr)


State 323

  186 logic_expr1: logic_expr1 . AND_AND logic_expr
  187            | logic_expr1 . OR_OR logic_expr
  238 while_loop_header: WHILE OPEN_P logic_expr1 . CLOSE_P

    CLOSE_P  shift, and go to state 385
    AND_AND  shift, and go to state 386
    OR_OR    shift, and go to state 387


State 324

  188 logic_expr1: logic_expr .

    $default  reduce using rule 188 (logic_expr1)


State 325

  189 logic_expr: expr . LESS_THAN expr
  190           | expr . MORE_THAN expr
  191           | expr . LESS_OR_EQUAL expr
  192           | expr . MORE_OR_EQUAL expr
  193           | expr . EQUAL_EQUAL expr
  194           | expr . NOT_EQUAL expr

    LESS_THAN      shift, and go to state 388
    MORE_THAN      shift, and go to state 389
    LESS_OR_EQUAL  shift, and go to state 390
    MORE_OR_EQUAL  shift, and go to state 391
    EQUAL_EQUAL    shift, and go to state 392
    NOT_EQUAL      shift, and go to state 393


State 326

  199 logic_expr: long_id .  [SEMI_COMA, CLOSE_P, AND_AND, OR_OR]
  202 assign_expr: long_id . EQUAL simple_expr
  203 long_id: long_id . DOT IDENTIFIER
  207 array_access: long_id . OPEN_ARR simple_expr CLOSE_ARR
  213 simple_expr: long_id .  [LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, DIV, DIV_R]

    EQUAL     shift, and go to state 284
    OPEN_ARR  shift, and go to state 285
    DOT       shift, and go to state 286

    SEMI_COMA  reduce using rule 199 (logic_expr)
    CLOSE_P    reduce using rule 199 (logic_expr)
    CLOSE_P    [reduce using rule 213 (simple_expr)]
    AND_AND    reduce using rule 199 (logic_expr)
    OR_OR      reduce using rule 199 (logic_expr)
    $default   reduce using rule 213 (simple_expr)


State 327

  186 logic_expr1: logic_expr1 . AND_AND logic_expr
  187            | logic_expr1 . OR_OR logic_expr
  242 if_header: IF OPEN_P logic_expr1 . CLOSE_P

    CLOSE_P  shift, and go to state 394
    AND_AND  shift, and go to state 386
    OR_OR    shift, and go to state 387


State 328

  243 switch_header: SWITCH OPEN_P IDENTIFIER . CLOSE_P switch_body_block

    CLOSE_P  shift, and go to state 395


State 329

  220 simple_expr: IDENTIFIER DOUBLEPLUS .

    $default  reduce using rule 220 (simple_expr)


State 330

  221 simple_expr: IDENTIFIER DOUBLEMINUS .

    $default  reduce using rule 221 (simple_expr)


State 331

   95 complex_type: IDENTIFIER . MULTI
  205 long_id: IDENTIFIER .  [LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, EQUAL, DIV, DIV_R, OPEN_ARR, DOT]
  220 simple_expr: IDENTIFIER . DOUBLEPLUS
  221            | IDENTIFIER . DOUBLEMINUS

    DOUBLEPLUS   shift, and go to state 329
    DOUBLEMINUS  shift, and go to state 330

    $default  reduce using rule 205 (long_id)

    Conflict between rule 205 and token MULTI resolved as reduce (MULTI < long_id_prec).


State 332

  203 long_id: long_id . DOT IDENTIFIER
  207 array_access: long_id . OPEN_ARR simple_expr CLOSE_ARR
  213 simple_expr: long_id .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, DIV, DIV_R, CLOSE_ARR]

    OPEN_ARR  shift, and go to state 285
    DOT       shift, and go to state 286

    $default  reduce using rule 213 (simple_expr)


State 333

  214 simple_expr: simple_expr . PLUS simple_expr
  215            | simple_expr . MINUS simple_expr
  216            | simple_expr . MULTI simple_expr
  217            | simple_expr . DIV simple_expr
  218            | simple_expr . DIV_R simple_expr
  219            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 338
    MINUS    shift, and go to state 339
    CLOSE_P  shift, and go to state 396
    MULTI    shift, and go to state 340
    DIV      shift, and go to state 341
    DIV_R    shift, and go to state 342


State 334

  222 simple_expr: DOUBLEPLUS IDENTIFIER .

    $default  reduce using rule 222 (simple_expr)


State 335

  223 simple_expr: DOUBLEMINUS IDENTIFIER .

    $default  reduce using rule 223 (simple_expr)


State 336

  214 simple_expr: simple_expr . PLUS simple_expr
  215            | simple_expr . MINUS simple_expr
  216            | simple_expr . MULTI simple_expr
  217            | simple_expr . DIV simple_expr
  218            | simple_expr . DIV_R simple_expr
  224            | p_type simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL, CLOSE_ARR]

    PLUS   shift, and go to state 338
    MINUS  shift, and go to state 339
    MULTI  shift, and go to state 340
    DIV    shift, and go to state 341
    DIV_R  shift, and go to state 342

    $default  reduce using rule 224 (simple_expr)

    Conflict between rule 224 and token PLUS resolved as shift (p_type_expr_prec < PLUS).
    Conflict between rule 224 and token MINUS resolved as shift (p_type_expr_prec < MINUS).
    Conflict between rule 224 and token MULTI resolved as shift (p_type_expr_prec < MULTI).
    Conflict between rule 224 and token DIV resolved as shift (p_type_expr_prec < DIV).
    Conflict between rule 224 and token DIV_R resolved as shift (p_type_expr_prec < DIV_R).


State 337

  167 return_statement: RETURN expr SEMI_COMA .

    $default  reduce using rule 167 (return_statement)


State 338

  114 p_type: . OPEN_P type CLOSE_P
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  214            | simple_expr PLUS . simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    long_id        go to state 332
    array_access   go to state 199
    simple_expr    go to state 397
    message_call2  go to state 200
    message_call   go to state 201


State 339

  114 p_type: . OPEN_P type CLOSE_P
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  215            | simple_expr MINUS . simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    long_id        go to state 332
    array_access   go to state 199
    simple_expr    go to state 398
    message_call2  go to state 200
    message_call   go to state 201


State 340

  114 p_type: . OPEN_P type CLOSE_P
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  216            | simple_expr MULTI . simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    long_id        go to state 332
    array_access   go to state 199
    simple_expr    go to state 399
    message_call2  go to state 200
    message_call   go to state 201


State 341

  114 p_type: . OPEN_P type CLOSE_P
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  217            | simple_expr DIV . simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    long_id        go to state 332
    array_access   go to state 199
    simple_expr    go to state 400
    message_call2  go to state 200
    message_call   go to state 201


State 342

  114 p_type: . OPEN_P type CLOSE_P
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  218            | simple_expr DIV_R . simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    long_id        go to state 332
    array_access   go to state 199
    simple_expr    go to state 401
    message_call2  go to state 200
    message_call   go to state 201


State 343

  274 one_catch_header: CATCH . OPEN_P type IDENTIFIER CLOSE_P

    OPEN_P  shift, and go to state 402


State 344

  269 try_catch: TRY statement catch_list . finally_statement
  270          | TRY statement catch_list .  [error, IDENTIFIER, NSSTRING, FLOAT, CHAR, BOOL, INT, ID, OPEN_S, CLOSE_S, CONST, VOID, FOR, WHILE, IF, DO, SWITCH, CASE, DEFAULT, BREAK, ENUM, OPEN_ARR, RETURN, ELSE, STRUCT, TRY, THROW, AT_ASM]
  272 catch_list: catch_list . one_catch
  273 one_catch: . one_catch_header statement
  274 one_catch_header: . CATCH OPEN_P type IDENTIFIER CLOSE_P
  275 finally_statement: . FINALLY statement

    CATCH    shift, and go to state 343
    FINALLY  shift, and go to state 403

    $default  reduce using rule 270 (try_catch)

    one_catch          go to state 404
    one_catch_header   go to state 346
    finally_statement  go to state 405

    Conflict between rule 270 and token CATCH resolved as shift (try_prec < CATCH).
    Conflict between rule 270 and token FINALLY resolved as shift (try_prec < FINALLY).


State 345

  271 catch_list: one_catch .

    $default  reduce using rule 271 (catch_list)


State 346

   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . long_id SEMI_COMA
  154          | . throw_statement
  155          | . error SEMI_COMA
  156 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  157 asm: . AT_ASM STRING_VAL SEMI_COMA
  158 variable_declaration_block: . type variable_list SEMI_COMA
  159                           | . CONST type variable_list SEMI_COMA
  160                           | . enum
  167 return_statement: . RETURN expr SEMI_COMA
  168 loop_statement: . for_loop
  169               | . while_loop
  170               | . do_while
  171 do_while: . do_header statement while_loop_header SEMI_COMA
  172 do_header: . DO
  173 for_loop: . for_loop_header statement
  174 for_loop_header: . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  175                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  178                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  179                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  180                | . fOR_OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  181                | . fOR_OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  182 fOR_OPEN_P: . FOR OPEN_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR
  237 while_loop: . while_loop_header statement
  238 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  239 conditional_statement: . if_header statement
  240                      | . if_header statement ELSE statement
  241                      | . switch_header switch_body
  242 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  243 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  263 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  264     | . ENUM IDENTIFIER SEMI_COMA
  269 try_catch: . TRY statement catch_list finally_statement
  270          | . TRY statement catch_list
  273 one_catch: one_catch_header . statement

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 97
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 99
    TRY         shift, and go to state 179
    THROW       shift, and go to state 180
    AT_ASM      shift, and go to state 181

    type                        go to state 182
    struct_type                 go to state 104
    enum_type                   go to state 105
    simple_type                 go to state 106
    complex_type                go to state 107
    block_body                  go to state 183
    block_body_header           go to state 116
    statement                   go to state 406
    throw_statement             go to state 187
    asm                         go to state 188
    variable_declaration_block  go to state 189
    return_statement            go to state 190
    loop_statement              go to state 191
    do_while                    go to state 192
    do_header                   go to state 193
    for_loop                    go to state 194
    for_loop_header             go to state 195
    fOR_OPEN_P                  go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 347

  156 throw_statement: THROW OPEN_P message_call . CLOSE_P SEMI_COMA

    CLOSE_P  shift, and go to state 407


State 348

  157 asm: AT_ASM STRING_VAL SEMI_COMA .

    $default  reduce using rule 157 (asm)


State 349

  102 initializer: . EQUAL array_body
  103            | .  [error, SEMI_COMA, COMMA]
  166 variable: error array_tag . initializer

    EQUAL  shift, and go to state 408

    $default  reduce using rule 103 (initializer)

    initializer  go to state 409


State 350

  104 main_initializer: EQUAL . expr
  114 p_type: . OPEN_P type CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    expr           go to state 410
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 351

  102 initializer: . EQUAL array_body
  103            | .  [error, SEMI_COMA, COMMA]
  164 variable: IDENTIFIER array_tag . initializer

    EQUAL  shift, and go to state 408

    $default  reduce using rule 103 (initializer)

    initializer  go to state 411


State 352

  165 variable: IDENTIFIER main_initializer .

    $default  reduce using rule 165 (variable)


State 353

  163 variable_list: variable_list error . variable
  164 variable: . IDENTIFIER array_tag initializer
  165         | . IDENTIFIER main_initializer
  166         | . error array_tag initializer

    error       shift, and go to state 270
    IDENTIFIER  shift, and go to state 271

    variable  go to state 412


State 354

  158 variable_declaration_block: type variable_list SEMI_COMA .

    $default  reduce using rule 158 (variable_declaration_block)


State 355

  161 variable_list: variable_list COMMA . variable
  164 variable: . IDENTIFIER array_tag initializer
  165         | . IDENTIFIER main_initializer
  166         | . error array_tag initializer

    error       shift, and go to state 270
    IDENTIFIER  shift, and go to state 271

    variable  go to state 413


State 356

  171 do_while: do_header statement while_loop_header . SEMI_COMA

    SEMI_COMA  shift, and go to state 414


State 357

  114 p_type: . OPEN_P type CLOSE_P
  184 for_initializer: IDENTIFIER EQUAL . expr
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    expr           go to state 415
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 358

  183 for_initializer: INT IDENTIFIER . EQUAL expr

    EQUAL  shift, and go to state 416


State 359

  114 p_type: . OPEN_P type CLOSE_P
  180 for_loop_header: fOR_OPEN_P SEMI_COMA SEMI_COMA . expr CLOSE_P
  181                | fOR_OPEN_P SEMI_COMA SEMI_COMA . CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    CLOSE_P      shift, and go to state 417
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    expr           go to state 418
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 360

  175 for_loop_header: fOR_OPEN_P SEMI_COMA logic_expr1 . SEMI_COMA expr CLOSE_P
  179                | fOR_OPEN_P SEMI_COMA logic_expr1 . SEMI_COMA CLOSE_P
  186 logic_expr1: logic_expr1 . AND_AND logic_expr
  187            | logic_expr1 . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 419
    AND_AND    shift, and go to state 386
    OR_OR      shift, and go to state 387


State 361

  114 p_type: . OPEN_P type CLOSE_P
  174 for_loop_header: fOR_OPEN_P for_initializer SEMI_COMA . logic_expr1 SEMI_COMA expr CLOSE_P
  176                | fOR_OPEN_P for_initializer SEMI_COMA . SEMI_COMA expr CLOSE_P
  177                | fOR_OPEN_P for_initializer SEMI_COMA . logic_expr1 SEMI_COMA CLOSE_P
  178                | fOR_OPEN_P for_initializer SEMI_COMA . SEMI_COMA CLOSE_P
  186 logic_expr1: . logic_expr1 AND_AND logic_expr
  187            | . logic_expr1 OR_OR logic_expr
  188            | . logic_expr
  189 logic_expr: . expr LESS_THAN expr
  190           | . expr MORE_THAN expr
  191           | . expr LESS_OR_EQUAL expr
  192           | . expr MORE_OR_EQUAL expr
  193           | . expr EQUAL_EQUAL expr
  194           | . expr NOT_EQUAL expr
  195           | . NOT_EQUAL expr
  196           | . OPEN_P logic_expr CLOSE_P
  197           | . TRUE
  198           | . FALSE
  199           | . long_id
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    SEMI_COMA    shift, and go to state 420
    OPEN_P       shift, and go to state 319
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 320
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 321
    FALSE        shift, and go to state 322
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    logic_expr1    go to state 421
    logic_expr     go to state 324
    expr           go to state 325
    assign_expr    go to state 263
    long_id        go to state 326
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 362

  202 assign_expr: long_id EQUAL simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL, CLOSE_ARR]
  214 simple_expr: simple_expr . PLUS simple_expr
  215            | simple_expr . MINUS simple_expr
  216            | simple_expr . MULTI simple_expr
  217            | simple_expr . DIV simple_expr
  218            | simple_expr . DIV_R simple_expr

    PLUS   shift, and go to state 338
    MINUS  shift, and go to state 339
    MULTI  shift, and go to state 340
    DIV    shift, and go to state 341
    DIV_R  shift, and go to state 342

    $default  reduce using rule 202 (assign_expr)


State 363

  207 array_access: long_id OPEN_ARR simple_expr . CLOSE_ARR
  214 simple_expr: simple_expr . PLUS simple_expr
  215            | simple_expr . MINUS simple_expr
  216            | simple_expr . MULTI simple_expr
  217            | simple_expr . DIV simple_expr
  218            | simple_expr . DIV_R simple_expr

    PLUS       shift, and go to state 338
    MINUS      shift, and go to state 339
    MULTI      shift, and go to state 340
    DIV        shift, and go to state 341
    DIV_R      shift, and go to state 342
    CLOSE_ARR  shift, and go to state 422


State 364

  203 long_id: long_id DOT IDENTIFIER .

    $default  reduce using rule 203 (long_id)


State 365

  229 message: IDENTIFIER .  [CLOSE_ARR]
  233 message_selector: IDENTIFIER . SEMI_COLUMN argument_list

    SEMI_COLUMN  shift, and go to state 423

    $default  reduce using rule 229 (message)


State 366

  226 message_call: message_call2 sender message . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 424


State 367

  230 message: message_selectors_list .  [CLOSE_ARR]
  231 message_selectors_list: message_selectors_list . message_selector
  233 message_selector: . IDENTIFIER SEMI_COLUMN argument_list

    IDENTIFIER  shift, and go to state 425

    $default  reduce using rule 230 (message)

    message_selector  go to state 426


State 368

  232 message_selectors_list: message_selector .

    $default  reduce using rule 232 (message_selectors_list)


State 369

   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . long_id SEMI_COMA
  154          | . throw_statement
  155          | . error SEMI_COMA
  156 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  157 asm: . AT_ASM STRING_VAL SEMI_COMA
  158 variable_declaration_block: . type variable_list SEMI_COMA
  159                           | . CONST type variable_list SEMI_COMA
  160                           | . enum
  167 return_statement: . RETURN expr SEMI_COMA
  168 loop_statement: . for_loop
  169               | . while_loop
  170               | . do_while
  171 do_while: . do_header statement while_loop_header SEMI_COMA
  172 do_header: . DO
  173 for_loop: . for_loop_header statement
  174 for_loop_header: . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  175                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  178                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  179                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  180                | . fOR_OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  181                | . fOR_OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  182 fOR_OPEN_P: . FOR OPEN_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR
  237 while_loop: . while_loop_header statement
  238 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  239 conditional_statement: . if_header statement
  240                      | . if_header statement ELSE statement
  240                      | if_header statement ELSE . statement
  241                      | . switch_header switch_body
  242 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  243 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  263 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  264     | . ENUM IDENTIFIER SEMI_COMA
  269 try_catch: . TRY statement catch_list finally_statement
  270          | . TRY statement catch_list

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 97
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 99
    TRY         shift, and go to state 179
    THROW       shift, and go to state 180
    AT_ASM      shift, and go to state 181

    type                        go to state 182
    struct_type                 go to state 104
    enum_type                   go to state 105
    simple_type                 go to state 106
    complex_type                go to state 107
    block_body                  go to state 183
    block_body_header           go to state 116
    statement                   go to state 427
    throw_statement             go to state 187
    asm                         go to state 188
    variable_declaration_block  go to state 189
    return_statement            go to state 190
    loop_statement              go to state 191
    do_while                    go to state 192
    do_header                   go to state 193
    for_loop                    go to state 194
    for_loop_header             go to state 195
    fOR_OPEN_P                  go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 370

  251 case_body: CASE expr . SEMI_COLUMN statement BREAK SEMI_COMA
  252          | CASE expr . SEMI_COLUMN statement
  253          | CASE expr . SEMI_COLUMN BREAK SEMI_COMA

    SEMI_COLUMN  shift, and go to state 428


State 371

   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . long_id SEMI_COMA
  154          | . throw_statement
  155          | . error SEMI_COMA
  156 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  157 asm: . AT_ASM STRING_VAL SEMI_COMA
  158 variable_declaration_block: . type variable_list SEMI_COMA
  159                           | . CONST type variable_list SEMI_COMA
  160                           | . enum
  167 return_statement: . RETURN expr SEMI_COMA
  168 loop_statement: . for_loop
  169               | . while_loop
  170               | . do_while
  171 do_while: . do_header statement while_loop_header SEMI_COMA
  172 do_header: . DO
  173 for_loop: . for_loop_header statement
  174 for_loop_header: . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  175                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  178                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  179                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  180                | . fOR_OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  181                | . fOR_OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  182 fOR_OPEN_P: . FOR OPEN_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR
  237 while_loop: . while_loop_header statement
  238 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  239 conditional_statement: . if_header statement
  240                      | . if_header statement ELSE statement
  241                      | . switch_header switch_body
  242 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  243 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  254 default_case: DEFAULT SEMI_COLUMN . statement BREAK SEMI_COMA
  255             | DEFAULT SEMI_COLUMN . statement
  256             | DEFAULT SEMI_COLUMN . BREAK SEMI_COMA
  263 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  264     | . ENUM IDENTIFIER SEMI_COMA
  269 try_catch: . TRY statement catch_list finally_statement
  270          | . TRY statement catch_list

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 97
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    BREAK       shift, and go to state 429
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 99
    TRY         shift, and go to state 179
    THROW       shift, and go to state 180
    AT_ASM      shift, and go to state 181

    type                        go to state 182
    struct_type                 go to state 104
    enum_type                   go to state 105
    simple_type                 go to state 106
    complex_type                go to state 107
    block_body                  go to state 183
    block_body_header           go to state 116
    statement                   go to state 430
    throw_statement             go to state 187
    asm                         go to state 188
    variable_declaration_block  go to state 189
    return_statement            go to state 190
    loop_statement              go to state 191
    do_while                    go to state 192
    do_header                   go to state 193
    for_loop                    go to state 194
    for_loop_header             go to state 195
    fOR_OPEN_P                  go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 372

  246 switch_body: list_of_case CLOSE_S .

    $default  reduce using rule 246 (switch_body)


State 373

  249 list_of_case: list_of_case case_body .

    $default  reduce using rule 249 (list_of_case)


State 374

  245 switch_body: list_of_case default_case . CLOSE_S

    CLOSE_S  shift, and go to state 431


State 375

  247 switch_body: default_case CLOSE_S .

    $default  reduce using rule 247 (switch_body)


State 376

  265 list_expr: . IDENTIFIER EQUAL expr COMMA list_expr
  265          | IDENTIFIER EQUAL expr COMMA . list_expr
  266          | . IDENTIFIER EQUAL expr
  267          | . IDENTIFIER
  268          | . IDENTIFIER COMMA list_expr

    IDENTIFIER  shift, and go to state 124

    list_expr  go to state 432


State 377

  120 parameter_list: parameter_list SEMI_COLUMN parameter .

    $default  reduce using rule 120 (parameter_list)


State 378

   74 struct: struct_header OPEN_S struct_variable_declaration CLOSE_S entity error SEMI_COMA .

    $default  reduce using rule 74 (struct)


State 379

  100 array_first_tag: OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 100 (array_first_tag)


State 380

   97 array_tag_list: array_tag_list OPEN_ARR . INT_VAL CLOSE_ARR
   99               | array_tag_list OPEN_ARR . error CLOSE_ARR

    error    shift, and go to state 433
    INT_VAL  shift, and go to state 434


State 381

  159 variable_declaration_block: CONST type variable_list SEMI_COMA .

    $default  reduce using rule 159 (variable_declaration_block)


State 382

  196 logic_expr: OPEN_P logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 435


State 383

  201 expr: simple_expr .  [LESS_THAN, MORE_THAN, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL]
  214 simple_expr: simple_expr . PLUS simple_expr
  215            | simple_expr . MINUS simple_expr
  216            | simple_expr . MULTI simple_expr
  217            | simple_expr . DIV simple_expr
  218            | simple_expr . DIV_R simple_expr
  219            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 338
    MINUS    shift, and go to state 339
    CLOSE_P  shift, and go to state 396
    MULTI    shift, and go to state 340
    DIV      shift, and go to state 341
    DIV_R    shift, and go to state 342

    $default  reduce using rule 201 (expr)


State 384

  195 logic_expr: NOT_EQUAL expr .

    $default  reduce using rule 195 (logic_expr)


State 385

  238 while_loop_header: WHILE OPEN_P logic_expr1 CLOSE_P .

    $default  reduce using rule 238 (while_loop_header)


State 386

  114 p_type: . OPEN_P type CLOSE_P
  186 logic_expr1: logic_expr1 AND_AND . logic_expr
  189 logic_expr: . expr LESS_THAN expr
  190           | . expr MORE_THAN expr
  191           | . expr LESS_OR_EQUAL expr
  192           | . expr MORE_OR_EQUAL expr
  193           | . expr EQUAL_EQUAL expr
  194           | . expr NOT_EQUAL expr
  195           | . NOT_EQUAL expr
  196           | . OPEN_P logic_expr CLOSE_P
  197           | . TRUE
  198           | . FALSE
  199           | . long_id
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 319
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 320
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 321
    FALSE        shift, and go to state 322
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    logic_expr     go to state 436
    expr           go to state 325
    assign_expr    go to state 263
    long_id        go to state 326
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 387

  114 p_type: . OPEN_P type CLOSE_P
  187 logic_expr1: logic_expr1 OR_OR . logic_expr
  189 logic_expr: . expr LESS_THAN expr
  190           | . expr MORE_THAN expr
  191           | . expr LESS_OR_EQUAL expr
  192           | . expr MORE_OR_EQUAL expr
  193           | . expr EQUAL_EQUAL expr
  194           | . expr NOT_EQUAL expr
  195           | . NOT_EQUAL expr
  196           | . OPEN_P logic_expr CLOSE_P
  197           | . TRUE
  198           | . FALSE
  199           | . long_id
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 319
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    NOT_EQUAL    shift, and go to state 320
    OPEN_ARR     shift, and go to state 177
    TRUE         shift, and go to state 321
    FALSE        shift, and go to state 322
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    logic_expr     go to state 437
    expr           go to state 325
    assign_expr    go to state 263
    long_id        go to state 326
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 388

  114 p_type: . OPEN_P type CLOSE_P
  189 logic_expr: expr LESS_THAN . expr
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    expr           go to state 438
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 389

  114 p_type: . OPEN_P type CLOSE_P
  190 logic_expr: expr MORE_THAN . expr
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    expr           go to state 439
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 390

  114 p_type: . OPEN_P type CLOSE_P
  191 logic_expr: expr LESS_OR_EQUAL . expr
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    expr           go to state 440
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 391

  114 p_type: . OPEN_P type CLOSE_P
  192 logic_expr: expr MORE_OR_EQUAL . expr
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    expr           go to state 441
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 392

  114 p_type: . OPEN_P type CLOSE_P
  193 logic_expr: expr EQUAL_EQUAL . expr
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    expr           go to state 442
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 393

  114 p_type: . OPEN_P type CLOSE_P
  194 logic_expr: expr NOT_EQUAL . expr
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    expr           go to state 443
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 394

  242 if_header: IF OPEN_P logic_expr1 CLOSE_P .

    $default  reduce using rule 242 (if_header)


State 395

  243 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P . switch_body_block
  244 switch_body_block: . OPEN_S

    OPEN_S  shift, and go to state 444

    switch_body_block  go to state 445


State 396

  219 simple_expr: OPEN_P simple_expr CLOSE_P .

    $default  reduce using rule 219 (simple_expr)


State 397

  214 simple_expr: simple_expr . PLUS simple_expr
  214            | simple_expr PLUS simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL, CLOSE_ARR]
  215            | simple_expr . MINUS simple_expr
  216            | simple_expr . MULTI simple_expr
  217            | simple_expr . DIV simple_expr
  218            | simple_expr . DIV_R simple_expr

    MULTI  shift, and go to state 340
    DIV    shift, and go to state 341
    DIV_R  shift, and go to state 342

    $default  reduce using rule 214 (simple_expr)

    Conflict between rule 214 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 214 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 214 and token MULTI resolved as shift (PLUS < MULTI).
    Conflict between rule 214 and token DIV resolved as shift (PLUS < DIV).
    Conflict between rule 214 and token DIV_R resolved as shift (PLUS < DIV_R).


State 398

  214 simple_expr: simple_expr . PLUS simple_expr
  215            | simple_expr . MINUS simple_expr
  215            | simple_expr MINUS simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, EQUAL_EQUAL, NOT_EQUAL, CLOSE_ARR]
  216            | simple_expr . MULTI simple_expr
  217            | simple_expr . DIV simple_expr
  218            | simple_expr . DIV_R simple_expr

    MULTI  shift, and go to state 340
    DIV    shift, and go to state 341
    DIV_R  shift, and go to state 342

    $default  reduce using rule 215 (simple_expr)

    Conflict between rule 215 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 215 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 215 and token MULTI resolved as shift (MINUS < MULTI).
    Conflict between rule 215 and token DIV resolved as shift (MINUS < DIV).
    Conflict between rule 215 and token DIV_R resolved as shift (MINUS < DIV_R).


State 399

  214 simple_expr: simple_expr . PLUS simple_expr
  215            | simple_expr . MINUS simple_expr
  216            | simple_expr . MULTI simple_expr
  216            | simple_expr MULTI simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, DIV, DIV_R, CLOSE_ARR]
  217            | simple_expr . DIV simple_expr
  218            | simple_expr . DIV_R simple_expr

    $default  reduce using rule 216 (simple_expr)

    Conflict between rule 216 and token PLUS resolved as reduce (PLUS < MULTI).
    Conflict between rule 216 and token MINUS resolved as reduce (MINUS < MULTI).
    Conflict between rule 216 and token MULTI resolved as reduce (%left MULTI).
    Conflict between rule 216 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 216 and token DIV_R resolved as reduce (%left DIV_R).


State 400

  214 simple_expr: simple_expr . PLUS simple_expr
  215            | simple_expr . MINUS simple_expr
  216            | simple_expr . MULTI simple_expr
  217            | simple_expr . DIV simple_expr
  217            | simple_expr DIV simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, DIV, DIV_R, CLOSE_ARR]
  218            | simple_expr . DIV_R simple_expr

    $default  reduce using rule 217 (simple_expr)

    Conflict between rule 217 and token PLUS resolved as reduce (PLUS < DIV).
    Conflict between rule 217 and token MINUS resolved as reduce (MINUS < DIV).
    Conflict between rule 217 and token MULTI resolved as reduce (%left MULTI).
    Conflict between rule 217 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 217 and token DIV_R resolved as reduce (%left DIV_R).


State 401

  214 simple_expr: simple_expr . PLUS simple_expr
  215            | simple_expr . MINUS simple_expr
  216            | simple_expr . MULTI simple_expr
  217            | simple_expr . DIV simple_expr
  218            | simple_expr . DIV_R simple_expr
  218            | simple_expr DIV_R simple_expr .  [error, IDENTIFIER, SEMI_COLUMN, SEMI_COMA, CLOSE_S, COMMA, LESS_THAN, MORE_THAN, PLUS, MINUS, CLOSE_P, AND_AND, OR_OR, LESS_OR_EQUAL, MORE_OR_EQUAL, MULTI, EQUAL_EQUAL, NOT_EQUAL, DIV, DIV_R, CLOSE_ARR]

    $default  reduce using rule 218 (simple_expr)

    Conflict between rule 218 and token PLUS resolved as reduce (PLUS < DIV_R).
    Conflict between rule 218 and token MINUS resolved as reduce (MINUS < DIV_R).
    Conflict between rule 218 and token MULTI resolved as reduce (%left MULTI).
    Conflict between rule 218 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 218 and token DIV_R resolved as reduce (%left DIV_R).


State 402

   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  274 one_catch_header: CATCH OPEN_P . type IDENTIFIER CLOSE_P

    IDENTIFIER  shift, and go to state 88
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    VOID        shift, and go to state 97
    ENUM        shift, and go to state 98
    STRUCT      shift, and go to state 99

    type          go to state 446
    struct_type   go to state 104
    enum_type     go to state 105
    simple_type   go to state 106
    complex_type  go to state 107


State 403

   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . long_id SEMI_COMA
  154          | . throw_statement
  155          | . error SEMI_COMA
  156 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  157 asm: . AT_ASM STRING_VAL SEMI_COMA
  158 variable_declaration_block: . type variable_list SEMI_COMA
  159                           | . CONST type variable_list SEMI_COMA
  160                           | . enum
  167 return_statement: . RETURN expr SEMI_COMA
  168 loop_statement: . for_loop
  169               | . while_loop
  170               | . do_while
  171 do_while: . do_header statement while_loop_header SEMI_COMA
  172 do_header: . DO
  173 for_loop: . for_loop_header statement
  174 for_loop_header: . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  175                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  178                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  179                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  180                | . fOR_OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  181                | . fOR_OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  182 fOR_OPEN_P: . FOR OPEN_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR
  237 while_loop: . while_loop_header statement
  238 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  239 conditional_statement: . if_header statement
  240                      | . if_header statement ELSE statement
  241                      | . switch_header switch_body
  242 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  243 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  263 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  264     | . ENUM IDENTIFIER SEMI_COMA
  269 try_catch: . TRY statement catch_list finally_statement
  270          | . TRY statement catch_list
  275 finally_statement: FINALLY . statement

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 97
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 99
    TRY         shift, and go to state 179
    THROW       shift, and go to state 180
    AT_ASM      shift, and go to state 181

    type                        go to state 182
    struct_type                 go to state 104
    enum_type                   go to state 105
    simple_type                 go to state 106
    complex_type                go to state 107
    block_body                  go to state 183
    block_body_header           go to state 116
    statement                   go to state 447
    throw_statement             go to state 187
    asm                         go to state 188
    variable_declaration_block  go to state 189
    return_statement            go to state 190
    loop_statement              go to state 191
    do_while                    go to state 192
    do_header                   go to state 193
    for_loop                    go to state 194
    for_loop_header             go to state 195
    fOR_OPEN_P                  go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 404

  272 catch_list: catch_list one_catch .

    $default  reduce using rule 272 (catch_list)


State 405

  269 try_catch: TRY statement catch_list finally_statement .

    $default  reduce using rule 269 (try_catch)


State 406

  273 one_catch: one_catch_header statement .

    $default  reduce using rule 273 (one_catch)


State 407

  156 throw_statement: THROW OPEN_P message_call CLOSE_P . SEMI_COMA

    SEMI_COMA  shift, and go to state 448


State 408

   36 array_body: . OPEN_S array_ele CLOSE_S
   37           | . OPEN_S CLOSE_S
  102 initializer: EQUAL . array_body

    OPEN_S  shift, and go to state 449

    array_body  go to state 450


State 409

  166 variable: error array_tag initializer .

    $default  reduce using rule 166 (variable)


State 410

  104 main_initializer: EQUAL expr .

    $default  reduce using rule 104 (main_initializer)


State 411

  164 variable: IDENTIFIER array_tag initializer .

    $default  reduce using rule 164 (variable)


State 412

  163 variable_list: variable_list error variable .

    $default  reduce using rule 163 (variable_list)


State 413

  161 variable_list: variable_list COMMA variable .

    $default  reduce using rule 161 (variable_list)


State 414

  171 do_while: do_header statement while_loop_header SEMI_COMA .

    $default  reduce using rule 171 (do_while)


State 415

  184 for_initializer: IDENTIFIER EQUAL expr .

    $default  reduce using rule 184 (for_initializer)


State 416

  114 p_type: . OPEN_P type CLOSE_P
  183 for_initializer: INT IDENTIFIER EQUAL . expr
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    expr           go to state 451
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 417

  181 for_loop_header: fOR_OPEN_P SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 181 (for_loop_header)


State 418

  180 for_loop_header: fOR_OPEN_P SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 452


State 419

  114 p_type: . OPEN_P type CLOSE_P
  175 for_loop_header: fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA . expr CLOSE_P
  179                | fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA . CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    CLOSE_P      shift, and go to state 453
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    expr           go to state 454
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 420

  114 p_type: . OPEN_P type CLOSE_P
  176 for_loop_header: fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA . expr CLOSE_P
  178                | fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA . CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    CLOSE_P      shift, and go to state 455
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    expr           go to state 456
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 421

  174 for_loop_header: fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 . SEMI_COMA expr CLOSE_P
  177                | fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 . SEMI_COMA CLOSE_P
  186 logic_expr1: logic_expr1 . AND_AND logic_expr
  187            | logic_expr1 . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 457
    AND_AND    shift, and go to state 386
    OR_OR      shift, and go to state 387


State 422

  207 array_access: long_id OPEN_ARR simple_expr CLOSE_ARR .

    $default  reduce using rule 207 (array_access)


State 423

  114 p_type: . OPEN_P type CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR
  233 message_selector: IDENTIFIER SEMI_COLUMN . argument_list
  234 argument_list: . argument_list SEMI_COLUMN argument
  235              | . argument
  236 argument: . expr

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    expr           go to state 458
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201
    argument_list  go to state 459
    argument       go to state 460


State 424

  226 message_call: message_call2 sender message CLOSE_ARR .

    $default  reduce using rule 226 (message_call)


State 425

  233 message_selector: IDENTIFIER . SEMI_COLUMN argument_list

    SEMI_COLUMN  shift, and go to state 423


State 426

  231 message_selectors_list: message_selectors_list message_selector .

    $default  reduce using rule 231 (message_selectors_list)


State 427

  240 conditional_statement: if_header statement ELSE statement .

    $default  reduce using rule 240 (conditional_statement)


State 428

   80 type: . simple_type
   81     | . complex_type
   82     | . struct_type
   83     | . enum_type
   84 struct_type: . STRUCT IDENTIFIER
   85            | . STRUCT IDENTIFIER MULTI
   86 enum_type: . ENUM IDENTIFIER
   87          | . ENUM IDENTIFIER MULTI
   88 simple_type: . INT
   89            | . CHAR
   90            | . ID
   91            | . FLOAT
   92            | . NSSTRING
   93            | . VOID
   94            | . BOOL
   95 complex_type: . IDENTIFIER MULTI
  138 block_body: . block_body_header block_body_statements
  139 block_body_header: . OPEN_S
  145 statement: . loop_statement
  146          | . conditional_statement
  147          | . assign_expr SEMI_COMA
  148          | . variable_declaration_block
  149          | . block_body
  150          | . return_statement
  151          | . try_catch
  152          | . asm
  153          | . long_id SEMI_COMA
  154          | . throw_statement
  155          | . error SEMI_COMA
  156 throw_statement: . THROW OPEN_P message_call CLOSE_P SEMI_COMA
  157 asm: . AT_ASM STRING_VAL SEMI_COMA
  158 variable_declaration_block: . type variable_list SEMI_COMA
  159                           | . CONST type variable_list SEMI_COMA
  160                           | . enum
  167 return_statement: . RETURN expr SEMI_COMA
  168 loop_statement: . for_loop
  169               | . while_loop
  170               | . do_while
  171 do_while: . do_header statement while_loop_header SEMI_COMA
  172 do_header: . DO
  173 for_loop: . for_loop_header statement
  174 for_loop_header: . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  175                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P
  176                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  177                | . fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  178                | . fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  179                | . fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P
  180                | . fOR_OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  181                | . fOR_OPEN_P SEMI_COMA SEMI_COMA CLOSE_P
  182 fOR_OPEN_P: . FOR OPEN_P
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR
  237 while_loop: . while_loop_header statement
  238 while_loop_header: . WHILE OPEN_P logic_expr1 CLOSE_P
  239 conditional_statement: . if_header statement
  240                      | . if_header statement ELSE statement
  241                      | . switch_header switch_body
  242 if_header: . IF OPEN_P logic_expr1 CLOSE_P
  243 switch_header: . SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block
  251 case_body: CASE expr SEMI_COLUMN . statement BREAK SEMI_COMA
  252          | CASE expr SEMI_COLUMN . statement
  253          | CASE expr SEMI_COLUMN . BREAK SEMI_COMA
  263 enum: . ENUM IDENTIFIER OPEN_S list_expr CLOSE_S SEMI_COMA
  264     | . ENUM IDENTIFIER SEMI_COMA
  269 try_catch: . TRY statement catch_list finally_statement
  270          | . TRY statement catch_list

    error       shift, and go to state 266
    IDENTIFIER  shift, and go to state 168
    NSSTRING    shift, and go to state 89
    FLOAT       shift, and go to state 90
    CHAR        shift, and go to state 91
    BOOL        shift, and go to state 92
    INT         shift, and go to state 93
    ID          shift, and go to state 94
    OPEN_S      shift, and go to state 114
    CONST       shift, and go to state 170
    VOID        shift, and go to state 97
    FOR         shift, and go to state 171
    WHILE       shift, and go to state 172
    IF          shift, and go to state 173
    DO          shift, and go to state 174
    SWITCH      shift, and go to state 175
    BREAK       shift, and go to state 461
    ENUM        shift, and go to state 176
    OPEN_ARR    shift, and go to state 177
    RETURN      shift, and go to state 178
    STRUCT      shift, and go to state 99
    TRY         shift, and go to state 179
    THROW       shift, and go to state 180
    AT_ASM      shift, and go to state 181

    type                        go to state 182
    struct_type                 go to state 104
    enum_type                   go to state 105
    simple_type                 go to state 106
    complex_type                go to state 107
    block_body                  go to state 183
    block_body_header           go to state 116
    statement                   go to state 462
    throw_statement             go to state 187
    asm                         go to state 188
    variable_declaration_block  go to state 189
    return_statement            go to state 190
    loop_statement              go to state 191
    do_while                    go to state 192
    do_header                   go to state 193
    for_loop                    go to state 194
    for_loop_header             go to state 195
    fOR_OPEN_P                  go to state 196
    assign_expr                 go to state 197
    long_id                     go to state 198
    array_access                go to state 199
    message_call2               go to state 200
    message_call                go to state 201
    while_loop                  go to state 202
    while_loop_header           go to state 203
    conditional_statement       go to state 204
    if_header                   go to state 205
    switch_header               go to state 206
    enum                        go to state 207
    try_catch                   go to state 208


State 429

  256 default_case: DEFAULT SEMI_COLUMN BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 463


State 430

  254 default_case: DEFAULT SEMI_COLUMN statement . BREAK SEMI_COMA
  255             | DEFAULT SEMI_COLUMN statement .  [CLOSE_S]

    BREAK  shift, and go to state 464

    $default  reduce using rule 255 (default_case)


State 431

  245 switch_body: list_of_case default_case CLOSE_S .

    $default  reduce using rule 245 (switch_body)


State 432

  265 list_expr: IDENTIFIER EQUAL expr COMMA list_expr .

    $default  reduce using rule 265 (list_expr)


State 433

   99 array_tag_list: array_tag_list OPEN_ARR error . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 465


State 434

   97 array_tag_list: array_tag_list OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 466


State 435

  196 logic_expr: OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 196 (logic_expr)


State 436

  186 logic_expr1: logic_expr1 AND_AND logic_expr .

    $default  reduce using rule 186 (logic_expr1)


State 437

  187 logic_expr1: logic_expr1 OR_OR logic_expr .

    $default  reduce using rule 187 (logic_expr1)


State 438

  189 logic_expr: expr LESS_THAN expr .

    $default  reduce using rule 189 (logic_expr)


State 439

  190 logic_expr: expr MORE_THAN expr .

    $default  reduce using rule 190 (logic_expr)


State 440

  191 logic_expr: expr LESS_OR_EQUAL expr .

    $default  reduce using rule 191 (logic_expr)


State 441

  192 logic_expr: expr MORE_OR_EQUAL expr .

    $default  reduce using rule 192 (logic_expr)


State 442

  193 logic_expr: expr EQUAL_EQUAL expr .

    $default  reduce using rule 193 (logic_expr)


State 443

  194 logic_expr: expr NOT_EQUAL expr .

    $default  reduce using rule 194 (logic_expr)


State 444

  244 switch_body_block: OPEN_S .

    $default  reduce using rule 244 (switch_body_block)


State 445

  243 switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P switch_body_block .

    $default  reduce using rule 243 (switch_header)


State 446

  274 one_catch_header: CATCH OPEN_P type . IDENTIFIER CLOSE_P

    IDENTIFIER  shift, and go to state 467


State 447

  275 finally_statement: FINALLY statement .

    $default  reduce using rule 275 (finally_statement)


State 448

  156 throw_statement: THROW OPEN_P message_call CLOSE_P SEMI_COMA .

    $default  reduce using rule 156 (throw_statement)


State 449

   36 array_body: OPEN_S . array_ele CLOSE_S
   37           | OPEN_S . CLOSE_S
   38 array_ele: . expr COMMA array_ele
   39          | . expr
   40          | . OPEN_S CLOSE_S
   41          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | . OPEN_S array_ele CLOSE_S
   43          | . OPEN_S CLOSE_S COMMA array_ele
  114 p_type: . OPEN_P type CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_S       shift, and go to state 468
    CLOSE_S      shift, and go to state 469
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    array_ele      go to state 470
    p_type         go to state 261
    expr           go to state 471
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 450

  102 initializer: EQUAL array_body .

    $default  reduce using rule 102 (initializer)


State 451

  183 for_initializer: INT IDENTIFIER EQUAL expr .

    $default  reduce using rule 183 (for_initializer)


State 452

  180 for_loop_header: fOR_OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 180 (for_loop_header)


State 453

  179 for_loop_header: fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P .

    $default  reduce using rule 179 (for_loop_header)


State 454

  175 for_loop_header: fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 472


State 455

  178 for_loop_header: fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 178 (for_loop_header)


State 456

  176 for_loop_header: fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 473


State 457

  114 p_type: . OPEN_P type CLOSE_P
  174 for_loop_header: fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA . expr CLOSE_P
  177                | fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA . CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    CLOSE_P      shift, and go to state 474
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    expr           go to state 475
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 458

  236 argument: expr .

    $default  reduce using rule 236 (argument)


State 459

  233 message_selector: IDENTIFIER SEMI_COLUMN argument_list .  [IDENTIFIER, CLOSE_ARR]
  234 argument_list: argument_list . SEMI_COLUMN argument

    SEMI_COLUMN  shift, and go to state 476

    $default  reduce using rule 233 (message_selector)


State 460

  235 argument_list: argument .

    $default  reduce using rule 235 (argument_list)


State 461

  253 case_body: CASE expr SEMI_COLUMN BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 477


State 462

  251 case_body: CASE expr SEMI_COLUMN statement . BREAK SEMI_COMA
  252          | CASE expr SEMI_COLUMN statement .  [CLOSE_S, CASE, DEFAULT]

    BREAK  shift, and go to state 478

    $default  reduce using rule 252 (case_body)


State 463

  256 default_case: DEFAULT SEMI_COLUMN BREAK SEMI_COMA .

    $default  reduce using rule 256 (default_case)


State 464

  254 default_case: DEFAULT SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 479


State 465

   99 array_tag_list: array_tag_list OPEN_ARR error CLOSE_ARR .

    $default  reduce using rule 99 (array_tag_list)


State 466

   97 array_tag_list: array_tag_list OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 97 (array_tag_list)


State 467

  274 one_catch_header: CATCH OPEN_P type IDENTIFIER . CLOSE_P

    CLOSE_P  shift, and go to state 480


State 468

   38 array_ele: . expr COMMA array_ele
   39          | . expr
   40          | . OPEN_S CLOSE_S
   40          | OPEN_S . CLOSE_S
   41          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   41          | OPEN_S . array_ele CLOSE_S COMMA array_ele
   42          | . OPEN_S array_ele CLOSE_S
   42          | OPEN_S . array_ele CLOSE_S
   43          | . OPEN_S CLOSE_S COMMA array_ele
   43          | OPEN_S . CLOSE_S COMMA array_ele
  114 p_type: . OPEN_P type CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_S       shift, and go to state 468
    CLOSE_S      shift, and go to state 481
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    array_ele      go to state 482
    p_type         go to state 261
    expr           go to state 471
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 469

   37 array_body: OPEN_S CLOSE_S .

    $default  reduce using rule 37 (array_body)


State 470

   36 array_body: OPEN_S array_ele . CLOSE_S

    CLOSE_S  shift, and go to state 483


State 471

   38 array_ele: expr . COMMA array_ele
   39          | expr .  [CLOSE_S]

    COMMA  shift, and go to state 484

    $default  reduce using rule 39 (array_ele)


State 472

  175 for_loop_header: fOR_OPEN_P SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 175 (for_loop_header)


State 473

  176 for_loop_header: fOR_OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 176 (for_loop_header)


State 474

  177 for_loop_header: fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA CLOSE_P .

    $default  reduce using rule 177 (for_loop_header)


State 475

  174 for_loop_header: fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 485


State 476

  114 p_type: . OPEN_P type CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR
  234 argument_list: argument_list SEMI_COLUMN . argument
  236 argument: . expr

    IDENTIFIER   shift, and go to state 252
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    p_type         go to state 261
    expr           go to state 458
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201
    argument       go to state 486


State 477

  253 case_body: CASE expr SEMI_COLUMN BREAK SEMI_COMA .

    $default  reduce using rule 253 (case_body)


State 478

  251 case_body: CASE expr SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 487


State 479

  254 default_case: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 254 (default_case)


State 480

  274 one_catch_header: CATCH OPEN_P type IDENTIFIER CLOSE_P .

    $default  reduce using rule 274 (one_catch_header)


State 481

   40 array_ele: OPEN_S CLOSE_S .  [CLOSE_S]
   43          | OPEN_S CLOSE_S . COMMA array_ele

    COMMA  shift, and go to state 488

    $default  reduce using rule 40 (array_ele)


State 482

   41 array_ele: OPEN_S array_ele . CLOSE_S COMMA array_ele
   42          | OPEN_S array_ele . CLOSE_S

    CLOSE_S  shift, and go to state 489


State 483

   36 array_body: OPEN_S array_ele CLOSE_S .

    $default  reduce using rule 36 (array_body)


State 484

   38 array_ele: . expr COMMA array_ele
   38          | expr COMMA . array_ele
   39          | . expr
   40          | . OPEN_S CLOSE_S
   41          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | . OPEN_S array_ele CLOSE_S
   43          | . OPEN_S CLOSE_S COMMA array_ele
  114 p_type: . OPEN_P type CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_S       shift, and go to state 468
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    array_ele      go to state 490
    p_type         go to state 261
    expr           go to state 471
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 485

  174 for_loop_header: fOR_OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 174 (for_loop_header)


State 486

  234 argument_list: argument_list SEMI_COLUMN argument .

    $default  reduce using rule 234 (argument_list)


State 487

  251 case_body: CASE expr SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 251 (case_body)


State 488

   38 array_ele: . expr COMMA array_ele
   39          | . expr
   40          | . OPEN_S CLOSE_S
   41          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   42          | . OPEN_S array_ele CLOSE_S
   43          | . OPEN_S CLOSE_S COMMA array_ele
   43          | OPEN_S CLOSE_S COMMA . array_ele
  114 p_type: . OPEN_P type CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_S       shift, and go to state 468
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    array_ele      go to state 491
    p_type         go to state 261
    expr           go to state 471
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 489

   41 array_ele: OPEN_S array_ele CLOSE_S . COMMA array_ele
   42          | OPEN_S array_ele CLOSE_S .  [CLOSE_S]

    COMMA  shift, and go to state 492

    $default  reduce using rule 42 (array_ele)


State 490

   38 array_ele: expr COMMA array_ele .

    $default  reduce using rule 38 (array_ele)


State 491

   43 array_ele: OPEN_S CLOSE_S COMMA array_ele .

    $default  reduce using rule 43 (array_ele)


State 492

   38 array_ele: . expr COMMA array_ele
   39          | . expr
   40          | . OPEN_S CLOSE_S
   41          | . OPEN_S array_ele CLOSE_S COMMA array_ele
   41          | OPEN_S array_ele CLOSE_S COMMA . array_ele
   42          | . OPEN_S array_ele CLOSE_S
   43          | . OPEN_S CLOSE_S COMMA array_ele
  114 p_type: . OPEN_P type CLOSE_P
  200 expr: . assign_expr
  201     | . simple_expr
  202 assign_expr: . long_id EQUAL simple_expr
  203 long_id: . long_id DOT IDENTIFIER
  204        | . message_call
  205        | . IDENTIFIER
  206        | . array_access
  207 array_access: . long_id OPEN_ARR simple_expr CLOSE_ARR
  208 simple_expr: . STRING_VAL
  209            | . INT_VAL
  210            | . NULL_TOK
  211            | . FLOAT_VAL
  212            | . CHAR_VAL
  213            | . long_id
  214            | . simple_expr PLUS simple_expr
  215            | . simple_expr MINUS simple_expr
  216            | . simple_expr MULTI simple_expr
  217            | . simple_expr DIV simple_expr
  218            | . simple_expr DIV_R simple_expr
  219            | . OPEN_P simple_expr CLOSE_P
  220            | . IDENTIFIER DOUBLEPLUS
  221            | . IDENTIFIER DOUBLEMINUS
  222            | . DOUBLEPLUS IDENTIFIER
  223            | . DOUBLEMINUS IDENTIFIER
  224            | . p_type simple_expr
  225 message_call2: . OPEN_ARR
  226 message_call: . message_call2 sender message CLOSE_ARR

    IDENTIFIER   shift, and go to state 252
    OPEN_S       shift, and go to state 468
    OPEN_P       shift, and go to state 253
    STRING_VAL   shift, and go to state 254
    FLOAT_VAL    shift, and go to state 255
    CHAR_VAL     shift, and go to state 256
    INT_VAL      shift, and go to state 257
    OPEN_ARR     shift, and go to state 177
    DOUBLEPLUS   shift, and go to state 258
    DOUBLEMINUS  shift, and go to state 259
    NULL_TOK     shift, and go to state 260

    array_ele      go to state 493
    p_type         go to state 261
    expr           go to state 471
    assign_expr    go to state 263
    long_id        go to state 264
    array_access   go to state 199
    simple_expr    go to state 265
    message_call2  go to state 200
    message_call   go to state 201


State 493

   41 array_ele: OPEN_S array_ele CLOSE_S COMMA array_ele .

    $default  reduce using rule 41 (array_ele)
