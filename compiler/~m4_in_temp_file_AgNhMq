m4_init()
m4_define([b4_mergers], 
[[]])

m4_define([b4_symbol_numbers],


m4_define([b4_type_names],
[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178]])

m4_define([b4_actions], 
[b4_case(2, [b4_syncline(216, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"program: components\n"; 
										 }]])

b4_case(3, [b4_syncline(219, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"components: components component\n";}]])

b4_case(4, [b4_syncline(220, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"components: component\n";}]])

b4_case(5, [b4_syncline(221, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {addFile(*]b4_rhs_value(3, 2, [[r.string_val]])[);}]])

b4_case(6, [b4_syncline(223, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"class_interface \n";}]])

b4_case(7, [b4_syncline(224, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"class_implementation \n";}]])

b4_case(8, [b4_syncline(225, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"protocol \n";}]])

b4_case(9, [b4_syncline(226, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"struct \n";}]])

b4_case(10, [b4_syncline(227, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"enum \n";}]])

b4_case(11, [b4_syncline(229, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"class_interface: class_interface_header class_interface_body\n";
																classNode=NULL;
																 idsList.clear();
																 methodsList.clear();
																 method=NULL;
																}]])

b4_case(12, [b4_syncline(238, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"class_interface_header:  AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER\n";
																				interface=InterfaceHelper::createNewInterface(]b4_rhs_value(4, 2, [[r.text]])[,]b4_rhs_value(4, 4, [[r.text]])[,symbolTable);
																				
																				
																				}]])

b4_case(13, [b4_syncline(243, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
																					Streams::verbose()<<"class_interface_header:  AT_INTERFACE IDENTIFIER\n";
																				 interface=InterfaceHelper::createNewInterface(]b4_rhs_value(2, 2, [[r.text]])[,"",symbolTable);

																				}]])

b4_case(14, [b4_syncline(248, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Expected Identifier at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(15, [b4_syncline(250, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Expected Identifier at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(16, [b4_syncline(253, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {	
															
														InterfaceHelper::addMethods(interface,methodsList);
																Streams::verbose()<<"class_interface_body:	protocol_reference_list instance_variables	interface_declaration_list	AT_END\n";
														}]])

b4_case(17, [b4_syncline(259, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
														Streams::verbose()<<"class_interface_body:	protocol_reference_list instance_variables AT_END\n";
														}]])

b4_case(18, [b4_syncline(263, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {	
																InterfaceHelper::addMethods(interface,methodsList);
																Streams::verbose()<<"class_interface_body:	protocol_reference_list interface_declaration_list	AT_END\n";
														}]])

b4_case(19, [b4_syncline(268, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {	
																InterfaceHelper::addMethods(interface,methodsList);
																Streams::verbose()<<"class_interface_body:	instance_variables	interface_declaration_list	AT_END\n";
														}]])

b4_case(20, [b4_syncline(273, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
																Streams::verbose()<<"class_interface_body:	protocol_reference_list 	AT_END\n";
														}]])

b4_case(21, [b4_syncline(277, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"class_interface_body:instance_variables		AT_END\n";}]])

b4_case(22, [b4_syncline(279, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {														
																InterfaceHelper::addMethods(interface,methodsList);
																Streams::verbose()<<"class_interface_body:interface_declaration_list	AT_END\n";
														}]])

b4_case(23, [b4_syncline(283, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"class_interface_body:AT_END\n";}]])

b4_case(24, [b4_syncline(284, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Expected '}' at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(25, [b4_syncline(285, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Expected '}' at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(26, [b4_syncline(286, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Missing '@@end' at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(27, [b4_syncline(287, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Missing '@@end' at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(28, [b4_syncline(288, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Missing '@@end' at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(29, [b4_syncline(289, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Missing '@@end' at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(30, [b4_syncline(290, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Missing '@@end' at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(31, [b4_syncline(291, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Missing '@@end' at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(32, [b4_syncline(292, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Missing '@@end' at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(33, [b4_syncline(296, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
													if(interface!=NULL){
													InterfaceHelper::addInheritedProtocol(interface,idsList,symbolTable);
														idsList.clear();
													}
													Streams::verbose()<<"protocol_reference_list: LESS_THAN ids_list_identifier MORE_THAN\n";
												}]])

b4_case(34, [b4_syncline(303, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Expected '>' at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(35, [b4_syncline(306, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
													Streams::verbose()<<"ids_list:ids_list_identifier COMMA IDENTIFIER\n"; 
													idsList.push_back(]b4_rhs_value(3, 3, [[r.text]])[);
													}]])

b4_case(36, [b4_syncline(310, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
													Streams::verbose()<<"ids_list_identifier:IDENTIFIER\n";
													idsList.push_back(]b4_rhs_value(1, 1, [[r.text]])[);
												    }]])

b4_case(37, [b4_syncline(315, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"array with body";}]])

b4_case(38, [b4_syncline(316, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"array without elements";}]])

b4_case(39, [b4_syncline(320, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"array-element \n";}]])

b4_case(40, [b4_syncline(321, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"array-element \n";}]])

b4_case(41, [b4_syncline(322, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"empty element \n";}]])

b4_case(42, [b4_syncline(323, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"inside braces element \n";}]])

b4_case(43, [b4_syncline(324, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"inside braces element \n";}]])

b4_case(44, [b4_syncline(325, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"inside braces element \n";}]])

b4_case(45, [b4_syncline(328, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"instance_variables:OPEN_S	instance_variable_declaration	CLOSE_S\n";}]])

b4_case(46, [b4_syncline(329, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"instance_variables:OPEN_S	 CLOSE_S\n";}]])

b4_case(47, [b4_syncline(332, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"instance_variable_declarations:instance_variable_declarations instance_variable_declaration\n";}]])

b4_case(48, [b4_syncline(333, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"instance_variable_declarations:instance_variable_declaration\n";}]])

b4_case(49, [b4_syncline(334, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"instance_variable_declarations:variable_declaration_list\n";}]])

b4_case(50, [b4_syncline(337, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"instance_variable_declaration:visibility_specification variable_declaration_list\n";
																	}]])

b4_case(51, [b4_syncline(341, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
										Streams::verbose()<<"variable_declaration_list: variable_declaration_list variable_declaration\n";
										InterfaceHelper::addDataMembers(interface,idsList,type,arrayList,flag,symbolTable,visibility);
											arrayList.clear();
												idsList.clear();
												flag=false;
										}]])

b4_case(52, [b4_syncline(349, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
										       InterfaceHelper::addDataMembers(interface,idsList,type,arrayList,flag,symbolTable,visibility);
												arrayList.clear();
												idsList.clear();
												flag=false;
										Streams::verbose()<<"variable_declaration_list: variable_declaration\n";
										}]])

b4_case(53, [b4_syncline(359, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"visibility_specification:AT_PRIVATE\n";  visibility=new char@{256@}; visibility@{0@}='\0';strcat(visibility,]b4_rhs_value(1, 1, [[r.text]])[);}]])

b4_case(54, [b4_syncline(360, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"visibility_specification:AT_PROTECTED\n"; visibility=new char@{256@}; visibility@{0@}='\0';strcat(visibility,]b4_rhs_value(1, 1, [[r.text]])[);}]])

b4_case(55, [b4_syncline(361, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"visibility_specification:AT_PUBLIC\n"; visibility=new char@{256@}; visibility@{0@}='\0';strcat(visibility,]b4_rhs_value(1, 1, [[r.text]])[);}]])

b4_case(56, [b4_syncline(366, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"struct_variable_declaration:struct_declaration_list\n";}]])

b4_case(57, [b4_syncline(369, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"variable_declaration:type IDENTIFIER	SEMI_COMA\n";
	                                           ]b4_lhs_value([[r.text]])[=]b4_rhs_value(3, 1, [[r.text]])[;
												}]])

b4_case(58, [b4_syncline(372, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"variable_declaration:CONST type IDENTIFIER	SEMI_COMA\n";
														flag=true;
														 ]b4_lhs_value([[r.text]])[=]b4_rhs_value(4, 2, [[r.text]])[;
													}]])

b4_case(59, [b4_syncline(376, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Expected ';' at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(60, [b4_syncline(380, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
									Streams::verbose()<<"ids_list:ids_list COMMA id_dec\n"; 

									}]])

b4_case(61, [b4_syncline(384, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"ids_list:id_dec\n"; }]])

b4_case(62, [b4_syncline(385, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Expected identifier at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(63, [b4_syncline(388, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose() <<" data_member: IDENTIFIER array_tag \n";
							 var=new Array(]b4_rhs_value(2, 2, [[r.text]])[,arrayAlloc.size(),NULL);
					       ( dynamic_cast<Array*>(var))->set_alloc(arrayAlloc);
						   arrayList.push_back( ( dynamic_cast<Array*>(var)));
						      arrayAlloc.clear();
							}]])

b4_case(64, [b4_syncline(394, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {idsList.push_back(]b4_rhs_value(1, 1, [[r.text]])[) ;Streams::verbose() <<" data_member: IDENTIFIER  \n";}]])

b4_case(65, [b4_syncline(395, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Expected identifier at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;arrayAlloc.clear();}]])

b4_case(66, [b4_syncline(396, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Expected ';' at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;arrayAlloc.clear();}]])

b4_case(67, [b4_syncline(398, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {  
																												StructHelper::addDataMembers( myStruct,idsList,type,arrayList,flag, symbolTable);
																												arrayList.clear();
																												idsList.clear();
																												flag=false;
																										  Streams::verbose()<<"struct_declaration_list: struct_declaration_list  variable_declarationxx\n";
																										}]])

b4_case(68, [b4_syncline(406, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {	
																												StructHelper::addDataMembers( myStruct,idsList,type,arrayList,flag, symbolTable);
																												arrayList.clear();
																														 	idsList.clear();
																															flag=false;
																										Streams::verbose()<<"struct_declaration_list:  variable_declarationxx\n";
																										}]])

b4_case(69, [b4_syncline(413, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Illigal visibility specification at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(70, [b4_syncline(417, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
					myStruct=StructHelper::createNewStruct(]b4_rhs_value(2, 2, [[r.text]])[,symbolTable);
					Streams::verbose()<<"struct_header: STRUCT  IDENTIFIER\n";
					}]])

b4_case(71, [b4_syncline(423, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"struct: STRUCT IDENTIFIER OPEN_S   CLOSE_S  entity SEMI_COMA\n";}]])

b4_case(72, [b4_syncline(424, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"struct: STRUCT IDENTIFIER OPEN_S struct_variable_declaration  CLOSE_S enteity SEMI_COMA \n";}]])

b4_case(73, [b4_syncline(425, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"struct: STRUCT IDENTIFIER OPEN_S   CLOSE_S SEMI_COMA\n";}]])

b4_case(74, [b4_syncline(426, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"struct: STRUCT IDENTIFIER OPEN_S struct_variable_declaration  CLOSE_S  SEMI_COMA  \n";}]])

b4_case(75, [b4_syncline(427, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Expected ';' at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(76, [b4_syncline(428, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Expected ';' at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(77, [b4_syncline(429, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Expected ';' at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(78, [b4_syncline(430, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Expected ';' at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(79, [b4_syncline(433, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"entity: IDENTIFIER COMMA  entity\n";}]])

b4_case(80, [b4_syncline(434, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"entity:  IDENTIFIER \n";}]])

b4_case(81, [b4_syncline(435, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Expected identifier at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(82, [b4_syncline(439, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"type:simple type\n";}]])

b4_case(83, [b4_syncline(440, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"type: complex type\n";}]])

b4_case(84, [b4_syncline(441, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"type: struct_type\n";}]])

b4_case(85, [b4_syncline(442, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"type: enum_type\n";}]])

b4_case(86, [b4_syncline(446, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {	Streams::verbose()<<"struct_type: STRUCT IDENTIFIER   \n";
													 type=symbolTable->getType(]b4_rhs_value(2, 2, [[r.text]])[);
																if(type==NULL){
																		string error="Unknown type name '";
		error.append(]b4_rhs_value(2, 2, [[r.text]])[);
		error.append("'.");
		Program::addError(new SemanticError(error));
																}
													}]])

b4_case(87, [b4_syncline(455, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"struct_type: STRUCT IDENTIFIER  MULTI \n";
													 type=symbolTable->getType(]b4_rhs_value(3, 2, [[r.text]])[);
																if(type==NULL){
																										string error="Unknown type name '";
		error.append(]b4_rhs_value(3, 2, [[r.text]])[);
		error.append("'.");
		Program::addError(new SemanticError(error));
																}
													}]])

b4_case(88, [b4_syncline(466, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"enum_type: ENUM IDENTIFIER \n";
													 type=symbolTable->getType(]b4_rhs_value(2, 2, [[r.text]])[);
																if(type==NULL){
																										string error="Unknown type name '";
		error.append(]b4_rhs_value(2, 2, [[r.text]])[);
		error.append("'.");
		Program::addError(new SemanticError(error));
																}
													}]])

b4_case(89, [b4_syncline(475, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"enum_type: ENUM IDENTIFIER  MULTI  \n";
													 type=symbolTable->getType(]b4_rhs_value(3, 2, [[r.text]])[);
																if(type==NULL){
																									string error="Unknown type name '";
		error.append(]b4_rhs_value(3, 2, [[r.text]])[);
		error.append("'.");
		Program::addError(new SemanticError(error));
																}
													}]])

b4_case(90, [b4_syncline(486, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"int type \n";
																type=symbolTable->getType(]b4_rhs_value(1, 1, [[r.text]])[);
																if(type==NULL){
																										string error="Unknown type name '";
		error.append(]b4_rhs_value(1, 1, [[r.text]])[);
		error.append("'.");
		Program::addError(new SemanticError(error));
																}
																}]])

b4_case(91, [b4_syncline(495, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"char type\n";
	type=symbolTable->getType(]b4_rhs_value(1, 1, [[r.text]])[);
																if(type==NULL){
																										string error="Unknown type name '";
		error.append(]b4_rhs_value(1, 1, [[r.text]])[);
		error.append("'.");
		Program::addError(new SemanticError(error));
																}}]])

b4_case(92, [b4_syncline(503, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"float type\n";
	type=symbolTable->getType(]b4_rhs_value(1, 1, [[r.text]])[);
																if(type==NULL){
																										string error="Unknown type name '";
		error.append(]b4_rhs_value(1, 1, [[r.text]])[);
		error.append("'.");
		Program::addError(new SemanticError(error));
																}}]])

b4_case(93, [b4_syncline(511, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"NSString type\n";
	type=symbolTable->getType(]b4_rhs_value(1, 1, [[r.text]])[);
																if(type==NULL){
																										string error="Unknown type name '";
		error.append(]b4_rhs_value(1, 1, [[r.text]])[);
		error.append("'.");
		Program::addError(new SemanticError(error));
																}}]])

b4_case(94, [b4_syncline(519, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"void type\n";
	type=symbolTable->getType(]b4_rhs_value(1, 1, [[r.text]])[);
																if(type==NULL){
																										string error="Unknown type name '";
		error.append(]b4_rhs_value(1, 1, [[r.text]])[);
		error.append("'.");
		Program::addError(new SemanticError(error));
																}}]])

b4_case(95, [b4_syncline(527, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"bool type\n";
	type=symbolTable->getType(]b4_rhs_value(1, 1, [[r.text]])[);
																if(type==NULL){
																										string error="Unknown type name '";
		error.append(]b4_rhs_value(1, 1, [[r.text]])[);
		error.append("'.");
		Program::addError(new SemanticError(error));
																}}]])

b4_case(96, [b4_syncline(537, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"complex_type:	IDENTIFIER	MULTI\n";
 {
													 type=symbolTable->getType(]b4_rhs_value(2, 1, [[r.text]])[);
																if(type==NULL){
																										string error="Unknown type name '";
		error.append(]b4_rhs_value(2, 1, [[r.text]])[);
		error.append("'.");
		Program::addError(new SemanticError(error));
																}
													}}]])

b4_case(97, [b4_syncline(548, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
											Streams::verbose()<<"array_tag: array_first_tag array_tag_list \n"; 
										   }]])

b4_case(98, [b4_syncline(553, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
																Streams::verbose()<<"array_tag_list: array_tag_list OPEN_ARR INT_VAL CLOSE_ARR\n"; 
																arrayAlloc.push_back(]b4_rhs_value(4, 3, [[r.int_val]])[);
														   }]])

b4_case(100, [b4_syncline(558, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<" Error:missing  dimension in array tag  ";arrayAlloc.clear();}]])

b4_case(101, [b4_syncline(561, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
											Streams::verbose()<<"array_first_tag: OPEN_ARR INT_VAL CLOSE_ARR\n"; 
											arrayAlloc.push_back(]b4_rhs_value(3, 2, [[r.int_val]])[);
											}]])

b4_case(102, [b4_syncline(565, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
											Streams::verbose()<<"array_first_tag: OPEN_ARR  CLOSE_ARR\n"; 
											arrayAlloc.push_back(-1);
											}]])

b4_case(103, [b4_syncline(571, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"array with value\n";
								]b4_lhs_value([[r.node]])[=new AssignNode(scoop,NULL,]b4_rhs_value(2, 2, [[r.node]])[);
							   }]])

b4_case(105, [b4_syncline(576, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
								Streams::verbose() <<"with value\n";
								]b4_lhs_value([[r.node]])[=new AssignNode(scoop,NULL,]b4_rhs_value(2, 2, [[r.node]])[);
							 }]])

b4_case(106, [b4_syncline(581, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {]b4_lhs_value([[r.node]])[=NULL;}]])

b4_case(107, [b4_syncline(586, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
																Streams::verbose()<<"interface_declaration_list:interface_declaration_list interface_declaration\n";
															 methodsList.push_back(method);
														
															 
																}]])

b4_case(108, [b4_syncline(592, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
																 Streams::verbose()<<"interface_declaration_list:interface_declaration\n";
															 methodsList.push_back(method);
															 
																 	
																 }]])

b4_case(109, [b4_syncline(600, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"interface_declaration: class_method_declaration\n";}]])

b4_case(110, [b4_syncline(601, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"interface_declaration: instance_method_declaration\n";}]])

b4_case(111, [b4_syncline(605, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
																Streams::verbose()<<"class_method_declaration: PLUS p_type method_selectors	SEMI_COMA\n";
																method=InterfaceHelper::createNewMethod(symbolTable->getType(]b4_rhs_value(4, 2, [[r.text]])[),symbolTable,]b4_rhs_value(4, 3, [[r.text]])[,selectorsList,true);
															
																 selectorsList.clear();
																
																}]])

b4_case(112, [b4_syncline(613, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Expected ';' at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(113, [b4_syncline(614, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Expected ';' at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(114, [b4_syncline(617, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
															Streams::verbose()<<"instance_method_declaration: MINUS p_type	method_selectors		SEMI_COMA\n";
															method=InterfaceHelper::createNewMethod(symbolTable->getType(]b4_rhs_value(4, 2, [[r.text]])[),symbolTable,]b4_rhs_value(4, 3, [[r.text]])[,selectorsList,false);
																 selectorsList.clear();
																
																
															}]])

b4_case(115, [b4_syncline(626, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
																Streams::verbose()<<"p_type : OPEN_P type CLOSE_P\n";
																]b4_lhs_value([[r.text]])[=]b4_rhs_value(3, 2, [[r.text]])[;
																}]])

b4_case(116, [b4_syncline(635, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
																Streams::verbose()<<"method_selectors: selectors_list\n";
																	]b4_lhs_value([[r.text]])[="";
																}]])

b4_case(117, [b4_syncline(639, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"method_selectors:IDENTIFIER \n";]b4_lhs_value([[r.text]])[=]b4_rhs_value(1, 1, [[r.text]])[;}]])

b4_case(118, [b4_syncline(641, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
													Streams::verbose()<<"selectors_list:	selectors_list selector_decleration\n";
																
													selectorsList.push_back(tselector);
													tselector=NULL;
											}]])

b4_case(119, [b4_syncline(647, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
														Streams::verbose()<<"selectors_list:	 selector_decleration\n";
												selectorsList.clear();

												selectorsList.push_back(tselector);
												tselector=NULL;
}]])

b4_case(120, [b4_syncline(655, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
																				Streams::verbose()<<"selector_decleration:	IDENTIFIER	SEMI_COLUMN	parameter_list	\n";
																				tselector=new DeclerationSelector(]b4_rhs_value(3, 1, [[r.text]])[,selectorVarList);
																			}]])

b4_case(121, [b4_syncline(661, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
														Streams::verbose()<<"parameter_list: parameter_list parameter\n";
																	selectorVarList.push_back(var);		
											}]])

b4_case(122, [b4_syncline(665, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
									selectorVarList.clear();
										selectorVarList.push_back(var);		
											
				 
														Streams::verbose()<<"parameter_list:  parameter\n";
						
					}]])

b4_case(123, [b4_syncline(674, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
																Streams::verbose()<<"parameter:  p_type IDENTIFIER\n";
																
																if(type!=NULL){
																var=new Variable(]b4_rhs_value(2, 2, [[r.text]])[,type);
																}
																else{
																Streams::verbose()<<"Error:Type not found.\n";
																}
																}]])

b4_case(124, [b4_syncline(687, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"class_implementation: class_implementation_header class_implementation_body\n";}]])

b4_case(125, [b4_syncline(690, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
																	Streams::verbose()<<"class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER\n";
																	interface=InterfaceHelper::checkImplementation(]b4_rhs_value(4, 2, [[r.text]])[,symbolTable,]b4_rhs_value(4, 4, [[r.text]])[);
																	
																}]])

b4_case(126, [b4_syncline(695, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
																interface=InterfaceHelper::checkImplementation(]b4_rhs_value(2, 2, [[r.text]])[,symbolTable,"");
																	
																}]])

b4_case(127, [b4_syncline(701, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
																	Streams::verbose()<<"class_implementation_body: instance_variables	implementation_definition_list	AT_END\n";
																			InterfaceHelper:: implementMethods(methodsList, interface);
														methodsList.clear();
														}]])

b4_case(128, [b4_syncline(707, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    { 
																	Streams::verbose()<<"class_implementation_body: instance_variables									AT_END\n";
																}]])

b4_case(129, [b4_syncline(710, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
																	Streams::verbose()<<"class_implementation_body:						implementation_definition_list	AT_END\n";
																	InterfaceHelper:: implementMethods(methodsList, interface);
														methodsList.clear();
														
																}]])

b4_case(130, [b4_syncline(716, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"class_implementation_body:	AT_END\n";}]])

b4_case(131, [b4_syncline(719, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {	 methodsList.push_back(method);Streams::verbose()<<"implementation_definition_list: implementation_definition_list implementation_definition\n";}]])

b4_case(132, [b4_syncline(720, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {	 methodsList.push_back(method);Streams::verbose()<<"implementation_definition_list: implementation_definition\n";}]])

b4_case(133, [b4_syncline(723, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"implementation_definition: class_implementation_definition	\n";}]])

b4_case(134, [b4_syncline(724, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"implementation_definition: instance_implementation_definition \n";}]])

b4_case(135, [b4_syncline(727, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
														Streams::verbose()<<"class_implementation_definition: class_implementation_definition_header block_body";
														functionNode->addNode(cscoop);
														functionNode=NULL;
																scoop=NULL;
															scoop=NULL;
													}]])

b4_case(136, [b4_syncline(736, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
										Streams::verbose()<<"class_implementation_definition_header: PLUS p_type		 method_selectors\n";
										method=InterfaceHelper:: createNewMethod(symbolTable->getType(]b4_rhs_value(3, 2, [[r.text]])[),symbolTable,]b4_rhs_value(3, 3, [[r.text]])[,selectorsList,true);
																 selectorsList.clear();
									           functionNode= ScoopHelper::createNewFunctionNode(method,interface->static_twin);
												scoop=functionNode;				
																
										}]])

b4_case(137, [b4_syncline(747, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
															Streams::verbose()<<"instance_implementation_definition: instance_implementation_definition_header block_body\n";
														functionNode->addNode(cscoop);
														functionNode=NULL;
																scoop=NULL;
															scoop=NULL;
										
															}]])

b4_case(138, [b4_syncline(757, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
											     Streams::verbose()<<"instance_implementation_definition_header:MINUS p_type		method_selectors\n";
												 method=InterfaceHelper:: createNewMethod(symbolTable->getType(]b4_rhs_value(3, 2, [[r.text]])[),symbolTable,]b4_rhs_value(3, 3, [[r.text]])[,selectorsList,false);
																 selectorsList.clear();
									           functionNode= ScoopHelper::createNewFunctionNode(method,interface);
												scoop=functionNode;
												}]])

b4_case(139, [b4_syncline(766, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
												
												Streams::verbose()<<"block_body:OPEN_S  block_body_part \n";
												]b4_lhs_value([[r.node]])[=]b4_rhs_value(2, 1, [[r.node]])[;
												}]])

b4_case(140, [b4_syncline(773, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
												
                                                scoop=ScoopHelper::createNewScoop(scoop);
												
												
												scoopVector.push_back(scoop);
												Streams::verbose()<<"block_body_header:OPEN_S	\n";
												]b4_lhs_value([[r.node]])[=scoop;
												}]])

b4_case(141, [b4_syncline(785, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
												cscoop=scoop;scoop=scoop->getParent();
												Streams::verbose()<<"block_body_statements:statement_list	CLOSE_S	\n";
												}]])

b4_case(142, [b4_syncline(789, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
												cscoop=scoop;scoop=scoop->getParent();
												Streams::verbose()<<"block_body_statements:CLOSE_S\n";
												}]])

b4_case(143, [b4_syncline(793, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
											  cscoop=scoop; scoop=scoop->getParent();
												Streams::verbose()<<"block_body_statements: error CLOSE_S\n";
												}]])

b4_case(144, [b4_syncline(799, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"statement_list: statement_list statement\n";
											]b4_lhs_value([[r.text]])[=]b4_rhs_value(2, 2, [[r.text]])[;
											scoop->addNode(]b4_rhs_value(2, 2, [[r.node]])[);
											
											}]])

b4_case(145, [b4_syncline(804, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"statement_list: statement\n";
											]b4_lhs_value([[r.text]])[=]b4_rhs_value(1, 1, [[r.text]])[;
											]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;
											scoop->addNode(]b4_rhs_value(1, 1, [[r.node]])[);
											
											}]])

b4_case(146, [b4_syncline(813, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"statement: loop_statement\n";
											]b4_lhs_value([[r.text]])[="loop";
											]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;
											}]])

b4_case(147, [b4_syncline(817, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"statement: conditional_statement\n";
											]b4_lhs_value([[r.text]])[="cond";
											]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;
											}]])

b4_case(148, [b4_syncline(821, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
												Streams::verbose()<<"statement: expr\n";
												]b4_lhs_value([[r.text]])[="expr";
												]b4_lhs_value([[r.node]])[=]b4_rhs_value(2, 1, [[r.node]])[;
												//nodeXX=$][<r.node>1;
											}]])

b4_case(149, [b4_syncline(827, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
											Streams::verbose()<<"statement: variable_declaration\n";
											
												ScoopHelper::addVariables(idsList,arrayList,type,flag,scoop);
												arrayList.clear();
												idsList.clear();
												flag=false;
												]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;
										    }]])

b4_case(150, [b4_syncline(836, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"statement: block_body\n";]b4_lhs_value([[r.text]])[=new char@{256@};]b4_lhs_value([[r.text]])[@{0@}='\0';strcat(]b4_lhs_value([[r.text]])[,"Block");
												]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;
											}]])

b4_case(151, [b4_syncline(839, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"statement: return_statement\n";
												]b4_lhs_value([[r.text]])[="return";
												]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;
											}]])

b4_case(152, [b4_syncline(843, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"statement: try_catch\n";]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;}]])

b4_case(153, [b4_syncline(845, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
	                                            ]b4_lhs_value([[r.text]])[="asm";
												]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;}]])

b4_case(154, [b4_syncline(848, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
	 ]b4_lhs_value([[r.text]])[="call";
	]b4_lhs_value([[r.node]])[=]b4_rhs_value(2, 1, [[r.node]])[;
	}]])

b4_case(155, [b4_syncline(852, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    { Streams::verbose()<<"statement: THROW\n";]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;}]])

b4_case(156, [b4_syncline(854, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    { Streams::verbose()<<"error SEMI_COMA \n";}]])

b4_case(157, [b4_syncline(857, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"statement: THROW\n";
														]b4_lhs_value([[r.node]])[=new ThrowNode(scoop,]b4_rhs_value(5, 3, [[r.node]])[);
														}]])

b4_case(158, [b4_syncline(862, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"@@asm command \n";
	                                         ]b4_lhs_value([[r.node]])[=new AsmNode(scoop,*]b4_rhs_value(3, 2, [[r.string_val]])[);
											 }]])

b4_case(159, [b4_syncline(868, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
														Streams::verbose()<<"variable_declaration:type IDENTIFIER	SEMI_COMA\n";
														 ]b4_lhs_value([[r.text]])[=]b4_rhs_value(3, 1, [[r.text]])[;
														 ]b4_lhs_value([[r.node]])[=new DeclerationNode(declarationList,scoop,type->get_name());
														 declarationList.clear();
														}]])

b4_case(160, [b4_syncline(874, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
														Streams::verbose()<<"variable_declaration:CONST type IDENTIFIER	SEMI_COMA\n";
														flag=true;
														 ]b4_lhs_value([[r.text]])[=]b4_rhs_value(4, 2, [[r.text]])[;
														  ]b4_lhs_value([[r.node]])[=new DeclerationNode(declarationList,scoop,type->get_name());
														 declarationList.clear();
														}]])

b4_case(161, [b4_syncline(881, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"variable_declaration:enum\n";}]])

b4_case(162, [b4_syncline(885, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"variable_list:variable_list COMMA variable\n";}]])

b4_case(163, [b4_syncline(886, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"variable_list:variable\n";
										
										}]])

b4_case(164, [b4_syncline(889, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Expected ',' at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(165, [b4_syncline(892, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
											Streams::verbose() <<"variable:  IDENTIFIER array_tag initializer \n";
											 var=new Array(]b4_rhs_value(3, 2, [[r.text]])[,arrayAlloc.size(),NULL);
											(dynamic_cast<Array*>(var))->set_alloc(arrayAlloc);
											 arrayList.push_back( ( dynamic_cast<Array*>(var)));
											 arrayAlloc.clear();
											}]])

b4_case(166, [b4_syncline(899, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    { 
											Streams::verbose() <<"variable:  IDENTIFIER main_initializer \n";
											idsList.push_back(]b4_rhs_value(2, 1, [[r.text]])[) ;
											IdentifierNode* identifierNode=new IdentifierNode(]b4_rhs_value(2, 1, [[r.text]])[,scoop);
											if(]b4_rhs_value(2, 2, [[r.node]])[!=NULL){
											(dynamic_cast<AssignNode*>(]b4_rhs_value(2, 2, [[r.node]])[))->setLeftExp(identifierNode);
											}
											declarationList.push_back(make_pair(]b4_rhs_value(2, 1, [[r.text]])[,]b4_rhs_value(2, 2, [[r.node]])[));
											}]])

b4_case(167, [b4_syncline(908, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"Error: Expected identifier at Line No:"<<yylval.r.lineNo<<" Column No:"<<yylval.r.colNo<<endl;}]])

b4_case(168, [b4_syncline(911, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"return_statement: RETURN expr\n";
												 ]b4_lhs_value([[r.node]])[=new ReturnNode(scoop,]b4_rhs_value(3, 2, [[r.node]])[);
												}]])

b4_case(169, [b4_syncline(916, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"loop_statement: for_loop\n";
												]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;
											}]])

b4_case(170, [b4_syncline(919, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"loop_statement: while_loop\n";
												]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;
											}]])

b4_case(171, [b4_syncline(922, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"loop_statement: do_while_loop\n";
												]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;
											}]])

b4_case(172, [b4_syncline(927, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"do_while: do_header   statement   while_loop_header   SEMI_COMMA\n";
													]b4_lhs_value([[r.node]])[=new DoWhileNode(]b4_rhs_value(4, 3, [[r.node]])[,]b4_rhs_value(4, 2, [[r.node]])[,scoop);
													}]])

b4_case(173, [b4_syncline(932, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"do_header: DO\n";}]])

b4_case(174, [b4_syncline(935, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"for_loop: for_loop_header statement\n";
												type=symbolTable->getType("int");
											if(type==NULL){
											  	string error="Unknown type name '";
												error.append(]b4_rhs_value(2, 1, [[r.text]])[);
												error.append("'.");
												Program::addError(new SemanticError(error));
											}	
											ScoopHelper::addVariables(idsList,arrayList,type,flag,scoop);
												arrayList.clear();
												idsList.clear();
												flag=false;
												(dynamic_cast<ForNode*>(]b4_rhs_value(2, 1, [[r.node]])[))->setStatement(]b4_rhs_value(2, 2, [[r.node]])[);
												]b4_rhs_value(2, 2, [[r.node]])[->toString();
												]b4_lhs_value([[r.node]])[=]b4_rhs_value(2, 1, [[r.node]])[;
											}]])

b4_case(175, [b4_syncline(954, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"for_loop_header: FOR OPEN_P for_initializer	SEMI_COMA logic_expr1 SEMI_COMA expr			CLOSE_P\n";
										]b4_lhs_value([[r.node]])[=new ForNode(]b4_rhs_value(8, 3, [[r.node]])[,]b4_rhs_value(8, 5, [[r.node]])[,]b4_rhs_value(8, 7, [[r.node]])[,NULL,scoop);
										//nodeXX=$][<r.node>5;
										}]])

b4_case(176, [b4_syncline(960, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"for_loop_header: FOR OPEN_P					SEMI_COMA logic_expr1 SEMI_COMA expr			CLOSE_P\n";
										]b4_lhs_value([[r.node]])[=new ForNode(NULL,]b4_rhs_value(7, 4, [[r.node]])[,]b4_rhs_value(7, 6, [[r.node]])[,NULL,scoop);
										}]])

b4_case(177, [b4_syncline(964, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"for_loop_header: FOR OPEN_P for_initializer SEMI_COMA			 SEMI_COMA expr			CLOSE_P\n";
										]b4_lhs_value([[r.node]])[=new ForNode(]b4_rhs_value(7, 3, [[r.node]])[,NULL,]b4_rhs_value(7, 6, [[r.node]])[,NULL,scoop);
										}]])

b4_case(178, [b4_syncline(968, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr1 SEMI_COMA				CLOSE_P	\n";
										]b4_lhs_value([[r.node]])[=new ForNode(]b4_rhs_value(7, 3, [[r.node]])[,]b4_rhs_value(7, 5, [[r.node]])[,NULL,NULL,scoop);
										}]])

b4_case(179, [b4_syncline(973, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"for_loop_header: FOR OPEN_P	for_initializer	SEMI_COMA			 SEMI_COMA				CLOSE_P	\n";
										]b4_lhs_value([[r.node]])[=new ForNode(]b4_rhs_value(6, 3, [[r.node]])[,NULL,NULL,NULL,scoop);
										}]])

b4_case(180, [b4_syncline(977, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"for_loop_header: FOR OPEN_P					SEMI_COMA logic_expr1 SEMI_COMA				CLOSE_P\n";
										]b4_lhs_value([[r.node]])[=new ForNode(NULL,]b4_rhs_value(6, 4, [[r.node]])[,NULL,NULL,scoop);
										}]])

b4_case(181, [b4_syncline(981, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"for_loop_header: FOR OPEN_P 				SEMI_COMA			 SEMI_COMA expr			CLOSE_P";
										]b4_lhs_value([[r.node]])[=new ForNode(NULL,NULL,]b4_rhs_value(6, 5, [[r.node]])[,NULL,scoop);
										}]])

b4_case(182, [b4_syncline(986, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"for_loop_hearder: FOR OPEN_P 				SEMI_COMA			SEMI_COMA 				CLOSE_P	\n";
											]b4_lhs_value([[r.node]])[=new ForNode(NULL,NULL,NULL,NULL,scoop);
											}]])

b4_case(183, [b4_syncline(991, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"for_initializer: INT IDENTIFIER EQUAL expr\n";
											AssignNode * temp=new AssignNode(scoop,new IdentifierNode(]b4_rhs_value(4, 2, [[r.text]])[,scoop),]b4_rhs_value(4, 4, [[r.node]])[);
											
											//temp->add($][<r.text>2,);
											
											//temp.push_back(make_pair($][<r.text>2,$][<r.node>4));
											DeclerationNode* temp1=new DeclerationNode(list<pair<string,Node*>>(),scoop,"int");
											temp1->add(]b4_rhs_value(4, 2, [[r.text]])[,temp);
										 ]b4_lhs_value([[r.node]])[=temp1; 
										 idsList.push_back(]b4_rhs_value(4, 2, [[r.text]])[);
										}]])

b4_case(184, [b4_syncline(1002, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"for_initializer: IDENTIFIER EQUAL expr\n";
										]b4_lhs_value([[r.node]])[=new AssignNode(scoop,new IdentifierNode(]b4_rhs_value(3, 1, [[r.text]])[,scoop),]b4_rhs_value(3, 3, [[r.node]])[);
										}]])

b4_case(185, [b4_syncline(1005, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"for_initializer: IDENTIFIER\n";
										]b4_lhs_value([[r.node]])[=new IdentifierNode(]b4_rhs_value(1, 1, [[r.text]])[,scoop);
										}]])

b4_case(186, [b4_syncline(1010, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"logic_expr:expr AND! expr\n";
										]b4_lhs_value([[r.node]])[=new BinaryOperationNode(]b4_rhs_value(3, 1, [[r.node]])[,]b4_rhs_value(3, 3, [[r.node]])[,AND_AND,scoop);
										}]])

b4_case(187, [b4_syncline(1013, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"logic_expr:logic_expr OR_OR logic_expr\n";
										]b4_lhs_value([[r.node]])[=new BinaryOperationNode(]b4_rhs_value(3, 1, [[r.node]])[,]b4_rhs_value(3, 3, [[r.node]])[,OR_OR,scoop);
										}]])

b4_case(188, [b4_syncline(1016, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;
										
										}]])

b4_case(189, [b4_syncline(1022, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"logic_expr:expr LESS_THAN expr\n";
										]b4_lhs_value([[r.node]])[=new BinaryOperationNode(]b4_rhs_value(3, 1, [[r.node]])[,]b4_rhs_value(3, 3, [[r.node]])[,LESS_THAN,scoop);
										}]])

b4_case(190, [b4_syncline(1025, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"logic_expr:expr MORE_THAN expr\n";
										 ]b4_lhs_value([[r.node]])[=new BinaryOperationNode(]b4_rhs_value(3, 1, [[r.node]])[,]b4_rhs_value(3, 3, [[r.node]])[,MORE_THAN,scoop);
										}]])

b4_case(191, [b4_syncline(1028, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"logic_expr:expr LESS_OR_EQUAL expr\n";
										 ]b4_lhs_value([[r.node]])[=new BinaryOperationNode(]b4_rhs_value(3, 1, [[r.node]])[,]b4_rhs_value(3, 3, [[r.node]])[,LESS_OR_EQUAL,scoop);
										}]])

b4_case(192, [b4_syncline(1031, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"logic_expr:expr MORE_OR_EQUAL expr\n";
										]b4_lhs_value([[r.node]])[=new BinaryOperationNode(]b4_rhs_value(3, 1, [[r.node]])[,]b4_rhs_value(3, 3, [[r.node]])[,MORE_OR_EQUAL,scoop);
										}]])

b4_case(193, [b4_syncline(1034, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"logic_expr:expr EQUAL_EQUAL expr\n";
										]b4_lhs_value([[r.node]])[=new BinaryOperationNode(]b4_rhs_value(3, 1, [[r.node]])[,]b4_rhs_value(3, 3, [[r.node]])[,EQUAL_EQUAL,scoop);
										}]])

b4_case(194, [b4_syncline(1037, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"logic_expr:expr EQUAL_EQUAL expr\n";
										]b4_lhs_value([[r.node]])[=new BinaryOperationNode(]b4_rhs_value(3, 1, [[r.node]])[,]b4_rhs_value(3, 3, [[r.node]])[,NOT_EQUAL,scoop);
										}]])

b4_case(195, [b4_syncline(1040, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"logic_expr:NOT_EQUAL expr\n";
										 ]b4_lhs_value([[r.node]])[=new UnaryNode(scoop,]b4_rhs_value(2, 2, [[r.node]])[,NOT_EQUAL);
										}]])

b4_case(196, [b4_syncline(1043, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"logic_expr:OPEN_P logic_expr CLOSE_P\n";
										 ]b4_lhs_value([[r.node]])[=]b4_rhs_value(3, 2, [[r.node]])[;
										}]])

b4_case(197, [b4_syncline(1047, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"logic_expr:TRUE\n";
										 ]b4_lhs_value([[r.node]])[=new ConstantNode(true,scoop);
										}]])

b4_case(198, [b4_syncline(1050, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"logic_expr:FALSE\n";
											 ]b4_lhs_value([[r.node]])[=new ConstantNode(false,scoop);
										}]])

b4_case(199, [b4_syncline(1053, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"logic_expr:long id\n";
											 ]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;
										}]])

b4_case(200, [b4_syncline(1059, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"expr:assign_expr\n";
										 ]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;
										}]])

b4_case(201, [b4_syncline(1062, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"expr:simple_expr\n";
										]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;
										}]])

b4_case(202, [b4_syncline(1067, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
										Streams::verbose()<<"assign_expr:long_id EQUAL simple_expr\n";
										//LongIdHelper::checkIdenentifier( scoop, interface,"set1");
										]b4_lhs_value([[r.node]])[=new AssignNode(scoop,]b4_rhs_value(3, 1, [[r.node]])[,]b4_rhs_value(3, 3, [[r.node]])[);
										}]])

b4_case(203, [b4_syncline(1074, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"long_id: long_id.IDENTIFIER\n";
																]b4_lhs_value([[r.node]])[=new DotNode(scoop,]b4_rhs_value(3, 1, [[r.node]])[,]b4_rhs_value(3, 3, [[r.text]])[);

											;}]])

b4_case(204, [b4_syncline(1078, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
												Streams::verbose()<<"long_id: long_id.message_call\n";
												]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;
											}]])

b4_case(205, [b4_syncline(1082, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
																LongIdHelper::addIdentifier(]b4_rhs_value(1, 1, [[r.text]])[); 
																]b4_lhs_value([[r.node]])[=new IdentifierNode(]b4_rhs_value(1, 1, [[r.text]])[,scoop);
																Streams::verbose()<<"long_id:IDENTIFIER :"<<]b4_rhs_value(1, 1, [[r.text]])[<<"\n";
															   }]])

b4_case(206, [b4_syncline(1087, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
											Streams::verbose()<<"long_id: long_id.array_access\n";
												]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;
											}]])

b4_case(207, [b4_syncline(1095, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
							Streams::verbose()<<"array_access: details\n";

							]b4_lhs_value([[r.node]])[=new ArrayAccessNode(]b4_rhs_value(4, 1, [[r.node]])[,]b4_rhs_value(4, 3, [[r.node]])[,scoop);

						}]])

b4_case(208, [b4_syncline(1104, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
										Streams::verbose()<<"simple_expr:STRING_VAL\n";
									]b4_lhs_value([[r.node]])[=new ConstantNode(*(]b4_rhs_value(1, 1, [[r.string_val]])[),scoop);
									Streams::verbose()<<"node typr"<<]b4_lhs_value([[r.node]])[->generateType()->get_name()<<"\n";
									]b4_lhs_value([[r.string_val]])[=]b4_rhs_value(1, 1, [[r.string_val]])[;
									}]])

b4_case(209, [b4_syncline(1110, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
									Streams::verbose()<<"simple_expr:INT_VAL\n";
									]b4_lhs_value([[r.node]])[=new ConstantNode(yylval.r.int_val,scoop);
									}]])

b4_case(210, [b4_syncline(1114, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"simple_expr:FLOAT_VAL\n";
									]b4_lhs_value([[r.node]])[=new ConstantNode(yylval.r.float_val,scoop);
									}]])

b4_case(211, [b4_syncline(1117, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"simple_expr:CHAR_VAL\n";
										]b4_lhs_value([[r.node]])[=new ConstantNode(yylval.r.char_val,scoop);
									}]])

b4_case(212, [b4_syncline(1120, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"simple_expr:long_id\n";
									]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;
									}]])

b4_case(213, [b4_syncline(1123, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
										Streams::verbose()<<"simple_expr:expr PLUS expr\n";
										]b4_lhs_value([[r.node]])[=new BinaryOperationNode(]b4_rhs_value(3, 1, [[r.node]])[,]b4_rhs_value(3, 3, [[r.node]])[,PLUS,scoop);
									}]])

b4_case(214, [b4_syncline(1127, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
										Streams::verbose()<<"simple_expr:expr MINUS expr\n";
										]b4_lhs_value([[r.node]])[=new BinaryOperationNode(]b4_rhs_value(3, 1, [[r.node]])[,]b4_rhs_value(3, 3, [[r.node]])[,MINUS,scoop);
									}]])

b4_case(215, [b4_syncline(1131, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"simple_expr:expr MULTI expr\n";
											]b4_lhs_value([[r.node]])[=new BinaryOperationNode(]b4_rhs_value(3, 1, [[r.node]])[,]b4_rhs_value(3, 3, [[r.node]])[,MULTI,scoop);
									}]])

b4_case(216, [b4_syncline(1134, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
									Streams::verbose()<<"simple_expr:expr DIV expr\n";
									]b4_lhs_value([[r.node]])[=new BinaryOperationNode(]b4_rhs_value(3, 1, [[r.node]])[,]b4_rhs_value(3, 3, [[r.node]])[,DIV,scoop);
									}]])

b4_case(217, [b4_syncline(1138, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"simple_expr:OPEN_P expr CLOSE_P\n";]b4_lhs_value([[r.node]])[=]b4_rhs_value(3, 2, [[r.node]])[;}]])

b4_case(218, [b4_syncline(1139, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"simple_expr:ID++";}]])

b4_case(219, [b4_syncline(1140, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"simple_expr:ID--";}]])

b4_case(220, [b4_syncline(1141, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"simple_expr:++ID";}]])

b4_case(221, [b4_syncline(1142, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"simple_expr:--ID";}]])

b4_case(222, [b4_syncline(1143, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
																Streams::verbose()<<"expr:p_type expr\n";
																if(type!=NULL)
																]b4_lhs_value([[r.node]])[=new CastNode(scoop,type,]b4_rhs_value(2, 2, [[r.node]])[);
															}]])

b4_case(223, [b4_syncline(1150, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {		
			Streams::verbose()<<"message_call2\n";
			if(callNode==NULL)
			callNode=new CallNode(scoop);
			else 
			{
			callNodeStack.push(callNode);
			callNode=new CallNode(scoop);
			}
			Streams::verbose()<<"mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm";
			}]])

b4_case(224, [b4_syncline(1163, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
												Streams::verbose()<<"message_call: OPEN_ARR sender message CLOSE_ARR\n";
												callNode->setMessage(]b4_rhs_value(4, 3, [[r.text]])[);
												]b4_lhs_value([[r.node]])[=callNode;
												callNode=NULL;
														if(callNodeStack.size()!=0){
														callNode=callNodeStack.top();
														callNodeStack.pop();
														}
												}]])

b4_case(225, [b4_syncline(1175, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"sender: message_call\n";
											
											callNode->setSender(]b4_rhs_value(1, 1, [[r.node]])[);
											 ]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;
											 
											}]])

b4_case(226, [b4_syncline(1181, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"sender: IDENTIFIER\n";
											]b4_lhs_value([[r.node]])[=new IdentifierNode(]b4_rhs_value(1, 1, [[r.text]])[,scoop);
											
											//callNode=new CallNode(scoop);
											
											callNode->setSender(]b4_lhs_value([[r.node]])[);
											
											}]])

b4_case(227, [b4_syncline(1191, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"message: IDENTIFIER\n";
											]b4_lhs_value([[r.text]])[=]b4_rhs_value(1, 1, [[r.text]])[;
												
											}]])

b4_case(228, [b4_syncline(1195, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
											Streams::verbose()<<"message_selectors_list\n";
											//$][<r.node>$][=$][<r.text>1;
											]b4_lhs_value([[r.text]])[="";
											}]])

b4_case(229, [b4_syncline(1202, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
											Streams::verbose()<<"message_selectors_list:message_selectors_list message_selector \n";
												callNode->addSelector(cselector);
											cselector=NULL;
												}]])

b4_case(230, [b4_syncline(1207, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {	callNode->addSelector(cselector);
							cselector=NULL;
								Streams::verbose()<<"message_selectors_list: message_selector\n";
											
		}]])

b4_case(231, [b4_syncline(1213, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
									cselector->name=]b4_rhs_value(3, 1, [[r.text]])[;
							}]])

b4_case(232, [b4_syncline(1217, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"argument_list: argument_list argument\n";
												cselector->addArg(]b4_rhs_value(3, 3, [[r.node]])[);}]])

b4_case(233, [b4_syncline(1219, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"argument_list: argument\n";
												cselector=new CallSelector("");
											cselector->addArg(]b4_rhs_value(1, 1, [[r.node]])[);}]])

b4_case(234, [b4_syncline(1224, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
											Streams::verbose()<<"argument: SEMI_COLUMN expr\n";
											]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;
											//callNode->addArgument($][<r.node>1,"");
											
											}]])

b4_case(235, [b4_syncline(1232, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
											Streams::verbose()<<"while_loop:while_loop_header statement\n";
											 ]b4_lhs_value([[r.node]])[=new WhileNode(]b4_rhs_value(2, 1, [[r.node]])[,]b4_rhs_value(2, 2, [[r.node]])[,scoop);
										}]])

b4_case(236, [b4_syncline(1238, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"while_loop_header: WHILE OPEN_P logic_expr CLOSE_P\n";
											]b4_lhs_value([[r.node]])[=]b4_rhs_value(4, 3, [[r.node]])[;
											}]])

b4_case(237, [b4_syncline(1243, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"conditional_statement: if_header statement\n";
												 ]b4_lhs_value([[r.node]])[=new IfNode(]b4_rhs_value(2, 1, [[r.node]])[,]b4_rhs_value(2, 2, [[r.node]])[,scoop,NULL);
												}]])

b4_case(238, [b4_syncline(1246, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
												Streams::verbose()<<"conditional_statement: if_header statement with else\n";
												 ]b4_lhs_value([[r.node]])[=new IfNode(]b4_rhs_value(4, 1, [[r.node]])[,]b4_rhs_value(4, 2, [[r.node]])[,scoop,new ElseNode(]b4_rhs_value(4, 4, [[r.node]])[,scoop));
												}]])

b4_case(239, [b4_syncline(1250, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"conditional_statement: switch_header switch_body statement\n";
											]b4_lhs_value([[r.node]])[=tempSwitch;
										}]])

b4_case(240, [b4_syncline(1255, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"if_header: IF OPEN_P logic_expr CLOSE_P\n";
											]b4_lhs_value([[r.node]])[=]b4_rhs_value(4, 3, [[r.node]])[;
											}]])

b4_case(241, [b4_syncline(1260, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"switch_header: SWITCH OPEN_P IDENTIFIER CLOSE_P\n";
										
										tempSwitch->setExpr(new IdentifierNode(]b4_rhs_value(5, 3, [[r.text]])[,scoop));
									}]])

b4_case(242, [b4_syncline(1266, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {scoop=new ScoopNode(scoop);tempSwitch=new SwitchNode(NULL,std::list<pair<Node*,Node*>>(),scoop);}]])

b4_case(243, [b4_syncline(1269, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {;}]])

b4_case(244, [b4_syncline(1270, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {;}]])

b4_case(245, [b4_syncline(1271, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {;}]])

b4_case(246, [b4_syncline(1272, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {;}]])

b4_case(247, [b4_syncline(1275, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {;}]])

b4_case(248, [b4_syncline(1276, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {;}]])

b4_case(249, [b4_syncline(1279, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {tempSwitch->addCase(]b4_rhs_value(6, 2, [[r.node]])[,]b4_rhs_value(6, 4, [[r.node]])[);}]])

b4_case(250, [b4_syncline(1280, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {tempSwitch->addCase(]b4_rhs_value(4, 2, [[r.node]])[,]b4_rhs_value(4, 4, [[r.node]])[);}]])

b4_case(251, [b4_syncline(1281, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {tempSwitch->addCase(]b4_rhs_value(5, 2, [[r.node]])[,NULL);}]])

b4_case(252, [b4_syncline(1284, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {tempSwitch->addCase(NULL,]b4_rhs_value(5, 3, [[r.node]])[);}]])

b4_case(253, [b4_syncline(1285, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {tempSwitch->addCase(NULL,]b4_rhs_value(3, 3, [[r.node]])[);}]])

b4_case(254, [b4_syncline(1286, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {tempSwitch->addCase(NULL,]b4_rhs_value(4, 3, [[r.node]])[);}]])

b4_case(255, [b4_syncline(1288, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
										Streams::verbose()<<"protocol: protocol_header protocol_body\n";
										idsList.clear();
										methodsList.clear();
										method=NULL;
										}]])

b4_case(256, [b4_syncline(1296, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
								Streams::verbose()<<"protocol_header: AT_PROTOCOL IDENTIFIER \n";
								protocol=ProtocolHelper ::createNewProtocol(]b4_rhs_value(2, 2, [[r.text]])[,symbolTable );
								
								}]])

b4_case(257, [b4_syncline(1303, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
								Streams::verbose()<<"protocol_body:	protocol_reference_list interface_declaration_list	AT_END\n";
								ProtocolHelper::addInheritedProtocol( protocol, idsList,symbolTable);
								ProtocolHelper::addMethods( protocol,methodsList);
								methodsList.clear();
								idsList.clear();
								}]])

b4_case(258, [b4_syncline(1311, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
								Streams::verbose()<<"protocol_body:	interface_declaration_list	AT_END\n";
									
								ProtocolHelper::addMethods( protocol,methodsList);
								methodsList.clear();
								
								}]])

b4_case(259, [b4_syncline(1319, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
								Streams::verbose()<<"protocol_body:	protocol_reference_list AT_END	\n";
											ProtocolHelper::addInheritedProtocol( protocol, idsList,symbolTable);
								idsList.clear();
								}]])

b4_case(260, [b4_syncline(1325, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"protocol_body:	AT_END\n";}]])

b4_case(261, [b4_syncline(1327, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
																Streams::verbose()<<"enum: ENUM IDENTIFIER  OPEN_S list_expr CLOSE_S SEMI_COMA  \n";
																
																EnumHelper::createNewEnum( ]b4_rhs_value(6, 2, [[r.text]])[,idsList, symbolTable);
																idsList.clear();
															 }]])

b4_case(262, [b4_syncline(1333, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
																Streams::verbose()<<"enum: ENUM IDENTIFIER SEMI_COMA\n";
																EnumHelper::createNewEnum( ]b4_rhs_value(3, 2, [[r.text]])[,idsList, symbolTable);
															  }]])

b4_case(263, [b4_syncline(1340, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
												Streams::verbose()<<"list_expr:IDENTIFIER EQUAL expr COMMA list_expr\n";
												idsList.push_back(]b4_rhs_value(5, 1, [[r.text]])[);
													]b4_lhs_value([[r.node]])[=new AssignNode(scoop,new IdentifierNode(]b4_rhs_value(5, 1, [[r.text]])[,scoop),]b4_rhs_value(5, 3, [[r.node]])[);
												}]])

b4_case(264, [b4_syncline(1345, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
												Streams::verbose()<<"list_expr:IDENTIFIER EQUAL expr\n";
												idsList.push_back(]b4_rhs_value(3, 1, [[r.text]])[);
												]b4_lhs_value([[r.node]])[=new AssignNode(scoop,new IdentifierNode(]b4_rhs_value(3, 1, [[r.text]])[,scoop),]b4_rhs_value(3, 3, [[r.node]])[);
												}]])

b4_case(265, [b4_syncline(1350, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
													Streams::verbose()<<"list_expr:IDENTIFIER \n";
													idsList.push_back(]b4_rhs_value(1, 1, [[r.text]])[);
													//??
												}]])

b4_case(266, [b4_syncline(1355, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
												  Streams::verbose()<<"list_expr:IDENTIFIER  COMMA list_expr \n";
												  idsList.push_back(]b4_rhs_value(3, 1, [[r.text]])[);
												  //??
												}]])

b4_case(267, [b4_syncline(1362, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {
												  Streams::verbose()<<"try_catch:TRY statement catch_list finally_statement \n";
												}]])

b4_case(268, [b4_syncline(1366, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {		
	]b4_lhs_value([[r.node]])[=new TryNode(scoop,]b4_rhs_value(3, 2, [[r.node]])[,dynamic_cast<CatchNode*>(]b4_rhs_value(3, 3, [[r.node]])[))		;		  
								Streams::verbose()<<"try_catch:TRY statement catch_list \n";
							  }]])

b4_case(269, [b4_syncline(1372, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"catch_list:one_catch \n";]b4_lhs_value([[r.node]])[=]b4_rhs_value(1, 1, [[r.node]])[;
													}]])

b4_case(270, [b4_syncline(1374, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"catch_list:catch_list CATCH OPEN_S type IDENTIFIER CLOSE_S statement \n";
												]b4_lhs_value([[r.node]])[=]b4_rhs_value(2, 2, [[r.node]])[;
												dynamic_cast<CatchNode*>(]b4_lhs_value([[r.node]])[)->next=dynamic_cast<CatchNode*>(]b4_rhs_value(2, 1, [[r.node]])[);
												}]])

b4_case(271, [b4_syncline(1379, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    {Streams::verbose()<<"catch_list:CATCH OPEN_S type IDENTIFIER CLOSE_S statement \n";
												]b4_lhs_value([[r.node]])[=]b4_rhs_value(2, 1, [[r.node]])[;dynamic_cast<CatchNode*>(]b4_lhs_value([[r.node]])[)->_statement=]b4_rhs_value(2, 2, [[r.node]])[;	}]])

b4_case(272, [b4_syncline(1383, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])
[    { ]b4_lhs_value([[r.node]])[=new CatchNode(scoop,type,]b4_rhs_value(5, 4, [[r.text]])[);Streams::verbose()<<"now";}]])

])

m4_define([b4_symbol(123, user_number)],
[[-1]])


m4_define([b4_symbol(122, has_destructor)],
[[0]])


m4_define([b4_symbol(36, number)],
[[36]])


m4_define([b4_symbol(32, id)],
[[FLOAT_VAL]])


m4_define([b4_symbol(30, has_id)],
[[1]])


m4_define([b4_table],
[[    80,   260,    89,    93,   293,   221,   325,   242,   379,   281,
     422,   265,    80,   109,   110,   197,   198,   273,   279,   210,
     220,    54,   107,   114,   277,   274,   280,   275,    98,   298,
     -64,   286,    21,   294,   284,   103,   285,   -64,    97,   100,
     331,   282,   211,   128,   423,   101,   299,   334,    99,    80,
      80,    31,    32,   103,   278,    87,   178,   120,    22,   133,
     143,   287,   288,    18,   279,   102,   354,   355,    31,    32,
     217,    18,   280,   377,   432,   433,    80,    88,   197,   198,
      80,   307,   296,    58,   197,   198,   158,   229,    59,   114,
     164,   364,   197,   198,   197,   198,   103,   230,   150,   103,
     153,   197,   198,   197,   198,   380,    80,   344,     1,   362,
     428,   151,    19,   225,   243,    20,   133,     1,    58,   103,
     244,   287,   288,    59,   394,   395,   396,   397,   383,   384,
      94,   152,   222,     2,    31,    32,   430,   346,   348,   223,
     381,  -199,     2,   245,   215,    28,   324,   324,    23,   103,
      95,   330,   103,    31,    32,     3,    44,  -199,   330,  -199,
    -199,     4,   421,     5,     3,   462,   478,   336,   337,   406,
       4,   278,     5,     6,   402,    96,   122,   330,   330,   123,
     338,   279,   486,   383,   384,   339,   487,    24,   338,   280,
     489,   238,   416,   339,   419,   411,   424,   104,   427,    25,
      61,   239,    62,    63,    64,    65,    66,   434,   435,   436,
     437,   438,   439,   105,   324,   278,   324,   159,    71,    72,
     160,   310,   347,   135,   143,   279,   136,   161,    40,   154,
     443,   311,   217,   280,   447,   330,   330,   330,   330,   139,
     135,   197,   198,   213,   251,   156,    73,   456,   451,   155,
     459,   461,    31,    32,    74,    26,   140,   235,   141,   197,
     198,   197,   198,   301,   236,   157,   317,   467,    31,    32,
      56,   253,   254,   -63,   255,   256,   225,   324,    57,   318,
     -63,   251,   324,   324,   475,   240,   467,    60,   160,   143,
     447,   178,   297,   319,   320,   241,    85,   197,   198,   223,
     257,   258,   467,   252,   426,   340,   467,   399,   253,   254,
     467,   255,   256,    88,   168,   197,   198,   169,   115,    62,
      63,    64,    65,    66,   350,   313,   327,   328,   178,   115,
     170,   314,   315,   350,   351,   171,    72,   257,   258,   264,
     124,   352,   169,   373,    62,    63,    64,    65,    66,   233,
     352,   125,   127,   172,   115,   272,   173,   174,   175,   176,
     171,    72,   111,   177,   178,    42,    43,   309,   179,   234,
     442,    74,    31,    32,   236,   180,   129,   181,   172,   182,
     130,   173,   174,   175,   176,    29,   142,    52,   177,   178,
      31,    32,   268,   179,   144,   269,    74,    87,   148,   116,
     180,   118,   181,   264,   182,   408,   169,   409,    62,    63,
      64,    65,    66,   113,   165,   166,    42,    43,   115,   119,
     145,    28,    31,    32,   171,    72,    41,   146,   264,    42,
      43,   169,   163,    62,    63,    64,    65,    66,   382,   212,
     383,   384,   172,   115,   215,   173,   174,   175,   176,   171,
      72,   418,   177,   178,    67,    68,    69,   179,   131,   217,
      74,   216,   336,   337,   180,   393,   181,   172,   182,   224,
     173,   174,   175,   176,   228,   338,   450,   177,   178,   231,
     339,   302,   179,   121,   213,    74,    31,    32,   237,   180,
     246,   181,   264,   182,   250,   169,   276,    62,    63,    64,
      65,    66,   385,   386,   247,   336,   337,   115,   149,   295,
     248,    31,    32,   171,    72,   249,   387,   251,   338,   388,
     266,   389,   390,   339,   376,   167,   267,   304,    42,    43,
     391,   172,   383,   384,   173,   174,   175,   176,   305,   317,
     306,   177,   178,   160,   253,   254,   179,   255,   256,    74,
     326,   308,   318,   180,   332,   181,   329,   182,    62,    63,
      64,    65,    66,   333,   178,   209,   319,   320,    31,    32,
     340,   335,   243,   257,   258,    72,   232,   178,   317,    31,
      32,   345,   356,   253,   254,   173,   255,   256,   357,   361,
     363,   318,   329,   367,    62,    63,    64,    65,    66,   368,
     369,   236,    73,   178,   370,   319,   320,   372,   374,   378,
      74,    72,   257,   258,   252,   375,   392,   398,   404,   253,
     254,    28,   255,   256,    29,   251,    30,   403,   410,    31,
      32,   412,   429,   414,   413,   417,   420,   431,    73,   178,
     425,   440,   444,   445,   452,   454,    74,   317,   257,   258,
     453,   457,   253,   254,   455,   255,   256,   251,   463,   469,
     318,   468,   470,   471,   251,   472,   473,   476,   479,   464,
     465,   483,   178,   480,   319,   320,   464,   477,   251,   252,
     482,   257,   258,   484,   253,   254,   252,   255,   256,   485,
      27,   253,   254,   488,   255,   256,   251,    53,   132,   214,
     252,   458,   303,   407,   178,   253,   254,   147,   255,   256,
     251,   178,   134,   257,   258,   371,   312,   251,   252,   460,
     257,   258,   112,   253,   254,   178,   255,   256,   251,   464,
     415,   481,   252,   474,   257,   258,   365,   253,   254,   252,
     255,   256,   366,   178,   253,   254,   353,   255,   256,     0,
     252,     0,   257,   258,   400,   253,   254,   178,   255,   256,
       0,     0,     0,     0,   178,     0,   257,   258,     0,     0,
       0,     0,     0,   257,   258,   178,     0,    61,     0,    62,
      63,    64,    65,    66,   257,   258,    67,    68,    69,     0,
      70,     0,     0,     0,     0,    71,    72,    61,     0,    62,
      63,    64,    65,    66,     0,     0,    61,     0,    62,    63,
      64,    65,    66,     0,     0,    71,    72,     0,     0,     0,
       0,     0,     0,    73,     0,    72,     0,     0,     0,     0,
       0,    74,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    73,     0,     0,     0,     0,     0,     0,
       0,    74,    73,     0,     0,     0,     0,     0,     0,     0,
      74]])


m4_define([b4_symbol(109, has_id)],
[[1]])


m4_define([b4_symbol(78, has_printer)],
[[0]])


m4_define([b4_symbol(174, user_number)],
[[-1]])


m4_define([b4_symbol(78, tag)],
[[class_interface]])


m4_define([b4_symbol(19, number)],
[[19]])


m4_define([b4_symbol(13, has_id)],
[[1]])


m4_define([b4_symbol(149, tag)],
[[array_access]])


m4_define([b4_symbol(136, type)],
[[]])


m4_define([b4_symbol(143, id)],
[[for_initializer]])


m4_define([b4_merger_min],
[[0]])


m4_define([b4_symbol(175, has_destructor)],
[[0]])


m4_define([b4_symbol(124, has_type)],
[[0]])


m4_define([b4_symbol(132, number)],
[[132]])


m4_define([b4_symbol(174, is_token)],
[[0]])


m4_define([b4_symbol(61, has_destructor)],
[[0]])


m4_define([b4_symbol(68, has_type)],
[[0]])


m4_define([b4_symbol(74, id)],
[[]])


m4_define([b4_symbol(104, is_token)],
[[0]])


m4_define([b4_symbol(47, has_printer)],
[[0]])


m4_define([b4_symbol(130, has_destructor)],
[[0]])


m4_define([b4_symbol(143, user_number)],
[[-1]])


m4_define([b4_stos_max],
[[178]])


m4_define([b4_symbol(177, tag)],
[[one_catch_header]])


m4_define([b4_symbol(115, number)],
[[115]])


m4_define([b4_symbol(98, has_printer)],
[[0]])


m4_define([b4_symbol(48, is_token)],
[[1]])


m4_define([b4_symbol(1, has_printer)],
[[0]])


m4_define([b4_symbol(72, has_type)],
[[0]])


m4_define([b4_symbol(5, number)],
[[5]])


m4_define([b4_symbol(66, type)],
[[]])


m4_define([b4_symbol(104, id)],
[[array_tag_list]])


m4_define([b4_symbol(85, has_id)],
[[1]])


m4_define([b4_symbol(52, is_token)],
[[1]])


m4_define([b4_symbol(16, has_printer)],
[[0]])


m4_define([b4_symbol(35, id)],
[[INT_VAL]])


m4_define([b4_symbol(112, user_number)],
[[-1]])


m4_define([b4_symbol(16, type)],
[[]])


m4_define([b4_symbol(35, tag)],
[[INT_VAL]])


m4_define([b4_symbol(68, has_id)],
[[1]])


m4_define([b4_check],
[[    28,   179,    31,    32,   210,   136,   248,   163,   317,     4,
       1,   180,    40,    42,    43,   117,   117,   186,    51,    18,
       1,    17,    40,    46,    11,   194,    59,   196,     1,    35,
      11,    17,     4,   211,   203,    36,   205,    18,    34,    35,
     252,   200,    41,    71,    35,     1,    52,   259,    21,    77,
      78,    24,    25,    54,    41,     4,    51,    53,     4,    77,
      88,    47,    48,     0,    51,    21,   278,   279,    24,    25,
      51,     8,    59,   315,   383,   384,   104,    26,   180,   180,
     108,   237,   213,    11,   186,   186,   104,     1,    16,   112,
     108,    17,   194,   194,   196,   196,    97,    11,    94,   100,
      96,   203,   203,   205,   205,   317,   134,   266,     3,   287,
      11,     1,     1,   142,    11,     4,   134,     3,    11,   120,
      17,    47,    48,    16,   336,   337,   338,   339,    29,    30,
       1,    21,    11,    28,    24,    25,   378,   268,   269,    18,
     318,    11,    28,   171,    37,    16,   247,   248,     4,   150,
      21,   252,   153,    24,    25,    50,    15,    27,   259,    29,
      30,    56,   368,    58,    50,    11,   464,    24,    25,   347,
      56,    41,    58,    68,   343,    34,     1,   278,   279,     4,
      37,    51,   480,    29,    30,    42,   484,     4,    37,    59,
     488,     1,   361,    42,   363,    52,   374,     1,   376,    31,
       4,    11,     6,     7,     8,     9,    10,   385,   386,   387,
     388,   389,   390,    17,   315,    41,   317,     1,    22,    23,
       4,     1,    41,     1,   252,    51,     4,    11,    16,     1,
     399,    11,    51,    59,   412,   336,   337,   338,   339,     1,
       1,   343,   343,     4,     4,     1,    50,   425,   417,    21,
     428,   429,    24,    25,    58,     0,    18,    11,    20,   361,
     361,   363,   363,     1,    18,    21,    26,   445,    24,    25,
       5,    31,    32,    11,    34,    35,   305,   378,     5,    39,
      18,     4,   383,   384,   462,     1,   464,    11,     4,   317,
     468,    51,    11,    53,    54,    11,     4,   399,   399,    18,
      60,    61,   480,    26,    27,    63,   484,    65,    31,    32,
     488,    34,    35,    26,     1,   417,   417,     4,    16,     6,
       7,     8,     9,    10,     1,     4,    60,    61,    51,    16,
      17,    10,    11,     1,    11,    22,    23,    60,    61,     1,
       4,    18,     4,    11,     6,     7,     8,     9,    10,     1,
      18,     4,    37,    40,    16,    17,    43,    44,    45,    46,
      22,    23,    21,    50,    51,    24,    25,    11,    55,    21,
     398,    58,    24,    25,    18,    62,     4,    64,    40,    66,
       4,    43,    44,    45,    46,    19,     5,    21,    50,    51,
      24,    25,     1,    55,    89,     4,    58,     4,    93,    49,
      62,    51,    64,     1,    66,   350,     4,   352,     6,     7,
       8,     9,    10,    21,   109,   110,    24,    25,    16,    21,
       1,    16,    24,    25,    22,    23,    21,     4,     1,    24,
      25,     4,    17,     6,     7,     8,     9,    10,    27,    17,
      29,    30,    40,    16,    37,    43,    44,    45,    46,    22,
      23,    49,    50,    51,    13,    14,    15,    55,    17,    51,
      58,    37,    24,    25,    62,    27,    64,    40,    66,     4,
      43,    44,    45,    46,    27,    37,    49,    50,    51,    11,
      42,     1,    55,    21,     4,    58,    24,    25,    18,    62,
      26,    64,     1,    66,     4,     4,    11,     6,     7,     8,
       9,    10,    19,    20,    26,    24,    25,    16,    21,    11,
      26,    24,    25,    22,    23,    26,    33,     4,    37,    36,
      26,    38,    39,    42,    11,    21,    31,     4,    24,    25,
      27,    40,    29,    30,    43,    44,    45,    46,     5,    26,
       1,    50,    51,     4,    31,    32,    55,    34,    35,    58,
       4,    11,    39,    62,     4,    64,     4,    66,     6,     7,
       8,     9,    10,     4,    51,    21,    53,    54,    24,    25,
      63,    11,    11,    60,    61,    23,    21,    51,    26,    24,
      25,    11,     4,    31,    32,    43,    34,    35,     4,    57,
       5,    39,     4,    17,     6,     7,     8,     9,    10,    18,
      52,    18,    50,    51,    51,    53,    54,    11,    41,    11,
      58,    23,    60,    61,    26,     4,    27,    26,    41,    31,
      32,    16,    34,    35,    19,     4,    21,    27,    11,    24,
      25,     5,    11,     4,    52,     5,    17,    27,    50,    51,
      41,    16,    11,    16,    11,    52,    58,    26,    60,    61,
      49,    27,    31,    32,    52,    34,    35,     4,     4,    11,
      39,     5,    49,    11,     4,    27,    27,    27,    17,    16,
      17,    27,    51,    18,    53,    54,    16,    17,     4,    26,
      11,    60,    61,    18,    31,    32,    26,    34,    35,    17,
       8,    31,    32,    18,    34,    35,     4,    17,    75,   128,
      26,    27,   223,   348,    51,    31,    32,    91,    34,    35,
       4,    51,    78,    60,    61,   305,   245,     4,    26,    27,
      60,    61,    44,    31,    32,    51,    34,    35,     4,    16,
     359,   468,    26,    27,    60,    61,   290,    31,    32,    26,
      34,    35,   290,    51,    31,    32,   274,    34,    35,    -1,
      26,    -1,    60,    61,   341,    31,    32,    51,    34,    35,
      -1,    -1,    -1,    -1,    51,    -1,    60,    61,    -1,    -1,
      -1,    -1,    -1,    60,    61,    51,    -1,     4,    -1,     6,
       7,     8,     9,    10,    60,    61,    13,    14,    15,    -1,
      17,    -1,    -1,    -1,    -1,    22,    23,     4,    -1,     6,
       7,     8,     9,    10,    -1,    -1,     4,    -1,     6,     7,
       8,     9,    10,    -1,    -1,    22,    23,    -1,    -1,    -1,
      -1,    -1,    -1,    50,    -1,    23,    -1,    -1,    -1,    -1,
      -1,    58,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    50,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    58,    50,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      58]])


m4_define([b4_symbol(106, tag)],
[[initializer]])


m4_define([b4_symbol(67, has_printer)],
[[0]])


m4_define([b4_dprec],
[[     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0]])


m4_define([b4_symbol(163, user_number)],
[[-1]])


m4_define([b4_symbol(173, type)],
[[]])


m4_define([b4_symbol(146, id)],
[[expr]])


m4_define([b4_symbol(165, has_type)],
[[0]])


m4_define([b4_pact],
[[   105,   111,    28,    54,   144,   183,   168,   255,   114,  -310,
    -310,   605,   212,  -310,  -310,   405,  -310,   366,  -310,  -310,
     265,   273,    72,  -310,  -310,   276,  -310,  -310,   773,   292,
    -310,    51,   287,  -310,   129,    27,    44,  -310,  -310,  -310,
     196,  -310,   287,   287,   341,  -310,   392,  -310,  -310,   302,
    -310,   302,  -310,   398,   462,  -310,   175,   336,  -310,   347,
    -310,   315,  -310,  -310,  -310,  -310,  -310,  -310,  -310,  -310,
    -310,   802,  -310,   372,   376,   441,  -310,   793,   793,  -310,
     222,  -310,  -310,  -310,  -310,  -310,   238,   381,   802,   393,
     419,   423,  -310,   393,   487,  -310,   110,   228,  -310,  -310,
     244,  -310,  -310,  -310,   793,   216,   415,  -310,   793,   393,
     393,  -310,   504,  -310,  -310,  -310,  -310,   313,  -310,  -310,
     544,  -310,  -310,  -310,  -310,     1,   422,  -310,   239,   407,
     424,  -310,  -310,  -310,   793,   408,    19,   121,  -310,  -310,
     465,  -310,   287,   447,    86,  -310,   381,  -310,   468,  -310,
     555,  -310,  -310,   348,  -310,  -310,  -310,  -310,  -310,   246,
     470,  -310,   190,   284,  -310,  -310,  -310,  -310,   103,   315,
    -310,   802,   464,   478,   484,  -310,   489,   490,  -310,   724,
     491,   494,   495,   391,  -310,  -310,   338,  -310,  -310,  -310,
    -310,  -310,  -310,  -310,   491,  -310,   491,   485,    13,  -310,
       5,  -310,  -310,   491,  -310,   491,    14,  -310,  -310,  -310,
     347,   724,   498,    19,   281,  -310,  -310,    -6,  -310,  -310,
    -310,   262,  -310,   480,  -310,   523,   533,  -310,  -310,  -310,
    -310,  -310,  -310,  -310,  -310,  -310,  -310,   539,   540,  -310,
     356,  -310,   220,  -310,  -310,   391,   321,   240,   240,   546,
     107,   266,   588,  -310,  -310,  -310,  -310,   550,   559,   724,
     560,  -310,   174,   481,   561,   507,   526,   570,   408,   181,
     323,  -310,  -310,  -310,   542,  -310,  -310,  -310,   724,   724,
     578,  -310,  -310,   584,  -310,   532,  -310,   724,   585,  -310,
      74,  -310,   576,  -310,   581,  -310,  -310,  -310,   548,  -310,
     553,  -310,   408,  -310,  -310,   287,   583,  -310,  -310,  -310,
     596,  -310,   332,   567,   611,   513,   598,   552,   724,  -310,
    -310,   411,  -310,   483,   130,   503,   589,  -310,  -310,   266,
     -33,   438,  -310,  -310,   481,  -310,   724,   724,   724,   724,
     591,   242,  -310,   491,   600,  -310,   577,   724,   577,  -310,
     391,  -310,   391,   617,   481,   143,  -310,   626,   582,   629,
    -310,   491,   630,   402,  -310,  -310,   619,  -310,   347,  -310,
       9,  -310,  -310,  -310,   724,   599,   277,    99,   621,   610,
     438,  -310,  -310,   240,   240,   724,   724,   724,   724,   724,
     724,  -310,   625,  -310,   151,   151,  -310,  -310,   802,   491,
    -310,  -310,  -310,   631,   627,  -310,  -310,  -310,  -310,  -310,
    -310,  -310,   724,  -310,   626,  -310,  -310,   427,   633,   601,
    -310,  -310,   593,   602,  -310,   724,  -310,   624,   674,   692,
     154,  -310,  -310,  -310,  -310,  -310,  -310,  -310,  -310,  -310,
    -310,  -310,   654,  -310,  -310,   653,  -310,  -310,   656,  -310,
     648,   613,  -310,   652,  -310,  -310,  -310,  -310,  -310,   638,
    -310,   639,   706,   640,   660,  -310,   651,   655,   724,  -310,
     669,  -310,  -310,  -310,  -310,   644,  -310,   665,   672,  -310,
     713,  -310,  -310,  -310,   713,   675,  -310,  -310,   713,  -310]])


m4_define([b4_symbol(63, tag)],
[[CATCH]])


m4_define([b4_symbol(123, type)],
[[]])


m4_define([b4_symbol(91, number)],
[[91]])


m4_define([b4_symbol(145, is_token)],
[[0]])


m4_define([b4_symbol(134, tag)],
[[variable_declaration_block]])


m4_define([b4_symbol(164, has_id)],
[[1]])


m4_define([b4_symbol(39, has_type)],
[[0]])


m4_define([b4_symbol(77, id)],
[[component]])


m4_define([b4_symbol(36, has_printer)],
[[0]])


m4_define([b4_symbol(132, user_number)],
[[-1]])


m4_define([b4_symbol(89, is_token)],
[[0]])


m4_define([b4_symbol(74, number)],
[[74]])


m4_define([b4_symbol(19, is_token)],
[[1]])


m4_define([b4_symbol(43, has_type)],
[[0]])


m4_define([b4_symbol(87, has_printer)],
[[0]])


m4_define([b4_symbol(147, has_id)],
[[1]])


m4_define([b4_symbol(16, has_destructor)],
[[0]])


m4_define([b4_symbol(107, id)],
[[main_initializer]])


m4_define([b4_symbol(93, is_token)],
[[0]])


m4_define([b4_symbol(91, tag)],
[[variable_declarationxx]])


m4_define([b4_symbol(23, is_token)],
[[1]])


m4_define([b4_symbol(57, number)],
[[57]])


m4_define([b4_symbol(162, tag)],
[[if_header]])


m4_define([b4_symbol(53, type)],
[[]])


m4_define([b4_symbol(51, has_id)],
[[1]])


m4_define([b4_symbol(7, user_number)],
[[262]])


m4_define([b4_symbol(38, id)],
[[EQUAL_EQUAL]])


m4_define([b4_symbol(101, user_number)],
[[-1]])


m4_define([b4_states_number],
[[490]])


m4_define([b4_table_min],
[[-199]])


m4_define([b4_symbol(170, number)],
[[170]])


m4_define([b4_symbol(69, has_destructor)],
[[0]])


m4_define([b4_symbol(34, has_id)],
[[1]])


m4_define([b4_nterms_number],
[[105]])


m4_define([b4_symbol(138, has_destructor)],
[[0]])


m4_define([b4_symbol(5, has_type)],
[[0]])


m4_define([b4_check_max],
[[488]])


m4_define([b4_symbol(56, has_printer)],
[[0]])


m4_define([b4_symbol(0, id)],
[[]])


m4_define([b4_symbol(152, user_number)],
[[-1]])


m4_define([b4_symbol(20, tag)],
[[MORE_THAN]])


m4_define([b4_symbol(136, has_type)],
[[0]])


m4_define([b4_symbol(149, id)],
[[array_access]])


m4_define([b4_symbol(160, type)],
[[]])


m4_define([b4_symbol(153, number)],
[[153]])


m4_define([b4_symbol(17, has_id)],
[[1]])


m4_define([b4_symbol(24, has_destructor)],
[[0]])


m4_define([b4_symbol(116, is_token)],
[[0]])


m4_define([b4_symbol(140, has_type)],
[[0]])


m4_define([b4_symbol(136, number)],
[[136]])


m4_define([b4_symbol(130, has_id)],
[[1]])


m4_define([b4_parser_file_name],
[[yacc.cpp]])


m4_define([b4_symbol(110, type)],
[[]])


m4_define([b4_symbol(25, has_printer)],
[[0]])


m4_define([b4_symbol(84, has_type)],
[[0]])


m4_define([b4_symbol(0, has_destructor)],
[[0]])


m4_define([b4_symbol(88, tag)],
[[variable_declaration_list]])


m4_define([b4_symbol(121, user_number)],
[[-1]])


m4_define([b4_symbol(120, is_token)],
[[0]])


m4_define([b4_symbol(14, has_type)],
[[0]])


m4_define([b4_symbol(60, id)],
[[DOUBLEPLUS]])


m4_define([b4_symbol(159, tag)],
[[while_loop]])


m4_define([b4_symbol(137, type)],
[[]])


m4_define([b4_symbol(40, number)],
[[40]])


m4_define([b4_symbol(77, has_destructor)],
[[0]])


m4_define([b4_symbol(119, number)],
[[119]])


m4_define([b4_symbol(146, has_destructor)],
[[0]])


m4_define([b4_symbol(76, has_printer)],
[[0]])


m4_define([b4_symbol(90, type)],
[[]])


m4_define([b4_symbol(172, user_number)],
[[-1]])


m4_define([b4_symbol(64, is_token)],
[[1]])


m4_define([b4_symbol(113, has_id)],
[[1]])


m4_define([b4_symbol(9, number)],
[[9]])


m4_define([b4_symbol(3, has_id)],
[[1]])


m4_define([b4_symbol(89, has_id)],
[[1]])


m4_define([b4_symbol(32, has_destructor)],
[[0]])


m4_define([b4_symbol(23, number)],
[[23]])


m4_define([b4_symbol(101, has_destructor)],
[[0]])


m4_define([b4_symbol(171, id)],
[[protocol_body]])


m4_define([b4_dir_prefix],
[[]])


m4_define([b4_symbol(40, type)],
[[]])


m4_define([b4_symbol(17, tag)],
[[CLOSE_S]])


m4_define([b4_symbol(21, id)],
[[AT_END]])


m4_define([b4_symbol(3, id)],
[[AT_INTERFACE]])


m4_define([b4_symbol(45, has_printer)],
[[0]])


m4_define([b4_symbol(67, type)],
[[]])


m4_define([b4_symbol(141, user_number)],
[[-1]])


m4_define([b4_symbol(177, has_type)],
[[0]])


m4_define([b4_symbol(2, tag)],
[[$][undefined]])


m4_define([b4_symbol(107, has_type)],
[[0]])


m4_define([b4_symbol(119, has_printer)],
[[0]])


m4_define([b4_symbol(85, has_destructor)],
[[0]])


m4_define([b4_undef_token_number],
[[2]])


m4_define([b4_symbol(154, has_destructor)],
[[0]])


m4_define([b4_symbol(96, has_printer)],
[[0]])


m4_define([b4_symbol(157, is_token)],
[[0]])


m4_define([b4_symbol(111, has_type)],
[[0]])


m4_define([b4_symbol(17, type)],
[[]])


m4_define([b4_symbol(132, id)],
[[throw_statement]])


m4_define([b4_symbol(0, type)],
[[]])


m4_define([b4_symbol(45, tag)],
[[DO]])


m4_define([b4_symbol(40, has_destructor)],
[[0]])


m4_define([b4_symbol(95, number)],
[[95]])


m4_define([b4_symbol(116, tag)],
[[parameter_list]])


m4_define([b4_symbol(161, is_token)],
[[0]])


m4_define([b4_symbol(55, has_type)],
[[0]])


m4_define([b4_symbol(174, type)],
[[]])


m4_define([b4_symbol(168, has_id)],
[[1]])


m4_define([b4_symbol(102, number)],
[[102]])


m4_define([b4_symbol(14, has_printer)],
[[0]])


m4_define([b4_symbol(110, user_number)],
[[-1]])


m4_define([b4_symbol(63, id)],
[[CATCH]])


m4_define([b4_symbol(78, number)],
[[78]])


m4_define([b4_immediate],
[[     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0]])


m4_define([b4_symbol(35, is_token)],
[[1]])


m4_define([b4_symbol(72, has_id)],
[[1]])


m4_define([b4_symbol(65, has_printer)],
[[0]])


m4_define([b4_symbol(161, user_number)],
[[-1]])


m4_define([b4_symbol(124, type)],
[[]])


m4_define([b4_symbol(139, has_printer)],
[[0]])


m4_define([b4_symbol(73, tag)],
[[try_prec]])


m4_define([b4_symbol(93, has_destructor)],
[[0]])


m4_define([b4_symbol(144, tag)],
[[logic_expr1]])


m4_define([b4_symbol(162, has_destructor)],
[[0]])


m4_define([b4_symbol(55, has_id)],
[[1]])


m4_define([b4_symbol(174, id)],
[[try_catch]])


m4_define([b4_tokens_number],
[[74]])


m4_define([b4_file_name_all_but_ext],
[[yacc]])


m4_define([b4_symbol(24, id)],
[[PLUS]])


m4_define([b4_symbol(6, id)],
[[NSSTRING]])


m4_define([b4_symbol(174, number)],
[[174]])


m4_define([b4_symbol(148, has_type)],
[[0]])


m4_define([b4_symbol(8, has_destructor)],
[[0]])


m4_define([b4_symbol(34, has_printer)],
[[0]])


m4_define([b4_symbol(38, has_id)],
[[1]])


m4_define([b4_symbol(130, user_number)],
[[-1]])


m4_define([b4_symbol(108, has_printer)],
[[0]])


m4_define([b4_symbol(172, tag)],
[[enum]])


m4_define([b4_symbol(54, type)],
[[]])


m4_define([b4_symbol(128, is_token)],
[[0]])


m4_define([b4_symbol(85, has_printer)],
[[0]])


m4_define([b4_symbol(152, has_type)],
[[0]])


m4_define([b4_symbol(1, is_token)],
[[0]])


m4_define([b4_symbol(157, number)],
[[157]])


m4_define([b4_symbol(151, has_id)],
[[1]])


m4_define([b4_token_table_flag],
[[0]])


m4_define([b4_symbol(159, has_printer)],
[[0]])


m4_define([b4_symbol(135, id)],
[[variable_list]])


m4_define([b4_yacc_flag],
[[0]])


m4_define([b4_symbol(132, is_token)],
[[0]])


m4_define([b4_symbol(170, has_destructor)],
[[0]])


m4_define([b4_symbol(96, has_type)],
[[0]])


m4_define([b4_symbol(109, has_destructor)],
[[0]])


m4_define([b4_symbol(26, has_type)],
[[0]])


m4_define([b4_symbol(61, number)],
[[61]])


m4_define([b4_symbol(5, user_number)],
[[260]])


m4_define([b4_symbol(134, has_id)],
[[1]])


m4_define([b4_symbol(76, is_token)],
[[0]])


m4_define([b4_symbol(30, tag)],
[[OR_OR]])


m4_define([b4_symbol(66, id)],
[[AT_ASM]])


m4_define([b4_symbol(161, type)],
[[]])


m4_define([b4_symbol(101, tag)],
[[simple_type]])


m4_define([b4_table_ninf],
[[-200]])


m4_define([b4_symbol(30, has_type)],
[[0]])


m4_define([b4_symbol(44, number)],
[[44]])


m4_define([b4_symbol(54, has_printer)],
[[0]])


m4_define([b4_symbol(150, user_number)],
[[-1]])


m4_define([b4_spec_defines_file],
[[yacc.hpp]])


m4_define([b4_percent_define_loc(lr.type)],
[[[[<default value>:-1.-1]], [[<default value>:-1.-1]]]])


m4_define([b4_symbol(128, has_printer)],
[[0]])


m4_define([b4_symbol(80, is_token)],
[[0]])


m4_define([b4_symbol(117, has_id)],
[[1]])


m4_define([b4_symbol(10, is_token)],
[[1]])


m4_define([b4_symbol(7, has_id)],
[[1]])


m4_define([b4_symbol(111, type)],
[[]])


m4_define([b4_symbol(177, id)],
[[one_catch_header]])


m4_define([b4_symbol(27, number)],
[[27]])


m4_define([b4_symbol(98, tag)],
[[type]])


m4_define([b4_symbol(21, has_id)],
[[1]])


m4_define([b4_symbol(169, tag)],
[[protocol]])


m4_define([b4_symbol(48, has_destructor)],
[[0]])


m4_define([b4_symbol(138, type)],
[[]])


m4_define([b4_symbol(117, has_destructor)],
[[0]])


m4_define([b4_symbol(27, id)],
[[CLOSE_P]])


m4_define([b4_symbol(119, has_type)],
[[0]])


m4_define([b4_percent_define(lr.type)],
[[lalr]])


m4_define([b4_symbol(91, type)],
[[]])


m4_define([b4_symbol(9, id)],
[[BOOL]])


m4_define([b4_symbol(23, has_printer)],
[[0]])


m4_define([b4_synclines_flag],
[[1]])


m4_define([b4_symbol(140, number)],
[[140]])


m4_define([b4_symbol(169, is_token)],
[[0]])


m4_define([b4_symbol(123, has_type)],
[[0]])


m4_define([b4_merger],
[[     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0]])


m4_define([b4_symbol(74, has_printer)],
[[0]])


m4_define([b4_symbol(41, type)],
[[]])


m4_define([b4_symbol(170, user_number)],
[[-1]])


m4_define([b4_percent_define_loc(parse.error)],
[[[[C:\Users\Khaled Kuteini\Source\Repos\occ\compiler\yacc.y:3.9]], [[C:\Users\Khaled Kuteini\Source\Repos\occ\compiler\yacc.y:3.20]]]])


m4_define([b4_symbol(123, number)],
[[123]])


m4_define([b4_symbol(173, is_token)],
[[0]])


m4_define([b4_symbol(148, has_printer)],
[[0]])


m4_define([b4_symbol(138, id)],
[[loop_statement]])


m4_define([b4_symbol(103, is_token)],
[[0]])


m4_define([b4_symbol(67, has_type)],
[[0]])


m4_define([b4_symbol(27, tag)],
[[CLOSE_P]])


m4_define([b4_percent_define_loc(lr.keep-unreachable-state)],
[[[[<default value>:-1.-1]], [[<default value>:-1.-1]]]])


m4_define([b4_symbol(68, type)],
[[]])


m4_define([b4_symbol(99, number)],
[[99]])


m4_define([b4_symbol(47, is_token)],
[[1]])


m4_define([b4_symbol(93, has_id)],
[[1]])


m4_define([b4_symbol(71, has_type)],
[[0]])


m4_define([b4_symbol(69, id)],
[[if_h]])


m4_define([b4_symbol(106, number)],
[[106]])


m4_define([b4_symbol(100, has_id)],
[[1]])


m4_define([b4_symbol(56, has_destructor)],
[[0]])


m4_define([b4_symbol(125, has_destructor)],
[[0]])


m4_define([b4_defgoto_min],
[[-1]])


m4_define([b4_symbol(18, type)],
[[]])


m4_define([b4_symbol(43, has_printer)],
[[0]])


m4_define([b4_symbol(51, is_token)],
[[1]])


m4_define([b4_symbol(55, tag)],
[[RETURN]])


m4_define([b4_symbol(10, number)],
[[10]])


m4_define([b4_symbol(76, has_id)],
[[1]])


m4_define([b4_symbol(1, type)],
[[]])


m4_define([b4_symbol(117, has_printer)],
[[0]])


m4_define([b4_symbol(126, tag)],
[[instance_implementation_definition_header]])


m4_define([b4_symbol(11, has_destructor)],
[[0]])


m4_define([b4_symbol(94, has_printer)],
[[0]])


m4_define([b4_symbol(175, type)],
[[]])


m4_define([b4_symbol(168, has_printer)],
[[0]])


m4_define([b4_symbol(59, has_id)],
[[1]])


m4_define([b4_symbol(9, is_token)],
[[1]])


m4_define([b4_symbol(178, has_destructor)],
[[0]])


m4_define([b4_symbol(160, id)],
[[while_loop_header]])


m4_define([b4_tname],
[["$][end", "error", "$][undefined", "AT_INTERFACE", "IDENTIFIER",
  "SEMI_COLUMN", "NSSTRING", "FLOAT", "CHAR", "BOOL", "INT", "SEMI_COMA",
  "ID", "AT_PUBLIC", "AT_PROTECTED", "AT_PRIVATE", "OPEN_S", "CLOSE_S",
  "COMMA", "LESS_THAN", "MORE_THAN", "AT_END", "CONST", "VOID", "PLUS",
  "MINUS", "OPEN_P", "CLOSE_P", "AT_IMPLEMENTATION", "AND_AND", "OR_OR",
  "STRING_VAL", "FLOAT_VAL", "LESS_OR_EQUAL", "CHAR_VAL", "INT_VAL",
  "MORE_OR_EQUAL", "MULTI", "EQUAL_EQUAL", "NOT_EQUAL", "FOR", "EQUAL",
  "DIV", "WHILE", "IF", "DO", "SWITCH", "CASE", "DEFAULT", "BREAK", "ENUM",
  "OPEN_ARR", "CLOSE_ARR", "TRUE", "FALSE", "RETURN", "AT_PROTOCOL",
  "ELSE", "STRUCT", "DOT", "DOUBLEPLUS", "DOUBLEMINUS", "TRY", "CATCH",
  "THROW", "FINALLY", "AT_ASM", "SELF", "IMPORT", "if_h", "expr_1",
  "p_type_expr_prec", "long_id_prec", "try_prec", "$][accept", "program",
  "components", "component", "class_interface", "class_interface_header",
  "class_interface_body", "protocol_reference_list", "ids_list_identifier",
  "array_body", "array_ele", "instance_variables",
  "instance_variable_declarations", "instance_variable_declaration",
  "variable_declaration_list", "visibility_specification",
  "struct_variable_declaration", "variable_declarationxx", "ids_list",
  "data_member", "struct_declaration_list", "struct_header", "struct",
  "entity", "type", "struct_type", "enum_type", "simple_type",
  "complex_type", "array_tag", "array_tag_list", "array_first_tag",
  "initializer", "main_initializer", "interface_declaration_list",
  "interface_declaration", "class_method_declaration",
  "instance_method_declaration", "p_type", "method_selectors",
  "selectors_list", "selector_decleration", "parameter_list", "parameter",
  "class_implementation", "class_implementation_header",
  "class_implementation_body", "implementation_definition_list",
  "implementation_definition", "class_implementation_definition",
  "class_implementation_definition_header",
  "instance_implementation_definition",
  "instance_implementation_definition_header", "block_body",
  "block_body_header", "block_body_statements", "statement_list",
  "statement", "throw_statement", "asm", "variable_declaration_block",
  "variable_list", "variable", "return_statement", "loop_statement",
  "do_while", "do_header", "for_loop", "for_loop_header",
  "for_initializer", "logic_expr1", "logic_expr", "expr", "assign_expr",
  "long_id", "array_access", "simple_expr", "message_call2",
  "message_call", "sender", "message", "message_selectors_list",
  "message_selector", "argument_list", "argument", "while_loop",
  "while_loop_header", "conditional_statement", "if_header",
  "switch_header", "switch_body_block", "switch_body", "list_of_case",
  "case_body", "default_case", "protocol", "protocol_header",
  "protocol_body", "enum", "list_expr", "try_catch", "catch_list",
  "one_catch", "one_catch_header", "finally_statement", ]b4_null[]])


m4_define([b4_symbol(125, type)],
[[]])


m4_define([b4_symbol(83, tag)],
[[array_body]])


m4_define([b4_symbol(12, has_printer)],
[[0]])


m4_define([b4_symbol(178, number)],
[[178]])


m4_define([b4_symbol(164, has_type)],
[[0]])


m4_define([b4_symbol(10, id)],
[[INT]])


m4_define([b4_symbol(172, has_id)],
[[1]])


m4_define([b4_symbol(154, tag)],
[[message]])


m4_define([b4_symbol(64, has_destructor)],
[[0]])


m4_define([b4_symbol(133, has_destructor)],
[[0]])


m4_define([b4_symbol(91, id)],
[[variable_declarationxx]])


m4_define([b4_symbol(63, has_printer)],
[[0]])


m4_define([b4_symbol(144, is_token)],
[[0]])


m4_define([b4_symbol(38, has_type)],
[[0]])


m4_define([b4_symbol(82, number)],
[[82]])


m4_define([b4_symbol(9, tag)],
[[BOOL]])


m4_define([b4_symbol(29, user_number)],
[[284]])


m4_define([b4_symbol(137, has_printer)],
[[0]])


m4_define([b4_symbol(155, has_id)],
[[1]])


m4_define([b4_symbol(88, is_token)],
[[0]])


m4_define([b4_symbol(18, is_token)],
[[1]])


m4_define([b4_symbol(121, id)],
[[implementation_definition_list]])


m4_define([b4_symbol(42, has_type)],
[[0]])


m4_define([b4_symbol(65, number)],
[[65]])


m4_define([b4_symbol(12, tag)],
[[ID]])


m4_define([b4_symbol(55, type)],
[[]])


m4_define([b4_symbol(138, has_id)],
[[1]])


m4_define([b4_symbol(92, is_token)],
[[0]])


m4_define([b4_defact_min],
[[0]])


m4_define([b4_symbol(22, is_token)],
[[1]])


m4_define([b4_symbol(52, id)],
[[CLOSE_ARR]])


m4_define([b4_symbol(32, has_printer)],
[[0]])


m4_define([b4_glr_flag],
[[1]])


m4_define([b4_symbol(72, has_destructor)],
[[0]])


m4_define([b4_symbol(48, number)],
[[48]])


m4_define([b4_percent_define_bison_variables(lr.keep-unreachable-state)],
[[]])


m4_define([b4_symbol(42, has_id)],
[[1]])


m4_define([b4_symbol(141, has_destructor)],
[[0]])


m4_define([b4_symbol(106, has_printer)],
[[0]])


m4_define([b4_symbol(83, has_printer)],
[[0]])


m4_define([b4_rules_number],
[[273]])


m4_define([b4_symbol(49, user_number)],
[[304]])


m4_define([b4_symbol(40, tag)],
[[FOR]])


m4_define([b4_symbol(157, has_printer)],
[[0]])


m4_define([b4_symbol(4, has_type)],
[[0]])


m4_define([b4_symbol(162, type)],
[[]])


m4_define([b4_symbol(161, number)],
[[161]])


m4_define([b4_symbol(111, tag)],
[[instance_method_declaration]])


m4_define([b4_symbol(163, id)],
[[switch_header]])


m4_define([b4_symbol(25, has_id)],
[[1]])


m4_define([b4_rline],
[[     0,   216,   216,   219,   220,   221,   223,   224,   225,   226,
     227,   229,   238,   243,   248,   250,   252,   258,   262,   267,
     272,   276,   278,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   296,   303,   306,   310,   315,   316,   320,
     321,   322,   323,   324,   325,   328,   329,   332,   333,   334,
     337,   340,   348,   359,   360,   361,   366,   369,   372,   376,
     380,   384,   385,   388,   394,   395,   396,   398,   406,   413,
     417,   423,   424,   425,   426,   427,   428,   429,   430,   433,
     434,   435,   439,   440,   441,   442,   446,   455,   466,   475,
     486,   495,   503,   511,   519,   527,   537,   548,   553,   557,
     558,   561,   565,   571,   574,   576,   581,   586,   592,   600,
     601,   605,   613,   614,   617,   626,   635,   639,   641,   647,
     655,   661,   665,   674,   687,   690,   695,   701,   707,   710,
     716,   719,   720,   723,   724,   727,   736,   747,   757,   766,
     773,   785,   789,   793,   799,   804,   813,   817,   821,   827,
     836,   839,   843,   845,   848,   852,   854,   857,   862,   868,
     874,   881,   885,   886,   889,   892,   899,   908,   911,   916,
     919,   922,   927,   932,   935,   953,   959,   963,   967,   972,
     976,   980,   985,   991,  1002,  1005,  1010,  1013,  1016,  1022,
    1025,  1028,  1031,  1034,  1037,  1040,  1043,  1047,  1050,  1053,
    1059,  1062,  1067,  1074,  1078,  1082,  1087,  1095,  1104,  1110,
    1114,  1117,  1120,  1123,  1127,  1131,  1134,  1138,  1139,  1140,
    1141,  1142,  1143,  1150,  1163,  1175,  1181,  1191,  1195,  1202,
    1207,  1213,  1217,  1219,  1224,  1232,  1238,  1243,  1246,  1250,
    1255,  1260,  1266,  1269,  1270,  1271,  1272,  1275,  1276,  1279,
    1280,  1281,  1284,  1285,  1286,  1288,  1296,  1302,  1310,  1318,
    1324,  1327,  1333,  1340,  1345,  1350,  1355,  1362,  1366,  1372,
    1374,  1379,  1383,  1386]])


m4_define([b4_symbol(135, has_type)],
[[0]])


m4_define([b4_symbol(3, user_number)],
[[258]])


m4_define([b4_symbol(13, id)],
[[AT_PUBLIC]])


m4_define([b4_symbol(144, number)],
[[144]])


m4_define([b4_symbol(112, type)],
[[]])


m4_define([b4_symbol(94, id)],
[[struct_declaration_list]])


m4_define([b4_dprec_min],
[[0]])


m4_define([b4_symbol(115, is_token)],
[[0]])


m4_define([b4_symbol(79, has_type)],
[[0]])


m4_define([b4_percent_define_how(parse.error)],
[[2]])


m4_define([b4_symbol(52, has_printer)],
[[0]])


m4_define([b4_symbol(18, user_number)],
[[273]])


m4_define([b4_symbol(80, has_destructor)],
[[0]])


m4_define([b4_symbol(19, has_destructor)],
[[0]])


m4_define([b4_symbol(139, type)],
[[]])


m4_define([b4_symbol(126, has_printer)],
[[0]])


m4_define([b4_symbol(59, is_token)],
[[1]])


m4_define([b4_symbol(127, number)],
[[127]])


m4_define([b4_symbol(83, has_type)],
[[0]])


m4_define([b4_symbol(92, type)],
[[]])


m4_define([b4_symbol(121, has_id)],
[[1]])


m4_define([b4_symbol(13, has_type)],
[[0]])


m4_define([b4_symbol(124, id)],
[[class_implementation_definition_header]])


m4_define([b4_symbol(69, user_number)],
[[324]])


m4_define([b4_symbol(177, has_printer)],
[[0]])


m4_define([b4_symbol(97, has_id)],
[[1]])


m4_define([b4_symbol(63, is_token)],
[[1]])


m4_define([b4_symbol(31, number)],
[[31]])


m4_define([b4_symbol(104, has_id)],
[[1]])


m4_define([b4_symbol(42, type)],
[[]])


m4_define([b4_symbol(55, id)],
[[RETURN]])


m4_define([b4_symbol(37, tag)],
[[MULTI]])


m4_define([b4_symbol(21, has_printer)],
[[0]])


m4_define([b4_symbol(14, number)],
[[14]])


m4_define([b4_symbol(108, tag)],
[[interface_declaration_list]])


m4_define([b4_symbol(69, type)],
[[]])


m4_define([b4_symbol(72, has_printer)],
[[0]])


m4_define([b4_symbol(38, user_number)],
[[293]])


m4_define([b4_stos_min],
[[0]])


m4_define([b4_symbol(27, has_destructor)],
[[0]])


m4_define([b4_symbol(146, has_printer)],
[[0]])


m4_define([b4_symbol(166, id)],
[[list_of_case]])


m4_define([b4_symbol(176, has_type)],
[[0]])


m4_define([b4_symbol(106, has_type)],
[[0]])


m4_define([b4_symbol(89, user_number)],
[[-1]])


m4_define([b4_symbol(19, type)],
[[]])


m4_define([b4_symbol(65, tag)],
[[FINALLY]])


m4_define([b4_symbol(2, type)],
[[]])


m4_define([b4_symbol(16, id)],
[[OPEN_S]])


m4_define([b4_symbol(136, tag)],
[[variable]])


m4_define([b4_symbol(156, is_token)],
[[0]])


m4_define([b4_symbol(97, id)],
[[entity]])


m4_define([b4_symbol(110, has_type)],
[[0]])


m4_define([b4_symbol(176, type)],
[[]])


m4_define([b4_symbol(176, has_id)],
[[1]])


m4_define([b4_symbol(3, has_destructor)],
[[0]])


m4_define([b4_symbol(110, number)],
[[110]])


m4_define([b4_percent_define_bison_variables(lr.default-reduction)],
[[]])


m4_define([b4_symbol(0, number)],
[[0]])


m4_define([b4_symbol(41, has_printer)],
[[0]])


m4_define([b4_symbol(149, has_destructor)],
[[0]])


m4_define([b4_symbol(160, is_token)],
[[0]])


m4_define([b4_symbol(54, has_type)],
[[0]])


m4_define([b4_symbol(115, has_printer)],
[[0]])


m4_define([b4_symbol(86, number)],
[[86]])


m4_define([b4_symbol(80, has_id)],
[[1]])


m4_define([b4_percent_define(lr.default-reduction)],
[[most]])


m4_define([b4_symbol(127, id)],
[[block_body]])


m4_define([b4_symbol(159, has_id)],
[[1]])


m4_define([b4_symbol(93, tag)],
[[data_member]])


m4_define([b4_symbol(126, type)],
[[]])


m4_define([b4_symbol(92, has_printer)],
[[0]])


m4_define([b4_symbols_number],
[[179]])


m4_define([b4_symbol(58, user_number)],
[[313]])


m4_define([b4_symbol(35, has_destructor)],
[[0]])


m4_define([b4_symbol(166, has_printer)],
[[0]])


m4_define([b4_symbol(164, tag)],
[[switch_body_block]])


m4_define([b4_symbol(34, is_token)],
[[1]])


m4_define([b4_symbol(104, has_destructor)],
[[0]])


m4_define([b4_symbol(69, number)],
[[69]])


m4_define([b4_symbol(63, has_id)],
[[1]])


m4_define([b4_symbol(58, id)],
[[STRUCT]])


m4_define([b4_symbol(10, has_printer)],
[[0]])


m4_define([b4_symbol(46, has_id)],
[[1]])


m4_define([b4_symbol(61, has_printer)],
[[0]])


m4_define([b4_symbol(88, has_destructor)],
[[0]])


m4_define([b4_symbol(56, type)],
[[]])


m4_define([b4_symbol(157, has_destructor)],
[[0]])


m4_define([b4_symbol(22, tag)],
[[CONST]])


m4_define([b4_symbol(27, user_number)],
[[282]])


m4_define([b4_symbol(135, has_printer)],
[[0]])


m4_define([b4_symbol(169, id)],
[[protocol]])


m4_define([b4_symbol(147, has_type)],
[[0]])


m4_define([b4_symbol(165, number)],
[[165]])


m4_define([b4_symbol(29, has_id)],
[[1]])


m4_define([b4_symbol(78, user_number)],
[[-1]])


m4_define([b4_symbol(127, is_token)],
[[0]])


m4_define([b4_symbol(43, has_destructor)],
[[0]])


m4_define([b4_symbol(19, id)],
[[LESS_THAN]])


m4_define([b4_symbol(112, has_destructor)],
[[0]])


m4_define([b4_symbol(151, has_type)],
[[0]])


m4_define([b4_symbol(0, is_token)],
[[1]])


m4_define([b4_symbol(148, number)],
[[148]])


m4_define([b4_symbol(142, has_id)],
[[1]])


m4_define([b4_symbol(131, is_token)],
[[0]])


m4_define([b4_symbol(95, has_type)],
[[0]])


m4_define([b4_symbol(50, tag)],
[[ENUM]])


m4_define([b4_symbol(25, has_type)],
[[0]])


m4_define([b4_symbol(163, type)],
[[]])


m4_define([b4_symbol(80, id)],
[[class_interface_body]])


m4_define([b4_symbol(30, has_printer)],
[[0]])


m4_define([b4_symbol(121, tag)],
[[implementation_definition_list]])


m4_define([b4_check_min],
[[-1]])


m4_define([b4_symbol(104, has_printer)],
[[0]])


m4_define([b4_symbol(52, number)],
[[52]])


m4_define([b4_file_name],
[["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])


m4_define([b4_symbol(75, is_token)],
[[0]])


m4_define([b4_symbol(125, has_id)],
[[1]])


m4_define([b4_symbol(81, has_printer)],
[[0]])


m4_define([b4_symbol(96, has_destructor)],
[[0]])


m4_define([b4_symbol(47, user_number)],
[[302]])


m4_define([b4_symbol(165, has_destructor)],
[[0]])


m4_define([b4_symbol(155, has_printer)],
[[0]])


m4_define([b4_symbol(113, type)],
[[]])


m4_define([b4_symbol(110, id)],
[[class_method_declaration]])


m4_define([b4_symbol(35, number)],
[[35]])


m4_define([b4_symbol(98, user_number)],
[[-1]])


m4_define([b4_symbol(51, has_destructor)],
[[0]])


m4_define([b4_symbol(1, user_number)],
[[256]])


m4_define([b4_symbol(108, has_id)],
[[1]])


m4_define([b4_symbol(120, has_destructor)],
[[0]])


m4_define([b4_symbol(19, tag)],
[[LESS_THAN]])


m4_define([b4_symbol(93, type)],
[[]])


m4_define([b4_symbol(41, id)],
[[EQUAL]])


m4_define([b4_symbol(18, number)],
[[18]])


m4_define([b4_symbol(12, has_id)],
[[1]])


m4_define([b4_symbol(4, tag)],
[[IDENTIFIER]])


m4_define([b4_symbol(50, has_printer)],
[[0]])


m4_define([b4_symbol(118, has_type)],
[[0]])


m4_define([b4_symbol(16, user_number)],
[[271]])


m4_define([b4_symbol(124, has_printer)],
[[0]])


m4_define([b4_symbol(43, type)],
[[]])


m4_define([b4_symbol(168, is_token)],
[[0]])


m4_define([b4_symbol(131, number)],
[[131]])


m4_define([b4_symbol(67, user_number)],
[[322]])


m4_define([b4_symbol(173, has_destructor)],
[[0]])


m4_define([b4_symbol(152, id)],
[[message_call]])


m4_define([b4_symbol(122, has_type)],
[[0]])


m4_define([b4_symbol(47, tag)],
[[CASE]])


m4_define([b4_symbol(175, has_printer)],
[[0]])


m4_define([b4_symbol(118, tag)],
[[class_implementation]])


m4_define([b4_symbol(172, is_token)],
[[0]])


m4_define([b4_symbol(102, is_token)],
[[0]])


m4_define([b4_symbol(66, has_type)],
[[0]])


m4_define([b4_symbol(114, number)],
[[114]])


m4_define([b4_symbol(83, id)],
[[array_body]])


m4_define([b4_symbol(4, number)],
[[4]])


m4_define([b4_final_state_number],
[[26]])


m4_define([b4_symbol(46, is_token)],
[[1]])


m4_define([b4_symbol(70, has_type)],
[[0]])


m4_define([b4_symbol(150, type)],
[[]])


m4_define([b4_symbol(3, type)],
[[]])


m4_define([b4_symbol(75, tag)],
[[program]])


m4_define([b4_symbol(84, has_id)],
[[1]])


m4_define([b4_symbol(70, has_printer)],
[[0]])


m4_define([b4_symbol(36, user_number)],
[[291]])


m4_define([b4_symbol(146, tag)],
[[expr]])


m4_define([b4_symbol(113, id)],
[[method_selectors]])


m4_define([b4_symbol(144, has_printer)],
[[0]])


m4_define([b4_symbol(50, is_token)],
[[1]])


m4_define([b4_symbol(177, type)],
[[]])


m4_define([b4_symbol(67, has_id)],
[[1]])


m4_define([b4_symbol(87, user_number)],
[[-1]])


m4_define([b4_symbol(100, type)],
[[]])


m4_define([b4_symbol(44, id)],
[[IF]])


m4_define([b4_symbol(127, type)],
[[]])


m4_define([b4_symbol(159, has_type)],
[[0]])


m4_define([b4_symbol(8, is_token)],
[[1]])


m4_define([b4_defact],
[[     0,     0,     0,     0,     0,     0,     0,     0,     2,     4,
       6,     0,     0,     9,     7,     0,     8,     0,    10,    14,
      13,   126,     0,   256,    70,     0,     1,     3,     0,     0,
      23,     0,     0,    11,     0,     0,     0,   108,   109,   110,
       0,   130,     0,     0,     0,   124,     0,   132,   133,     0,
     134,     0,   260,     0,     0,   255,     0,     0,   262,     0,
       5,     0,    93,    92,    91,    95,    90,    55,    54,    53,
      46,     0,    94,     0,     0,     0,    48,    49,     0,    52,
       0,    84,    85,    82,    83,    36,     0,   117,     0,     0,
       0,   116,   119,     0,    26,    20,     0,     0,    31,    21,
       0,    32,    22,   107,     0,     0,     0,    68,    56,     0,
       0,   128,     0,   129,   131,   140,   135,     0,   137,   259,
       0,   258,    15,    12,   125,   265,     0,    96,     0,    88,
      86,    45,    47,    51,    50,    62,     0,     0,    61,    34,
       0,    33,     0,     0,     0,   113,     0,   118,     0,    24,
       0,    28,    17,     0,    29,    18,    30,    19,    69,     0,
      80,    73,     0,     0,    67,   136,   138,   127,     0,   205,
     142,     0,     0,     0,     0,   173,     0,     0,   223,     0,
       0,     0,     0,     0,   150,   139,     0,   145,   155,   153,
     149,   151,   146,   171,     0,   169,     0,     0,     0,   206,
       0,   204,   170,     0,   147,     0,     0,   161,   152,   257,
       0,     0,     0,     0,     0,    89,    87,     0,    65,    99,
      66,     0,    57,     0,    35,     0,   120,   122,   115,   112,
     111,   114,    25,    27,    16,    77,    81,     0,     0,    71,
       0,    74,     0,   156,   143,     0,     0,     0,     0,     0,
      88,   205,     0,   208,   210,   211,   209,     0,     0,     0,
       0,   200,   212,   201,     0,     0,     0,     0,     0,   106,
       0,   163,   141,   144,     0,   174,   148,   154,     0,     0,
       0,   226,   225,     0,   235,   237,   246,     0,     0,   239,
       0,   248,     0,   266,   264,   261,    63,    58,     0,   102,
      97,    59,     0,    60,   123,     0,     0,    79,    75,    78,
       0,    72,     0,   185,     0,     0,     0,     0,     0,   197,
     198,     0,   188,     0,   212,     0,     0,   218,   219,   205,
     212,     0,   220,   221,   222,   168,     0,     0,     0,     0,
       0,   268,   269,     0,     0,   158,   104,     0,   104,   166,
       0,   159,     0,     0,   202,     0,   203,   227,     0,   228,
     230,     0,     0,     0,   244,   247,     0,   245,     0,   101,
       0,   121,    76,   160,     0,     0,     0,     0,     0,     0,
     201,   195,   236,     0,     0,     0,     0,     0,     0,     0,
       0,   240,     0,   217,   213,   214,   215,   216,     0,     0,
     270,   267,   271,     0,     0,   167,   105,   165,   164,   162,
     172,   207,     0,   224,     0,   229,   238,     0,     0,   253,
     243,   263,     0,     0,   184,     0,   182,     0,     0,     0,
       0,   196,   186,   187,   189,   190,   191,   192,   193,   194,
     242,   241,     0,   273,   157,     0,   103,   234,   231,   233,
       0,   250,   254,     0,   100,    98,   183,   181,   180,     0,
     179,     0,     0,     0,     0,    38,     0,    40,     0,   251,
       0,   252,   176,   177,   178,     0,   272,    41,     0,    37,
       0,   232,   249,   175,     0,    43,    39,    44,     0,    42]])


m4_define([b4_symbol(80, type)],
[[]])


m4_define([b4_symbol(174, tag)],
[[try_catch]])


m4_define([b4_symbol(113, has_printer)],
[[0]])


m4_define([b4_symbol(139, is_token)],
[[0]])


m4_define([b4_symbol(163, has_type)],
[[0]])


m4_define([b4_symbol(90, number)],
[[90]])


m4_define([b4_symbol(90, has_printer)],
[[0]])


m4_define([b4_symbol(169, number)],
[[169]])


m4_define([b4_symbol(155, id)],
[[message_selectors_list]])


m4_define([b4_r2_max],
[[8]])


m4_define([b4_symbol(56, user_number)],
[[311]])


m4_define([b4_symbol(163, has_id)],
[[1]])


m4_define([b4_toknum],
[[     0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328]])


m4_define([b4_symbol(30, type)],
[[]])


m4_define([b4_symbol(164, has_printer)],
[[0]])


m4_define([b4_symbol(143, is_token)],
[[0]])


m4_define([b4_symbol(37, has_type)],
[[0]])


m4_define([b4_symbol(73, number)],
[[73]])


m4_define([b4_symbol(59, has_destructor)],
[[0]])


m4_define([b4_symbol(86, id)],
[[instance_variable_declarations]])


m4_define([b4_max_left_semantic_context],
[[0]])


m4_define([b4_symbol(57, type)],
[[]])


m4_define([b4_symbol(128, has_destructor)],
[[0]])


m4_define([b4_symbol(32, tag)],
[[FLOAT_VAL]])


m4_define([b4_symbol(87, is_token)],
[[0]])


m4_define([b4_symbol(146, has_id)],
[[1]])


m4_define([b4_symbol(103, tag)],
[[array_tag]])


m4_define([b4_symbol(17, is_token)],
[[1]])


m4_define([b4_symbol(41, has_type)],
[[0]])


m4_define([b4_symbol(56, number)],
[[56]])


m4_define([b4_symbol(14, has_destructor)],
[[0]])


m4_define([b4_symbol(50, has_id)],
[[1]])


m4_define([b4_symbol(91, is_token)],
[[0]])


m4_define([b4_symbol(116, id)],
[[parameter_list]])


m4_define([b4_symbol(21, is_token)],
[[1]])


m4_define([b4_symbol(25, user_number)],
[[280]])


m4_define([b4_symbol(129, has_id)],
[[1]])


m4_define([b4_symbol(133, has_printer)],
[[0]])


m4_define([b4_defines_flag],
[[1]])


m4_define([b4_symbol(60, tag)],
[[DOUBLEPLUS]])


m4_define([b4_symbol(76, user_number)],
[[-1]])


m4_define([b4_symbol(164, type)],
[[]])


m4_define([b4_symbol(39, number)],
[[39]])


m4_define([b4_symbol(131, tag)],
[[statement]])


m4_define([b4_symbol(33, has_id)],
[[1]])


m4_define([b4_symbol(47, id)],
[[CASE]])


m4_define([b4_symbol(3, has_type)],
[[0]])


m4_define([b4_symbol(67, has_destructor)],
[[0]])


m4_define([b4_symbol(136, has_destructor)],
[[0]])


m4_define([b4_symbol(8, has_printer)],
[[0]])


m4_define([b4_symbol(152, number)],
[[152]])


m4_define([b4_symbol(114, type)],
[[]])


m4_define([b4_symbol(16, has_id)],
[[1]])


m4_define([b4_symbol(134, has_type)],
[[0]])


m4_define([b4_symbol(102, has_printer)],
[[0]])


m4_define([b4_symbol(22, has_destructor)],
[[0]])


m4_define([b4_symbol(158, id)],
[[argument]])


m4_define([b4_symbol(29, tag)],
[[AND_AND]])


m4_define([b4_symbol(135, number)],
[[135]])


m4_define([b4_symbol(78, has_type)],
[[0]])


m4_define([b4_symbol(45, user_number)],
[[300]])


m4_define([b4_symbol(114, is_token)],
[[0]])


m4_define([b4_symbol(94, type)],
[[]])


m4_define([b4_symbol(153, has_printer)],
[[0]])


m4_define([b4_symbol(119, user_number)],
[[-1]])


m4_define([b4_symbol(58, is_token)],
[[1]])


m4_define([b4_symbol(96, user_number)],
[[-1]])


m4_define([b4_symbol(89, id)],
[[visibility_specification]])


m4_define([b4_symbol(82, has_type)],
[[0]])


m4_define([b4_symbol(12, has_type)],
[[0]])


m4_define([b4_symbol(118, number)],
[[118]])


m4_define([b4_symbol(112, has_id)],
[[1]])


m4_define([b4_symbol(44, type)],
[[]])


m4_define([b4_symbol(8, number)],
[[8]])


m4_define([b4_symbol(75, has_destructor)],
[[0]])


m4_define([b4_symbol(2, has_id)],
[[0]])


m4_define([b4_symbol(62, is_token)],
[[1]])


m4_define([b4_symbol(144, has_destructor)],
[[0]])


m4_define([b4_symbol(57, tag)],
[[ELSE]])


m4_define([b4_symbol(128, tag)],
[[block_body_header]])


m4_define([b4_symbol(22, number)],
[[22]])


m4_define([b4_symbol(88, has_id)],
[[1]])


m4_define([b4_symbol(119, id)],
[[class_implementation_header]])


m4_define([b4_symbol(14, user_number)],
[[269]])


m4_define([b4_symbol(122, has_printer)],
[[0]])


m4_define([b4_symbol(30, has_destructor)],
[[0]])


m4_define([b4_symbol(65, user_number)],
[[320]])


m4_define([b4_symbol(173, has_printer)],
[[0]])


m4_define([b4_symbol(139, user_number)],
[[-1]])


m4_define([b4_symbol(151, type)],
[[]])


m4_define([b4_symbol(85, tag)],
[[instance_variables]])


m4_define([b4_symbol(4, type)],
[[]])


m4_define([b4_symbol(30, id)],
[[OR_OR]])


m4_define([b4_symbol(175, has_type)],
[[0]])


m4_define([b4_symbol(156, tag)],
[[message_selector]])


m4_define([b4_symbol(105, has_type)],
[[0]])


m4_define([b4_percent_code(requires)],
[[]b4_syncline(183, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])[

#include "ast\node.h"
]])


m4_define([b4_symbol(178, type)],
[[]])


m4_define([b4_symbol(83, has_destructor)],
[[0]])


m4_define([b4_symbol(101, type)],
[[]])


m4_define([b4_symbol(155, is_token)],
[[0]])


m4_define([b4_symbol(152, has_destructor)],
[[0]])


m4_define([b4_symbol(49, has_type)],
[[0]])


m4_define([b4_symbol(94, number)],
[[94]])


m4_define([b4_symbol(34, user_number)],
[[289]])


m4_define([b4_symbol(101, number)],
[[101]])


m4_define([b4_symbol(167, has_id)],
[[1]])


m4_define([b4_symbol(142, has_printer)],
[[0]])


m4_define([b4_symbol(99, is_token)],
[[0]])


m4_define([b4_symbol(141, id)],
[[for_loop]])


m4_define([b4_symbol(128, type)],
[[]])


m4_define([b4_symbol(108, user_number)],
[[-1]])


m4_define([b4_symbol(29, is_token)],
[[1]])


m4_define([b4_r1_max],
[[178]])


m4_define([b4_symbol(81, type)],
[[]])


m4_define([b4_symbol(53, has_type)],
[[0]])


m4_define([b4_symbol(14, tag)],
[[AT_PROTECTED]])


m4_define([b4_symbol(85, user_number)],
[[-1]])


m4_define([b4_symbol(77, number)],
[[77]])


m4_define([b4_symbol(71, has_id)],
[[1]])


m4_define([b4_symbol(159, user_number)],
[[-1]])


m4_define([b4_symbol(72, id)],
[[long_id_prec]])


m4_define([b4_symbol(33, is_token)],
[[1]])


m4_define([b4_symbol(31, type)],
[[]])


m4_define([b4_symbol(54, has_id)],
[[1]])


m4_define([b4_symbol(111, has_printer)],
[[0]])


m4_define([b4_symbol(91, has_destructor)],
[[0]])


m4_define([b4_symbol(160, has_destructor)],
[[0]])


m4_define([b4_symbol(102, id)],
[[complex_type]])


m4_define([b4_symbol(58, type)],
[[]])


m4_define([b4_symbol(42, tag)],
[[DIV]])


m4_define([b4_symbol(54, user_number)],
[[309]])


m4_define([b4_symbol(113, tag)],
[[method_selectors]])


m4_define([b4_symbol(162, has_printer)],
[[0]])


m4_define([b4_symbol(173, number)],
[[173]])


m4_define([b4_symbol(37, has_id)],
[[1]])


m4_define([b4_symbol(128, user_number)],
[[-1]])


m4_define([b4_percent_define_kind(lr.default-reduction)],
[[keyword]])


m4_define([b4_symbol(146, has_type)],
[[0]])


m4_define([b4_symbol(33, id)],
[[LESS_OR_EQUAL]])


m4_define([b4_symbol(6, has_destructor)],
[[0]])


m4_define([b4_symbol(156, number)],
[[156]])


m4_define([b4_symbol(126, is_token)],
[[0]])


m4_define([b4_symbol(150, has_id)],
[[1]])


m4_define([b4_symbol(70, tag)],
[[expr_1]])


m4_define([b4_symbol(150, has_type)],
[[0]])


m4_define([b4_symbol(165, type)],
[[]])


m4_define([b4_symbol(141, tag)],
[[for_loop]])


m4_define([b4_symbol(23, user_number)],
[[278]])


m4_define([b4_symbol(60, number)],
[[60]])


m4_define([b4_symbol(131, has_printer)],
[[0]])


m4_define([b4_symbol(144, id)],
[[logic_expr1]])


m4_define([b4_symbol(139, number)],
[[139]])


m4_define([b4_symbol(94, has_type)],
[[0]])


m4_define([b4_symbol(130, is_token)],
[[0]])


m4_define([b4_symbol(24, has_type)],
[[0]])


m4_define([b4_symbol(38, has_destructor)],
[[0]])


m4_define([b4_symbol(133, has_id)],
[[1]])


m4_define([b4_symbol(107, has_destructor)],
[[0]])


m4_define([b4_nondeterministic_flag],
[[1]])


m4_define([b4_symbol(115, type)],
[[]])


m4_define([b4_symbol(74, user_number)],
[[-1]])


m4_define([b4_symbol(74, is_token)],
[[0]])


m4_define([b4_symbol(43, number)],
[[43]])


m4_define([b4_symbol(148, user_number)],
[[-1]])


m4_define([b4_symbol(75, id)],
[[program]])


m4_define([b4_symbol(116, has_id)],
[[1]])


m4_define([b4_symbol(39, tag)],
[[NOT_EQUAL]])


m4_define([b4_symbol(6, has_id)],
[[1]])


m4_define([b4_symbol(95, type)],
[[]])


m4_define([b4_symbol(6, has_printer)],
[[0]])


m4_define([b4_symbol(26, number)],
[[26]])


m4_define([b4_symbol(20, has_id)],
[[1]])


m4_define([b4_symbol(100, has_printer)],
[[0]])


m4_define([b4_symbol(105, id)],
[[array_first_tag]])


m4_define([b4_symbol(43, user_number)],
[[298]])


m4_define([b4_symbol(45, type)],
[[]])


m4_define([b4_symbol(151, has_printer)],
[[0]])


m4_define([b4_symbol(117, user_number)],
[[-1]])


m4_define([b4_symbol(46, has_destructor)],
[[0]])


m4_define([b4_symbol(117, has_type)],
[[0]])


m4_define([b4_symbol(67, tag)],
[[SELF]])


m4_define([b4_symbol(115, has_destructor)],
[[0]])


m4_define([b4_symbol(36, id)],
[[MORE_OR_EQUAL]])


m4_define([b4_symbol(94, user_number)],
[[-1]])


m4_define([b4_symbol(138, tag)],
[[loop_statement]])


m4_define([b4_symbol(167, is_token)],
[[0]])


m4_define([b4_symbol(168, user_number)],
[[-1]])


m4_define([b4_symbol(121, has_type)],
[[0]])


m4_define([b4_symbol(122, number)],
[[122]])


m4_define([b4_symbol(171, is_token)],
[[0]])


m4_define([b4_symbol(65, has_type)],
[[0]])


m4_define([b4_symbol(101, is_token)],
[[0]])


m4_define([b4_symbol(98, number)],
[[98]])


m4_define([b4_symbol(152, type)],
[[]])


m4_define([b4_symbol(147, id)],
[[assign_expr]])


m4_define([b4_symbol(99, has_destructor)],
[[0]])


m4_define([b4_symbol(12, user_number)],
[[267]])


m4_define([b4_symbol(92, has_id)],
[[1]])


m4_define([b4_symbol(168, has_destructor)],
[[0]])


m4_define([b4_symbol(5, type)],
[[]])


m4_define([b4_symbol(95, tag)],
[[struct_header]])


m4_define([b4_symbol(120, has_printer)],
[[0]])


m4_define([b4_symbol(105, number)],
[[105]])


m4_define([b4_symbol(166, tag)],
[[list_of_case]])


m4_define([b4_symbol(45, is_token)],
[[1]])


m4_define([b4_symbol(63, user_number)],
[[318]])


m4_define([b4_symbol(171, has_printer)],
[[0]])


m4_define([b4_symbol(54, has_destructor)],
[[0]])


m4_define([b4_symbol(78, id)],
[[class_interface]])


m4_define([b4_symbol(137, user_number)],
[[-1]])


m4_define([b4_symbol(102, type)],
[[]])


m4_define([b4_symbol(123, has_destructor)],
[[0]])


m4_define([b4_symbol(75, has_id)],
[[1]])


m4_define([b4_symbol(129, type)],
[[]])


m4_define([b4_symbol(108, id)],
[[interface_declaration_list]])


m4_define([b4_symbol(82, type)],
[[]])


m4_define([b4_symbol(58, has_id)],
[[1]])


m4_define([b4_symbol(24, tag)],
[[PLUS]])


m4_define([b4_symbol(158, has_type)],
[[0]])


m4_define([b4_symbol(7, is_token)],
[[1]])


m4_define([b4_symbol(32, user_number)],
[[287]])


m4_define([b4_symbol(140, has_printer)],
[[0]])


m4_define([b4_symbol(176, has_destructor)],
[[0]])


m4_define([b4_symbol(106, user_number)],
[[-1]])


m4_define([b4_symbol(177, number)],
[[177]])


m4_define([b4_symbol(39, id)],
[[NOT_EQUAL]])


m4_define([b4_symbol(171, has_id)],
[[1]])


m4_define([b4_symbol(32, type)],
[[]])


m4_define([b4_symbol(138, is_token)],
[[0]])


m4_define([b4_symbol(83, user_number)],
[[-1]])


m4_define([b4_symbol(162, has_type)],
[[0]])


m4_define([b4_symbol(62, has_destructor)],
[[0]])


m4_define([b4_symbol(157, user_number)],
[[-1]])


m4_define([b4_symbol(131, has_destructor)],
[[0]])


m4_define([b4_symbol(81, number)],
[[81]])


m4_define([b4_symbol(52, tag)],
[[CLOSE_ARR]])


m4_define([b4_symbol(59, type)],
[[]])


m4_define([b4_symbol(1, id)],
[[error]])


m4_define([b4_symbol(142, is_token)],
[[0]])


m4_define([b4_symbol(154, has_id)],
[[1]])


m4_define([b4_symbol(36, has_type)],
[[0]])


m4_define([b4_symbol(123, tag)],
[[class_implementation_definition]])


m4_define([b4_symbol(64, number)],
[[64]])


m4_define([b4_symbol(86, is_token)],
[[0]])


m4_define([b4_symbol(16, is_token)],
[[1]])


m4_define([b4_symbol(40, has_type)],
[[0]])


m4_define([b4_symbol(137, has_id)],
[[1]])


m4_define([b4_symbol(130, id)],
[[statement_list]])


m4_define([b4_symbol(52, user_number)],
[[307]])


m4_define([b4_symbol(160, has_printer)],
[[0]])


m4_define([b4_symbol(126, user_number)],
[[-1]])


m4_define([b4_symbol(90, is_token)],
[[0]])


m4_define([b4_symbol(80, tag)],
[[class_interface_body]])


m4_define([b4_symbol(20, is_token)],
[[1]])


m4_define([b4_symbol(166, type)],
[[]])


m4_define([b4_symbol(47, number)],
[[47]])


m4_define([b4_symbol(41, has_id)],
[[1]])


m4_define([b4_symbol(151, tag)],
[[message_call2]])


m4_define([b4_symbol(61, id)],
[[DOUBLEMINUS]])


m4_define([b4_symbol(70, has_destructor)],
[[0]])


m4_define([b4_symbol(177, user_number)],
[[-1]])


m4_define([b4_symbol(6, tag)],
[[NSSTRING]])


m4_define([b4_symbol(160, number)],
[[160]])


m4_define([b4_symbol(24, has_id)],
[[1]])


m4_define([b4_symbol(116, type)],
[[]])


m4_define([b4_symbol(129, has_type)],
[[0]])


m4_define([b4_symbol(2, has_type)],
[[0]])


m4_define([b4_symbol(21, user_number)],
[[276]])


m4_define([b4_symbol(109, is_token)],
[[0]])


m4_define([b4_symbol(172, id)],
[[enum]])


m4_define([b4_symbol(49, tag)],
[[BREAK]])


m4_define([b4_symbol(133, has_type)],
[[0]])


m4_define([b4_symbol(143, number)],
[[143]])


m4_define([b4_symbol(96, type)],
[[]])


m4_define([b4_symbol(72, user_number)],
[[327]])


m4_define([b4_symbol(22, id)],
[[CONST]])


m4_define([b4_symbol(146, user_number)],
[[-1]])


m4_define([b4_symbol(4, id)],
[[IDENTIFIER]])


m4_define([b4_symbol(77, has_type)],
[[0]])


m4_define([b4_symbol(113, is_token)],
[[0]])


m4_define([b4_symbol(126, number)],
[[126]])


m4_define([b4_symbol(120, has_id)],
[[1]])


m4_define([b4_symbol(4, has_printer)],
[[0]])


m4_define([b4_symbol(46, type)],
[[]])


m4_define([b4_stos],
[[     0,     3,    28,    50,    56,    58,    68,    75,    76,    77,
      78,    79,    95,    96,   118,   119,   169,   170,   172,     1,
       4,     4,     4,     4,     4,    31,     0,    77,    16,    19,
      21,    24,    25,    80,    81,    85,   108,   109,   110,   111,
      16,    21,    24,    25,    85,   120,   121,   122,   123,   124,
     125,   126,    21,    81,   108,   171,     5,     5,    11,    16,
      11,     4,     6,     7,     8,     9,    10,    13,    14,    15,
      17,    22,    23,    50,    58,    86,    87,    88,    89,    91,
      98,    99,   100,   101,   102,     4,    82,     4,    26,   112,
     113,   114,   115,   112,     1,    21,    85,   108,     1,    21,
     108,     1,    21,   109,     1,    17,    90,    91,    94,   112,
     112,    21,   121,    21,   122,    16,   127,   128,   127,    21,
     108,    21,     1,     4,     4,     4,   173,    37,    98,     4,
       4,    17,    87,    91,    88,     1,     4,    92,    93,     1,
      18,    20,     5,    98,   113,     1,     4,   115,   113,    21,
     108,     1,    21,   108,     1,    21,     1,    21,    91,     1,
       4,    11,    97,    17,    91,   113,   113,    21,     1,     4,
      17,    22,    40,    43,    44,    45,    46,    50,    51,    55,
      62,    64,    66,    98,   127,   129,   130,   131,   132,   133,
     134,   137,   138,   139,   140,   141,   142,   147,   148,   149,
     151,   152,   159,   160,   161,   162,   163,   172,   174,    21,
      18,    41,    17,     4,    92,    37,    37,    51,   103,   105,
       1,   103,    11,    18,     4,   112,   116,   117,    27,     1,
      11,    11,    21,     1,    21,    11,    18,    18,     1,    11,
       1,    11,    97,    11,    17,    98,    26,    26,    26,    26,
       4,     4,    26,    31,    32,    34,    35,    60,    61,   112,
     146,   147,   148,   150,     1,   131,    26,    31,     1,     4,
     135,   136,    17,   131,   131,   131,    11,    11,    41,    51,
      59,     4,   152,   153,   131,   131,    17,    47,    48,   165,
     166,   167,   168,   173,   146,    11,   103,    11,    35,    52,
     104,     1,     1,    93,     4,     5,     1,    97,    11,    11,
       1,    11,   135,     4,    10,    11,   143,    26,    39,    53,
      54,   144,   145,   146,   148,   144,     4,    60,    61,     4,
     148,   150,     4,     4,   150,    11,    24,    25,    37,    42,
      63,   175,   176,   177,   152,    11,   103,    41,   103,   107,
       1,    11,    18,   160,   150,   150,     4,     4,   154,   155,
     156,    57,   146,     5,    17,   167,   168,    17,    18,    52,
      51,   117,    11,    11,    41,     4,    11,   144,    11,   145,
     150,   146,    27,    29,    30,    19,    20,    33,    36,    38,
      39,    27,    27,    27,   150,   150,   150,   150,    26,    65,
     176,   178,   131,    27,    41,   106,   146,   106,   136,   136,
      11,    52,     5,    52,     4,   156,   131,     5,    49,   131,
      17,   173,     1,    35,   146,    41,    27,   146,    11,    11,
     144,    27,   145,   145,   146,   146,   146,   146,   146,   146,
      16,   164,    98,   131,    11,    16,    83,   146,   157,   158,
      49,   131,    11,    49,    52,    52,   146,    27,    27,   146,
      27,   146,    11,     4,    16,    17,    84,   146,     5,    11,
      49,    11,    27,    27,    27,   146,    27,    17,    84,    17,
      18,   158,    11,    27,    18,    17,    84,    84,    18,    84]])


m4_define([b4_symbol(17, has_destructor)],
[[0]])


m4_define([b4_symbol(57, is_token)],
[[1]])


m4_define([b4_symbol(81, has_type)],
[[0]])


m4_define([b4_symbol(77, tag)],
[[component]])


m4_define([b4_symbol(11, has_type)],
[[0]])


m4_define([b4_symbol(96, has_id)],
[[1]])


m4_define([b4_symbol(148, tag)],
[[long_id]])


m4_define([b4_symbol(30, number)],
[[30]])


m4_define([b4_translate_max],
[[73]])


m4_define([b4_symbol(133, id)],
[[asm]])


m4_define([b4_symbol(109, number)],
[[109]])


m4_define([b4_symbol(103, has_id)],
[[1]])


m4_define([b4_symbol(41, user_number)],
[[296]])


m4_define([b4_symbol(61, is_token)],
[[1]])


m4_define([b4_symbol(19, has_printer)],
[[0]])


m4_define([b4_symbol(115, user_number)],
[[-1]])


m4_define([b4_conflicting_rules],
[[     0,   212,     0]])


m4_define([b4_symbol(79, has_id)],
[[1]])


m4_define([b4_symbol(13, number)],
[[13]])


m4_define([b4_symbol(64, id)],
[[THROW]])


m4_define([b4_symbol(92, user_number)],
[[-1]])


m4_define([b4_symbol(153, type)],
[[]])


m4_define([b4_symbol(6, type)],
[[]])


m4_define([b4_symbol(166, user_number)],
[[-1]])


m4_define([b4_symbol(139, has_destructor)],
[[0]])


m4_define([b4_symbol(176, tag)],
[[one_catch]])


m4_define([b4_symbol(25, has_destructor)],
[[0]])


m4_define([b4_symbol(10, user_number)],
[[265]])


m4_define([b4_symbol(174, has_type)],
[[0]])


m4_define([b4_symbol(103, type)],
[[]])


m4_define([b4_symbol(104, has_type)],
[[0]])


m4_define([b4_symbol(175, id)],
[[catch_list]])


m4_define([b4_symbol(175, has_id)],
[[1]])


m4_define([b4_symbol(61, user_number)],
[[316]])


m4_define([b4_symbol(154, is_token)],
[[0]])


m4_define([b4_symbol(25, id)],
[[MINUS]])


m4_define([b4_symbol(48, has_type)],
[[0]])


m4_define([b4_symbol(39, has_printer)],
[[0]])


m4_define([b4_symbol(83, type)],
[[]])


m4_define([b4_symbol(135, user_number)],
[[-1]])


m4_define([b4_symbol(7, id)],
[[FLOAT]])


m4_define([b4_symbol(1, has_destructor)],
[[0]])


m4_define([b4_symbol(34, tag)],
[[CHAR_VAL]])


m4_define([b4_symbol(85, number)],
[[85]])


m4_define([b4_symbol(105, tag)],
[[array_first_tag]])


m4_define([b4_symbol(98, is_token)],
[[0]])


m4_define([b4_symbol(28, is_token)],
[[1]])


m4_define([b4_symbol(158, has_id)],
[[1]])


m4_define([b4_symbol(78, has_destructor)],
[[0]])


m4_define([b4_symbol(52, has_type)],
[[0]])


m4_define([b4_symbol(147, has_destructor)],
[[0]])


m4_define([b4_symbol(33, type)],
[[]])


m4_define([b4_symbol(68, number)],
[[68]])


m4_define([b4_symbol(136, id)],
[[variable]])


m4_define([b4_symbol(62, has_id)],
[[1]])


m4_define([b4_symbol(32, is_token)],
[[1]])


m4_define([b4_symbol(33, has_destructor)],
[[0]])


m4_define([b4_symbol(30, user_number)],
[[285]])


m4_define([b4_symbol(102, has_destructor)],
[[0]])


m4_define([b4_r2_min],
[[0]])


m4_define([b4_symbol(62, tag)],
[[TRY]])


m4_define([b4_pact_ninf],
[[-310]])


m4_define([b4_symbol(104, user_number)],
[[-1]])


m4_define([b4_symbol(133, tag)],
[[asm]])


m4_define([b4_symbol(67, id)],
[[SELF]])


m4_define([b4_symbol(81, user_number)],
[[-1]])


m4_define([b4_symbol(45, has_id)],
[[1]])


m4_define([b4_symbol(59, has_printer)],
[[0]])


m4_define([b4_symbol(155, user_number)],
[[-1]])


m4_define([b4_symbol(140, type)],
[[]])


m4_define([b4_symbol(86, has_destructor)],
[[0]])


m4_define([b4_symbol(164, number)],
[[164]])


m4_define([b4_symbol(28, has_id)],
[[1]])


m4_define([b4_symbol(155, has_destructor)],
[[0]])


m4_define([b4_symbol(145, has_type)],
[[0]])


m4_define([b4_symbol(90, tag)],
[[struct_variable_declaration]])


m4_define([b4_symbol(167, type)],
[[]])


m4_define([b4_symbol(178, id)],
[[finally_statement]])


m4_define([b4_symbol(161, tag)],
[[conditional_statement]])


m4_define([b4_symbol(125, is_token)],
[[0]])


m4_define([b4_symbol(89, has_type)],
[[0]])


m4_define([b4_symbol(19, has_type)],
[[0]])


m4_define([b4_symbol(147, number)],
[[147]])


m4_define([b4_symbol(41, has_destructor)],
[[0]])


m4_define([b4_symbol(110, has_destructor)],
[[0]])


m4_define([b4_symbol(141, has_id)],
[[1]])


m4_define([b4_symbol(28, id)],
[[AT_IMPLEMENTATION]])


m4_define([b4_symbol(50, user_number)],
[[305]])


m4_define([b4_symbol(28, has_printer)],
[[0]])


m4_define([b4_symbol(124, user_number)],
[[-1]])


m4_define([b4_symbol(117, type)],
[[]])


m4_define([b4_symbol(69, is_token)],
[[1]])


m4_define([b4_symbol(93, has_type)],
[[0]])


m4_define([b4_symbol(70, type)],
[[]])


m4_define([b4_symbol(23, has_type)],
[[0]])


m4_define([b4_symbol(51, number)],
[[51]])


m4_define([b4_symbol(79, has_printer)],
[[0]])


m4_define([b4_symbol(124, has_id)],
[[1]])


m4_define([b4_symbol(175, user_number)],
[[-1]])


m4_define([b4_symbol(59, tag)],
[[DOT]])


m4_define([b4_symbol(73, is_token)],
[[1]])


m4_define([b4_symbol(97, type)],
[[]])


m4_define([b4_symbol(139, id)],
[[do_while]])


m4_define([b4_symbol(94, has_destructor)],
[[0]])


m4_define([b4_symbol(34, number)],
[[34]])


m4_define([b4_symbol(163, has_destructor)],
[[0]])


m4_define([b4_symbol(20, type)],
[[]])


m4_define([b4_symbol(107, has_id)],
[[1]])


m4_define([b4_tag_seen_flag],
[[1]])


m4_define([b4_symbol(47, type)],
[[]])


m4_define([b4_symbol(70, user_number)],
[[325]])


m4_define([b4_symbol(17, number)],
[[17]])


m4_define([b4_percent_define_bison_variables(lr.type)],
[[]])


m4_define([b4_symbol(87, tag)],
[[instance_variable_declaration]])


m4_define([b4_symbol(48, has_printer)],
[[0]])


m4_define([b4_symbol(11, has_id)],
[[1]])


m4_define([b4_symbol(9, has_destructor)],
[[0]])


m4_define([b4_symbol(144, user_number)],
[[-1]])


m4_define([b4_symbol(50, id)],
[[ENUM]])


m4_define([b4_symbol(158, tag)],
[[argument]])


m4_define([b4_symbol(116, has_type)],
[[0]])


m4_define([b4_symbol(99, has_printer)],
[[0]])


m4_define([b4_percent_define_kind(parse.error)],
[[keyword]])


m4_define([b4_symbol(130, number)],
[[130]])


m4_define([b4_symbol(2, has_printer)],
[[0]])


m4_define([b4_symbol(166, is_token)],
[[0]])


m4_define([b4_symbol(120, has_type)],
[[0]])


m4_define([b4_symbol(154, type)],
[[]])


m4_define([b4_symbol(171, has_destructor)],
[[0]])


m4_define([b4_symbol(7, type)],
[[]])


m4_define([b4_symbol(161, id)],
[[conditional_statement]])


m4_define([b4_symbol(113, number)],
[[113]])


m4_define([b4_symbol(17, has_printer)],
[[0]])


m4_define([b4_symbol(170, is_token)],
[[0]])


m4_define([b4_symbol(64, has_type)],
[[0]])


m4_define([b4_symbol(3, number)],
[[3]])


m4_define([b4_symbol(100, is_token)],
[[0]])


m4_define([b4_symbol(16, tag)],
[[OPEN_S]])


m4_define([b4_symbol(113, user_number)],
[[-1]])


m4_define([b4_symbol(11, id)],
[[SEMI_COMA]])


m4_define([b4_symbol(90, user_number)],
[[-1]])


m4_define([b4_symbol(89, number)],
[[89]])


m4_define([b4_symbol(104, type)],
[[]])


m4_define([b4_symbol(83, has_id)],
[[1]])


m4_define([b4_symbol(92, id)],
[[ids_list]])


m4_define([b4_symbol(68, has_printer)],
[[0]])


m4_define([b4_symbol(1, tag)],
[[error]])


m4_define([b4_symbol(164, user_number)],
[[-1]])


m4_define([b4_symbol(44, is_token)],
[[1]])


m4_define([b4_symbol(66, has_id)],
[[1]])


m4_define([b4_symbol(84, type)],
[[]])


m4_define([b4_symbol(44, tag)],
[[IF]])


m4_define([b4_symbol(122, id)],
[[implementation_definition]])


m4_define([b4_symbol(115, tag)],
[[selector_decleration]])


m4_define([b4_symbol(49, has_destructor)],
[[0]])


m4_define([b4_symbol(118, has_destructor)],
[[0]])


m4_define([b4_symbol(37, has_printer)],
[[0]])


m4_define([b4_epilogue],
[[]b4_syncline(1388, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])[

void yyerror(const char *s) {

Program::addError(new SyntaxError(s));

	fprintf (stderr, "%s\n", s);
	;
}

int yylex(){
	return lexer->yylex();

}
void main(int argc,      // Number of strings in array argv
          char *argv@{@}){
  //yydebug=1;
	 	string input = "code.txt";
	bool f = true;

	   for(int i = 0; i < argc; i++) 
		{
			if(string(argv@{i@})=="-o")
			{
				if(i+1<argc)
				{
						  ofs=std::ofstream(string(argv@{i+1@}), std::ofstream::out);
				}	
			}
			if (string(argv@{i@}) == "-i")
			{
				if (i + 1<argc)
				{
				//	ofs = std::ofstream(string(argv@{i@}), std::ofstream::out);
					input = string(argv@{i+1@});
					addFile(input);
					f = false;
				}
			}

		}
	globalScoop=new ScoopNode(NULL);
	globalScoop->setOffsetRegister("gp");

	addFile("nsobject.oc");

	addFile("system.oc");
	if (f)
	{
		addFile(input);
	}
	
	for(int i=0;i<sfiles.size();i++)
		{
	    string sf=sfiles@{i@};
		lineNum=colNum=1;
		sourceFile=sf;
		ifstream inf(sf);
		lexer = new yyFlexLexer(&inf);
		Parser* p = new Parser();
		p->parse();
	}
		if(!symbolTable->checkInhertanceLoop()){
			cout<<"inherit loop detected, can't recover\n";
			Program::printErrors();
			return ;
		}
		symbolTable->generateStatics();
		symbolTable->generateCode();
	ofs<<".data\n";
	MIPS_ASM::add_data("\nnewline: .asciiz \"\\n\"\n");
	MIPS_ASM::writeData();
		ofs<<"\n.text\n";

	ofs<<".globl main\n";
		ofs<<"main:\n";
	
	
	MIPS_ASM::writeCode();
	std::ifstream t_common("common.asm");
std::string str_common((std::istreambuf_iterator<char>(t_common)),
                 std::istreambuf_iterator<char>());
	ofs<<str_common<<"\n";

	Iskernal=1;
	symbolTable->generateKernalCode();

		ofs<<".ktext 0x80000180\n";

 t_common =	std::ifstream("exception.asm");
 str_common=string((std::istreambuf_iterator<char>(t_common)),
                 std::istreambuf_iterator<char>());
	ofs<<str_common<<"\n";
	MIPS_ASM::writeCode();

	MIPS_ASM::add_data("msg:   .asciiz \"Trap generated \\n\"\n");
	ofs<<".kdata\n";
	MIPS_ASM::writeData();
		Program::printErrors();

}
]])


m4_define([b4_r1_min],
[[0]])


m4_define([b4_symbol(49, has_id)],
[[1]])


m4_define([b4_symbol(133, user_number)],
[[-1]])


m4_define([b4_symbol(157, has_type)],
[[0]])


m4_define([b4_symbol(53, id)],
[[TRUE]])


m4_define([b4_symbol(34, type)],
[[]])


m4_define([b4_symbol(6, is_token)],
[[1]])


m4_define([b4_symbol(88, has_printer)],
[[0]])


m4_define([b4_symbol(72, tag)],
[[long_id_prec]])


m4_define([b4_symbol(168, number)],
[[168]])


m4_define([b4_symbol(137, is_token)],
[[0]])


m4_define([b4_symbol(161, has_type)],
[[0]])


m4_define([b4_symbol(162, has_id)],
[[1]])


m4_define([b4_symbol(143, tag)],
[[for_initializer]])


m4_define([b4_symbol(164, id)],
[[switch_body_block]])


m4_define([b4_symbol(8, user_number)],
[[263]])


m4_define([b4_symbol(141, is_token)],
[[0]])


m4_define([b4_symbol(72, number)],
[[72]])


m4_define([b4_symbol(35, has_type)],
[[0]])


m4_define([b4_symbol(141, type)],
[[]])


m4_define([b4_symbol(145, has_id)],
[[1]])


m4_define([b4_symbol(102, user_number)],
[[-1]])


m4_define([b4_symbol(14, id)],
[[AT_PROTECTED]])


m4_define([b4_symbol(57, has_destructor)],
[[0]])


m4_define([b4_symbol(85, is_token)],
[[0]])


m4_define([b4_symbol(126, has_destructor)],
[[0]])


m4_define([b4_symbol(15, is_token)],
[[1]])


m4_define([b4_symbol(95, id)],
[[struct_header]])


m4_define([b4_symbol(55, number)],
[[55]])


m4_define([b4_symbol(168, type)],
[[]])


m4_define([b4_symbol(57, has_printer)],
[[0]])


m4_define([b4_symbol(153, user_number)],
[[-1]])


m4_define([b4_symbol(171, tag)],
[[protocol_body]])


m4_define([b4_symbol(128, has_id)],
[[1]])


m4_define([b4_symbol(12, has_destructor)],
[[0]])


m4_define([b4_pgoto],
[[  -310,  -310,  -310,   682,  -310,  -310,  -310,   680,  -310,  -310,
    -298,   141,  -310,   623,   634,  -310,  -310,   -18,   571,   479,
    -310,  -310,  -310,  -156,   -28,  -310,  -310,  -310,  -310,  -131,
    -310,  -310,   355,  -310,     4,    -1,  -310,  -310,   -29,   305,
    -310,   616,  -310,   410,  -310,  -310,  -310,   678,   -23,  -310,
    -310,  -310,  -310,   350,  -310,  -310,  -310,  -169,  -310,  -310,
    -310,   471,    55,  -310,  -310,  -310,  -310,  -310,  -310,  -310,
    -242,  -309,  -178,  -102,  -101,  -310,  -212,  -310,  -159,  -310,
    -310,  -310,   371,  -310,   263,  -310,   472,  -310,  -310,  -310,
    -310,  -310,  -310,   446,   452,  -310,  -310,  -310,    63,  -206,
    -310,  -310,   413,  -310,  -310]])


m4_define([b4_symbol(38, number)],
[[38]])


m4_define([b4_symbol(125, id)],
[[instance_implementation_definition]])


m4_define([b4_symbol(32, has_id)],
[[1]])


m4_define([b4_symbol(118, type)],
[[]])


m4_define([b4_symbol(71, type)],
[[]])


m4_define([b4_symbol(128, has_type)],
[[0]])


m4_define([b4_symbol(69, tag)],
[[if_h]])


m4_define([b4_symbol(26, has_printer)],
[[0]])


m4_define([b4_symbol(151, number)],
[[151]])


m4_define([b4_symbol(56, id)],
[[AT_PROTOCOL]])


m4_define([b4_symbol(98, type)],
[[]])


m4_define([b4_symbol(15, has_id)],
[[1]])


m4_define([b4_symbol(122, user_number)],
[[-1]])


m4_define([b4_symbol(1, has_type)],
[[0]])


m4_define([b4_symbol(65, has_destructor)],
[[0]])


m4_define([b4_symbol(100, tag)],
[[enum_type]])


m4_define([b4_symbol(134, has_destructor)],
[[0]])


m4_define([b4_symbol(178, is_token)],
[[0]])


m4_define([b4_symbol(21, type)],
[[]])


m4_define([b4_symbol(108, is_token)],
[[0]])


m4_define([b4_conflicting_rules_max],
[[212]])


m4_define([b4_symbol(132, has_type)],
[[0]])


m4_define([b4_symbol(77, has_printer)],
[[0]])


m4_define([b4_symbol(173, user_number)],
[[-1]])


m4_define([b4_symbol(134, number)],
[[134]])


m4_define([b4_symbol(20, has_destructor)],
[[0]])


m4_define([b4_symbol(48, type)],
[[]])


m4_define([b4_symbol(112, is_token)],
[[0]])


m4_define([b4_symbol(167, id)],
[[case_body]])


m4_define([b4_symbol(76, has_type)],
[[0]])


m4_define([b4_symbol(97, tag)],
[[entity]])


m4_define([b4_symbol(168, tag)],
[[default_case]])


m4_define([b4_symbol(117, number)],
[[117]])


m4_define([b4_symbol(17, id)],
[[CLOSE_S]])


m4_define([b4_symbol(56, is_token)],
[[1]])


m4_define([b4_symbol(111, has_id)],
[[1]])


m4_define([b4_symbol(7, number)],
[[7]])


m4_define([b4_symbol(80, has_type)],
[[0]])


m4_define([b4_symbol(1, has_id)],
[[1]])


m4_define([b4_symbol(10, has_type)],
[[0]])


m4_define([b4_symbol(98, id)],
[[type]])


m4_define([b4_symbol(46, has_printer)],
[[0]])


m4_define([b4_symbol(87, has_id)],
[[1]])


m4_define([b4_symbol(142, user_number)],
[[-1]])


m4_define([b4_symbol(21, number)],
[[21]])


m4_define([b4_symbol(73, has_destructor)],
[[0]])


m4_define([b4_symbol(60, is_token)],
[[1]])


m4_define([b4_symbol(142, has_destructor)],
[[0]])


m4_define([b4_symbol(155, type)],
[[]])


m4_define([b4_symbol(8, type)],
[[]])


m4_define([b4_symbol(97, has_printer)],
[[0]])


m4_define([b4_symbol(128, id)],
[[block_body_header]])


m4_define([b4_symbol(0, has_printer)],
[[0]])


m4_define([b4_symbol(26, tag)],
[[OPEN_P]])


m4_define([b4_symbol(169, has_type)],
[[0]])


m4_define([b4_symbol(105, type)],
[[]])


m4_define([b4_symbol(59, id)],
[[DOT]])


m4_define([b4_symbol(15, has_printer)],
[[0]])


m4_define([b4_symbol(111, user_number)],
[[-1]])


m4_define([b4_symbol(149, is_token)],
[[0]])


m4_define([b4_toknum_max],
[[328]])


m4_define([b4_symbol(173, has_type)],
[[0]])


m4_define([b4_symbol(103, has_type)],
[[0]])


m4_define([b4_immediate_max],
[[0]])


m4_define([b4_symbol(85, type)],
[[]])


m4_define([b4_symbol(66, has_printer)],
[[0]])


m4_define([b4_symbol(54, tag)],
[[FALSE]])


m4_define([b4_symbol(93, number)],
[[93]])


m4_define([b4_symbol(162, user_number)],
[[-1]])


m4_define([b4_symbol(81, has_destructor)],
[[0]])


m4_define([b4_symbol(153, is_token)],
[[0]])


m4_define([b4_symbol(125, tag)],
[[instance_implementation_definition]])


m4_define([b4_symbol(47, has_type)],
[[0]])


m4_define([b4_symbol(166, has_id)],
[[1]])


m4_define([b4_symbol(150, has_destructor)],
[[0]])


m4_define([b4_symbol(100, number)],
[[100]])


m4_define([b4_symbol(97, is_token)],
[[0]])


m4_define([b4_symbol(35, type)],
[[]])


m4_define([b4_symbol(76, number)],
[[76]])


m4_define([b4_symbol(27, is_token)],
[[1]])


m4_define([b4_symbol(70, has_id)],
[[1]])


m4_define([b4_symbol(150, id)],
[[simple_expr]])


m4_define([b4_symbol(51, has_type)],
[[0]])


m4_define([b4_symbol(149, has_id)],
[[1]])


m4_define([b4_symbol(82, tag)],
[[ids_list_identifier]])


m4_define([b4_version],
[[3.0]])


m4_define([b4_symbol(35, has_printer)],
[[0]])


m4_define([b4_symbol(153, tag)],
[[sender]])


m4_define([b4_symbol(31, is_token)],
[[1]])


m4_define([b4_symbol(131, user_number)],
[[-1]])


m4_define([b4_symbol(59, number)],
[[59]])


m4_define([b4_symbol(109, has_printer)],
[[0]])


m4_define([b4_symbol(81, id)],
[[protocol_reference_list]])


m4_define([b4_symbol(53, has_id)],
[[1]])


m4_define([b4_symbol(9, has_type)],
[[0]])


m4_define([b4_symbol(86, has_printer)],
[[0]])


m4_define([b4_symbol(8, tag)],
[[CHAR]])


m4_define([b4_symbol(142, type)],
[[]])


m4_define([b4_symbol(28, has_destructor)],
[[0]])


m4_define([b4_symbol(172, number)],
[[172]])


m4_define([b4_symbol(36, has_id)],
[[1]])


m4_define([b4_symbol(111, id)],
[[instance_method_declaration]])


m4_define([b4_symbol(169, type)],
[[]])


m4_define([b4_symbol(6, user_number)],
[[261]])


m4_define([b4_symbol(11, tag)],
[[SEMI_COMA]])


m4_define([b4_symbol(144, has_type)],
[[0]])


m4_define([b4_symbol(100, user_number)],
[[-1]])


m4_define([b4_symbol(155, number)],
[[155]])


m4_define([b4_symbol(19, has_id)],
[[1]])


m4_define([b4_symbol(4, has_destructor)],
[[0]])


m4_define([b4_symbol(42, id)],
[[DIV]])


m4_define([b4_symbol(124, is_token)],
[[0]])


m4_define([b4_spec_outfile],
[[yacc.cpp]])


m4_define([b4_symbol(119, type)],
[[]])


m4_define([b4_symbol(88, has_type)],
[[0]])


m4_define([b4_symbol(55, has_printer)],
[[0]])


m4_define([b4_symbol(18, has_type)],
[[0]])


m4_define([b4_symbol(151, user_number)],
[[-1]])


m4_define([b4_percent_define_syncline(parse.error)],
[[]b4_syncline(3, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])[]])


m4_define([b4_symbol(129, has_printer)],
[[0]])


m4_define([b4_symbol(72, type)],
[[]])


m4_define([b4_symbol(138, number)],
[[138]])


m4_define([b4_symbol(132, has_id)],
[[1]])


m4_define([b4_symbol(79, tag)],
[[class_interface_header]])


m4_define([b4_symbol(68, is_token)],
[[1]])


m4_define([b4_symbol(92, has_type)],
[[0]])


m4_define([b4_symbol(22, has_type)],
[[0]])


m4_define([b4_symbol(99, type)],
[[]])


m4_define([b4_symbol(110, tag)],
[[class_method_declaration]])


m4_define([b4_symbol(153, id)],
[[sender]])


m4_define([b4_symbol(36, has_destructor)],
[[0]])


m4_define([b4_symbol(105, has_destructor)],
[[0]])


m4_define([b4_symbol(42, number)],
[[42]])


m4_define([b4_symbol(22, type)],
[[]])


m4_define([b4_symbol(115, has_id)],
[[1]])


m4_define([b4_symbol(72, is_token)],
[[1]])


m4_define([b4_symbol(5, has_id)],
[[1]])


m4_define([b4_symbol(24, has_printer)],
[[0]])


m4_define([b4_symbol(49, type)],
[[]])


m4_define([b4_symbol(120, user_number)],
[[-1]])


m4_define([b4_symbol(84, id)],
[[array_ele]])


m4_define([b4_symbol(25, number)],
[[25]])


m4_define([b4_percent_define(parse.error)],
[[verbose]])


m4_define([b4_symbol(75, has_printer)],
[[0]])


m4_define([b4_symbol(178, tag)],
[[finally_statement]])


m4_define([b4_symbol(89, has_destructor)],
[[0]])


m4_define([b4_symbol(171, user_number)],
[[-1]])


m4_define([b4_symbol(149, has_printer)],
[[0]])


m4_define([b4_symbol(158, has_destructor)],
[[0]])


m4_define([b4_symbol(114, id)],
[[selectors_list]])


m4_define([b4_symbol(115, has_type)],
[[0]])


m4_define([b4_translate_min],
[[0]])


m4_define([b4_symbol(44, has_destructor)],
[[0]])


m4_define([b4_symbol(113, has_destructor)],
[[0]])


m4_define([b4_symbol(156, type)],
[[]])


m4_define([b4_symbol(9, type)],
[[]])


m4_define([b4_symbol(45, id)],
[[DO]])


m4_define([b4_symbol(165, is_token)],
[[0]])


m4_define([b4_symbol(121, number)],
[[121]])


m4_define([b4_last],
[[860]])


m4_define([b4_symbol(59, has_type)],
[[0]])


m4_define([b4_symbol(36, tag)],
[[MORE_OR_EQUAL]])


m4_define([b4_symbol(44, has_printer)],
[[0]])


m4_define([b4_symbol(107, tag)],
[[main_initializer]])


m4_define([b4_symbol(140, user_number)],
[[-1]])


m4_define([b4_symbol(97, number)],
[[97]])


m4_define([b4_symbol(118, has_printer)],
[[0]])


m4_define([b4_symbol(39, is_token)],
[[1]])


m4_define([b4_symbol(106, type)],
[[]])


m4_define([b4_symbol(91, has_id)],
[[1]])


m4_define([b4_symbol(63, has_type)],
[[0]])


m4_define([b4_symbol(104, number)],
[[104]])


m4_define([b4_symbol(95, has_printer)],
[[0]])


m4_define([b4_symbol(97, has_destructor)],
[[0]])


m4_define([b4_percent_define_kind(lr.keep-unreachable-state)],
[[keyword]])


m4_define([b4_symbol(156, id)],
[[message_selector]])


m4_define([b4_symbol(169, has_printer)],
[[0]])


m4_define([b4_symbol(166, has_destructor)],
[[0]])


m4_define([b4_symbol(43, is_token)],
[[1]])


m4_define([b4_pkgdatadir],
[[C:\Users\Khaled Kuteini\Source\Repos\occ\compiler\data]])


m4_define([b4_symbol(86, type)],
[[]])


m4_define([b4_symbol(74, has_id)],
[[0]])


m4_define([b4_symbol(64, tag)],
[[THROW]])


m4_define([b4_symbol(135, tag)],
[[variable_list]])


m4_define([b4_symbol(52, has_destructor)],
[[0]])


m4_define([b4_symbol(87, id)],
[[instance_variable_declaration]])


m4_define([b4_symbol(121, has_destructor)],
[[0]])


m4_define([b4_symbol(13, has_printer)],
[[0]])


m4_define([b4_symbol(57, has_id)],
[[1]])


m4_define([b4_symbol(36, type)],
[[]])


m4_define([b4_symbol(64, has_printer)],
[[0]])


m4_define([b4_pact_max],
[[802]])


m4_define([b4_symbol(160, user_number)],
[[-1]])


m4_define([b4_symbol(138, has_printer)],
[[0]])


m4_define([b4_symbol(117, id)],
[[parameter]])


m4_define([b4_symbol(92, tag)],
[[ids_list]])


m4_define([b4_symbol(176, number)],
[[176]])


m4_define([b4_symbol(156, has_type)],
[[0]])


m4_define([b4_symbol(5, is_token)],
[[1]])


m4_define([b4_symbol(170, has_id)],
[[1]])


m4_define([b4_symbol(163, tag)],
[[switch_header]])


m4_define([b4_symbol(174, has_destructor)],
[[0]])


m4_define([b4_symbol(136, is_token)],
[[0]])


m4_define([b4_symbol(48, id)],
[[DEFAULT]])


m4_define([b4_spec_name_prefix],
[[]])


m4_define([b4_symbol(160, has_type)],
[[0]])


m4_define([b4_symbol(80, number)],
[[80]])


m4_define([b4_symbol(159, number)],
[[159]])


m4_define([b4_symbol(143, type)],
[[]])


m4_define([b4_symbol(153, has_id)],
[[1]])


m4_define([b4_symbol(60, has_destructor)],
[[0]])


m4_define([b4_symbol(33, has_printer)],
[[0]])


m4_define([b4_symbol(140, is_token)],
[[0]])


m4_define([b4_symbol(107, has_printer)],
[[0]])


m4_define([b4_symbol(34, has_type)],
[[0]])


m4_define([b4_symbol(63, number)],
[[63]])


m4_define([b4_symbol(136, has_id)],
[[1]])


m4_define([b4_symbol(84, has_printer)],
[[0]])


m4_define([b4_symbol(21, tag)],
[[AT_END]])


m4_define([b4_symbol(84, is_token)],
[[0]])


m4_define([b4_symbol(159, id)],
[[while_loop]])


m4_define([b4_symbol(14, is_token)],
[[1]])


m4_define([b4_symbol(158, has_printer)],
[[0]])


m4_define([b4_symbol(46, number)],
[[46]])


m4_define([b4_symbol(40, has_id)],
[[1]])


m4_define([b4_symbol(4, user_number)],
[[259]])


m4_define([b4_symbol(119, has_id)],
[[1]])


m4_define([b4_symbol(73, type)],
[[]])


m4_define([b4_symbol(9, has_id)],
[[1]])


m4_define([b4_symbol(89, tag)],
[[visibility_specification]])


m4_define([b4_symbol(29, number)],
[[29]])


m4_define([b4_symbol(70, id)],
[[expr_1]])


m4_define([b4_symbol(23, has_id)],
[[1]])


m4_define([b4_symbol(120, tag)],
[[class_implementation_body]])


m4_define([b4_symbol(53, has_printer)],
[[0]])


m4_define([b4_symbol(19, user_number)],
[[274]])


m4_define([b4_symbol(127, has_type)],
[[0]])


m4_define([b4_symbol(127, has_printer)],
[[0]])


m4_define([b4_symbol(23, type)],
[[]])


m4_define([b4_symbol(0, has_type)],
[[0]])


m4_define([b4_symbol(142, number)],
[[142]])


m4_define([b4_symbol(177, is_token)],
[[0]])


m4_define([b4_symbol(100, id)],
[[enum_type]])


m4_define([b4_symbol(178, has_printer)],
[[0]])


m4_define([b4_symbol(107, is_token)],
[[0]])


m4_define([b4_symbol(131, has_type)],
[[0]])


m4_define([b4_symbol(18, tag)],
[[COMMA]])


m4_define([b4_symbol(125, number)],
[[125]])


m4_define([b4_symbol(75, has_type)],
[[0]])


m4_define([b4_symbol(129, has_destructor)],
[[0]])


m4_define([b4_symbol(111, is_token)],
[[0]])


m4_define([b4_symbol(31, id)],
[[STRING_VAL]])


m4_define([b4_symbol(22, has_printer)],
[[0]])


m4_define([b4_symbol(130, type)],
[[]])


m4_define([b4_symbol(3, tag)],
[[AT_INTERFACE]])


m4_define([b4_symbol(55, is_token)],
[[1]])


m4_define([b4_symbol(95, has_id)],
[[1]])


m4_define([b4_symbol(15, has_destructor)],
[[0]])


m4_define([b4_symbol(108, number)],
[[108]])


m4_define([b4_conflict_list_heads_max],
[[1]])


m4_define([b4_symbol(73, has_printer)],
[[0]])


m4_define([b4_symbol(102, has_id)],
[[1]])


m4_define([b4_symbol(157, type)],
[[]])


m4_define([b4_symbol(39, user_number)],
[[294]])


m4_define([b4_symbol(147, has_printer)],
[[0]])


m4_define([b4_symbol(46, tag)],
[[SWITCH]])


m4_define([b4_symbol(142, id)],
[[for_loop_header]])


m4_define([b4_symbol(78, has_id)],
[[1]])


m4_define([b4_symbol(12, number)],
[[12]])


m4_define([b4_symbol(117, tag)],
[[parameter]])


m4_define([b4_percent_define_loc(lr.default-reduction)],
[[[[<default value>:-1.-1]], [[<default value>:-1.-1]]]])


m4_define([b4_symbol(107, type)],
[[]])


m4_define([b4_symbol(60, type)],
[[]])


m4_define([b4_symbol(68, has_destructor)],
[[0]])


m4_define([b4_symbol(73, id)],
[[try_prec]])


m4_define([b4_rline_max],
[[1386]])


m4_define([b4_symbol(168, has_type)],
[[0]])


m4_define([b4_symbol(137, has_destructor)],
[[0]])


m4_define([b4_symbol(42, has_printer)],
[[0]])


m4_define([b4_symbol(116, has_printer)],
[[0]])


m4_define([b4_symbol(87, type)],
[[]])


m4_define([b4_symbol(74, tag)],
[[$][accept]])


m4_define([b4_percent_define_kind(lr.type)],
[[keyword]])


m4_define([b4_symbol(148, is_token)],
[[0]])


m4_define([b4_symbol(23, has_destructor)],
[[0]])


m4_define([b4_symbol(172, has_type)],
[[0]])


m4_define([b4_symbol(145, tag)],
[[logic_expr]])


m4_define([b4_symbol(10, type)],
[[]])


m4_define([b4_symbol(93, has_printer)],
[[0]])


m4_define([b4_symbol(102, has_type)],
[[0]])


m4_define([b4_symbol(174, has_id)],
[[1]])


m4_define([b4_symbol(59, user_number)],
[[314]])


m4_define([b4_symbol(103, id)],
[[array_tag]])


m4_define([b4_symbol(167, has_printer)],
[[0]])


m4_define([b4_symbol(37, type)],
[[]])


m4_define([b4_symbol(152, is_token)],
[[0]])


m4_define([b4_symbol(84, number)],
[[84]])


m4_define([b4_symbol(46, has_type)],
[[0]])


m4_define([b4_symbol(34, id)],
[[CHAR_VAL]])


m4_define([b4_symbol(157, has_id)],
[[1]])


m4_define([b4_symbol(11, has_printer)],
[[0]])


m4_define([b4_symbol(96, is_token)],
[[0]])


m4_define([b4_symbol(26, is_token)],
[[1]])


m4_define([b4_symbol(76, has_destructor)],
[[0]])


m4_define([b4_symbol(173, tag)],
[[list_expr]])


m4_define([b4_symbol(50, has_type)],
[[0]])


m4_define([b4_symbol(67, number)],
[[67]])


m4_define([b4_symbol(145, has_destructor)],
[[0]])


m4_define([b4_symbol(61, has_id)],
[[1]])


m4_define([b4_symbol(62, has_printer)],
[[0]])


m4_define([b4_symbol(28, user_number)],
[[283]])


m4_define([b4_symbol(136, has_printer)],
[[0]])


m4_define([b4_symbol(30, is_token)],
[[1]])


m4_define([b4_symbol(144, type)],
[[]])


m4_define([b4_symbol(145, id)],
[[logic_expr]])


m4_define([b4_symbol(31, has_destructor)],
[[0]])


m4_define([b4_symbol(100, has_destructor)],
[[0]])


m4_define([b4_symbol(79, user_number)],
[[-1]])


m4_define([b4_symbol(44, has_id)],
[[1]])


m4_define([b4_symbol(8, has_type)],
[[0]])


m4_define([b4_percent_code_user_qualifiers],
[[[[[[requires]], [[C:\Users\Khaled Kuteini\Source\Repos\occ\compiler\yacc.y:183.7]], [[C:\Users\Khaled Kuteini\Source\Repos\occ\compiler\yacc.y:183.15]]]]]])


m4_define([b4_symbol(76, id)],
[[components]])


m4_define([b4_symbol(139, has_type)],
[[0]])


m4_define([b4_symbol(31, tag)],
[[STRING_VAL]])


m4_define([b4_symbol(102, tag)],
[[complex_type]])


m4_define([b4_symbol(163, number)],
[[163]])


m4_define([b4_symbol(27, has_id)],
[[1]])


m4_define([b4_symbol(31, has_printer)],
[[0]])


m4_define([b4_symbol(105, has_printer)],
[[0]])


m4_define([b4_symbol(119, is_token)],
[[0]])


m4_define([b4_r1],
[[     0,    74,    75,    76,    76,    76,    77,    77,    77,    77,
      77,    78,    79,    79,    79,    79,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    81,    81,    82,    82,    83,    83,    84,
      84,    84,    84,    84,    84,    85,    85,    86,    86,    86,
      87,    88,    88,    89,    89,    89,    90,    91,    91,    91,
      92,    92,    92,    93,    93,    93,    93,    94,    94,    94,
      95,    96,    96,    96,    96,    96,    96,    96,    96,    97,
      97,    97,    98,    98,    98,    98,    99,    99,   100,   100,
     101,   101,   101,   101,   101,   101,   102,   103,   104,   104,
     104,   105,   105,   106,   106,   107,   107,   108,   108,   109,
     109,   110,   110,   110,   111,   112,   113,   113,   114,   114,
     115,   116,   116,   117,   118,   119,   119,   120,   120,   120,
     120,   121,   121,   122,   122,   123,   124,   125,   126,   127,
     128,   129,   129,   129,   130,   130,   131,   131,   131,   131,
     131,   131,   131,   131,   131,   131,   131,   132,   133,   134,
     134,   134,   135,   135,   135,   136,   136,   136,   137,   138,
     138,   138,   139,   140,   141,   142,   142,   142,   142,   142,
     142,   142,   142,   143,   143,   143,   144,   144,   144,   145,
     145,   145,   145,   145,   145,   145,   145,   145,   145,   145,
     146,   146,   147,   148,   148,   148,   148,   149,   150,   150,
     150,   150,   150,   150,   150,   150,   150,   150,   150,   150,
     150,   150,   150,   151,   152,   153,   153,   154,   154,   155,
     155,   156,   157,   157,   158,   159,   160,   161,   161,   161,
     162,   163,   164,   165,   165,   165,   165,   166,   166,   167,
     167,   167,   168,   168,   168,   169,   170,   171,   171,   171,
     171,   172,   172,   173,   173,   173,   173,   174,   174,   175,
     175,   176,   177,   178]])


m4_define([b4_symbol(84, has_destructor)],
[[0]])


m4_define([b4_symbol(143, has_type)],
[[0]])


m4_define([b4_r2],
[[     0,     2,     1,     2,     1,     3,     1,     1,     1,     1,
       1,     2,     4,     2,     2,     4,     4,     3,     3,     3,
       2,     2,     2,     1,     3,     4,     2,     4,     3,     3,
       3,     2,     2,     3,     3,     3,     1,     3,     2,     3,
       1,     2,     5,     3,     4,     3,     2,     2,     1,     1,
       2,     2,     1,     1,     1,     1,     1,     3,     4,     4,
       3,     1,     1,     2,     1,     2,     2,     2,     1,     2,
       2,     5,     6,     4,     5,     6,     7,     5,     6,     3,
       1,     2,     1,     1,     1,     1,     2,     3,     2,     3,
       1,     1,     1,     1,     1,     1,     2,     2,     4,     0,
       4,     3,     2,     2,     0,     2,     0,     2,     1,     1,
       1,     4,     4,     3,     4,     3,     1,     1,     2,     1,
       3,     3,     1,     2,     2,     4,     2,     3,     2,     2,
       1,     2,     1,     1,     1,     2,     3,     2,     3,     2,
       1,     2,     1,     2,     2,     1,     1,     1,     2,     1,
       1,     1,     1,     1,     2,     1,     2,     5,     3,     3,
       4,     1,     3,     1,     3,     3,     2,     3,     3,     1,
       1,     1,     4,     1,     2,     8,     7,     7,     7,     6,
       6,     6,     5,     4,     3,     1,     3,     3,     1,     3,
       3,     3,     3,     3,     3,     2,     3,     1,     1,     1,
       1,     1,     3,     3,     1,     1,     1,     4,     1,     1,
       1,     1,     1,     3,     3,     3,     3,     3,     2,     2,
       2,     2,     2,     1,     4,     1,     1,     1,     1,     2,
       1,     3,     3,     1,     1,     2,     4,     2,     4,     2,
       4,     5,     1,     3,     2,     2,     1,     2,     1,     6,
       4,     5,     5,     3,     4,     2,     2,     3,     2,     2,
       1,     6,     3,     5,     3,     1,     3,     4,     3,     1,
       2,     2,     5,     2]])


m4_define([b4_symbol(153, has_destructor)],
[[0]])


m4_define([b4_symbol(106, id)],
[[initializer]])


m4_define([b4_symbol(82, has_printer)],
[[0]])


m4_define([b4_symbol(74, type)],
[[]])


m4_define([b4_symbol(48, user_number)],
[[303]])


m4_define([b4_symbol(146, number)],
[[146]])


m4_define([b4_symbol(140, has_id)],
[[1]])


m4_define([b4_symbol(156, has_printer)],
[[0]])


m4_define([b4_symbol(123, is_token)],
[[0]])


m4_define([b4_symbol(87, has_type)],
[[0]])


m4_define([b4_symbol(99, tag)],
[[struct_type]])


m4_define([b4_symbol(17, has_type)],
[[0]])


m4_define([b4_symbol(99, user_number)],
[[-1]])


m4_define([b4_symbol(130, tag)],
[[statement_list]])


m4_define([b4_symbol(2, user_number)],
[[257]])


m4_define([b4_symbol(50, number)],
[[50]])


m4_define([b4_symbol(37, id)],
[[MULTI]])


m4_define([b4_symbol(24, type)],
[[]])


m4_define([b4_symbol(129, number)],
[[129]])


m4_define([b4_symbol(67, is_token)],
[[1]])


m4_define([b4_symbol(91, has_type)],
[[0]])


m4_define([b4_symbol(123, has_id)],
[[1]])


m4_define([b4_symbol(21, has_type)],
[[0]])


m4_define([b4_symbol(99, has_id)],
[[1]])


m4_define([b4_symbol(71, is_token)],
[[1]])


m4_define([b4_symbol(33, number)],
[[33]])


m4_define([b4_symbol(51, has_printer)],
[[0]])


m4_define([b4_symbol(17, user_number)],
[[272]])


m4_define([b4_symbol(106, has_id)],
[[1]])


m4_define([b4_conflicting_rules_min],
[[0]])


m4_define([b4_symbol(125, has_printer)],
[[0]])


m4_define([b4_symbol(92, has_destructor)],
[[0]])


m4_define([b4_symbol(148, id)],
[[long_id]])


m4_define([b4_symbol(28, tag)],
[[AT_IMPLEMENTATION]])


m4_define([b4_symbol(161, has_destructor)],
[[0]])


m4_define([b4_symbol(68, user_number)],
[[323]])


m4_define([b4_symbol(16, number)],
[[16]])


m4_define([b4_symbol(176, has_printer)],
[[0]])


m4_define([b4_symbol(131, type)],
[[]])


m4_define([b4_symbol(10, has_id)],
[[1]])


m4_define([b4_symbol(79, id)],
[[class_interface_header]])


m4_define([b4_symbol(158, type)],
[[]])


m4_define([b4_symbol(7, has_destructor)],
[[0]])


m4_define([b4_symbol(20, has_printer)],
[[0]])


m4_define([b4_symbol(114, has_type)],
[[0]])


m4_define([b4_symbol(56, tag)],
[[AT_PROTOCOL]])


m4_define([b4_union_members],
[[]b4_syncline(186, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])[

	
	struct R {
		int colNo;
		int lineNo;
		int int_val;
		char char_val;	
		string* string_val;
		float float_val;
		char* text;
		Node* node;
			      }r;
	   
]])


m4_define([b4_symbol(127, tag)],
[[block_body]])


m4_define([b4_symbol(109, id)],
[[interface_declaration]])


m4_define([b4_symbol(71, has_printer)],
[[0]])


m4_define([b4_symbol(164, is_token)],
[[0]])


m4_define([b4_symbol(37, user_number)],
[[292]])


m4_define([b4_symbol(58, has_type)],
[[0]])


m4_define([b4_symbol(108, type)],
[[]])


m4_define([b4_symbol(112, number)],
[[112]])


m4_define([b4_symbol(178, has_id)],
[[1]])


m4_define([b4_symbol(145, has_printer)],
[[0]])


m4_define([b4_symbol(61, type)],
[[]])


m4_define([b4_symbol(2, number)],
[[2]])


m4_define([b4_symbol(39, has_destructor)],
[[0]])


m4_define([b4_symbol(108, has_destructor)],
[[0]])


m4_define([b4_symbol(38, is_token)],
[[1]])


m4_define([b4_symbol(170, id)],
[[protocol_header]])


m4_define([b4_symbol(88, user_number)],
[[-1]])


m4_define([b4_symbol(62, has_type)],
[[0]])


m4_define([b4_symbol(88, number)],
[[88]])


m4_define([b4_symbol(88, type)],
[[]])


m4_define([b4_symbol(82, has_id)],
[[1]])


m4_define([b4_symbol(84, tag)],
[[array_ele]])


m4_define([b4_symbol(20, id)],
[[MORE_THAN]])


m4_define([b4_symbol(155, tag)],
[[message_selectors_list]])


m4_define([b4_symbol(11, type)],
[[]])


m4_define([b4_symbol(2, id)],
[[]])


m4_define([b4_symbol(42, is_token)],
[[1]])


m4_define([b4_toknum_min],
[[0]])


m4_define([b4_immediate_min],
[[0]])


m4_define([b4_symbol(40, has_printer)],
[[0]])


m4_define([b4_symbol(65, has_id)],
[[1]])


m4_define([b4_symbol(38, type)],
[[]])


m4_define([b4_symbol(114, has_printer)],
[[0]])


m4_define([b4_symbol(91, has_printer)],
[[0]])


m4_define([b4_symbol(57, user_number)],
[[312]])


m4_define([b4_symbol(131, id)],
[[statement]])


m4_define([b4_symbol(165, has_printer)],
[[0]])


m4_define([b4_symbol(48, has_id)],
[[1]])


m4_define([b4_symbol(47, has_destructor)],
[[0]])


m4_define([b4_symbol(116, has_destructor)],
[[0]])


m4_define([b4_symbol(13, tag)],
[[AT_PUBLIC]])


m4_define([b4_symbol(155, has_type)],
[[0]])


m4_define([b4_symbol(4, is_token)],
[[1]])


m4_define([b4_symbol(62, id)],
[[TRY]])


m4_define([b4_symbol(167, number)],
[[167]])


m4_define([b4_symbol(145, type)],
[[]])


m4_define([b4_symbol(161, has_id)],
[[1]])


m4_define([b4_symbol(135, is_token)],
[[0]])


m4_define([b4_symbol(99, has_type)],
[[0]])


m4_define([b4_symbol(29, has_type)],
[[0]])


m4_define([b4_symbol(60, has_printer)],
[[0]])


m4_define([b4_symbol(71, number)],
[[71]])


m4_define([b4_symbol(26, user_number)],
[[281]])


m4_define([b4_symbol(134, has_printer)],
[[0]])


m4_define([b4_symbol(79, is_token)],
[[0]])


m4_define([b4_symbol(169, has_destructor)],
[[0]])


m4_define([b4_symbol(144, has_id)],
[[1]])


m4_define([b4_symbol(41, tag)],
[[EQUAL]])


m4_define([b4_symbol(112, tag)],
[[p_type]])


m4_define([b4_symbol(173, id)],
[[list_expr]])


m4_define([b4_symbol(33, has_type)],
[[0]])


m4_define([b4_symbol(77, user_number)],
[[-1]])


m4_define([b4_symbol(54, number)],
[[54]])


m4_define([b4_symbol(55, has_destructor)],
[[0]])


m4_define([b4_symbol(83, is_token)],
[[0]])


m4_define([b4_symbol(124, has_destructor)],
[[0]])


m4_define([b4_symbol(13, is_token)],
[[1]])


m4_define([b4_symbol(127, has_id)],
[[1]])


m4_define([b4_symbol(23, id)],
[[VOID]])


m4_define([b4_symbol(5, id)],
[[SEMI_COLUMN]])


m4_define([b4_symbol(75, type)],
[[]])


m4_define([b4_symbol(9, has_printer)],
[[0]])


m4_define([b4_symbol(37, number)],
[[37]])


m4_define([b4_symbol(103, has_printer)],
[[0]])


m4_define([b4_symbol(31, has_id)],
[[1]])


m4_define([b4_symbol(10, has_destructor)],
[[0]])


m4_define([b4_symbol(140, tag)],
[[do_header]])


m4_define([b4_symbol(80, has_printer)],
[[0]])


m4_define([b4_symbol(25, type)],
[[]])


m4_define([b4_symbol(46, user_number)],
[[301]])


m4_define([b4_symbol(134, id)],
[[variable_declaration_block]])


m4_define([b4_symbol(154, has_printer)],
[[0]])


m4_define([b4_percent_define_syncline(lr.default-reduction)],
[[]])


m4_define([b4_symbol(177, has_destructor)],
[[0]])


m4_define([b4_symbol(150, number)],
[[150]])


m4_define([b4_symbol(14, has_id)],
[[1]])


m4_define([b4_symbol(126, has_type)],
[[0]])


m4_define([b4_symbol(97, user_number)],
[[-1]])


m4_define([b4_symbol(0, user_number)],
[[0]])


m4_define([b4_symbol(65, id)],
[[FINALLY]])


m4_define([b4_symbol(63, has_destructor)],
[[0]])


m4_define([b4_symbol(176, is_token)],
[[0]])


m4_define([b4_symbol(133, number)],
[[133]])


m4_define([b4_symbol(38, tag)],
[[EQUAL_EQUAL]])


m4_define([b4_symbol(132, has_destructor)],
[[0]])


m4_define([b4_percent_define_user_variables],
[[[[[[parse.error]], [[C:\Users\Khaled Kuteini\Source\Repos\occ\compiler\yacc.y:3.9]], [[C:\Users\Khaled Kuteini\Source\Repos\occ\compiler\yacc.y:3.20]]]]]])


m4_define([b4_symbol(106, is_token)],
[[0]])


m4_define([b4_symbol(130, has_type)],
[[0]])


m4_define([b4_symbol(109, tag)],
[[interface_declaration]])


m4_define([b4_symbol(132, type)],
[[]])


m4_define([b4_symbol(15, user_number)],
[[270]])


m4_define([b4_symbol(74, has_type)],
[[0]])


m4_define([b4_symbol(123, has_printer)],
[[0]])


m4_define([b4_symbol(110, is_token)],
[[0]])


m4_define([b4_symbol(116, number)],
[[116]])


m4_define([b4_symbol(110, has_id)],
[[1]])


m4_define([b4_symbol(176, id)],
[[one_catch]])


m4_define([b4_symbol(159, type)],
[[]])


m4_define([b4_symbol(6, number)],
[[6]])


m4_define([b4_spec_graph_file],
[[yacc.dot]])


m4_define([b4_symbol(66, user_number)],
[[321]])


m4_define([b4_symbol(0, has_id)],
[[0]])


m4_define([b4_symbol(54, is_token)],
[[1]])


m4_define([b4_symbol(174, has_printer)],
[[0]])


m4_define([b4_symbol(66, tag)],
[[AT_ASM]])


m4_define([b4_symbol(86, has_id)],
[[1]])


m4_define([b4_symbol(20, number)],
[[20]])


m4_define([b4_symbol(26, id)],
[[OPEN_P]])


m4_define([b4_symbol(8, id)],
[[CHAR]])


m4_define([b4_symbol(137, tag)],
[[return_statement]])


m4_define([b4_symbol(109, type)],
[[]])


m4_define([b4_symbol(62, type)],
[[]])


m4_define([b4_symbol(71, has_destructor)],
[[0]])


m4_define([b4_symbol(140, has_destructor)],
[[0]])


m4_define([b4_symbol(69, has_id)],
[[1]])


m4_define([b4_defgoto],
[[    -1,     7,     8,     9,    10,    11,    33,    34,    86,   446,
     466,    35,    75,    76,    77,    78,   106,    79,   137,   138,
     108,    12,    13,   162,   183,    81,    82,    83,    84,   218,
     300,   219,   405,   349,    36,    37,    38,    39,   259,    90,
      91,    92,   226,   227,    14,    15,    45,    46,    47,    48,
      49,    50,    51,   184,   117,   185,   186,   187,   188,   189,
     190,   270,   271,   191,   192,   193,   194,   195,   196,   316,
     321,   322,   323,   261,   262,   199,   263,   200,   201,   283,
     358,   359,   360,   448,   449,   202,   203,   204,   205,   206,
     441,   289,   290,   291,   292,    16,    17,    55,   207,   126,
     208,   341,   342,   343,   401]])


m4_define([b4_symbol(89, type)],
[[]])


m4_define([b4_symbol(137, id)],
[[return_statement]])


m4_define([b4_symbol(35, user_number)],
[[290]])


m4_define([b4_symbol(94, tag)],
[[struct_declaration_list]])


m4_define([b4_symbol(143, has_printer)],
[[0]])


m4_define([b4_symbol(167, has_type)],
[[0]])


m4_define([b4_pgoto_max],
[[682]])


m4_define([b4_symbol(165, tag)],
[[switch_body]])


m4_define([b4_symbol(109, user_number)],
[[-1]])


m4_define([b4_symbol(12, type)],
[[]])


m4_define([b4_symbol(86, user_number)],
[[-1]])


m4_define([b4_symbol(68, id)],
[[IMPORT]])


m4_define([b4_symbol(147, is_token)],
[[0]])


m4_define([b4_translate],
[[     0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73]])


m4_define([b4_symbol(171, has_type)],
[[0]])


m4_define([b4_symbol(39, type)],
[[]])


m4_define([b4_symbol(101, has_type)],
[[0]])


m4_define([b4_symbol(92, number)],
[[92]])


m4_define([b4_symbol(165, has_id)],
[[1]])


m4_define([b4_symbol(151, is_token)],
[[0]])


m4_define([b4_symbol(45, has_type)],
[[0]])


m4_define([b4_symbol(18, has_destructor)],
[[0]])


m4_define([b4_symbol(112, has_printer)],
[[0]])


m4_define([b4_spec_file_prefix],
[[]])


m4_define([b4_symbol(23, tag)],
[[VOID]])


m4_define([b4_symbol(75, number)],
[[75]])


m4_define([b4_pact_min],
[[-310]])


m4_define([b4_symbol(95, is_token)],
[[0]])


m4_define([b4_symbol(148, has_id)],
[[1]])


m4_define([b4_symbol(25, is_token)],
[[1]])


m4_define([b4_symbol(55, user_number)],
[[310]])


m4_define([b4_symbol(146, type)],
[[]])


m4_define([b4_symbol(163, has_printer)],
[[0]])


m4_define([b4_symbol(129, user_number)],
[[-1]])


m4_define([b4_symbol(29, id)],
[[AND_AND]])


m4_define([b4_symbol(58, number)],
[[58]])


m4_define([b4_symbol(52, has_id)],
[[1]])


m4_define([b4_symbol(51, tag)],
[[OPEN_ARR]])


m4_define([b4_symbol(90, id)],
[[struct_variable_declaration]])


m4_define([b4_symbol(7, has_type)],
[[0]])


m4_define([b4_symbol(122, tag)],
[[implementation_definition]])


m4_define([b4_symbol(171, number)],
[[171]])


m4_define([b4_symbol(35, has_id)],
[[1]])


m4_define([b4_symbol(138, has_type)],
[[0]])


m4_define([b4_symbol(26, has_destructor)],
[[0]])


m4_define([b4_symbol(24, user_number)],
[[279]])


m4_define([b4_symbol(132, has_printer)],
[[0]])


m4_define([b4_symbol(76, type)],
[[]])


m4_define([b4_symbol(120, id)],
[[class_implementation_body]])


m4_define([b4_symbol(154, number)],
[[154]])


m4_define([b4_symbol(118, is_token)],
[[0]])


m4_define([b4_symbol(18, has_id)],
[[1]])


m4_define([b4_symbol(75, user_number)],
[[-1]])


m4_define([b4_symbol(142, has_type)],
[[0]])


m4_define([b4_symbol(149, user_number)],
[[-1]])


m4_define([b4_symbol(150, tag)],
[[simple_expr]])


m4_define([b4_symbol(2, has_destructor)],
[[0]])


m4_define([b4_symbol(122, is_token)],
[[0]])


m4_define([b4_symbol(86, has_type)],
[[0]])


m4_define([b4_symbol(26, type)],
[[]])


m4_define([b4_symbol(51, id)],
[[OPEN_ARR]])


m4_define([b4_symbol(137, number)],
[[137]])


m4_define([b4_symbol(131, has_id)],
[[1]])


m4_define([b4_symbol(16, has_type)],
[[0]])


m4_define([b4_symbol(79, has_destructor)],
[[0]])


m4_define([b4_symbol(7, has_printer)],
[[0]])


m4_define([b4_symbol(5, tag)],
[[SEMI_COLUMN]])


m4_define([b4_symbol(148, has_destructor)],
[[0]])


m4_define([b4_symbol(66, is_token)],
[[1]])


m4_define([b4_symbol(101, has_printer)],
[[0]])


m4_define([b4_symbol(90, has_type)],
[[0]])


m4_define([b4_symbol(41, number)],
[[41]])


m4_define([b4_merger_max],
[[0]])


m4_define([b4_symbol(20, has_type)],
[[0]])


m4_define([b4_symbol(114, has_id)],
[[1]])


m4_define([b4_symbol(34, has_destructor)],
[[0]])


m4_define([b4_symbol(44, user_number)],
[[299]])


m4_define([b4_symbol(48, tag)],
[[DEFAULT]])


m4_define([b4_symbol(162, id)],
[[if_header]])


m4_define([b4_symbol(152, has_printer)],
[[0]])


m4_define([b4_symbol(4, has_id)],
[[1]])


m4_define([b4_symbol(103, has_destructor)],
[[0]])


m4_define([b4_symbol(118, user_number)],
[[-1]])


m4_define([b4_symbol(70, is_token)],
[[1]])


m4_define([b4_symbol(119, tag)],
[[class_implementation_header]])


m4_define([b4_symbol(24, number)],
[[24]])


m4_define([b4_symbol(133, type)],
[[]])


m4_define([b4_symbol(95, user_number)],
[[-1]])


m4_define([b4_symbol(12, id)],
[[ID]])


m4_define([b4_symbol(169, user_number)],
[[-1]])


m4_define([b4_symbol(93, id)],
[[data_member]])


m4_define([b4_symbol(109, has_type)],
[[0]])


m4_define([b4_symbol(87, has_destructor)],
[[0]])


m4_define([b4_symbol(76, tag)],
[[components]])


m4_define([b4_symbol(156, has_destructor)],
[[0]])


m4_define([b4_symbol(13, user_number)],
[[268]])


m4_define([b4_conflict_list_heads_min],
[[0]])


m4_define([b4_symbol(159, is_token)],
[[0]])


m4_define([b4_symbol(147, tag)],
[[assign_expr]])


m4_define([b4_symbol(121, has_printer)],
[[0]])


m4_define([b4_symbol(123, id)],
[[class_implementation_definition]])


m4_define([b4_symbol(113, has_type)],
[[0]])


m4_define([b4_symbol(120, number)],
[[120]])


m4_define([b4_symbol(63, type)],
[[]])


m4_define([b4_symbol(64, user_number)],
[[319]])


m4_define([b4_symbol(42, has_destructor)],
[[0]])


m4_define([b4_symbol(111, has_destructor)],
[[0]])


m4_define([b4_symbol(172, has_printer)],
[[0]])


m4_define([b4_symbol(138, user_number)],
[[-1]])


m4_define([b4_symbol(163, is_token)],
[[0]])


m4_define([b4_symbol(57, has_type)],
[[0]])


m4_define([b4_symbol(96, number)],
[[96]])


m4_define([b4_symbol(54, id)],
[[FALSE]])


m4_define([b4_symbol(90, has_id)],
[[1]])


m4_define([b4_symbol(103, number)],
[[103]])


m4_define([b4_symbol(169, has_id)],
[[1]])


m4_define([b4_symbol(37, is_token)],
[[1]])


m4_define([b4_symbol(175, tag)],
[[catch_list]])


m4_define([b4_symbol(13, type)],
[[]])


m4_define([b4_symbol(61, has_type)],
[[0]])


m4_define([b4_rline_min],
[[0]])


m4_define([b4_symbol(79, number)],
[[79]])


m4_define([b4_percent_define_syncline(lr.keep-unreachable-state)],
[[]])


m4_define([b4_symbol(73, has_id)],
[[1]])


m4_define([b4_symbol(95, has_destructor)],
[[0]])


m4_define([b4_symbol(164, has_destructor)],
[[0]])


m4_define([b4_symbol(170, type)],
[[]])


m4_define([b4_symbol(33, user_number)],
[[288]])


m4_define([b4_symbol(165, id)],
[[switch_body]])


m4_define([b4_symbol(41, is_token)],
[[1]])


m4_define([b4_symbol(141, has_printer)],
[[0]])


m4_define([b4_symbol(107, user_number)],
[[-1]])


m4_define([b4_symbol(56, has_id)],
[[1]])


m4_define([b4_symbol(50, has_destructor)],
[[0]])


m4_define([b4_symbol(15, id)],
[[AT_PRIVATE]])


m4_define([b4_symbol(84, user_number)],
[[-1]])


m4_define([b4_symbol(33, tag)],
[[LESS_OR_EQUAL]])


m4_define([b4_symbol(158, user_number)],
[[-1]])


m4_define([b4_symbol(96, id)],
[[struct]])


m4_define([b4_symbol(120, type)],
[[]])


m4_define([b4_symbol(104, tag)],
[[array_tag_list]])


m4_define([b4_conflict_list_heads],
[[     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     1,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0]])


m4_define([b4_symbol(175, number)],
[[175]])


m4_define([b4_symbol(39, has_id)],
[[1]])


m4_define([b4_symbol(147, type)],
[[]])


m4_define([b4_symbol(154, has_type)],
[[0]])


m4_define([b4_symbol(3, is_token)],
[[1]])


m4_define([b4_symbol(126, id)],
[[instance_implementation_definition_header]])


m4_define([b4_symbol(110, has_printer)],
[[0]])


m4_define([b4_symbol(158, number)],
[[158]])


m4_define([b4_symbol(172, has_destructor)],
[[0]])


m4_define([b4_symbol(53, user_number)],
[[308]])


m4_define([b4_symbol(152, has_id)],
[[1]])


m4_define([b4_symbol(98, has_type)],
[[0]])


m4_define([b4_symbol(61, tag)],
[[DOUBLEMINUS]])


m4_define([b4_symbol(134, is_token)],
[[0]])


m4_define([b4_symbol(28, has_type)],
[[0]])


m4_define([b4_symbol(161, has_printer)],
[[0]])


m4_define([b4_symbol(127, user_number)],
[[-1]])


m4_define([b4_symbol(132, tag)],
[[throw_statement]])


m4_define([b4_table_max],
[[489]])


m4_define([b4_symbol(57, id)],
[[ELSE]])


m4_define([b4_symbol(50, type)],
[[]])


m4_define([b4_percent_define(lr.keep-unreachable-state)],
[[false]])


m4_define([b4_symbol(62, number)],
[[62]])


m4_define([b4_symbol(78, is_token)],
[[0]])


m4_define([b4_symbol(32, has_type)],
[[0]])


m4_define([b4_symbol(178, user_number)],
[[-1]])


m4_define([b4_symbol(135, has_id)],
[[1]])


m4_define([b4_symbol(77, type)],
[[]])


m4_define([b4_symbol(82, is_token)],
[[0]])


m4_define([b4_symbol(45, number)],
[[45]])


m4_define([b4_symbol(12, is_token)],
[[1]])


m4_define([b4_symbol(168, id)],
[[default_case]])


m4_define([b4_symbol(118, has_id)],
[[1]])


m4_define([b4_symbol(160, tag)],
[[while_loop_header]])


m4_define([b4_symbol(22, user_number)],
[[277]])


m4_define([b4_symbol(130, has_printer)],
[[0]])


m4_define([b4_symbol(8, has_id)],
[[1]])


m4_define([b4_symbol(27, type)],
[[]])


m4_define([b4_symbol(18, id)],
[[COMMA]])


m4_define([b4_symbol(28, number)],
[[28]])


m4_define([b4_symbol(119, has_destructor)],
[[0]])


m4_define([b4_symbol(73, user_number)],
[[328]])


m4_define([b4_symbol(99, id)],
[[struct_type]])


m4_define([b4_symbol(22, has_id)],
[[1]])


m4_define([b4_symbol(147, user_number)],
[[-1]])


m4_define([b4_symbol(5, has_printer)],
[[0]])


m4_define([b4_symbol(141, number)],
[[141]])


m4_define([b4_symbol(125, has_type)],
[[0]])


m4_define([b4_symbol(58, tag)],
[[STRUCT]])


m4_define([b4_symbol(129, id)],
[[block_body_statements]])


m4_define([b4_symbol(129, tag)],
[[block_body_statements]])


m4_define([b4_symbol(134, type)],
[[]])


m4_define([b4_symbol(175, is_token)],
[[0]])


m4_define([b4_symbol(105, is_token)],
[[0]])


m4_define([b4_symbol(69, has_type)],
[[0]])


m4_define([b4_symbol(42, user_number)],
[[297]])


m4_define([b4_symbol(124, number)],
[[124]])


m4_define([b4_symbol(150, has_printer)],
[[0]])


m4_define([b4_symbol(116, user_number)],
[[-1]])


m4_define([b4_symbol(49, is_token)],
[[1]])


m4_define([b4_symbol(73, has_type)],
[[0]])


m4_define([b4_symbol(58, has_destructor)],
[[0]])


m4_define([b4_symbol(86, tag)],
[[instance_variable_declarations]])


m4_define([b4_symbol(93, user_number)],
[[-1]])


m4_define([b4_symbol(127, has_destructor)],
[[0]])


m4_define([b4_symbol(94, has_id)],
[[1]])


m4_define([b4_symbol(107, number)],
[[107]])


m4_define([b4_symbol(167, user_number)],
[[-1]])


m4_define([b4_symbol(157, tag)],
[[argument_list]])


m4_define([b4_symbol(40, id)],
[[FOR]])


m4_define([b4_symbol(101, has_id)],
[[1]])


m4_define([b4_symbol(53, is_token)],
[[1]])


m4_define([b4_symbol(64, type)],
[[]])


m4_define([b4_symbol(13, has_destructor)],
[[0]])


m4_define([b4_symbol(77, has_id)],
[[1]])


m4_define([b4_symbol(11, number)],
[[11]])


m4_define([b4_symbol(11, user_number)],
[[266]])


m4_define([b4_symbol(151, id)],
[[message_call2]])


m4_define([b4_symbol(14, type)],
[[]])


m4_define([b4_symbol(62, user_number)],
[[317]])


m4_define([b4_symbol(15, tag)],
[[AT_PRIVATE]])


m4_define([b4_symbol(170, has_printer)],
[[0]])


m4_define([b4_symbol(136, user_number)],
[[-1]])


m4_define([b4_symbol(66, has_destructor)],
[[0]])


m4_define([b4_symbol(166, has_type)],
[[0]])


m4_define([b4_symbol(82, id)],
[[ids_list_identifier]])


m4_define([b4_symbol(171, type)],
[[]])


m4_define([b4_symbol(135, has_destructor)],
[[0]])


m4_define([b4_symbol(0, tag)],
[[$][end]])


m4_define([b4_symbol(173, has_id)],
[[1]])


m4_define([b4_symbol(146, is_token)],
[[0]])


m4_define([b4_symbol(170, has_type)],
[[0]])


m4_define([b4_symbol(100, has_type)],
[[0]])


m4_define([b4_symbol(21, has_destructor)],
[[0]])


m4_define([b4_symbol(121, type)],
[[]])


m4_define([b4_symbol(112, id)],
[[p_type]])


m4_define([b4_symbol(83, number)],
[[83]])


m4_define([b4_symbol(43, tag)],
[[WHILE]])


m4_define([b4_symbol(31, user_number)],
[[286]])


m4_define([b4_user_token_number_max],
[[328]])


m4_define([b4_symbol(156, has_id)],
[[1]])


m4_define([b4_symbol(150, is_token)],
[[0]])


m4_define([b4_symbol(114, tag)],
[[selectors_list]])


m4_define([b4_symbol(44, has_type)],
[[0]])


m4_define([b4_symbol(105, user_number)],
[[-1]])


m4_define([b4_symbol(148, type)],
[[]])


m4_define([b4_symbol(82, user_number)],
[[-1]])


m4_define([b4_symbol(43, id)],
[[WHILE]])


m4_define([b4_symbol(94, is_token)],
[[0]])


m4_define([b4_symbol(66, number)],
[[66]])


m4_define([b4_symbol(60, has_id)],
[[1]])


m4_define([b4_symbol(156, user_number)],
[[-1]])


m4_define([b4_symbol(24, is_token)],
[[1]])


m4_define([b4_symbol(139, has_id)],
[[1]])


m4_define([b4_symbol(74, has_destructor)],
[[0]])


m4_define([b4_symbol(143, has_destructor)],
[[0]])


m4_define([b4_symbol(71, tag)],
[[p_type_expr_prec]])


m4_define([b4_symbol(49, number)],
[[49]])


m4_define([b4_symbol(142, tag)],
[[for_loop_header]])


m4_define([b4_symbol(51, type)],
[[]])


m4_define([b4_symbol(43, has_id)],
[[1]])


m4_define([b4_symbol(154, id)],
[[message]])


m4_define([b4_symbol(6, has_type)],
[[0]])


m4_define([b4_symbol(51, user_number)],
[[306]])


m4_define([b4_symbol(78, type)],
[[]])


m4_define([b4_symbol(29, has_printer)],
[[0]])


m4_define([b4_symbol(162, number)],
[[162]])


m4_define([b4_symbol(137, has_type)],
[[0]])


m4_define([b4_symbol(125, user_number)],
[[-1]])


m4_define([b4_symbol(26, has_id)],
[[1]])


m4_define([b4_symbol(85, id)],
[[instance_variables]])


m4_define([b4_symbol(170, tag)],
[[protocol_header]])


m4_define([b4_symbol(117, is_token)],
[[0]])


m4_define([b4_symbol(176, user_number)],
[[-1]])


m4_define([b4_symbol(28, type)],
[[]])


m4_define([b4_symbol(145, number)],
[[145]])


m4_define([b4_symbol(141, has_type)],
[[0]])


m4_define([b4_symbol(82, has_destructor)],
[[0]])


m4_define([b4_symbol(151, has_destructor)],
[[0]])


m4_define([b4_symbol(115, id)],
[[selector_decleration]])


m4_define([b4_symbol(121, is_token)],
[[0]])


m4_define([b4_symbol(85, has_type)],
[[0]])


m4_define([b4_symbol(20, user_number)],
[[275]])


m4_define([b4_symbol(15, has_type)],
[[0]])


m4_define([b4_symbol(128, number)],
[[128]])


m4_define([b4_symbol(122, has_id)],
[[1]])


m4_define([b4_symbol(65, is_token)],
[[1]])


m4_define([b4_symbol(68, tag)],
[[IMPORT]])


m4_define([b4_symbol(46, id)],
[[SWITCH]])


m4_define([b4_symbol(71, user_number)],
[[326]])


m4_define([b4_symbol(49, has_printer)],
[[0]])


m4_define([b4_symbol(139, tag)],
[[do_while]])


m4_define([b4_symbol(98, has_id)],
[[1]])


m4_define([b4_symbol(145, user_number)],
[[-1]])


m4_define([b4_symbol(32, number)],
[[32]])


m4_define([b4_symbol(135, type)],
[[]])


m4_define([b4_symbol(105, has_id)],
[[1]])


m4_define([b4_symbol(3, has_printer)],
[[0]])


m4_define([b4_spec_verbose_file],
[[yacc.output]])


m4_define([b4_symbol(90, has_destructor)],
[[0]])


m4_define([b4_symbol(15, number)],
[[15]])


m4_define([b4_symbol(29, has_destructor)],
[[0]])


m4_define([b4_symbol(157, id)],
[[argument_list]])


m4_define([b4_pre_prologue],
[[]b4_syncline(6, [["C:\\Users\\Khaled Kuteini\\Source\\Repos\\occ\\compiler\\yacc.y"]])[

	#include <iostream>
	#include <FlexLexer.h>
	#include <string>
	#include <stack>
	#include "ast\node.h"
	#include "ST\SymbolTable.h"
	#include "ast\ConstantNode.h"
	#include "SyntaxError.h"
	
	#include "CallNode.h"
	#include "ThrowNode.h"
		#include "CallSelector.h"
		#include "DeclerationSelector.h"
		#include "ast\IdentifierNode.h"
				#include "ast\BinaryOperationNode.h"
				#include "ast\CastNode.h"
				#include "ast\UnaryNode.h"
				#include "ast\WhileNode.h"
				#include "ast\ForNode.h"
				#include "ast\IfNode.h"
				#include "ast\ReturnNode.h"
				#include "ast\ScoopNode.h"
						#include "ast\AssignNode.h"
				#include "SwitchNode.h"
				#include "ast/DeclerationNode.h"
				#include "ast/FunctionNode.h"
				#include "DoWhileNode.h"
				#include "ElseNode.h"
				#include "ClassNode.h"
				#include "AsmNode.h"
				#include "DotNode.h"
				#include "ArrayAccessNode.h"
				#include "CatchNode.h"
#include "TryNode.h"

				
				#include <fstream>
				#include "Streams.h"
#include <string>
#include <fstream>
#include <streambuf>

#include <set>
	using namespace std;
	
set<string> files_set;
vector<string> sfiles;

void addFile(string s){
	if (!files_set.count(s))
	{
		files_set.insert(s);
		sfiles.push_back(s);
	}
}
    extern string sourceFile="";
	
extern int Iskernal;
extern int lineNum;
extern int colNum;
	int yylex(void);
	int yyparse();
	void yyerror(const char *);

	extern std::ofstream ofs ("test.txt", std::ofstream::out);
	FlexLexer* lexer ;
	SymbolTable * symbolTable =new SymbolTable();
	Variable * var=NULL;
	Protocol * protocol=NULL;
	Struct* myStruct=NULL;
	char * visibility="@@public";
	Array * var1=NULL;
	Interface* interface=NULL;
	vector<int>arrayAlloc;
	vector<string>idsList;
	vector<Array*>arrayList;
	vector<Method*>methodsList;
	vector <ScoopNode*>scoopVector;
	extern ScoopNode* globalScoop=NULL;
	extern Method * mainMethod=NULL;

	ScoopNode* scoop=NULL;
	ScoopNode* cscoop=NULL;
	bool flag=false;
	Node* tempNode;
	Method * method=NULL;
	DeclerationSelector* tselector=NULL;
	
	CallSelector* cselector=NULL;
	vector <DeclerationSelector *> selectorsList;
	vector <Variable *> selectorVarList;
	stack<CallNode*>callNodeStack;
	Type* type=NULL;
	vector <Node*>casesNode;
	SwitchNode * tempSwitch=NULL;
	list<pair<string,Node*> > declarationList;
	FunctionNode* functionNode;
	ClassNode* classNode;
	CallNode* callNode;
Method* nodeXX;
	class Parser{
		public:
		int	parse()
		{
			return yyparse();
		}
	};
]])


m4_define([b4_symbol(96, tag)],
[[struct]])


m4_define([b4_symbol(167, tag)],
[[case_body]])


m4_define([b4_symbol(178, has_type)],
[[0]])


m4_define([b4_symbol(108, has_type)],
[[0]])


m4_define([b4_symbol(40, user_number)],
[[295]])


m4_define([b4_symbol(18, has_printer)],
[[0]])


m4_define([b4_defgoto_max],
[[466]])


m4_define([b4_symbol(114, user_number)],
[[-1]])


m4_define([b4_symbol(88, id)],
[[variable_declaration_list]])


m4_define([b4_symbol(65, type)],
[[]])


m4_define([b4_symbol(158, is_token)],
[[0]])


m4_define([b4_symbol(91, user_number)],
[[-1]])


m4_define([b4_symbol(5, has_destructor)],
[[0]])


m4_define([b4_symbol(69, has_printer)],
[[0]])


m4_define([b4_symbol(112, has_type)],
[[0]])


m4_define([b4_symbol(165, user_number)],
[[-1]])


m4_define([b4_symbol(111, number)],
[[111]])


m4_define([b4_symbol(177, has_id)],
[[1]])


m4_define([b4_symbol(162, is_token)],
[[0]])


m4_define([b4_symbol(56, has_type)],
[[0]])


m4_define([b4_symbol(1, number)],
[[1]])


m4_define([b4_symbol(15, type)],
[[]])


m4_define([b4_symbol(118, id)],
[[class_implementation]])


m4_define([b4_symbol(25, tag)],
[[MINUS]])


m4_define([b4_symbol(87, number)],
[[87]])


m4_define([b4_symbol(37, has_destructor)],
[[0]])


m4_define([b4_symbol(81, has_id)],
[[1]])


m4_define([b4_symbol(106, has_destructor)],
[[0]])


m4_define([b4_symbol(172, type)],
[[]])


m4_define([b4_symbol(36, is_token)],
[[1]])


m4_define([b4_symbol(60, has_type)],
[[0]])


m4_define([b4_symbol(49, id)],
[[BREAK]])


m4_define([b4_pgoto_min],
[[-310]])


m4_define([b4_symbol(60, user_number)],
[[315]])


m4_define([b4_symbol(38, has_printer)],
[[0]])


m4_define([b4_symbol(134, user_number)],
[[-1]])


m4_define([b4_symbol(64, has_id)],
[[1]])


m4_define([b4_symbol(40, is_token)],
[[1]])


m4_define([b4_symbol(122, type)],
[[]])


m4_define([b4_symbol(53, tag)],
[[TRUE]])


m4_define([b4_symbol(89, has_printer)],
[[0]])


m4_define([b4_symbol(124, tag)],
[[class_implementation_definition_header]])


m4_define([b4_symbol(159, has_destructor)],
[[0]])


m4_define([b4_symbol(47, has_id)],
[[1]])


m4_define([b4_symbol(149, type)],
[[]])


m4_define([b4_symbol(149, has_type)],
[[0]])


m4_define([b4_symbol(9, user_number)],
[[264]])


m4_define([b4_symbol(140, id)],
[[do_header]])


m4_define([b4_defact_max],
[[273]])


m4_define([b4_symbol(45, has_destructor)],
[[0]])


m4_define([b4_symbol(103, user_number)],
[[-1]])


m4_define([b4_symbol(166, number)],
[[166]])


m4_define([b4_symbol(129, is_token)],
[[0]])


m4_define([b4_symbol(114, has_destructor)],
[[0]])


m4_define([b4_symbol(81, tag)],
[[protocol_reference_list]])


m4_define([b4_symbol(160, has_id)],
[[1]])


m4_define([b4_symbol(153, has_type)],
[[0]])


m4_define([b4_symbol(2, is_token)],
[[0]])


m4_define([b4_symbol(80, user_number)],
[[-1]])


m4_define([b4_symbol(152, tag)],
[[message_call]])


m4_define([b4_symbol(52, type)],
[[]])


m4_define([b4_symbol(58, has_printer)],
[[0]])


m4_define([b4_symbol(71, id)],
[[p_type_expr_prec]])


m4_define([b4_symbol(154, user_number)],
[[-1]])


m4_define([b4_symbol(133, is_token)],
[[0]])


m4_define([b4_symbol(97, has_type)],
[[0]])


m4_define([b4_symbol(70, number)],
[[70]])


m4_define([b4_symbol(27, has_type)],
[[0]])


m4_define([b4_symbol(149, number)],
[[149]])


m4_define([b4_symbol(7, tag)],
[[FLOAT]])


m4_define([b4_symbol(143, has_id)],
[[1]])


m4_define([b4_symbol(79, type)],
[[]])


m4_define([b4_symbol(77, is_token)],
[[0]])


m4_define([b4_use_push_for_pull_flag],
[[0]])


m4_define([b4_symbol(98, has_destructor)],
[[0]])


m4_define([b4_symbol(167, has_destructor)],
[[0]])


m4_define([b4_symbol(101, id)],
[[simple_type]])


m4_define([b4_symbol(53, number)],
[[53]])


m4_define([b4_symbol(31, has_type)],
[[0]])


m4_define([b4_symbol(126, has_id)],
[[1]])


m4_define([b4_symbol(10, tag)],
[[INT]])


m4_define([b4_symbol(81, is_token)],
[[0]])


m4_define([b4_symbol(29, type)],
[[]])


m4_define([b4_percent_define_syncline(lr.type)],
[[]])


m4_define([b4_symbol(53, has_destructor)],
[[0]])


m4_define([b4_dprec_max],
[[0]])


m4_define([b4_symbol(27, has_printer)],
[[0]])


m4_define([b4_symbol(11, is_token)],
[[1]])


